Instance,Problematic,TYPE,PATH,Line
FUNCTION TYPE public void NAME public NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/statements/ForEachStatement.java,22
DECL STMT SPECIFIER protected TYPE list token NAME list token NAME list ARGUMENT LIST ARGUMENT NAME token NAME result protected VBN list NN token JJ result NN,1,D1,ArgoUML0.34/argouml-java/src/org/argouml/language/java/reveng/classfile/ParserUtils.java,931
DECL STMT SPECIFIER private TYPE string NAME string NAME instructions INIT translator localize critics wiz me name ins EXPR translator localize critics wiz me name ins CALL translator localize critics wiz me name ins NAME translator localize NAME translator NAME localize ARGUMENT LIST ARGUMENT EXPR critics wiz me name ins private JJ string NN instructions NNS translator NN localize VBP root ROOT localize nsubj localize translator critics NNS wiz VBP me PRP name VB ins NNS root ROOT wiz nsubj wiz critics nsubj name me ccomp wiz name dobj name ins,1,E1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/cognitive/critics/WizMEName.java,57
COMMENT the list of boolean property getter setters DECL STMT SPECIFIER protected TYPE final map string getter setter SPECIFIER final NAME map string getter setter NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME getter setter NAME getter setter by property name INIT new hash map string getter setter EXPR new hash map string getter setter CALL hash map string getter setter NAME hash map string getter setter NAME hash map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME getter setter ARGUMENT LIST the list of boolean property getter setters root ROOT list det list the case setters of amod setters boolean compound setters property compound setters getter nmod of list setters protected VBN final JJ map NN string NN getter RB setter NN root ROOT setter advmod setter getter getter RB setter NN by IN property NN name NN root ROOT setter advmod setter getter case name by compound name property nmod by setter name new JJ hash VB map NN root ROOT hash dobj hash map string NN getter RB setter NN root ROOT setter advmod setter getter,1,D1,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/model/GetterSetterManager.java,32
COMMENT these strings match the xml element names in the argo tee exactly DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string showboldnames INIT showboldnames EXPR showboldnames these strings match the xml element names in the argo tee exactly root ROOT match det strings these nsubj match strings det names the compound names xml compound names element dobj match names case tee in det tee the compound tee argo nmod in names tee advmod match exactly these strings match the xml element names in the argo tee exactly root ROOT match det strings these nsubj match strings det names the compound names xml compound names element dobj match names case tee in det tee the compound tee argo nmod in names tee advmod match exactly private JJ static JJ final JJ string NN string NN showboldnames NNS root ROOT showboldnames compound showboldnames string showboldnames NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/persistence/ArgoTokenTable.java,72
COMMENT p a helper method to make link get all contents object as efficient as possible this is called recursively p p param results a collection that will be populated with model elements param pack the namespace to get the contents from param dup check a collection of model elements that have already been checked on a previous recursive call checking this saves duplicating effort on already processed elements FUNCTION TYPE void NAME void NAME get all contents PARAMETER LIST final collection model element results final model element pack final collection model element dup check PARAMETER final collection model element results TYPE final collection model element SPECIFIER final NAME collection model element NAME collection ARGUMENT LIST ARGUMENT NAME model element NAME results PARAMETER final model element pack TYPE final model element SPECIFIER final NAME model element NAME pack PARAMETER final collection model element dup check TYPE final collection model element SPECIFIER final NAME collection model element NAME collection ARGUMENT LIST ARGUMENT NAME model element NAME dup check BLOCK IF if pack null dup check contains pack return CONDITION pack null dup check contains pack EXPR pack null dup check contains pack NAME pack CALL dup check contains pack NAME dup check contains NAME dup check NAME contains ARGUMENT LIST ARGUMENT EXPR pack NAME pack THEN return BLOCK RETURN return EXPR dup check add pack CALL dup check add pack NAME dup check add NAME dup check NAME add ARGUMENT LIST ARGUMENT EXPR pack NAME pack TRY try for a namespace pre the operation all contents results in a set containing all model elements contained by the namespace all contents set model element all contents self contents where contents self owned element union self namespace contents pre p if pack instanceof namespace get contents results pack for a classifier pre the operation all contents returns a set containing all model elements contained in the classifier together with the contents inherited from its parents all contents set model element all contents self contents union self parent all contents select e e element ownership visibility public or e element ownership visibility protected where parent is defined for generalizable element as the operation parent returns a set containing all direct parents parent set generalizable element parent self generalization parent pre p for a package pre the operation all contents results in a set containing the model elements owned by or imported by the package or one of its ancestors all contents set model element all contents self contents union self parent all contents select e e element ownership visibility public or e element ownership visibility protected where the required operations are defined as the operation contents results in a set containing the model elements owned by or imported by the package contents set model element contents self owned element union self imported element the operation all imported elements results in a set containing the model elements imported by the package or one of its parents all imported elements set model element all imported elements self imported element union self parent ocl as type package all imported elements select re re element import visibility public or re element import visibility protected pre if pack instanceof classifier pack instanceof uml package collection generalizable element parents core helper mdr impl get parents generalizable element pack todo try reusing the same set on every recursion set model element all contents new hash set model element for generalizable element parent parents get all contents all contents parent dup check if pack instanceof uml package get all imported elements all contents pack for generalizable element parent parents get all imported elements all contents parent for model element element all contents if visibility kind enum vk public equals element get visibility visibility kind enum vk protected equals element get visibility results add element for a collaboration pre the operation all contents results in the set of all model elements contained in the collaboration together with those contained in the parents except those that have been specialized all contents set model element all contents self contents union self parent all contents reject e self contents name include e name parent here is the generalizable element definition pre if pack instanceof collaboration todo not implemented log debug not implemented get all contents for pack catch invalid object exception e throw new invalid element exception e BLOCK COMMENT for a namespace pre the operation all contents results in a set containing all model elements contained by the namespace all contents set model element all contents self contents where contents self owned element union self namespace contents pre p IF if pack instanceof namespace get contents results pack CONDITION pack instanceof namespace EXPR pack instanceof namespace NAME pack NAME namespace THEN get contents results pack BLOCK EXPR get contents results pack CALL get contents results pack NAME get contents ARGUMENT LIST ARGUMENT EXPR results NAME results ARGUMENT EXPR pack NAME pack COMMENT for a classifier pre the operation all contents returns a set containing all model elements contained in the classifier together with the contents inherited from its parents all contents set model element all contents self contents union self parent all contents select e e element ownership visibility public or e element ownership visibility protected where parent is defined for generalizable element as the operation parent returns a set containing all direct parents parent set generalizable element parent self generalization parent pre p COMMENT for a package pre the operation all contents results in a set containing the model elements owned by or imported by the package or one of its ancestors all contents set model element all contents self contents union self parent all contents select e e element ownership visibility public or e element ownership visibility protected where the required operations are defined as the operation contents results in a set containing the model elements owned by or imported by the package contents set model element contents self owned element union self imported element the operation all imported elements results in a set containing the model elements imported by the package or one of its parents all imported elements set model element all imported elements self imported element union self parent ocl as type package all imported elements select re re element import visibility public or re element import visibility protected pre IF if pack instanceof classifier pack instanceof uml package collection generalizable element parents core helper mdr impl get parents generalizable element pack todo try reusing the same set on every recursion set model element all contents new hash set model element for generalizable element parent parents get all contents all contents parent dup check if pack instanceof uml package get all imported elements all contents pack for generalizable element parent parents get all imported elements all contents parent for model element element all contents if visibility kind enum vk public equals element get visibility visibility kind enum vk protected equals element get visibility results add element CONDITION pack instanceof classifier pack instanceof uml package EXPR pack instanceof classifier pack instanceof uml package NAME pack NAME classifier NAME pack NAME uml package THEN collection generalizable element parents core helper mdr impl get parents generalizable element pack todo try reusing the same set on every recursion set model element all contents new hash set model element for generalizable element parent parents get all contents all contents parent dup check if pack instanceof uml package get all imported elements all contents pack for generalizable element parent parents get all imported elements all contents parent for model element element all contents if visibility kind enum vk public equals element get visibility visibility kind enum vk protected equals element get visibility results add element BLOCK DECL STMT TYPE collection generalizable element NAME collection generalizable element NAME collection ARGUMENT LIST ARGUMENT NAME generalizable element NAME parents INIT core helper mdr impl get parents generalizable element pack EXPR core helper mdr impl get parents generalizable element pack CALL core helper mdr impl get parents generalizable element pack NAME core helper mdr impl get parents NAME core helper mdr impl NAME get parents ARGUMENT LIST ARGUMENT EXPR generalizable element pack NAME generalizable element NAME pack COMMENT todo try reusing the same set on every recursion DECL STMT TYPE set model element NAME set model element NAME set ARGUMENT LIST ARGUMENT NAME model element NAME all contents INIT new hash set model element EXPR new hash set model element CALL hash set model element NAME hash set model element NAME hash set ARGUMENT LIST ARGUMENT NAME model element ARGUMENT LIST ARGUMENT EXPR FOR for generalizable element parent parents get all contents all contents parent dup check CONTROL generalizable element parent parents INIT generalizable element parent parents TYPE generalizable element NAME generalizable element NAME parent RANGE parents EXPR parents NAME parents BLOCK EXPR get all contents all contents parent dup check CALL get all contents all contents parent dup check NAME get all contents ARGUMENT LIST ARGUMENT EXPR all contents NAME all contents ARGUMENT EXPR parent NAME parent ARGUMENT EXPR dup check NAME dup check IF if pack instanceof uml package get all imported elements all contents pack for generalizable element parent parents get all imported elements all contents parent CONDITION pack instanceof uml package EXPR pack instanceof uml package NAME pack NAME uml package THEN get all imported elements all contents pack for generalizable element parent parents get all imported elements all contents parent BLOCK EXPR get all imported elements all contents pack CALL get all imported elements all contents pack NAME get all imported elements ARGUMENT LIST ARGUMENT EXPR all contents NAME all contents ARGUMENT EXPR pack NAME pack FOR for generalizable element parent parents get all imported elements all contents parent CONTROL generalizable element parent parents INIT generalizable element parent parents TYPE generalizable element NAME generalizable element NAME parent RANGE parents EXPR parents NAME parents BLOCK EXPR get all imported elements all contents parent CALL get all imported elements all contents parent NAME get all imported elements ARGUMENT LIST ARGUMENT EXPR all contents NAME all contents ARGUMENT EXPR parent NAME parent FOR for model element element all contents if visibility kind enum vk public equals element get visibility visibility kind enum vk protected equals element get visibility results add element CONTROL model element element all contents INIT model element element all contents TYPE model element NAME model element NAME element RANGE all contents EXPR all contents NAME all contents BLOCK IF if visibility kind enum vk public equals element get visibility visibility kind enum vk protected equals element get visibility results add element CONDITION visibility kind enum vk public equals element get visibility visibility kind enum vk protected equals element get visibility EXPR visibility kind enum vk public equals element get visibility visibility kind enum vk protected equals element get visibility CALL visibility kind enum vk public equals element get visibility NAME visibility kind enum vk public equals NAME visibility kind enum NAME vk public NAME equals ARGUMENT LIST ARGUMENT EXPR element get visibility CALL element get visibility NAME element get visibility NAME element NAME get visibility ARGUMENT LIST CALL visibility kind enum vk protected equals element get visibility NAME visibility kind enum vk protected equals NAME visibility kind enum NAME vk protected NAME equals ARGUMENT LIST ARGUMENT EXPR element get visibility CALL element get visibility NAME element get visibility NAME element NAME get visibility ARGUMENT LIST THEN results add element BLOCK EXPR results add element CALL results add element NAME results add NAME results NAME add ARGUMENT LIST ARGUMENT EXPR element NAME element COMMENT for a collaboration pre the operation all contents results in the set of all model elements contained in the collaboration together with those contained in the parents except those that have been specialized all contents set model element all contents self contents union self parent all contents reject e self contents name include e name parent here is the generalizable element definition pre IF if pack instanceof collaboration todo not implemented log debug not implemented get all contents for pack CONDITION pack instanceof collaboration EXPR pack instanceof collaboration NAME pack NAME collaboration THEN todo not implemented log debug not implemented get all contents for pack BLOCK COMMENT todo not implemented EXPR log debug not implemented get all contents for pack CALL log debug not implemented get all contents for pack NAME log debug NAME log NAME debug ARGUMENT LIST ARGUMENT EXPR not implemented get all contents for pack NAME pack CATCH catch invalid object exception e throw new invalid element exception e PARAMETER LIST invalid object exception e PARAMETER invalid object exception e TYPE invalid object exception NAME invalid object exception NAME e BLOCK THROW throw new invalid element exception e EXPR new invalid element exception e CALL invalid element exception e NAME invalid element exception ARGUMENT LIST ARGUMENT EXPR e NAME e p a helper method to make link get all contents object as efficient root ROOT p det method a compound method helper dep p method mark make to acl to method make nsubj get link ccomp make get det contents all nsubj object contents ccomp get object case efficient as advcl as object efficient as possible this is called recursively p root ROOT called case possible as advcl as called possible nsubjpass called this auxpass called is advmod p recursively xcomp called p as possible this is called recursively p root ROOT called case possible as advcl as called possible nsubjpass called this auxpass called is advmod p recursively xcomp called p as possible this is called recursively p root ROOT called case possible as advcl as called possible nsubjpass called this auxpass called is advmod p recursively xcomp called p p param results a collection that will be populated with model elements root ROOT results nsubj results param det collection a dobj results collection nsubjpass populated collection ref collection that aux populated will auxpass populated be acl relcl collection populated case elements with compound elements model nmod with populated elements param pack the namespace to get the contents from root ROOT pack compound pack param det namespace the dobj pack namespace mark get to acl to namespace get det contents the dobj get contents dep get from param dup check a collection of model elements that have already been root ROOT check compound dup param nsubj check dup det collection a dobj check collection case elements of compound elements model nmod of collection elements nsubj been elements ref elements that aux been have advmod been already acl relcl elements been checked on a previous recursive call checking this saves duplicating root ROOT saves nsubj saves checked case call on det call a amod call previous amod call recursive nmod on checked call acl call checking dobj checking this xcomp saves duplicating checked on a previous recursive call checking this saves duplicating root ROOT saves nsubj saves checked case call on det call a amod call previous amod call recursive nmod on checked call acl call checking dobj checking this xcomp saves duplicating effort on already processed elements root ROOT effort case elements on advmod processed already amod elements processed nmod on effort elements void NN get VB all DT contents NNS root ROOT get det contents all dobj get contents final JJ collection NN model NN element NN root ROOT element compound element model results NNS final JJ model NN element NN root ROOT element compound element model pack NN final JJ collection NN model NN element NN root ROOT element compound element model dup NN check NN root ROOT check compound check dup if IN pack NN null JJ dup NN check NN contains VBZ root ROOT contains compound check dup nsubj contains check pack NN return NN dup NN check NN add VBP root ROOT add compound check dup nsubj add check pack NN try VB for a namespace root ROOT namespace case namespace for det namespace a pre the operation all contents results in a set containing root ROOT operation det operation the det contents all nsubj results contents acl relcl operation results case set in det set a nmod in results set acl set containing all model elements contained by the namespace root ROOT elements det elements all compound elements model acl elements contained case namespace by det namespace the nmod by contained namespace all contents set model element root ROOT set det contents all nsubj set contents compound element model dobj set element all contents self contents root ROOT contents det contents all compound contents contents compound contents self where contents self owned element union self namespace contents root ROOT contents nsubj owned self acl relcl contents owned compound contents element compound contents union compound contents self compound contents namespace dobj owned contents pre p root ROOT p amod p pre if IN pack NN instanceof NN namespace NN get VB contents NNS root ROOT get dobj get contents results NNS pack NN for a classifier root ROOT classifier case classifier for det classifier a pre the operation all contents returns a set containing root ROOT operation det operation the det contents all nsubj returns contents acl relcl operation returns det set a dobj returns set acl set containing all model elements contained in the classifier together root ROOT contained det elements all compound elements model nsubj contained elements case classifier in det classifier the nmod in contained classifier advmod contained together with the contents inherited from its parents root ROOT contents case contents with det contents the acl contents inherited case parents from nmod poss parents its nmod from inherited parents all contents set model element root ROOT set det contents all nsubj set contents compound element model dobj set element all contents self contents union root ROOT contents det contents all compound union self compound union contents dep contents union self parent all contents select e root ROOT parent compound parent self det contents all nsubj select contents dep parent select punct select e e element ownership visibility public or root ROOT e compound public element compound public ownership compound public visibility root e public cc public or e element ownership visibility protected root ROOT protected dep protected e compound visibility element compound visibility ownership nsubj protected visibility where parent is defined for generalizable element as root ROOT defined advmod defined where nsubjpass defined parent auxpass defined is case element for amod element generalizable nmod for defined element dep defined as the operation parent returns a set containing all direct root ROOT returns det parent the compound parent operation nsubj returns parent det set a dobj returns set acl set containing dep direct all dobj containing direct parents parent set generalizable element root ROOT set nsubj set parent amod element generalizable dobj set element parent self generalization parent root ROOT parent compound parent parent compound parent self compound parent generalization pre p root ROOT p amod p pre for a package root ROOT package case package for det package a pre the operation all contents results in a set containing root ROOT operation det operation the det contents all nsubj results contents acl relcl operation results case set in det set a nmod in results set acl set containing the model elements owned by or imported root ROOT elements det elements the compound elements model acl elements owned dep owned by cc by or dep owned imported conj or by imported by the package or one of its ancestors root ROOT package case package by det package the cc package or conj or package one case ancestors of nmod poss ancestors its nmod of one ancestors all contents set model element root ROOT set det contents all nsubj set contents compound element model dobj set element all contents self contents union root ROOT contents det contents all compound union self compound union contents dep contents union self parent all contents select e root ROOT parent compound parent self det contents all nsubj select contents dep parent select punct select e e element ownership visibility public or root ROOT e compound public element compound public ownership compound public visibility root e public cc public or e element ownership visibility protected root ROOT protected dep protected e compound visibility element compound visibility ownership nsubj protected visibility where the required operations are defined as root ROOT defined advmod defined where det operations the amod operations required nsubjpass defined operations auxpass defined are dep defined as the operation contents results in a set containing the root ROOT results det contents the compound contents operation nsubj results contents case set in det set a nmod in results set acl set containing dobj containing the model elements owned by or imported by the package root ROOT elements compound elements model acl elements owned acl elements owned conj or owned owned case package by cc by or conj or by imported case package by det package the nmod by owned package nmod imported owned package contents set model element root ROOT set nsubj set contents compound element model dobj set element contents self owned element union self imported element root ROOT contents nsubj owned self acl relcl contents owned compound element element compound element union compound element self amod element imported dobj owned element the operation all imported elements results in a set containing root ROOT operation det operation the det elements all amod elements imported nsubj results elements acl relcl operation results case set in det set a nmod in results set acl set containing the model elements imported by the package or one of its parents root ROOT elements det elements the compound elements model acl elements imported case package by det package the nmod by imported package cc package or nmod by imported one conj or package one case parents of nmod poss parents its nmod of one parents all imported elements set model element root ROOT set det elements all amod elements imported nsubj set elements compound element model dobj set element all imported elements self imported element union root ROOT elements det elements all amod elements imported compound union self amod union imported compound union element dep elements union self parent ocl as type package all imported elements select root ROOT select compound ocl self compound ocl parent dobj select ocl case package as compound package type nmod as ocl package det elements all amod elements imported nsubj select elements self parent ocl as type package all imported elements select root ROOT select compound ocl self compound ocl parent dobj select ocl case package as compound package type nmod as ocl package det elements all amod elements imported nsubj select elements re re element import visibility public or root ROOT re compound public re compound public element compound public import compound public visibility dobj re public cc re or re element import visibility protected root ROOT protected compound visibility re compound visibility element compound visibility import nsubj protected visibility pre if IN pack NN instanceof NN classifier NN pack NN instanceof NN uml NN package NN root ROOT package compound package uml collection NN generalizable JJ element NN root ROOT element amod element generalizable parents NNS core NN helper NN mdr NN impl NN get VB parents NNS root ROOT get compound impl core compound impl helper compound impl mdr nsubj get impl dobj get parents generalizable JJ element NN root ROOT element amod element generalizable pack NN todo try reusing the same set on every recursion root ROOT try nsubj try todo xcomp try reusing det set the amod set same dobj reusing set case recursion on det recursion every nmod on set recursion set NN model NN element NN root ROOT element compound element model all DT contents NNS root ROOT contents det contents all new JJ hash JJ set NN root ROOT set amod set hash model NN element NN root ROOT element compound element model for IN generalizable JJ element NN root ROOT element amod element generalizable parent NN parents NNS get VB all DT contents NNS root ROOT get det contents all dobj get contents all DT contents NNS root ROOT contents det contents all parent NN dup NN check NN root ROOT check compound check dup if IN pack NN instanceof NN uml NN package NN root ROOT package compound package uml get VB all DT imported VBN elements NNS root ROOT get det elements all amod elements imported dobj get elements all DT contents NNS root ROOT contents det contents all pack NN for IN generalizable JJ element NN root ROOT element amod element generalizable parent NN parents NNS get VB all DT imported VBN elements NNS root ROOT get det elements all amod elements imported dobj get elements all DT contents NNS root ROOT contents det contents all parent NN for IN model NN element NN root ROOT element compound element model element NN all DT contents NNS root ROOT contents det contents all if IN visibility NN kind NN enum NN vk NN root ROOT vk compound vk visibility compound vk kind compound vk enum public JJ equals VBZ element NN get VB visibility NN root ROOT get dobj get visibility visibility NN kind NN enum NN vk NN root ROOT vk compound vk visibility compound vk kind compound vk enum protected JJ equals VBZ element NN get VB visibility NN root ROOT get dobj get visibility results NNS add VBP root ROOT add nsubj add results element NN for a collaboration root ROOT collaboration case collaboration for det collaboration a pre the operation all contents results in the set of root ROOT operation det operation the det contents all nsubj results contents acl relcl operation results case set in det set the nmod in results set dep set of all model elements contained in the collaboration root ROOT contained det elements all compound elements model nsubj contained elements case collaboration in det collaboration the nmod in contained collaboration together with those contained in the parents root ROOT those case those together mwe together with acl those contained case parents in det parents the nmod in contained parents except those that have been specialized root ROOT those case those except nsubjpass specialized those ref those that aux specialized have auxpass specialized been acl relcl those specialized all contents set model element root ROOT set det contents all nsubj set contents compound element model dobj set element all contents self contents union root ROOT contents det contents all compound union self compound union contents dep contents union self parent all contents reject e root ROOT parent compound parent self det contents all nsubj reject contents acl relcl parent reject punct reject e self contents name include e name root ROOT include compound name self compound name contents nsubj include name nmod poss name e dobj include name parent here is the generalizable element definition root ROOT definition nsubj definition parent advmod parent here cop definition is det definition the amod definition generalizable compound definition element pre if IN pack NN instanceof NN collaboration NN todo not implemented root ROOT implemented nsubj implemented todo neg implemented not log NN debug NN root ROOT debug compound debug log not RB implemented VBN get VB all DT contents NNS root ROOT get det contents all dobj get contents for IN pack NN catch NN invalid JJ object NN exception NN root ROOT exception amod exception invalid compound exception object e SYM throw VB new JJ invalid JJ element NN exception NN root ROOT exception amod exception invalid compound exception element e SYM,1,B3,ArgoUML0.34/argouml/src/argouml-core-model-mdr/src/org/argouml/model/mdr/ModelManagementHelperMDRImpl.java,775
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR left to source sb CALL left to source sb NAME left to source NAME left NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR identifier to source sb CALL identifier to source sb NAME identifier to source NAME identifier NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN left VBN to TO source NN root ROOT left case source to nmod to left source sb NN sb NN append IN root ROOT sb dep sb append identifier NN to TO source NN root ROOT identifier case source to nmod to identifier source sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/nodes/expressions/MemberAccessExpression.java,35
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN sb NN append IN root ROOT sb dep sb append this DT new JJ line NN sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/statements/StatementNode.java,13
COMMENT type of knowledge that critics can deliver DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME kt correctness INIT translator localize misc knowledge correctness EXPR translator localize misc knowledge correctness CALL translator localize misc knowledge correctness NAME translator localize NAME translator NAME localize ARGUMENT LIST ARGUMENT EXPR misc knowledge correctness type of knowledge that critics can deliver root ROOT type dobj deliver type case knowledge of nmod of type knowledge ref type that nsubj deliver critics aux deliver can acl relcl type deliver public NN static JJ final JJ string NN kt NN correctness NN root ROOT correctness compound correctness kt translator NN localize VBP root ROOT localize nsubj localize translator misc NN knowledge NN correctness NN root ROOT correctness compound correctness misc compound correctness knowledge,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/cognitive/Critic.java,110
FUNCTION SPECIFIER public TYPE object NAME object NAME set body PARAMETER LIST object handle PARAMETER object handle TYPE object NAME object NAME handle BLOCK IF if handle instanceof expression expression handle set body body return handle CONDITION handle instanceof expression EXPR handle instanceof expression NAME handle NAME expression THEN expression handle set body body return handle BLOCK EXPR expression handle set body body NAME expression NAME handle CALL set body body NAME set body ARGUMENT LIST ARGUMENT EXPR body NAME body RETURN return handle EXPR handle NAME handle THROW throw new illegal argument exception handle handle body body EXPR new illegal argument exception handle handle body body CALL illegal argument exception handle handle body body NAME illegal argument exception ARGUMENT LIST ARGUMENT EXPR handle handle body body NAME handle NAME body public NN object NN set VBN body NN root ROOT set dobj set body object NN handle VB if IN handle VB instanceof NN expression NN expression NN handle VB set VBN body NN root ROOT set dobj set body body NN return NN handle VB throw VB new JJ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument handle VB handle VB body NN body NN,1,A3,ArgoUML0.34/argouml/src/argouml-core-model-mdr/src/org/argouml/model/mdr/DataTypesHelperMDRImpl.java,199
DECL STMT SPECIFIER public TYPE block statement NAME block statement NAME else statements INIT new block statement EXPR new block statement CALL block statement NAME block statement ARGUMENT LIST public NN block NN statement NN root ROOT statement compound statement block else RB statements NNS root ROOT statements amod statements else new JJ block NN statement NN root ROOT statement compound statement block,1,E1,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/statements/IfStatement.java,18
COMMENT type of knowledge that critics can deliver DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME kt semantics INIT translator localize misc knowledge semantics EXPR translator localize misc knowledge semantics CALL translator localize misc knowledge semantics NAME translator localize NAME translator NAME localize ARGUMENT LIST ARGUMENT EXPR misc knowledge semantics type of knowledge that critics can deliver root ROOT type dobj deliver type case knowledge of nmod of type knowledge ref type that nsubj deliver critics aux deliver can acl relcl type deliver public NN static JJ final JJ string NN kt NN semantics NNS root ROOT semantics compound semantics kt translator NN localize VBP root ROOT localize nsubj localize translator misc NN knowledge NN semantics NNS root ROOT semantics compound semantics misc compound semantics knowledge,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/cognitive/Critic.java,134
DECL STMT SPECIFIER private SPECIFIER static TYPE icon NAME icon NAME trans INIT resource loader wrapper lookup icon resource transition EXPR resource loader wrapper lookup icon resource transition CALL resource loader wrapper lookup icon resource transition NAME resource loader wrapper lookup icon resource NAME resource loader wrapper NAME lookup icon resource ARGUMENT LIST ARGUMENT EXPR transition private JJ static JJ icon NN trans JJ resource NN loader NN wrapper NN lookup NN icon NN resource NN root ROOT resource compound resource resource compound resource loader compound resource wrapper compound resource lookup compound resource icon transition NN,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/state/ui/SelectionState.java,53
DECL STMT SPECIFIER private TYPE string NAME string NAME instructions INIT translator localize critics wiz break circular comp ins EXPR translator localize critics wiz break circular comp ins CALL translator localize critics wiz break circular comp ins NAME translator localize NAME translator NAME localize ARGUMENT LIST ARGUMENT EXPR critics wiz break circular comp ins private JJ string NN instructions NNS translator NN localize VBP root ROOT localize nsubj localize translator critics NNS wiz VBP break NN circular JJ comp NN ins NNS root ROOT wiz nsubj wiz critics compound ins break amod ins circular compound ins comp dobj wiz ins,1,E1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/cognitive/critics/WizBreakCircularComp.java,67
DECL STMT SPECIFIER public SPECIFIER static TYPE long NAME long NAME event mods INIT new public protected internal private static virtual sealed override abstract extern EXPR new public protected internal private static virtual sealed override abstract extern NAME new NAME public NAME protected NAME internal NAME private NAME static NAME virtual NAME sealed NAME override NAME abstract NAME extern public NN static JJ long RB event NN mods NNS root ROOT mods compound mods event new JJ public NN protected VBN internal JJ private JJ static JJ virtual JJ sealed VBN override NN abstract JJ extern NN public internal ANTONYM ANTONYM public private ANTONYM ANTONYM internal private SYNONYM SYNONYM,1,E1,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/enums/Modifier.java,49
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR sb append typeof CALL sb append typeof NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR typeof EXPR expression to source sb CALL expression to source sb NAME expression to source NAME expression NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN sb NN append IN root ROOT sb dep sb append typeof NN expression NN to TO source NN root ROOT expression case source to nmod to expression source sb NN sb NN append IN root ROOT sb dep sb append,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/nodes/expressions/TypeOfExpression.java,22
COMMENT the singleton of this class DECL STMT SPECIFIER private SPECIFIER static TYPE list decision NAME list decision NAME list ARGUMENT LIST ARGUMENT NAME decision NAME unspecified decision the singleton of this class root ROOT singleton det singleton the case class of det class this nmod of singleton class private JJ static JJ list NN decision NN unspecified JJ decision NN root ROOT decision amod decision unspecified,1,D1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/cognitive/Designer.java,106
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE string NAME string NAME get instructions PARAMETER LIST int index PARAMETER int index TYPE int NAME int NAME index BLOCK RETURN return instructions index base EXPR instructions index base NAME instructions index base NAME instructions INDEX index base EXPR index base NAME index NAME base override NN protected VBN string NN get VB instructions NNS root ROOT get dobj get instructions int NN index NN return NN instructions NNS index NN base NN,1,B6,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/SelectionNode.java,88
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE icon NAME icon NAME icon INDEX NAME get icons PARAMETER LIST BLOCK IF if model get model management helper is read only get content get owner return new icon null dep dep right null null CONDITION model get model management helper is read only get content get owner EXPR model get model management helper is read only get content get owner CALL model get model management helper NAME model get model management helper NAME model NAME get model management helper ARGUMENT LIST CALL is read only get content get owner NAME is read only ARGUMENT LIST ARGUMENT EXPR get content get owner CALL get content NAME get content ARGUMENT LIST CALL get owner NAME get owner ARGUMENT LIST THEN return new icon null dep dep right null null BLOCK RETURN return new icon null dep dep right null null EXPR new icon null dep dep right null null NAME icon NAME icon INDEX BLOCK EXPR null EXPR dep NAME dep EXPR dep right NAME dep right EXPR null EXPR null RETURN return icons EXPR icons NAME icons override NN protected VBN icon NN get VB icons NNS root ROOT get dobj get icons if IN model NN get VB model JJ management NN helper NN root ROOT get nsubj get model amod helper model compound helper management dobj get helper is VBZ read VBN only RB root ROOT read auxpass read is advmod read only get VB content NN root ROOT get dobj get content get VB owner NN root ROOT get dobj get owner return NN new JJ icon NN null JJ dep NN dep NN right NN root ROOT right compound right dep null JJ null JJ return NN icons NNS,1,A1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/SelectionComponentInstance.java,85
COMMENT return the registry FUNCTION SPECIFIER private SPECIFIER static TYPE hashtable class list critic NAME hashtable class list critic NAME hashtable ARGUMENT LIST ARGUMENT NAME class ARGUMENT NAME list critic NAME list ARGUMENT LIST ARGUMENT NAME critic NAME get critic registry PARAMETER LIST BLOCK RETURN return critic registry EXPR critic registry NAME critic registry return the registry root ROOT return det registry the dobj return registry private JJ static JJ hashtable JJ class NN list NN critic NN get VB critic NN registry NN root ROOT get compound registry critic dobj get registry return NN critic NN registry NN root ROOT registry compound registry critic,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/cognitive/Agency.java,147
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK DECL STMT TYPE string NAME string NAME comma INIT EXPR FOR for expression node node expressions sb append comma comma node to source sb CONTROL expression node node expressions INIT expression node node expressions TYPE expression node NAME expression node NAME node RANGE expressions EXPR expressions NAME expressions BLOCK EXPR sb append comma CALL sb append comma NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR comma NAME comma EXPR comma NAME comma EXPR node to source sb CALL node to source sb NAME node to source NAME node NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN string NN comma NN for IN expression NN node NN root ROOT node compound node expression node NN expressions NNS sb NN append IN root ROOT sb dep sb append comma NN comma NN node NN to TO source NN root ROOT node case source to nmod to node source sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/collections/ExpressionList.java,22
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR sb append using CALL sb append using NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR using EXPR resource to source sb CALL resource to source sb NAME resource to source NAME resource NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR statements to source sb CALL statements to source sb NAME statements to source NAME statements NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN sb NN append IN root ROOT sb dep sb append using VBG resource NN to TO source NN root ROOT resource case source to nmod to resource source sb NN sb NN append IN root ROOT sb dep sb append statements NNS to TO source NN root ROOT statements case source to nmod to statements source sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/statements/UsingStatement.java,18
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string resolvedcritics INIT resolvedcritics EXPR resolvedcritics private JJ static JJ final JJ string NN string NN resolvedcritics NNS root ROOT resolvedcritics compound resolvedcritics string resolvedcritics NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/persistence/TodoTokenTable.java,58
COMMENT action key for open decisions DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME action open decisions INIT open decisions EXPR open decisions action key for open decisions root ROOT key compound key action case decisions for amod decisions open nmod for key decisions public NN static JJ final JJ string NN action NN open JJ decisions NNS root ROOT decisions compound decisions action amod decisions open open JJ decisions NNS root ROOT decisions amod decisions open open static ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,253
COMMENT a registry of all critics that are currently loaded into the design environment DECL STMT SPECIFIER private SPECIFIER static TYPE hashtable class list critic NAME hashtable class list critic NAME hashtable ARGUMENT LIST ARGUMENT NAME class ARGUMENT NAME list critic NAME list ARGUMENT LIST ARGUMENT NAME critic NAME critic registry INIT new hashtable class list critic EXPR new hashtable class list critic CALL hashtable class list critic NAME hashtable class list critic NAME hashtable ARGUMENT LIST ARGUMENT NAME class ARGUMENT NAME list critic NAME list ARGUMENT LIST ARGUMENT NAME critic ARGUMENT LIST ARGUMENT EXPR a registry of all critics that are currently loaded into the root ROOT registry det registry a case critics of det critics all nmod of registry critics nsubjpass loaded critics ref critics that auxpass loaded are advmod loaded currently acl relcl critics loaded case the into nmod into loaded the design environment root ROOT environment compound environment design private JJ static JJ hashtable JJ class NN list NN critic NN critic NN registry NN root ROOT registry compound registry critic new JJ hashtable JJ class NN list NN critic NN,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/cognitive/Agency.java,90
FUNCTION SPECIFIER public TYPE int NAME int NAME get width PARAMETER LIST BLOCK EXPR log debug get width width CALL log debug get width width NAME log debug NAME log NAME debug ARGUMENT LIST ARGUMENT EXPR get width width NAME width RETURN return width EXPR width NAME width public NN int NN get VB width NN root ROOT get dobj get width log NN debug NN root ROOT debug compound debug log get VB width NN root ROOT get dobj get width width NN return NN width NN,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/gefext/DeferredBufferedImage.java,338
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME num columns INIT EXPR private JJ static JJ final JJ int NN num NN columns NNS root ROOT columns compound columns num,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/cognitive/critics/ui/CriticBrowserDialog.java,96
COMMENT action key for adjust page breaks DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME action adjust page breaks INIT adjust page breaks EXPR adjust page breaks action key for adjust page breaks root ROOT key compound key action dep key for root for adjust compound breaks page dobj adjust breaks public NN static JJ final JJ string NN action NN adjust VBP page NN breaks NNS root ROOT adjust nsubj adjust action compound breaks page dobj adjust breaks adjust VBP page NN breaks NNS root ROOT adjust compound breaks page dobj adjust breaks key breaks ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,208
COMMENT action key for align bottoms DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME action align bottoms INIT align bottoms EXPR align bottoms action key for align bottoms root ROOT key compound key action case bottoms for amod bottoms align nmod for key bottoms public NN static JJ final JJ string NN action NN align VB bottoms NNS root ROOT align nsubj align action dobj align bottoms align VB bottoms NNS root ROOT align dobj align bottoms,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,274
COMMENT generates the association ends of the body of a class or interface param cls param sb where to put the result FUNCTION SPECIFIER private TYPE void NAME void NAME generate classifier body operations PARAMETER LIST object cls string buffer sb PARAMETER object cls TYPE object NAME object NAME cls PARAMETER string buffer sb TYPE string buffer NAME string buffer NAME sb BLOCK DECL STMT TYPE collection NAME collection NAME behs INIT get facade get operations cls EXPR get facade get operations cls CALL get facade NAME get facade ARGUMENT LIST CALL get operations cls NAME get operations ARGUMENT LIST ARGUMENT EXPR cls NAME cls IF if behs is empty return CONDITION behs is empty EXPR behs is empty CALL behs is empty NAME behs is empty NAME behs NAME is empty ARGUMENT LIST THEN return BLOCK RETURN return EXPR sb append line separator CALL sb append line separator NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR line separator NAME line separator IF if verbose docs sb append indent append operations append line separator CONDITION verbose docs EXPR verbose docs NAME verbose docs THEN sb append indent append operations append line separator BLOCK EXPR sb append indent append operations append line separator CALL sb append indent NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent CALL append operations NAME append ARGUMENT LIST ARGUMENT EXPR operations CALL append line separator NAME append ARGUMENT LIST ARGUMENT EXPR line separator NAME line separator COMMENT generate tag controlled access functions for attributes DECL STMT TYPE string buffer NAME string buffer NAME string buffer INDEX NAME funcs INIT new string buffer EXPR new string buffer NAME string buffer NAME string buffer INDEX EXPR EXPR funcs new string buffer NAME funcs NAME funcs INDEX EXPR CALL string buffer NAME string buffer ARGUMENT LIST ARGUMENT EXPR EXPR funcs new string buffer NAME funcs NAME funcs INDEX EXPR CALL string buffer NAME string buffer ARGUMENT LIST ARGUMENT EXPR EXPR funcs new string buffer NAME funcs NAME funcs INDEX EXPR CALL string buffer NAME string buffer ARGUMENT LIST ARGUMENT EXPR EXPR generate classifier body tagged access attributes cls funcs private part funcs protected part funcs public part CALL generate classifier body tagged access attributes cls funcs private part funcs protected part funcs public part NAME generate classifier body tagged access attributes ARGUMENT LIST ARGUMENT EXPR cls NAME cls ARGUMENT EXPR funcs private part NAME funcs private part NAME funcs INDEX private part EXPR private part NAME private part ARGUMENT EXPR funcs protected part NAME funcs protected part NAME funcs INDEX protected part EXPR protected part NAME protected part ARGUMENT EXPR funcs public part NAME funcs public part NAME funcs INDEX public part EXPR public part NAME public part DECL STMT TYPE iterator NAME iterator NAME beh enum INIT behs iterator EXPR behs iterator CALL behs iterator NAME behs iterator NAME behs NAME iterator ARGUMENT LIST WHILE while beh enum has next object bf beh enum next string buffer tb null int p get visibility part bf if p continue tb funcs p boolean must gen body check generate operation body bf if tb null generator pass header pass must gen body tb append line separator tb append generate operation bf false helper for tagged values string tv generate tagged values bf all but doc tags if must gen body get facade is a class cls get facade is a operation bf get facade is abstract bf there is no return type in behavioral feature uml tb append line separator append generate method body bf else tb append append line separator if tv length tb append indent append tv append line separator CONDITION beh enum has next EXPR beh enum has next CALL beh enum has next NAME beh enum has next NAME beh enum NAME has next ARGUMENT LIST BLOCK DECL STMT TYPE object NAME object NAME bf INIT beh enum next EXPR beh enum next CALL beh enum next NAME beh enum next NAME beh enum NAME next ARGUMENT LIST DECL STMT TYPE string buffer NAME string buffer NAME tb INIT null EXPR null DECL STMT TYPE int NAME int NAME p INIT get visibility part bf EXPR get visibility part bf CALL get visibility part bf NAME get visibility part ARGUMENT LIST ARGUMENT EXPR bf NAME bf IF if p continue CONDITION p EXPR p NAME p THEN continue BLOCK CONTINUE continue EXPR tb funcs p NAME tb NAME funcs p NAME funcs INDEX p EXPR p NAME p DECL STMT TYPE boolean NAME boolean NAME must gen body INIT check generate operation body bf EXPR check generate operation body bf CALL check generate operation body bf NAME check generate operation body ARGUMENT LIST ARGUMENT EXPR bf NAME bf IF if tb null generator pass header pass must gen body tb append line separator tb append generate operation bf false helper for tagged values string tv generate tagged values bf all but doc tags if must gen body get facade is a class cls get facade is a operation bf get facade is abstract bf there is no return type in behavioral feature uml tb append line separator append generate method body bf else tb append append line separator if tv length tb append indent append tv append line separator CONDITION tb null generator pass header pass must gen body EXPR tb null generator pass header pass must gen body NAME tb NAME generator pass NAME header pass NAME must gen body THEN tb append line separator tb append generate operation bf false helper for tagged values string tv generate tagged values bf all but doc tags if must gen body get facade is a class cls get facade is a operation bf get facade is abstract bf there is no return type in behavioral feature uml tb append line separator append generate method body bf else tb append append line separator if tv length tb append indent append tv append line separator BLOCK EXPR tb append line separator CALL tb append line separator NAME tb append NAME tb NAME append ARGUMENT LIST ARGUMENT EXPR line separator NAME line separator EXPR tb append generate operation bf false CALL tb append generate operation bf false NAME tb append NAME tb NAME append ARGUMENT LIST ARGUMENT EXPR generate operation bf false CALL generate operation bf false NAME generate operation ARGUMENT LIST ARGUMENT EXPR bf NAME bf ARGUMENT EXPR false COMMENT helper for tagged values DECL STMT TYPE string NAME string NAME tv INIT generate tagged values bf all but doc tags EXPR generate tagged values bf all but doc tags CALL generate tagged values bf all but doc tags NAME generate tagged values ARGUMENT LIST ARGUMENT EXPR bf NAME bf ARGUMENT EXPR all but doc tags NAME all but doc tags IF if must gen body get facade is a class cls get facade is a operation bf get facade is abstract bf there is no return type in behavioral feature uml tb append line separator append generate method body bf else tb append append line separator if tv length tb append indent append tv append line separator CONDITION must gen body get facade is a class cls get facade is a operation bf get facade is abstract bf EXPR must gen body get facade is a class cls get facade is a operation bf get facade is abstract bf NAME must gen body CALL get facade NAME get facade ARGUMENT LIST CALL is a class cls NAME is a class ARGUMENT LIST ARGUMENT EXPR cls NAME cls CALL get facade NAME get facade ARGUMENT LIST CALL is a operation bf NAME is a operation ARGUMENT LIST ARGUMENT EXPR bf NAME bf CALL get facade NAME get facade ARGUMENT LIST CALL is abstract bf NAME is abstract ARGUMENT LIST ARGUMENT EXPR bf NAME bf THEN there is no return type in behavioral feature uml tb append line separator append generate method body bf BLOCK COMMENT there is no return type in behavioral feature uml EXPR tb append line separator append generate method body bf CALL tb append line separator NAME tb append NAME tb NAME append ARGUMENT LIST ARGUMENT EXPR line separator NAME line separator CALL append generate method body bf NAME append ARGUMENT LIST ARGUMENT EXPR generate method body bf CALL generate method body bf NAME generate method body ARGUMENT LIST ARGUMENT EXPR bf NAME bf ELSE else tb append append line separator if tv length tb append indent append tv append line separator BLOCK EXPR tb append append line separator CALL tb append NAME tb append NAME tb NAME append ARGUMENT LIST ARGUMENT EXPR CALL append line separator NAME append ARGUMENT LIST ARGUMENT EXPR line separator NAME line separator IF if tv length tb append indent append tv append line separator CONDITION tv length EXPR tv length CALL tv length NAME tv length NAME tv NAME length ARGUMENT LIST THEN tb append indent append tv append line separator BLOCK EXPR tb append indent append tv append line separator CALL tb append indent NAME tb append NAME tb NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent CALL append tv NAME append ARGUMENT LIST ARGUMENT EXPR tv NAME tv CALL append line separator NAME append ARGUMENT LIST ARGUMENT EXPR line separator NAME line separator COMMENT end loop through all operations EXPR sb append generate all parts funcs CALL sb append generate all parts funcs NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR generate all parts funcs CALL generate all parts funcs NAME generate all parts ARGUMENT LIST ARGUMENT EXPR funcs NAME funcs generates the association ends of the body of a class or interface root ROOT generates det association the nsubj ends association ccomp generates ends case body of det body the nmod of ends body case class of det class a nmod of body class cc class or nmod of body interface conj or class interface param cls root ROOT cls compound cls param param sb where to put the result root ROOT sb compound sb param advmod put where mark put to acl relcl sb put det result the dobj put result private JJ void NN generate VB classifier NN body NN operations NNS root ROOT generate compound operations classifier compound operations body dobj generate operations object NN cls NNS string NN buffer NN root ROOT buffer compound buffer string sb NN collection NN behs NNS get VB facade NN root ROOT get dobj get facade get VB operations NNS root ROOT get dobj get operations cls NNS if IN behs NNS is VBZ empty JJ root ROOT empty nsubj empty behs cop empty is return NN sb NN append IN root ROOT sb dep sb append line NN separator NN root ROOT separator compound separator line if IN verbose JJ docs NNS root ROOT docs amod docs verbose sb NN append IN root ROOT sb dep sb append indent JJ append IN operations NNS append IN line NN separator NN root ROOT separator compound separator line generate tag controlled access functions for attributes root ROOT generate compound functions tag amod functions controlled compound functions access dobj generate functions case attributes for nmod for functions attributes string NN buffer NN root ROOT buffer compound buffer string funcs NNS new JJ string NN buffer NN root ROOT buffer compound buffer string funcs NNS new JJ string NN buffer NN root ROOT buffer compound buffer string funcs NNS new JJ string NN buffer NN root ROOT buffer compound buffer string funcs NNS new JJ string NN buffer NN root ROOT buffer compound buffer string generate VB classifier NN body NN tagged VBD access NN attributes NNS root ROOT tagged csubj tagged generate compound body classifier dobj generate body compound attributes access dobj tagged attributes cls NNS funcs NNS private JJ part NN root ROOT part amod part private funcs NNS protected JJ part NN root ROOT part amod part protected funcs NNS public JJ part NN root ROOT part amod part public iterator NN beh NN enum NN root ROOT enum compound enum beh behs JJ iterator NN root ROOT iterator amod iterator behs while IN beh NN enum NN has VBZ next JJ root ROOT has compound enum beh nsubj has enum advmod has next object NN bf NN beh NN enum NN next IN root ROOT enum compound enum beh dep enum next string NN buffer NN root ROOT buffer compound buffer string tb NN null JJ int NN p NN get VB visibility NN part NN root ROOT get compound part visibility dobj get part bf NN if IN p NN continue VB tb NN funcs NNS p NN boolean NN must MD gen VB body NN root ROOT gen aux gen must dobj gen body check NN generate VBP operation NN body NN root ROOT generate nsubj generate check compound body operation dobj generate body bf NN if IN tb NN null JJ generator NN pass NN root ROOT pass compound pass generator header NN pass NN root ROOT pass compound pass header must MD gen VB body NN root ROOT gen aux gen must dobj gen body tb NN append NN root ROOT append compound append tb line NN separator NN root ROOT separator compound separator line tb NN append NN root ROOT append compound append tb generate VB operation NN root ROOT generate dobj generate operation bf NN false JJ helper for tagged values root ROOT helper case values for amod values tagged nmod for helper values string NN tv NN generate VB tagged VBN values NNS root ROOT generate amod values tagged dobj generate values bf NN all DT but CC doc NN tags NNS root ROOT tags dep tags all cc all but conj but all doc dep tags doc if IN must MD gen VB body NN root ROOT gen aux gen must dobj gen body get VB facade NN root ROOT get dobj get facade is VBZ a DT class NN root ROOT class cop class is det class a cls NNS get VB facade NN root ROOT get dobj get facade is VBZ a DT operation NN root ROOT operation cop operation is det operation a bf NN get VB facade NN root ROOT get dobj get facade is VBZ abstract JJ root ROOT abstract cop abstract is bf NN there is no return type in behavioral feature uml root ROOT is expl is there neg type no compound type return nsubj is type case uml in amod uml behavioral compound uml feature nmod in is uml tb NN append NN root ROOT append compound append tb line NN separator NN root ROOT separator compound separator line append IN generate VB method NN body NN root ROOT generate compound body method dobj generate body bf NN else RB tb NN append NN root ROOT append compound append tb append IN line NN separator NN root ROOT separator compound separator line if IN tv NN length NN root ROOT length compound length tv tb NN append NN root ROOT append compound append tb indent JJ append IN tv NN append IN line NN separator NN root ROOT separator compound separator line end NN loop NN through IN all DT operations NNS sb NN append IN root ROOT sb dep sb append generate VB all DT parts NNS root ROOT generate det parts all dobj generate parts funcs NNS ends generates ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml-cpp/src/org/argouml/language/cpp/generator/GeneratorCpp.java,1835
COMMENT add the currently selected stereotype from the library to the modelelement FUNCTION SPECIFIER private TYPE void NAME void NAME do remove stereotype PARAMETER LIST BLOCK DECL STMT TYPE object NAME object NAME stereotype INIT selected list get selected value EXPR selected list get selected value CALL selected list get selected value NAME selected list get selected value NAME selected list NAME get selected value ARGUMENT LIST DECL STMT TYPE object NAME object NAME model element INIT target manager get instance get model target EXPR target manager get instance get model target CALL target manager get instance NAME target manager get instance NAME target manager NAME get instance ARGUMENT LIST CALL get model target NAME get model target ARGUMENT LIST IF if model element null return CONDITION model element null EXPR model element null NAME model element THEN return BLOCK RETURN return IF if model get facade get stereotypes model element contains stereotype model get core helper remove stereotype model element stereotype project manager get manager update roots CONDITION model get facade get stereotypes model element contains stereotype EXPR model get facade get stereotypes model element contains stereotype CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get stereotypes model element NAME get stereotypes ARGUMENT LIST ARGUMENT EXPR model element NAME model element CALL contains stereotype NAME contains ARGUMENT LIST ARGUMENT EXPR stereotype NAME stereotype THEN model get core helper remove stereotype model element stereotype project manager get manager update roots BLOCK EXPR model get core helper remove stereotype model element stereotype CALL model get core helper NAME model get core helper NAME model NAME get core helper ARGUMENT LIST CALL remove stereotype model element stereotype NAME remove stereotype ARGUMENT LIST ARGUMENT EXPR model element NAME model element ARGUMENT EXPR stereotype NAME stereotype EXPR project manager get manager update roots CALL project manager get manager NAME project manager get manager NAME project manager NAME get manager ARGUMENT LIST CALL update roots NAME update roots ARGUMENT LIST add the currently selected stereotype from the library root ROOT add det stereotype the advmod selected currently amod stereotype selected dobj add stereotype case library from det library the nmod from add library to the modelelement root ROOT modelelement case modelelement to det modelelement the private JJ void NN do VB remove VB stereotype NN root ROOT remove aux remove do dobj remove stereotype object NN stereotype NN selected VBN list NN get VB selected VBN value NN root ROOT list amod list selected acl list get amod value selected dobj get value object NN model NN element NN root ROOT element compound element model target NN manager NN get VB instance NN root ROOT get compound manager target nsubj get manager dobj get instance get VB model NN target NN root ROOT get compound target model dobj get target if IN model NN element NN root ROOT element compound element model null JJ return NN if IN model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB stereotypes NNS root ROOT get dobj get stereotypes model NN element NN root ROOT element compound element model contains VBZ stereotype NN model NN get VB core NN helper NN root ROOT model acl model get compound helper core dobj get helper remove VB stereotype NN root ROOT remove dobj remove stereotype model NN element NN root ROOT element compound element model stereotype NN project NN manager NN get VB manager NN root ROOT get compound manager project nsubj get manager dobj get manager update VB roots NNS root ROOT update dobj update roots,1,C2,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/ui/TabStereotype.java,252
COMMENT checks that aggregation kind is valid and promotes null to ak none param aggregation kind candidate aggregation kind or null return valid checked aggregation kind FUNCTION SPECIFIER private TYPE aggregation kind NAME aggregation kind NAME check aggregation kind PARAMETER LIST object aggregation kind PARAMETER object aggregation kind TYPE object NAME object NAME aggregation kind BLOCK IF if aggregation kind null aggregation kind aggregation kind enum ak none CONDITION aggregation kind null EXPR aggregation kind null NAME aggregation kind THEN aggregation kind aggregation kind enum ak none BLOCK EXPR aggregation kind aggregation kind enum ak none NAME aggregation kind NAME aggregation kind enum ak none NAME aggregation kind enum NAME ak none RETURN return aggregation kind aggregation kind EXPR aggregation kind aggregation kind NAME aggregation kind NAME aggregation kind checks that aggregation kind is valid and promotes null root ROOT checks mark valid that compound kind aggregation nsubj valid kind nsubj promotes kind cop valid is ccomp checks valid cc valid and ccomp checks promotes conj and valid promotes dep valid null to ak none root ROOT ak mark ak to dobj ak none param aggregation kind candidate aggregation kind or null root ROOT kind compound kind param compound kind aggregation compound kind kind compound kind candidate compound kind aggregation cc kind or conj or kind null return valid checked aggregation kind root ROOT kind compound kind return amod kind valid amod kind checked compound kind aggregation private JJ aggregation NN kind NN root ROOT kind compound kind aggregation check NN aggregation NN kind NN root ROOT kind compound kind check compound kind aggregation object NN aggregation NN kind NN root ROOT kind compound kind aggregation if IN aggregation NN kind NN root ROOT kind compound kind aggregation null JJ aggregation NN kind NN root ROOT kind compound kind aggregation aggregation NN kind NN enum NN ak NN root ROOT ak compound ak aggregation compound ak kind compound ak enum none NN return NN aggregation NN kind NN root ROOT kind compound kind aggregation aggregation NN kind NN root ROOT kind compound kind aggregation checks return ANTONYM ANTONYM promotes checked ANTONYM ANTONYM promotes checks ANTONYM ANTONYM return checked ANTONYM ANTONYM valid null ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-core-model-mdr/src/org/argouml/model/mdr/CollaborationsFactoryMDRImpl.java,304
DECL STMT SPECIFIER public TYPE object NAME object NAME set body ARGUMENT LIST ARGUMENT EXPR object handle NAME object NAME handle RETURN return impl set body handle body EXPR impl set body handle body CALL impl set body handle body NAME impl set body NAME impl NAME set body ARGUMENT LIST ARGUMENT EXPR handle NAME handle ARGUMENT EXPR body NAME body public NN object NN set VBN body NN root ROOT set dobj set body object NN handle VB return NN impl NN set VBD body NN root ROOT set nsubj set impl dobj set body handle VB body NN,1,A3,ArgoUML0.34/argouml/src/argouml-core-model/src/org/argouml/model/AbstractDataTypesHelperDecorator.java,106
DECL STMT TYPE block statement NAME block statement NAME statements INIT new block statement EXPR new block statement CALL block statement NAME block statement ARGUMENT LIST public NN block NN statement NN root ROOT statement compound statement block statements NNS new JJ block NN statement NN root ROOT statement compound statement block,1,E1,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/members/OperatorNode.java,30
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK IF if attributes null attributes to source sb this new line sb CONDITION attributes null EXPR attributes null NAME attributes THEN attributes to source sb this new line sb BLOCK EXPR attributes to source sb CALL attributes to source sb NAME attributes to source NAME attributes NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR trace modifiers modifiers sb CALL trace modifiers modifiers sb NAME trace modifiers ARGUMENT LIST ARGUMENT EXPR modifiers NAME modifiers ARGUMENT EXPR sb NAME sb EXPR sb append delegate CALL sb append delegate NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR delegate EXPR type to source sb CALL type to source sb NAME type to source NAME type NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR name to source sb CALL name to source sb NAME name to source NAME name NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR IF if params null string comma for param decl node pdn params sb append comma comma pdn to source sb CONDITION params null EXPR params null NAME params THEN string comma for param decl node pdn params sb append comma comma pdn to source sb BLOCK DECL STMT TYPE string NAME string NAME comma INIT EXPR FOR for param decl node pdn params sb append comma comma pdn to source sb CONTROL param decl node pdn params INIT param decl node pdn params TYPE param decl node NAME param decl node NAME pdn RANGE params EXPR params NAME params BLOCK EXPR sb append comma CALL sb append comma NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR comma NAME comma EXPR comma NAME comma EXPR pdn to source sb CALL pdn to source sb NAME pdn to source NAME pdn NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN if IN attributes NNS null JJ attributes NNS to TO source NN root ROOT attributes case source to nmod to attributes source sb NN this DT new JJ line NN sb NN trace NN modifiers NNS root ROOT modifiers compound modifiers trace modifiers NNS sb NN sb NN append IN root ROOT sb dep sb append delegate NN type NN to TO source NN root ROOT type case source to nmod to type source sb NN sb NN append IN root ROOT sb dep sb append name NN to TO source NN root ROOT name case source to nmod to name source sb NN sb NN append IN root ROOT sb dep sb append if IN params NNS null JJ string NN comma NN for IN param NN decl NN node NN root ROOT node compound node param compound node decl pdn NN params NNS sb NN append IN root ROOT sb dep sb append comma NN comma NN pdn NN to TO source NN root ROOT pdn case source to nmod to pdn source sb NN sb NN append IN root ROOT sb dep sb append this DT new JJ line NN sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/types/DelegateNode.java,28
COMMENT the configuration key that indicates whether to show bold names DECL STMT SPECIFIER public SPECIFIER static TYPE final configuration key SPECIFIER final NAME configuration key NAME key show bold names INIT configuration make key notation show bold names EXPR configuration make key notation show bold names CALL configuration make key notation show bold names NAME configuration make key NAME configuration NAME make key ARGUMENT LIST ARGUMENT EXPR notation ARGUMENT EXPR show ARGUMENT EXPR bold ARGUMENT EXPR names the configuration key that indicates whether to show bold names root ROOT key det key the compound key configuration nsubj indicates key ref key that acl relcl key indicates mark show whether mark show to ccomp indicates show amod names bold dobj show names public NN static JJ final JJ configuration NN key NN root ROOT key compound key configuration key JJ show NN bold JJ names NNS root ROOT names amod names key compound names show amod names bold configuration NN make VBP key NN root ROOT make nsubj make configuration dobj make key notation NN show NN bold JJ names NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/DiagramAppearance.java,85
COMMENT get the public identifier of the entity where the exception occurred return a string containing the public identifier or null if none is available FUNCTION SPECIFIER public TYPE string NAME string NAME get public id PARAMETER LIST BLOCK RETURN return this public id EXPR this public id NAME this public id NAME this NAME public id get the public identifier of the entity where the exception occurred root ROOT get det identifier the amod identifier public dobj get identifier case entity of det entity the nmod of identifier entity advmod occurred where det exception the nsubj occurred exception acl relcl entity occurred return a string containing the public identifier or null if none is root ROOT return det string a dobj return string acl string containing det identifier the amod identifier public dobj containing identifier cc identifier or dobj containing null conj or identifier null mark is if nsubj is none advcl if return is available public NN string NN get VB public JJ id NN root ROOT get amod id public dobj get id return NN this DT public JJ id NN containing is ANTONYM ANTONYM get containing ANTONYM ANTONYM get occurred ANTONYM ANTONYM get return ANTONYM ANTONYM get string ANTONYM ANTONYM occurred return ANTONYM ANTONYM return containing ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-core-model/src/org/argouml/model/XmiException.java,153
COMMENT helper method for update classifiers in order to automatically layout an edge that is now from and to the same node type p adapted from selection w buttons from line FUNCTION SPECIFIER private TYPE void NAME void NAME layout this to self PARAMETER LIST BLOCK DECL STMT TYPE fig poly NAME fig poly NAME edge shape INIT new fig poly EXPR new fig poly CALL fig poly NAME fig poly ARGUMENT LIST COMMENT new fc content DECL STMT TYPE point NAME point NAME fc center INIT new point get source fig node get x get source fig node get y EXPR new point get source fig node get x get source fig node get y CALL point get source fig node get x get source fig node get y NAME point ARGUMENT LIST ARGUMENT EXPR get source fig node get x CALL get source fig node NAME get source fig node ARGUMENT LIST CALL get x NAME get x ARGUMENT LIST ARGUMENT EXPR get source fig node get y CALL get source fig node NAME get source fig node ARGUMENT LIST CALL get y NAME get y ARGUMENT LIST DECL STMT TYPE point NAME point NAME center right INIT new point int fc center x get source fig node get size get width fc center y EXPR new point int fc center x get source fig node get size get width fc center y CALL point int fc center x get source fig node get size get width fc center y NAME point ARGUMENT LIST ARGUMENT EXPR int fc center x get source fig node get size get width CALL int fc center x get source fig node get size get width NAME int ARGUMENT LIST ARGUMENT EXPR fc center x get source fig node get size get width NAME fc center x NAME fc center NAME x CALL get source fig node NAME get source fig node ARGUMENT LIST CALL get size NAME get size ARGUMENT LIST CALL get width NAME get width ARGUMENT LIST ARGUMENT EXPR fc center y NAME fc center y NAME fc center NAME y DECL STMT TYPE int NAME int NAME yoffset INIT int get source fig node get size get height EXPR int get source fig node get size get height CALL int get source fig node get size get height NAME int ARGUMENT LIST ARGUMENT EXPR get source fig node get size get height CALL get source fig node NAME get source fig node ARGUMENT LIST CALL get size NAME get size ARGUMENT LIST CALL get height NAME get height ARGUMENT LIST EXPR edge shape add point fc center x fc center y CALL edge shape add point fc center x fc center y NAME edge shape add point NAME edge shape NAME add point ARGUMENT LIST ARGUMENT EXPR fc center x NAME fc center x NAME fc center NAME x ARGUMENT EXPR fc center y NAME fc center y NAME fc center NAME y EXPR edge shape add point center right x center right y CALL edge shape add point center right x center right y NAME edge shape add point NAME edge shape NAME add point ARGUMENT LIST ARGUMENT EXPR center right x NAME center right x NAME center right NAME x ARGUMENT EXPR center right y NAME center right y NAME center right NAME y EXPR edge shape add point center right x center right y CALL edge shape add point center right x center right y NAME edge shape add point NAME edge shape NAME add point ARGUMENT LIST ARGUMENT EXPR center right x NAME center right x NAME center right NAME x ARGUMENT EXPR center right y NAME center right y NAME center right NAME y EXPR edge shape add point center right x center right y yoffset CALL edge shape add point center right x center right y yoffset NAME edge shape add point NAME edge shape NAME add point ARGUMENT LIST ARGUMENT EXPR center right x NAME center right x NAME center right NAME x ARGUMENT EXPR center right y yoffset NAME center right y NAME center right NAME y NAME yoffset EXPR edge shape add point center right x center right y yoffset CALL edge shape add point center right x center right y yoffset NAME edge shape add point NAME edge shape NAME add point ARGUMENT LIST ARGUMENT EXPR center right x NAME center right x NAME center right NAME x ARGUMENT EXPR center right y yoffset NAME center right y NAME center right NAME y NAME yoffset COMMENT place the edge on the layer and update the diagram EXPR this set between nearest points true CALL this set between nearest points true NAME this set between nearest points NAME this NAME set between nearest points ARGUMENT LIST ARGUMENT EXPR true EXPR edge shape set line color line color CALL edge shape set line color line color NAME edge shape set line color NAME edge shape NAME set line color ARGUMENT LIST ARGUMENT EXPR line color NAME line color EXPR edge shape set filled false CALL edge shape set filled false NAME edge shape set filled NAME edge shape NAME set filled ARGUMENT LIST ARGUMENT EXPR false EXPR edge shape set complete true CALL edge shape set complete true NAME edge shape set complete NAME edge shape NAME set complete ARGUMENT LIST ARGUMENT EXPR true EXPR this set fig edge shape CALL this set fig edge shape NAME this set fig NAME this NAME set fig ARGUMENT LIST ARGUMENT EXPR edge shape NAME edge shape helper method for update classifiers in order to automatically root ROOT method compound method helper mark update for acl for method update dobj update classifiers case automatically in mwe in order dep automatically to nmod in order update automatically layout an edge that is now from and to the same node type root ROOT layout det edge an dobj layout edge nsubj type edge ref edge that cop type is advmod type now case type from cc type and case type to det type the amod type same compound type node acl relcl edge type p adapted from selection w buttons from line root ROOT adapted nsubj adapted p case buttons from compound buttons selection compound buttons w nmod from adapted buttons case line from nmod from buttons line private JJ void NN layout NN this DT to TO self NN root ROOT layout dobj layout this case self to nmod to layout self fig NN poly NN root ROOT poly compound poly fig edge NN shape NN root ROOT shape compound shape edge new JJ fig NN poly NN root ROOT poly compound poly fig new fc content root ROOT content amod content new compound content fc point NN fc NN center NN root ROOT center compound center fc new JJ point NN get VB source NN fig NN node NN root ROOT get compound node source compound node fig dobj get node get VB x CC root ROOT get dep get x get VB source NN fig NN node NN root ROOT get compound node source compound node fig dobj get node get VB y SYM root ROOT get dobj get y point NN center NN right NN root ROOT right compound right center new JJ point NN int NN fc NN center NN x NN root ROOT x compound x fc compound x center get VB source NN fig NN node NN root ROOT get compound node source compound node fig dobj get node get VB size NN root ROOT get dobj get size get VB width NN root ROOT get dobj get width fc NN center NN y NN root ROOT y compound y fc compound y center int NN yoffset NN int NN get VB source NN fig NN node NN root ROOT get compound node source compound node fig dobj get node get VB size NN root ROOT get dobj get size get VB height NN root ROOT get dobj get height edge NN shape NN add VBP point NN root ROOT add compound shape edge nsubj add shape dobj add point fc NN center NN x NN root ROOT x compound x fc compound x center fc NN center NN y NN root ROOT y compound y fc compound y center edge NN shape NN add VBP point NN root ROOT add compound shape edge nsubj add shape dobj add point center NN right NN x NN root ROOT x compound x center compound x right center NN right NN y NN root ROOT y compound y center compound y right edge NN shape NN add VBP point NN root ROOT add compound shape edge nsubj add shape dobj add point center NN right NN x NN root ROOT x compound x center compound x right center NN right NN y NN root ROOT y compound y center compound y right edge NN shape NN add VBP point NN root ROOT add compound shape edge nsubj add shape dobj add point center NN right NN x NN root ROOT x compound x center compound x right center NN right NN y NN root ROOT y compound y center compound y right yoffset NN edge NN shape NN add VBP point NN root ROOT add compound shape edge nsubj add shape dobj add point center NN right NN x NN root ROOT x compound x center compound x right center NN right NN y NN root ROOT y compound y center compound y right yoffset NN place the edge on the layer and update the diagram root ROOT place det edge the dobj place edge case layer on det layer the nmod on edge layer cc place and conj and place update det diagram the dobj update diagram this DT set NN between IN nearest JJS points NNS true JJ edge NN shape NN set VBN line NN color NN root ROOT set compound shape edge nsubj set shape compound color line dobj set color line NN color NN root ROOT color compound color line edge NN shape NN set VBD filled VBN root ROOT set compound shape edge nsubj set shape dep set filled false JJ edge NN shape NN set VBD complete JJ root ROOT set compound shape edge nsubj set shape xcomp set complete true JJ this DT set NN fig NN edge NN shape NN root ROOT shape compound shape edge,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/ui/FigEdgeModelElement.java,1316
DECL STMT SPECIFIER private TYPE final short SPECIFIER final NAME short NAME modifiers private JJ final JJ short RB modifiers NNS,1,E1,ArgoUML0.34/argouml-idl/src/org/argouml/uml/reveng/idl/ParameterDeclaration.java,49
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR expressions to source sb CALL expressions to source sb NAME expressions to source NAME expressions NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN sb NN append IN root ROOT sb dep sb append expressions NNS to TO source NN root ROOT expressions case source to nmod to expressions source sb NN sb NN append IN root ROOT sb dep sb append,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/nodes/expressions/ArrayInitializerExpression.java,20
DECL STMT SPECIFIER private SPECIFIER static TYPE void NAME void NAME get component version info ARGUMENT LIST ARGUMENT EXPR string buffer sb sb append translator localize label package append NAME string buffer NAME sb CALL sb append translator localize label package NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR translator localize label package CALL translator localize label package NAME translator localize NAME translator NAME localize ARGUMENT LIST ARGUMENT EXPR label package CALL append NAME append ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR sb append pn CALL sb append pn NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR pn NAME pn ARGUMENT EXPR sb append n CALL sb append n NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR n ARGUMENT EXPR package pkg package get package pn NAME package NAME pkg CALL package get package pn NAME package get package NAME package NAME get package ARGUMENT LIST ARGUMENT EXPR pn NAME pn ARGUMENT EXPR pkg null sb append translator localize label no version NAME pkg BLOCK EXPR sb append translator localize label no version CALL sb append translator localize label no version NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR translator localize label no version CALL translator localize label no version NAME translator localize NAME translator NAME localize ARGUMENT LIST ARGUMENT EXPR label no version ELSE else string in pkg get implementation title if in null sb append translator localize label component sb append sb append in in pkg get implementation vendor if in null sb append translator localize label by sb append sb append in in pkg get implementation version if in null sb append sb append translator localize label version sb append sb append in sb append n BLOCK DECL STMT TYPE string NAME string NAME in INIT pkg get implementation title EXPR pkg get implementation title CALL pkg get implementation title NAME pkg get implementation title NAME pkg NAME get implementation title ARGUMENT LIST IF if in null sb append translator localize label component sb append sb append in CONDITION in null EXPR in null NAME in THEN sb append translator localize label component sb append sb append in BLOCK EXPR sb append translator localize label component CALL sb append translator localize label component NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR translator localize label component CALL translator localize label component NAME translator localize NAME translator NAME localize ARGUMENT LIST ARGUMENT EXPR label component EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR sb append in CALL sb append in NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR in NAME in EXPR in pkg get implementation vendor NAME in CALL pkg get implementation vendor NAME pkg get implementation vendor NAME pkg NAME get implementation vendor ARGUMENT LIST IF if in null sb append translator localize label by sb append sb append in CONDITION in null EXPR in null NAME in THEN sb append translator localize label by sb append sb append in BLOCK EXPR sb append translator localize label by CALL sb append translator localize label by NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR translator localize label by CALL translator localize label by NAME translator localize NAME translator NAME localize ARGUMENT LIST ARGUMENT EXPR label by EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR sb append in CALL sb append in NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR in NAME in EXPR in pkg get implementation version NAME in CALL pkg get implementation version NAME pkg get implementation version NAME pkg NAME get implementation version ARGUMENT LIST IF if in null sb append sb append translator localize label version sb append sb append in sb append n CONDITION in null EXPR in null NAME in THEN sb append sb append translator localize label version sb append sb append in sb append n BLOCK EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR sb append translator localize label version CALL sb append translator localize label version NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR translator localize label version CALL translator localize label version NAME translator localize NAME translator NAME localize ARGUMENT LIST ARGUMENT EXPR label version EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR sb append in CALL sb append in NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR in NAME in EXPR sb append n CALL sb append n NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR n ARGUMENT EXPR sb append n CALL sb append n NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR n private JJ static JJ void NN get VB component NN version NN info NN root ROOT get compound version component compound info version dobj get info string NN buffer NN root ROOT buffer compound buffer string sb NN sb NN append IN root ROOT sb dep sb append translator NN localize VBP root ROOT localize nsubj localize translator label NN package NN append IN sb NN append IN root ROOT sb dep sb append pn NN sb NN append IN root ROOT sb dep sb append n NN package NN pkg NN package NN get VB package NN pn NN if IN pkg NN null JJ sb NN append IN root ROOT sb dep sb append translator NN localize VBP root ROOT localize nsubj localize translator label NN no DT version NN root ROOT version compound version label neg version no else RB string NN in IN pkg NN get VB implementation NN title NN root ROOT get nsubj get pkg compound title implementation dobj get title if IN in IN null JJ sb NN append IN root ROOT sb dep sb append translator NN localize VBP root ROOT localize nsubj localize translator label NN component NN root ROOT component compound component label sb NN append IN root ROOT sb dep sb append sb NN append IN root ROOT sb dep sb append in IN in IN pkg NN get VB implementation NN vendor NN root ROOT get nsubj get pkg compound vendor implementation dobj get vendor if IN in IN null JJ sb NN append IN root ROOT sb dep sb append translator NN localize VBP root ROOT localize nsubj localize translator label NN by IN root ROOT label dep label by sb NN append IN root ROOT sb dep sb append sb NN append IN root ROOT sb dep sb append in IN in IN pkg NN get VB implementation NN version NN root ROOT get nsubj get pkg compound version implementation dobj get version if IN in IN null JJ sb NN append IN root ROOT sb dep sb append sb NN append IN root ROOT sb dep sb append translator NN localize VBP root ROOT localize nsubj localize translator label NN version NN root ROOT version compound version label sb NN append IN root ROOT sb dep sb append sb NN append IN root ROOT sb dep sb append in IN sb NN append IN root ROOT sb dep sb append n NN sb NN append IN root ROOT sb dep sb append n NN,1,B3,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/Tools.java,75
COMMENT logger DECL STMT TYPE hashtable class icon NAME hashtable class icon NAME hashtable ARGUMENT LIST ARGUMENT NAME class ARGUMENT NAME icon NAME icon cache INIT new hashtable class icon EXPR new hashtable class icon CALL hashtable class icon NAME hashtable class icon NAME hashtable ARGUMENT LIST ARGUMENT NAME class ARGUMENT NAME icon ARGUMENT LIST logger private JJ hashtable JJ class NN icon NN icon NN cache NN root ROOT cache compound cache icon new JJ hashtable JJ class NN icon NN,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/application/helpers/ResourceLoaderWrapper.java,88
COMMENT enhance create the doccomment for the given model element including tags for any ocl constraints connected to the model element the tags generated are suitable for use with the ocl injector which is part of the dresden ocl toolkit and are in detail nbsp invariant for each invariant specified nbsp precondition for each precondition specified nbsp postcondition for each postcondition specified nbsp key type specifying the class of the keys of a mapped association nbsp currently mapped associations are not supported yet nbsp element type specifying the class referenced in an association since argo uml author steffen zschaler param me the model element for which the documentation comment is needed param ae the association end which is represented by the model element return the documentation comment for the specified model element either enhanced or completely generated FUNCTION SPECIFIER private TYPE string NAME string NAME generate constraint enriched doc comment PARAMETER LIST object me object ae PARAMETER object me TYPE object NAME object NAME me PARAMETER object ae TYPE object NAME object NAME ae BLOCK DECL STMT TYPE string NAME string NAME s INIT generate constraint enriched doc comment me true indent EXPR generate constraint enriched doc comment me true indent CALL generate constraint enriched doc comment me true indent NAME generate constraint enriched doc comment ARGUMENT LIST ARGUMENT EXPR me NAME me ARGUMENT EXPR true ARGUMENT EXPR indent NAME indent IF if is collection ae multiplicity greater that means we will generate some sort of collection so we need to specify the element type tag string buffer s doc comment new string buffer prepare doccomment if s null equals s just remove closing s doc comment append s substring s index of else s doc comment append indent append append line separator s doc comment append indent append append line separator s doc comment append indent append build doccomment object type model get facade get type ae if type null s doc comment append element type s doc comment append model get facade get name type removed steffen zschaler element type unknown is not recognized by the ocl injector else s doc comment element type unknown s doc comment append line separator append indent append s doc comment append line separator return s doc comment to string CONDITION is collection ae EXPR is collection ae CALL is collection ae NAME is collection ARGUMENT LIST ARGUMENT EXPR ae NAME ae THEN multiplicity greater that means we will generate some sort of collection so we need to specify the element type tag string buffer s doc comment new string buffer prepare doccomment if s null equals s just remove closing s doc comment append s substring s index of else s doc comment append indent append append line separator s doc comment append indent append append line separator s doc comment append indent append build doccomment object type model get facade get type ae if type null s doc comment append element type s doc comment append model get facade get name type removed steffen zschaler element type unknown is not recognized by the ocl injector else s doc comment element type unknown s doc comment append line separator append indent append s doc comment append line separator return s doc comment to string BLOCK COMMENT multiplicity greater that means we will generate some sort of COMMENT collection so we need to specify the element type tag DECL STMT TYPE string buffer NAME string buffer NAME s doc comment INIT new string buffer EXPR new string buffer CALL string buffer NAME string buffer ARGUMENT LIST ARGUMENT EXPR COMMENT prepare doccomment IF if s null equals s just remove closing s doc comment append s substring s index of else s doc comment append indent append append line separator s doc comment append indent append append line separator s doc comment append indent append CONDITION s null equals s EXPR s null equals s NAME s CALL equals s NAME equals ARGUMENT LIST ARGUMENT EXPR s NAME s THEN just remove closing s doc comment append s substring s index of BLOCK COMMENT just remove closing EXPR s doc comment append s substring s index of CALL s doc comment append s substring s index of NAME s doc comment append NAME s doc comment NAME append ARGUMENT LIST ARGUMENT EXPR s substring s index of CALL s substring s index of NAME s substring NAME s NAME substring ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR s index of CALL s index of NAME s index of NAME s NAME index of ARGUMENT LIST ARGUMENT EXPR ELSE else s doc comment append indent append append line separator s doc comment append indent append append line separator s doc comment append indent append BLOCK EXPR s doc comment append indent append append line separator CALL s doc comment append indent NAME s doc comment append NAME s doc comment NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent CALL append NAME append ARGUMENT LIST ARGUMENT EXPR CALL append line separator NAME append ARGUMENT LIST ARGUMENT EXPR line separator NAME line separator EXPR s doc comment append indent append append line separator CALL s doc comment append indent NAME s doc comment append NAME s doc comment NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent CALL append NAME append ARGUMENT LIST ARGUMENT EXPR CALL append line separator NAME append ARGUMENT LIST ARGUMENT EXPR line separator NAME line separator EXPR s doc comment append indent append CALL s doc comment append indent NAME s doc comment append NAME s doc comment NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent CALL append NAME append ARGUMENT LIST ARGUMENT EXPR COMMENT build doccomment DECL STMT TYPE object NAME object NAME type INIT model get facade get type ae EXPR model get facade get type ae CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get type ae NAME get type ARGUMENT LIST ARGUMENT EXPR ae NAME ae IF if type null s doc comment append element type s doc comment append model get facade get name type CONDITION type null EXPR type null NAME type THEN s doc comment append element type s doc comment append model get facade get name type BLOCK EXPR s doc comment append element type CALL s doc comment append element type NAME s doc comment append NAME s doc comment NAME append ARGUMENT LIST ARGUMENT EXPR element type EXPR s doc comment append model get facade get name type CALL s doc comment append model get facade get name type NAME s doc comment append NAME s doc comment NAME append ARGUMENT LIST ARGUMENT EXPR model get facade get name type CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get name type NAME get name ARGUMENT LIST ARGUMENT EXPR type NAME type COMMENT removed steffen zschaler element type COMMENT unknown is not recognized by the ocl injector COMMENT else COMMENT s doc comment element type unknown COMMENT EXPR s doc comment append line separator append indent append CALL s doc comment append line separator NAME s doc comment append NAME s doc comment NAME append ARGUMENT LIST ARGUMENT EXPR line separator NAME line separator CALL append indent NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent CALL append NAME append ARGUMENT LIST ARGUMENT EXPR EXPR s doc comment append line separator CALL s doc comment append line separator NAME s doc comment append NAME s doc comment NAME append ARGUMENT LIST ARGUMENT EXPR line separator NAME line separator RETURN return s doc comment to string EXPR s doc comment to string CALL s doc comment to string NAME s doc comment to string NAME s doc comment NAME to string ARGUMENT LIST RETURN return s null s EXPR s null s TERNARY s null s CONDITION s null EXPR s null NAME s THEN s EXPR s NAME s ELSE EXPR enhance create the doccomment for the given model element root ROOT enhance xcomp enhance create det doccomment the dobj create doccomment case element for det element the amod element given compound element model nmod for doccomment element including tags for any ocl constraints connected to the model root ROOT tags case tags including case constraints for det constraints any compound constraints ocl nmod for tags constraints acl constraints connected case model to det model the nmod to connected model element the tags generated are suitable for use with the ocl root ROOT element det tags the nsubj suitable tags acl tags generated cop suitable are acl relcl element suitable case use for nmod for suitable use case ocl with det ocl the nmod with use ocl element the tags generated are suitable for use with the ocl root ROOT element det tags the nsubj suitable tags acl tags generated cop suitable are acl relcl element suitable case use for nmod for suitable use case ocl with det ocl the nmod with use ocl injector which is part of the dresden ocl toolkit and are in root ROOT injector nsubj part injector ref injector which cop part is acl relcl injector part case toolkit of det toolkit the compound toolkit dresden compound toolkit ocl nmod of part toolkit cc part and cop in are acl relcl injector in conj and part in detail nbsp invariant for each invariant specified root ROOT nbsp amod nbsp invariant case invariant for det invariant each nmod for invariant invariant acl invariant specified nbsp precondition for each precondition specified root ROOT specified compound precondition nbsp nsubj specified precondition case precondition for det precondition each nmod for precondition precondition nbsp postcondition for each postcondition specified root ROOT specified compound postcondition nbsp nsubj specified postcondition case postcondition for det postcondition each nmod for postcondition postcondition nbsp key type specifying the class of the keys of a mapped association root ROOT type compound type nbsp amod type key acl type specifying det class the dobj specifying class case keys of det keys the nmod of class keys case association of det association a amod association mapped nmod of keys association nbsp currently mapped associations are not supported yet root ROOT mapped nsubj mapped nbsp advmod mapped currently nsubjpass supported associations auxpass supported are neg supported not ccomp mapped supported advmod supported yet nbsp element type specifying the class referenced in an association root ROOT type amod type nbsp compound type element acl type specifying det class the dobj specifying class acl class referenced case association in det association an nmod in referenced association since argo uml root ROOT uml case uml since compound uml argo author steffen zschaler root ROOT zschaler compound zschaler author compound zschaler steffen param me the model element for which the documentation comment is needed root ROOT param iobj param me det element the compound element model dobj param element nmod for needed element case which for ref element which det comment the compound comment documentation nsubjpass needed comment auxpass needed is acl relcl element needed param ae the association end which is represented by the model element root ROOT param case end ae det end the compound end association nmod ae param end nsubjpass represented end ref end which auxpass represented is acl relcl end represented case element by det element the compound element model nmod agent represented element return the documentation comment for the specified model element either root ROOT return det comment the compound comment documentation dobj return comment case element for det element the amod element specified compound element model nmod for comment element dep return either enhanced or completely generated root ROOT enhanced cc enhanced or advmod generated completely conj or enhanced generated private JJ string NN generate VB constraint NN enriched JJ doc NN comment NN root ROOT generate compound comment constraint amod comment enriched compound comment doc dobj generate comment object NN me PRP object NN ae IN string NN s NNS generate VB constraint NN enriched JJ doc NN comment NN root ROOT generate compound comment constraint amod comment enriched compound comment doc dobj generate comment me PRP true JJ indent JJ if IN is VBZ collection NN root ROOT collection cop collection is ae IN multiplicity greater that means we will generate some sort of root ROOT multiplicity amod multiplicity greater nsubj means that ccomp greater means nsubj generate we aux generate will ccomp means generate det sort some dobj generate sort dep sort of collection so we need to specify the element type tag root ROOT collection mark need so nsubj need we nsubj xsubj specify we advcl so collection need mark specify to xcomp need specify det tag the compound tag element compound tag type dobj specify tag string NN buffer NN root ROOT buffer compound buffer string s NNS doc VBP comment NN root ROOT doc nsubj doc s dobj doc comment new JJ string NN buffer NN root ROOT buffer compound buffer string prepare doccomment root ROOT prepare dobj prepare doccomment if IN s NNS null JJ equals VBZ s NNS just remove closing root ROOT remove advmod remove just dobj remove closing s NNS doc VBP comment NN append IN root ROOT doc nsubj doc s dobj doc comment dep doc append s NNS substring VBG root ROOT substring compound substring s s NNS index NN of IN root ROOT index compound index s acl index of else RB s NNS doc VBP comment NN append IN root ROOT doc nsubj doc s dobj doc comment dep doc append indent JJ append IN append IN line NN separator NN root ROOT separator compound separator line s NNS doc VBP comment NN append IN root ROOT doc nsubj doc s dobj doc comment dep doc append indent JJ append IN append IN line NN separator NN root ROOT separator compound separator line s NNS doc VBP comment NN append IN root ROOT doc nsubj doc s dobj doc comment dep doc append indent JJ append IN build doccomment root ROOT build dobj build doccomment object NN type NN model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB type NN root ROOT get dobj get type ae IN if IN type NN null JJ s NNS doc VBP comment NN append IN root ROOT doc nsubj doc s dobj doc comment dep doc append element NN type NN s NNS doc VBP comment NN append IN root ROOT doc nsubj doc s dobj doc comment dep doc append model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB name NN root ROOT get dobj get name type NN removed steffen zschaler element type root ROOT type amod type removed compound type steffen compound type zschaler compound type element unknown is not recognized by the ocl injector root ROOT recognized nsubjpass recognized unknown auxpass recognized is neg recognized not case injector by det injector the compound injector ocl nmod agent recognized injector else s doc comment element type unknown root ROOT doc nsubj doc s compound type comment compound type element dobj doc type amod type unknown s NNS doc VBP comment NN append IN root ROOT doc nsubj doc s dobj doc comment dep doc append line NN separator NN root ROOT separator compound separator line append IN indent JJ append IN s NNS doc VBP comment NN append IN root ROOT doc nsubj doc s dobj doc comment dep doc append line NN separator NN root ROOT separator compound separator line return NN s NNS doc VBP comment NN to TO string NN root ROOT doc nsubj doc s dobj doc comment case string to nmod to comment string return NN s NNS null JJ s NNS are mapped ANTONYM ANTONYM create given ANTONYM ANTONYM element part ANTONYM ANTONYM end generated ANTONYM ANTONYM end part ANTONYM ANTONYM given needed ANTONYM ANTONYM given part ANTONYM ANTONYM given represented ANTONYM ANTONYM given supported ANTONYM ANTONYM given use ANTONYM ANTONYM is mapped ANTONYM ANTONYM model suitable ANTONYM ANTONYM part class ANTONYM ANTONYM part class ANTONYM ANTONYM part completely ANTONYM ANTONYM part type ANTONYM ANTONYM supported represented ANTONYM ANTONYM use part ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml-java/src/org/argouml/language/java/generator/GeneratorJava.java,1289
COMMENT list of tree models DECL STMT SPECIFIER private TYPE to do list NAME to do list NAME root list of tree models root ROOT list case models of compound models tree nmod of list models private JJ to TO do VB list NN root ROOT do mark do to dobj do list root NN,1,D1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/cognitive/ui/ToDoPane.java,127
COMMENT action key for import from sources DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME action import from sources INIT import from sources EXPR import from sources action key for import from sources root ROOT key compound key action case import for nmod for key import case sources from nmod from import sources public NN static JJ final JJ string NN action NN import NN from IN sources NNS root ROOT import compound import action case sources from nmod from import sources import NN from IN sources NNS root ROOT import case sources from nmod from import sources,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,162
COMMENT return a bitfield containing the modifiers for the parameter FUNCTION SPECIFIER public TYPE short NAME short NAME get modifiers PARAMETER LIST BLOCK RETURN return modifiers EXPR modifiers NAME modifiers return a bitfield containing the modifiers for the parameter root ROOT return det bitfield a dobj return bitfield acl bitfield containing det modifiers the dobj containing modifiers case parameter for det parameter the nmod for modifiers parameter public NN short RB get VB modifiers NNS root ROOT get dobj get modifiers return NN modifiers NNS return containing ANTONYM ANTONYM,1,B6,ArgoUML0.34/argouml-idl/src/org/argouml/uml/reveng/idl/ParameterDeclaration.java,73
COMMENT returns the j tabbed pane that contains all details panels return the j tabbed pane FUNCTION TYPE j tabbed pane NAME j tabbed pane NAME get tabs PARAMETER LIST BLOCK RETURN return top level tabbed pane EXPR top level tabbed pane NAME top level tabbed pane returns the j tabbed pane that contains all details panels root ROOT returns det j the nsubj tabbed j acl relcl returns tabbed dobj tabbed pane nsubj contains pane ref pane that acl relcl pane contains det details all dobj contains details dep details panels return the j tabbed pane root ROOT tabbed csubj tabbed return det j the dobj return j dobj tabbed pane j NN tabbed VBD pane NN root ROOT tabbed nsubj tabbed j dobj tabbed pane get VB tabs NNS root ROOT get dobj get tabs return NN top JJ level NN tabbed VBD pane NN root ROOT tabbed amod level top nsubj tabbed level dobj tabbed pane contains return ANTONYM ANTONYM returns contains ANTONYM ANTONYM,1,B6,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/DetailsPane.java,196
COMMENT the number of columns seen DECL STMT SPECIFIER protected TYPE int NAME int NAME num columns INIT EXPR the number of columns seen root ROOT seen det number the nsubj seen number case columns of nmod of number columns the number of columns seen root ROOT seen det number the nsubj seen number case columns of nmod of number columns protected VBN int NN num NN columns NNS root ROOT columns compound columns num,0,N/A,ArgoUML0.34/argouml-documentation/src/docbook-setup/docbook-xsl/extensions/saxon643/com/nwalsh/saxon/ColumnUpdateEmitter.java,43
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK IF if attributes null attributes to source sb this new line sb CONDITION attributes null EXPR attributes null NAME attributes THEN attributes to source sb this new line sb BLOCK EXPR attributes to source sb CALL attributes to source sb NAME attributes to source NAME attributes NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR this trace modifiers this modifiers sb CALL this trace modifiers this modifiers sb NAME this trace modifiers NAME this NAME trace modifiers ARGUMENT LIST ARGUMENT EXPR this modifiers NAME this modifiers NAME this NAME modifiers ARGUMENT EXPR sb NAME sb EXPR this type to source sb CALL this type to source sb NAME this type to source NAME this NAME type NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR DECL STMT TYPE string NAME string NAME comma INIT EXPR FOR for int i i this names size i sb append comma comma this names get i to source sb CONTROL int i i this names size i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i this names size EXPR i this names size NAME i CALL this names size NAME this names size NAME this NAME names NAME size ARGUMENT LIST INCR i EXPR i NAME i BLOCK EXPR sb append comma CALL sb append comma NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR comma NAME comma EXPR comma NAME comma EXPR this names get i to source sb CALL this names get i NAME this names get NAME this NAME names NAME get ARGUMENT LIST ARGUMENT EXPR i NAME i CALL to source sb NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb IF if this value null sb append this value to source sb CONDITION this value null EXPR this value null NAME this value NAME this NAME value THEN sb append this value to source sb BLOCK EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR this value to source sb CALL this value to source sb NAME this value to source NAME this NAME value NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN if IN attributes NNS null JJ attributes NNS to TO source NN root ROOT attributes case source to nmod to attributes source sb NN this DT new JJ line NN sb NN this DT trace NN modifiers NNS this DT modifiers NNS sb NN this DT type NN to TO source NN sb NN sb NN append IN root ROOT sb dep sb append string NN comma NN for IN int NN i LS i LS this DT names NNS size NN i LS sb NN append IN root ROOT sb dep sb append comma NN comma NN this DT names NNS get VBP i LS to TO source NN root ROOT source case source to sb NN if IN this DT value NN null JJ sb NN append IN root ROOT sb dep sb append this DT value NN to TO source NN sb NN sb NN append IN root ROOT sb dep sb append this DT new JJ line NN sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/members/FieldNode.java,11
DECL STMT SPECIFIER public TYPE block statement NAME block statement NAME statements INIT new block statement EXPR new block statement CALL block statement NAME block statement ARGUMENT LIST public NN block NN statement NN root ROOT statement compound statement block statements NNS new JJ block NN statement NN root ROOT statement compound statement block,1,E1,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/statements/IfStatement.java,16
COMMENT action key for align v centers DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME action align v centers INIT align v centers EXPR align v centers action key for align v centers root ROOT v compound key action nsubj v key case align for nmod for key align dobj v centers public NN static JJ final JJ string NN action NN align VB v LS centers NNS root ROOT align nsubj align action dobj align v root v centers align VB v LS centers NNS root ROOT align dobj align v root v centers v key ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,280
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR test to source sb CALL test to source sb NAME test to source NAME test NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR left to source sb CALL left to source sb NAME left to source NAME left NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR right to source sb CALL right to source sb NAME right to source NAME right NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN test NN to TO source NN root ROOT test case source to nmod to test source sb NN sb NN append IN root ROOT sb dep sb append left VBN to TO source NN root ROOT left case source to nmod to left source sb NN sb NN append IN root ROOT sb dep sb append right RB to TO source NN root ROOT right case source to nmod to right source sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/nodes/expressions/ConditionalExpression.java,32
COMMENT the scrollpane that will contain the list DECL STMT SPECIFIER private TYPE scroll list NAME scroll list NAME scroll the scrollpane that will contain the list root ROOT scrollpane det scrollpane the nsubj contain scrollpane ref scrollpane that aux contain will acl relcl scrollpane contain det list the dobj contain list private JJ scroll NN list NN root ROOT list compound list scroll scroll NN,1,D1,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/RowSelector.java,119
COMMENT key to enable smooth edges of diagram text and lines anti aliasing DECL STMT SPECIFIER public SPECIFIER static TYPE final configuration key SPECIFIER final NAME configuration key NAME key smooth edges INIT configuration make key screen diagram antialiasing EXPR configuration make key screen diagram antialiasing CALL configuration make key screen diagram antialiasing NAME configuration make key NAME configuration NAME make key ARGUMENT LIST ARGUMENT EXPR screen ARGUMENT EXPR diagram antialiasing key to enable smooth edges of diagram text and lines anti aliasing root ROOT key mark enable to xcomp key enable amod edges smooth dobj enable edges case text of compound text diagram nmod of edges text cc text and compound aliasing lines amod aliasing anti nmod of edges aliasing conj and text aliasing public NN static JJ final JJ configuration NN key NN root ROOT key compound key configuration key JJ smooth JJ edges NNS root ROOT edges amod edges key amod edges smooth configuration NN make VBP key NN root ROOT make nsubj make configuration dobj make key screen NN diagram NN antialiasing NN root ROOT antialiasing compound antialiasing diagram key lines ANTONYM ANTONYM smooth static ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/application/api/Argo.java,215
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK IF if attributes null attributes to source sb this new line sb CONDITION attributes null EXPR attributes null NAME attributes THEN attributes to source sb this new line sb BLOCK EXPR attributes to source sb CALL attributes to source sb NAME attributes to source NAME attributes NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR this trace modifiers this modifiers sb CALL this trace modifiers this modifiers sb NAME this trace modifiers NAME this NAME trace modifiers ARGUMENT LIST ARGUMENT EXPR this modifiers NAME this modifiers NAME this NAME modifiers ARGUMENT EXPR sb NAME sb EXPR this type to source sb CALL this type to source sb NAME this type to source NAME this NAME type NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append this CALL sb append this NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR this IF if params null params to source sb CONDITION params null EXPR params null NAME params THEN params to source sb BLOCK EXPR params to source sb CALL params to source sb NAME params to source NAME params NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR IF if has getter sb append get CONDITION has getter EXPR has getter NAME has getter THEN sb append get BLOCK EXPR sb append get CALL sb append get NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR get IF if has setter sb append set CONDITION has setter EXPR has setter NAME has setter THEN sb append set BLOCK EXPR sb append set CALL sb append set NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR set EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN if IN attributes NNS null JJ attributes NNS to TO source NN root ROOT attributes case source to nmod to attributes source sb NN this DT new JJ line NN sb NN this DT trace NN modifiers NNS this DT modifiers NNS sb NN this DT type NN to TO source NN sb NN sb NN append IN root ROOT sb dep sb append this DT if IN params NNS null JJ params NNS to TO source NN root ROOT params case source to nmod to params source sb NN sb NN append IN root ROOT sb dep sb append if IN has VBZ getter RB root ROOT has advmod has getter sb NN append IN root ROOT sb dep sb append get VB if IN has VBZ setter NN root ROOT has dobj has setter sb NN append IN root ROOT sb dep sb append set NN sb NN append IN root ROOT sb dep sb append,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/members/InterfaceIndexerNode.java,21
DECL STMT SPECIFIER public SPECIFIER static TYPE long NAME long NAME params INIT x EXPR x public NN static JJ long RB params NNS x NN,1,E1,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/enums/Modifier.java,31
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE icon NAME icon NAME icon INDEX NAME get icons PARAMETER LIST BLOCK IF if model get model management helper is read only get content get owner return new icon CONDITION model get model management helper is read only get content get owner EXPR model get model management helper is read only get content get owner CALL model get model management helper NAME model get model management helper NAME model NAME get model management helper ARGUMENT LIST CALL is read only get content get owner NAME is read only ARGUMENT LIST ARGUMENT EXPR get content get owner CALL get content NAME get content ARGUMENT LIST CALL get owner NAME get owner ARGUMENT LIST THEN return new icon BLOCK RETURN return new icon EXPR new icon NAME icon NAME icon INDEX EXPR RETURN return icons EXPR icons NAME icons override NN protected VBN icon NN get VB icons NNS root ROOT get dobj get icons if IN model NN get VB model JJ management NN helper NN root ROOT get nsubj get model amod helper model compound helper management dobj get helper is VBZ read VBN only RB root ROOT read auxpass read is advmod read only get VB content NN root ROOT get dobj get content get VB owner NN root ROOT get dobj get owner return NN new JJ icon NN return NN icons NNS,1,A1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/SelectionNodeInstance.java,82
COMMENT these strings match the xml element names in the argo tee exactly DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string showstereotypes INIT showstereotypes EXPR showstereotypes these strings match the xml element names in the argo tee exactly root ROOT match det strings these nsubj match strings det names the compound names xml compound names element dobj match names case tee in det tee the compound tee argo nmod in names tee advmod match exactly these strings match the xml element names in the argo tee exactly root ROOT match det strings these nsubj match strings det names the compound names xml compound names element dobj match names case tee in det tee the compound tee argo nmod in names tee advmod match exactly private JJ static JJ final JJ string NN string NN showstereotypes NNS root ROOT showstereotypes compound showstereotypes string showstereotypes NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/persistence/ArgoTokenTable.java,81
COMMENT logger DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string INDEX NAME packagelist INIT new string org argouml application todo the following is mdr specific we need something generic to all model subsystems tfm org netbeans mdr org tigris gef base org xml sax java lang org apache log j EXPR new string org argouml application todo the following is mdr specific we need something generic to all model subsystems tfm org netbeans mdr org tigris gef base org xml sax java lang org apache log j NAME string NAME string INDEX BLOCK EXPR org argouml application COMMENT todo the following is mdr specific we need something generic COMMENT to all model subsystems tfm EXPR org netbeans mdr EXPR org tigris gef base EXPR org xml sax EXPR java lang EXPR org apache log j logger private JJ static JJ final JJ string NN packagelist NN new JJ string NN org NN argouml NN application NN root ROOT application compound application org compound application argouml todo the following is mdr specific we need something generic root ROOT need mark specific todo det following the nsubj specific following cop specific is nmod npmod specific mdr advcl todo need specific nsubj need we dobj need something amod something generic todo the following is mdr specific we need something generic root ROOT need mark specific todo det following the nsubj specific following cop specific is nmod npmod specific mdr advcl todo need specific nsubj need we dobj need something amod something generic to all model subsystems tfm root ROOT subsystems case subsystems to det subsystems all compound subsystems model dep subsystems tfm org NN netbeans NNS mdr NN root ROOT mdr compound mdr org compound mdr netbeans org NN tigris VBZ gef NN base NN root ROOT tigris nsubj tigris org compound base gef dobj tigris base org NN xml NN sax NN root ROOT sax compound sax org compound sax xml java NN lang NN root ROOT lang compound lang java org NN apache NN log NN j NN root ROOT j compound j org compound j apache compound j log,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/Tools.java,63
COMMENT a token for notation settings DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME token showsingularmultiplicities INIT EXPR a token for notation settings root ROOT token det token a case settings for compound settings notation nmod for token settings public NN static JJ final JJ int NN token JJ showsingularmultiplicities NNS root ROOT showsingularmultiplicities amod showsingularmultiplicities token,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/persistence/ArgoTokenTable.java,150
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR sb append value CALL sb append value NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR value NAME value public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN sb NN append IN root ROOT sb dep sb append value NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/nodes/expressions/primitive/BooleanPrimitive.java,17
DECL STMT SPECIFIER private TYPE collection object NAME collection object NAME collection ARGUMENT LIST ARGUMENT NAME object NAME model INIT null EXPR null private JJ collection NN object NN model NN null JJ,0,N/A,ArgoUML0.34/argouml-java/src/org/argouml/language/java/profile/ProfileJava.java,79
COMMENT param a association object param ae association end attached to the classifier for which the code is to be generated param parts the buffers associated with the public protected and private parts where the code is to be written FUNCTION SPECIFIER private TYPE void NAME void NAME generate association from PARAMETER LIST object a object ae string buffer parts PARAMETER object a TYPE object NAME object NAME a PARAMETER object ae TYPE object NAME object NAME ae PARAMETER string buffer parts TYPE string buffer NAME string buffer NAME string buffer INDEX NAME parts BLOCK COMMENT todo does not handle n ary associations DECL STMT TYPE collection NAME collection NAME connections INIT get facade get connections a EXPR get facade get connections a CALL get facade NAME get facade ARGUMENT LIST CALL get connections a NAME get connections ARGUMENT LIST ARGUMENT EXPR a NAME a DECL STMT TYPE iterator NAME iterator NAME conn enum INIT connections iterator EXPR connections iterator CALL connections iterator NAME connections iterator NAME connections NAME iterator ARGUMENT LIST WHILE while conn enum has next object ae conn enum next if ae ae int p get visibility part ae if p string buffer sb parts p sb append line separator string assend generate association end ae if assend length string comment generate constraint enriched doc comment a ae if comment length sb append comment both comment and assend ends with simple newline sb append indent append assend string tv generate tagged values a all but doc tags if tv null tv length sb append indent append tv CONDITION conn enum has next EXPR conn enum has next CALL conn enum has next NAME conn enum has next NAME conn enum NAME has next ARGUMENT LIST BLOCK DECL STMT TYPE object NAME object NAME ae INIT conn enum next EXPR conn enum next CALL conn enum next NAME conn enum next NAME conn enum NAME next ARGUMENT LIST IF if ae ae int p get visibility part ae if p string buffer sb parts p sb append line separator string assend generate association end ae if assend length string comment generate constraint enriched doc comment a ae if comment length sb append comment both comment and assend ends with simple newline sb append indent append assend string tv generate tagged values a all but doc tags if tv null tv length sb append indent append tv CONDITION ae ae EXPR ae ae NAME ae NAME ae THEN int p get visibility part ae if p string buffer sb parts p sb append line separator string assend generate association end ae if assend length string comment generate constraint enriched doc comment a ae if comment length sb append comment both comment and assend ends with simple newline sb append indent append assend string tv generate tagged values a all but doc tags if tv null tv length sb append indent append tv BLOCK DECL STMT TYPE int NAME int NAME p INIT get visibility part ae EXPR get visibility part ae CALL get visibility part ae NAME get visibility part ARGUMENT LIST ARGUMENT EXPR ae NAME ae IF if p string buffer sb parts p sb append line separator string assend generate association end ae if assend length string comment generate constraint enriched doc comment a ae if comment length sb append comment both comment and assend ends with simple newline sb append indent append assend string tv generate tagged values a all but doc tags if tv null tv length sb append indent append tv CONDITION p EXPR p NAME p THEN string buffer sb parts p sb append line separator string assend generate association end ae if assend length string comment generate constraint enriched doc comment a ae if comment length sb append comment both comment and assend ends with simple newline sb append indent append assend string tv generate tagged values a all but doc tags if tv null tv length sb append indent append tv BLOCK DECL STMT TYPE string buffer NAME string buffer NAME sb INIT parts p EXPR parts p NAME parts p NAME parts INDEX p EXPR p NAME p EXPR sb append line separator CALL sb append line separator NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR line separator NAME line separator DECL STMT TYPE string NAME string NAME assend INIT generate association end ae EXPR generate association end ae CALL generate association end ae NAME generate association end ARGUMENT LIST ARGUMENT EXPR ae NAME ae IF if assend length string comment generate constraint enriched doc comment a ae if comment length sb append comment both comment and assend ends with simple newline sb append indent append assend CONDITION assend length EXPR assend length CALL assend length NAME assend length NAME assend NAME length ARGUMENT LIST THEN string comment generate constraint enriched doc comment a ae if comment length sb append comment both comment and assend ends with simple newline sb append indent append assend BLOCK DECL STMT TYPE string NAME string NAME comment INIT generate constraint enriched doc comment a ae EXPR generate constraint enriched doc comment a ae CALL generate constraint enriched doc comment a ae NAME generate constraint enriched doc comment ARGUMENT LIST ARGUMENT EXPR a NAME a ARGUMENT EXPR ae NAME ae IF if comment length sb append comment CONDITION comment length EXPR comment length CALL comment length NAME comment length NAME comment NAME length ARGUMENT LIST THEN sb append comment BLOCK EXPR sb append comment CALL sb append comment NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR comment NAME comment COMMENT both comment and assend ends with simple newline EXPR sb append indent append assend CALL sb append indent NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent CALL append assend NAME append ARGUMENT LIST ARGUMENT EXPR assend NAME assend DECL STMT TYPE string NAME string NAME tv INIT generate tagged values a all but doc tags EXPR generate tagged values a all but doc tags CALL generate tagged values a all but doc tags NAME generate tagged values ARGUMENT LIST ARGUMENT EXPR a NAME a ARGUMENT EXPR all but doc tags NAME all but doc tags IF if tv null tv length sb append indent append tv CONDITION tv null tv length EXPR tv null tv length NAME tv CALL tv length NAME tv length NAME tv NAME length ARGUMENT LIST THEN sb append indent append tv BLOCK EXPR sb append indent append tv CALL sb append indent NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent CALL append tv NAME append ARGUMENT LIST ARGUMENT EXPR tv NAME tv param a association object root ROOT param det object a compound object association dobj param object param ae association end attached to the classifier root ROOT end compound end param compound end ae compound end association acl end attached case classifier to det classifier the nmod to attached classifier for which the code is to be generated root ROOT is case which for nmod for is which det code the nsubj is code nsubjpass xsubj generated code mark generated to auxpass generated be xcomp is generated param parts the buffers associated with the public protected root ROOT parts compound parts param det buffers the dep parts buffers acl buffers associated case protected with det protected the amod protected public nmod with associated protected and private parts where the code is to be written root ROOT and amod parts private dep and parts advmod is where det code the nsubj is code nsubjpass xsubj written code acl relcl parts is mark written to auxpass written be xcomp is written private JJ void NN generate VB association NN from IN root ROOT generate dobj generate association acl association from object NN a DT object NN ae IN string NN buffer NN root ROOT buffer compound buffer string parts NNS todo does not handle n ary associations root ROOT handle nsubj handle todo aux handle does neg handle not compound associations n amod associations ary dobj handle associations collection NN connections NNS get VB facade NN root ROOT get dobj get facade get VB connections NNS root ROOT get dobj get connections a DT iterator NN conn NN enum NN root ROOT enum compound enum conn connections NNS iterator NN root ROOT iterator compound iterator connections while IN conn NN enum NN has VBZ next JJ root ROOT has compound enum conn nsubj has enum advmod has next object NN ae IN conn NN enum NN next IN root ROOT enum compound enum conn dep enum next if IN ae IN ae IN int NN p NN get VB visibility NN part NN root ROOT get compound part visibility dobj get part ae IN if IN p NN string NN buffer NN root ROOT buffer compound buffer string sb NN parts NNS p NN sb NN append IN root ROOT sb dep sb append line NN separator NN root ROOT separator compound separator line string NN assend IN generate VB association NN end NN root ROOT generate compound end association dobj generate end ae IN if IN assend NN length NN root ROOT length compound length assend string NN comment NN generate VB constraint NN enriched JJ doc NN comment NN root ROOT generate compound comment constraint amod comment enriched compound comment doc dobj generate comment a DT ae IN if IN comment NN length NN root ROOT length compound length comment sb NN append IN root ROOT sb dep sb append comment NN both comment and assend ends with simple newline root ROOT ends cc preconj comment both nsubj ends comment cc comment and conj and comment assend nsubj ends assend case newline with amod newline simple nmod with ends newline sb NN append IN root ROOT sb dep sb append indent JJ append IN assend IN string NN tv NN generate VB tagged VBN values NNS root ROOT generate amod values tagged dobj generate values a DT all DT but CC doc NN tags NNS root ROOT tags dep tags all cc all but conj but all doc dep tags doc if IN tv NN null JJ tv NN length NN root ROOT length compound length tv sb NN append IN root ROOT sb dep sb append indent JJ append IN tv NN end generated ANTONYM ANTONYM end parts ANTONYM ANTONYM public private ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml-cpp/src/org/argouml/language/cpp/generator/GeneratorCpp.java,2348
COMMENT action key for settings DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME action settings INIT settings EXPR settings action key for settings root ROOT key compound key action case settings for nmod for key settings public NN static JJ final JJ string NN action NN settings NNS root ROOT settings compound settings action settings NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,190
COMMENT in DECL STMT SPECIFIER public TYPE final static int SPECIFIER final SPECIFIER static NAME int NAME is INIT x c EXPR x c in public NN final JJ static JJ int NN is VBZ x CC c NN root ROOT c compound c x x c SYNONYM SYNONYM,0,N/A,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/enums/TokenID.java,160
COMMENT logger DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME verbose docs logger private JJ boolean NN verbose JJ docs NNS root ROOT docs amod docs verbose,1,E1,ArgoUML0.34/argouml-java/src/org/argouml/language/java/generator/GeneratorJava.java,87
DECL STMT SPECIFIER public TYPE block statement NAME block statement NAME statements INIT new block statement EXPR new block statement CALL block statement NAME block statement ARGUMENT LIST public NN block NN statement NN root ROOT statement compound statement block statements NNS new JJ block NN statement NN root ROOT statement compound statement block,1,E1,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/statements/IfStatement.java,16
FUNCTION SPECIFIER public TYPE list control data NAME list control data NAME list ARGUMENT LIST ARGUMENT NAME control data NAME get properties PARAMETER LIST BLOCK RETURN return collections unmodifiable list properties EXPR collections unmodifiable list properties CALL collections unmodifiable list properties NAME collections unmodifiable list NAME collections NAME unmodifiable list ARGUMENT LIST ARGUMENT EXPR properties NAME properties public NN list NN control NN data NNS root ROOT data compound data control get VB properties NNS root ROOT get dobj get properties return NN collections NNS unmodifiable JJ list NN root ROOT list compound list collections amod list unmodifiable properties NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/model/PanelData.java,61
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR IF if modifiers modifier empty this trace modifiers this modifiers sb sb append CONDITION modifiers modifier empty EXPR modifiers modifier empty NAME modifiers NAME modifier empty NAME modifier NAME empty THEN this trace modifiers this modifiers sb sb append BLOCK EXPR this trace modifiers this modifiers sb CALL this trace modifiers this modifiers sb NAME this trace modifiers NAME this NAME trace modifiers ARGUMENT LIST ARGUMENT EXPR this modifiers NAME this modifiers NAME this NAME modifiers ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR name to source sb CALL name to source sb NAME name to source NAME name NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb IF if arguments null sb append string comma for int i i arguments size i sb append comma arguments get i to source sb comma sb append CONDITION arguments null EXPR arguments null NAME arguments THEN sb append string comma for int i i arguments size i sb append comma arguments get i to source sb comma sb append BLOCK EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR DECL STMT TYPE string NAME string NAME comma INIT EXPR FOR for int i i arguments size i sb append comma arguments get i to source sb comma CONTROL int i i arguments size i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i arguments size EXPR i arguments size NAME i CALL arguments size NAME arguments size NAME arguments NAME size ARGUMENT LIST INCR i EXPR i NAME i BLOCK EXPR sb append comma CALL sb append comma NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR comma NAME comma EXPR arguments get i to source sb CALL arguments get i NAME arguments get NAME arguments NAME get ARGUMENT LIST ARGUMENT EXPR i NAME i CALL to source sb NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR comma NAME comma EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN sb NN append IN root ROOT sb dep sb append if IN modifiers NNS modifier NN empty JJ root ROOT empty nmod npmod empty modifier this DT trace NN modifiers NNS this DT modifiers NNS sb NN sb NN append IN root ROOT sb dep sb append name NN to TO source NN root ROOT name case source to nmod to name source sb NN if IN arguments NNS null JJ sb NN append IN root ROOT sb dep sb append string NN comma NN for IN int NN i LS i LS arguments NNS size NN root ROOT size compound size arguments i LS sb NN append IN root ROOT sb dep sb append comma NN arguments NNS get VBP root ROOT get nsubj get arguments i LS to TO source NN root ROOT source case source to sb NN comma NN sb NN append IN root ROOT sb dep sb append sb NN append IN root ROOT sb dep sb append,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/structural/AttributeNode.java,26
COMMENT these strings match the xml element names in the argo tee exactly DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string settings INIT settings EXPR settings these strings match the xml element names in the argo tee exactly root ROOT match det strings these nsubj match strings det names the compound names xml compound names element dobj match names case tee in det tee the compound tee argo nmod in names tee advmod match exactly these strings match the xml element names in the argo tee exactly root ROOT match det strings these nsubj match strings det names the compound names xml compound names element dobj match names case tee in det tee the compound tee argo nmod in names tee advmod match exactly private JJ static JJ final JJ string NN string NN settings NNS root ROOT settings compound settings string settings NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/persistence/ArgoTokenTable.java,70
COMMENT in in bb DECL STMT SPECIFIER private TYPE char buffer NAME char buffer NAME out cb INIT char buffer allocate buffer size EXPR char buffer allocate buffer size CALL char buffer allocate buffer size NAME char buffer allocate NAME char buffer NAME allocate ARGUMENT LIST ARGUMENT EXPR buffer size NAME buffer size in in bb root ROOT bb case bb in case bb in private JJ char NN buffer NN root ROOT buffer compound buffer char out IN cb NN root ROOT cb case cb out char NN buffer NN allocate VBP root ROOT allocate compound buffer char nsubj allocate buffer buffer NN size NN root ROOT size compound size buffer,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/persistence/UmlFilePersister.java,686
COMMENT action key for open goals DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME action open goals INIT open goals EXPR open goals action key for open goals root ROOT key compound key action case goals for amod goals open nmod for key goals public NN static JJ final JJ string NN action NN open JJ goals NNS root ROOT goals compound goals action amod goals open open JJ goals NNS root ROOT goals amod goals open open static ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,256
COMMENT the location to drop the node DECL STMT SPECIFIER private TYPE point NAME point NAME location the location to drop the node root ROOT location det location the mark drop to acl to location drop det node the dobj drop node private JJ point NN location NN drop point ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/ui/AddExistingNodeCommand.java,73
COMMENT get the value specification return FUNCTION SPECIFIER public TYPE object NAME object NAME object INDEX NAME get value PARAMETER LIST BLOCK RETURN return model get data types helper get value specification values get expression EXPR model get data types helper get value specification values get expression CALL model get data types helper NAME model get data types helper NAME model NAME get data types helper ARGUMENT LIST CALL get value specification values get expression NAME get value specification values ARGUMENT LIST ARGUMENT EXPR get expression CALL get expression NAME get expression ARGUMENT LIST get the value specification root ROOT get det value the xcomp get value dep value specification return public NN object NN get VB value NN root ROOT get dobj get value return NN model NN get VBP data NNS types NNS helper NN root ROOT get nsubj get model compound types data dobj get types dep types helper get VB value NN specification NN values NNS root ROOT get compound values value compound values specification dobj get values get VB expression NN root ROOT get dobj get expression get return ANTONYM ANTONYM,1,A4,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/UMLValueSpecificationModel.java,153
DECL STMT SPECIFIER public SPECIFIER static TYPE long NAME long NAME global attribute mods INIT assembly EXPR assembly NAME assembly public NN static JJ long RB global JJ attribute NN mods NNS root ROOT mods amod mods global compound mods attribute assembly NN,1,E1,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/enums/Modifier.java,59
COMMENT return the fig node strategy offered by this profile if any returns code null code if this profile has no fig node strategy FUNCTION SPECIFIER public TYPE fig node strategy NAME fig node strategy NAME get figure strategy PARAMETER LIST BLOCK RETURN return null EXPR null return the fig node strategy offered by this profile if any returns root ROOT return det strategy the compound strategy fig compound strategy node dobj return strategy acl strategy offered case profile by det profile this nmod by offered profile case returns if det returns any nmod if return returns return the fig node strategy offered by this profile if any returns root ROOT return det strategy the compound strategy fig compound strategy node dobj return strategy acl strategy offered case profile by det profile this nmod by offered profile case returns if det returns any nmod if return returns code null code if this profile has no fig node strategy root ROOT code compound code code amod code null mark has if det profile this nsubj has profile dep code has neg strategy no compound strategy fig compound strategy node dobj has strategy public NN fig NN node NN strategy NN root ROOT strategy compound strategy fig compound strategy node get VB figure NN strategy NN root ROOT get compound strategy figure dobj get strategy return NN null JJ any no ANTONYM ANTONYM return has ANTONYM ANTONYM returns has ANTONYM ANTONYM,1,B1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/profile/Profile.java,135
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR variable to source sb CALL variable to source sb NAME variable to source NAME variable NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR SWITCH switch operator case token id equal sb append break case token id plus equal sb append break case token id minus equal sb append break case token id star equal sb append break case token id slash equal sb append break case token id percent equal sb append break case token id b and equal sb append break case token id b or equal sb append break case token id b xor equal sb append break case token id shift left equal sb append break case token id shift right equal sb append break CONDITION operator EXPR operator NAME operator BLOCK CASE case token id equal EXPR token id equal NAME token id equal NAME token id NAME equal EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case token id plus equal EXPR token id plus equal NAME token id plus equal NAME token id NAME plus equal EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case token id minus equal EXPR token id minus equal NAME token id minus equal NAME token id NAME minus equal EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case token id star equal EXPR token id star equal NAME token id star equal NAME token id NAME star equal EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case token id slash equal EXPR token id slash equal NAME token id slash equal NAME token id NAME slash equal EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case token id percent equal EXPR token id percent equal NAME token id percent equal NAME token id NAME percent equal EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case token id b and equal EXPR token id b and equal NAME token id b and equal NAME token id NAME b and equal EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case token id b or equal EXPR token id b or equal NAME token id b or equal NAME token id NAME b or equal EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case token id b xor equal EXPR token id b xor equal NAME token id b xor equal NAME token id NAME b xor equal EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case token id shift left equal EXPR token id shift left equal NAME token id shift left equal NAME token id NAME shift left equal EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case token id shift right equal EXPR token id shift right equal NAME token id shift right equal NAME token id NAME shift right equal EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR right side to source sb CALL right side to source sb NAME right side to source NAME right side NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN variable JJ to TO source NN root ROOT variable case source to nmod to variable source sb NN sb NN append IN root ROOT sb dep sb append switch NN operator NN case NN token JJ id NN equal JJ root ROOT equal amod id token nsubj equal id sb NN append IN root ROOT sb dep sb append break NN case NN token JJ id NN plus CC equal JJ root ROOT id amod id token cc id plus conj plus id equal sb NN append IN root ROOT sb dep sb append break NN case NN token JJ id NN minus CC equal JJ root ROOT id amod id token cc id minus conj minus id equal sb NN append IN root ROOT sb dep sb append break NN case NN token JJ id NN star NN equal JJ root ROOT equal amod star token compound star id nsubj equal star sb NN append IN root ROOT sb dep sb append break NN case NN token JJ id NN slash VBP equal JJ root ROOT slash amod id token nsubj slash id xcomp slash equal sb NN append IN root ROOT sb dep sb append break NN case NN token JJ id NN percent NN equal JJ root ROOT equal amod percent token compound percent id nsubj equal percent sb NN append IN root ROOT sb dep sb append break NN case NN token JJ id NN b NN and CC equal JJ root ROOT b amod b token compound b id cc b and conj and b equal sb NN append IN root ROOT sb dep sb append break NN case NN token JJ id NN b NN or CC equal JJ root ROOT b amod b token compound b id cc b or conj or b equal sb NN append IN root ROOT sb dep sb append break NN case NN token JJ id NN b NN xor NN equal JJ root ROOT equal amod xor token compound xor id compound xor b nsubj equal xor sb NN append IN root ROOT sb dep sb append break NN case NN token JJ id NN shift NN left VBD equal JJ root ROOT left amod shift token compound shift id nsubj left shift xcomp left equal sb NN append IN root ROOT sb dep sb append break NN case NN token JJ id NN shift VB right RB equal JJ root ROOT shift amod id token nsubj shift id advmod equal right xcomp shift equal sb NN append IN root ROOT sb dep sb append break NN sb NN append IN root ROOT sb dep sb append right JJ side NN to TO source NN root ROOT side amod side right case source to nmod to side source sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/nodes/expressions/AssignmentExpression.java,30
DECL STMT SPECIFIER private TYPE j check box NAME j check box NAME layout diagrams private JJ j NN check NN box NN root ROOT box compound box j compound box check layout NN diagrams NNS root ROOT diagrams compound diagrams layout,1,E1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/reveng/Import.java,131
COMMENT get the components for the settings tab return a list of link gui settings tab interface FUNCTION SPECIFIER public SPECIFIER final TYPE list gui settings tab interface NAME list gui settings tab interface NAME list ARGUMENT LIST ARGUMENT NAME gui settings tab interface NAME get settings tabs PARAMETER LIST BLOCK RETURN return collections unmodifiable list settings tabs EXPR collections unmodifiable list settings tabs CALL collections unmodifiable list settings tabs NAME collections unmodifiable list NAME collections NAME unmodifiable list ARGUMENT LIST ARGUMENT EXPR settings tabs NAME settings tabs get the components for the settings tab root ROOT get det components the dobj get components case tab for det tab the compound tab settings nmod for components tab return a list of link gui settings tab interface root ROOT return det list a dobj return list case interface of compound interface link compound interface gui compound interface settings compound interface tab nmod of list interface public NN final JJ list NN gui NN settings NNS tab NN interface NN root ROOT interface compound interface gui compound interface settings compound interface tab get VB settings NNS tabs NNS root ROOT get compound tabs settings dobj get tabs return NN collections NNS unmodifiable JJ list NN root ROOT list compound list collections amod list unmodifiable settings NNS tabs NNS root ROOT tabs compound tabs settings get return ANTONYM ANTONYM get settings ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/GUI.java,114
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR sb append unchecked CALL sb append unchecked NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR unchecked EXPR expression to source sb CALL expression to source sb NAME expression to source NAME expression NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN sb NN append IN root ROOT sb dep sb append unchecked JJ expression NN to TO source NN root ROOT expression case source to nmod to expression source sb NN sb NN append IN root ROOT sb dep sb append,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/nodes/expressions/UncheckedExpression.java,22
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR sb append string map get op CALL sb append string map get op NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR string map get op CALL string map get op NAME string map get NAME string map NAME get ARGUMENT LIST ARGUMENT EXPR op NAME op EXPR child to source sb CALL child to source sb NAME child to source NAME child NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN sb NN append IN root ROOT sb dep sb append string NN map NN get VB root ROOT get compound map string nsubj get map op NN child NN to TO source NN root ROOT child case source to nmod to child source sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/nodes/expressions/UnaryExpression.java,47
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR name to source sb CALL name to source sb NAME name to source NAME name NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR statements get to source sb CALL statements get NAME statements get NAME statements NAME get ARGUMENT LIST ARGUMENT EXPR CALL to source sb NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN name NN to TO source NN root ROOT name case source to nmod to name source sb NN sb NN append IN root ROOT sb dep sb append statements NNS get VBP root ROOT get nsubj get statements to TO source NN root ROOT source case source to sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/statements/LabeledStatement.java,19
COMMENT make sure any pending edits are flushed FUNCTION SPECIFIER private TYPE void NAME void NAME stop editing PARAMETER LIST BLOCK IF if table is editing table cell editor ce table get cell editor try if ce null ce stop cell editing ce cancel cell editing catch invalid element exception e most likely cause of this is that someone deleted our target with the event pump turned off so we didn t get notification nothing we can do about it now and we are changing targets anyway so just log it log warn failed to cancel editing model element deleted while edit in progress CONDITION table is editing EXPR table is editing CALL table is editing NAME table is editing NAME table NAME is editing ARGUMENT LIST THEN table cell editor ce table get cell editor try if ce null ce stop cell editing ce cancel cell editing catch invalid element exception e most likely cause of this is that someone deleted our target with the event pump turned off so we didn t get notification nothing we can do about it now and we are changing targets anyway so just log it log warn failed to cancel editing model element deleted while edit in progress BLOCK DECL STMT TYPE table cell editor NAME table cell editor NAME ce INIT table get cell editor EXPR table get cell editor CALL table get cell editor NAME table get cell editor NAME table NAME get cell editor ARGUMENT LIST TRY try if ce null ce stop cell editing ce cancel cell editing catch invalid element exception e most likely cause of this is that someone deleted our target with the event pump turned off so we didn t get notification nothing we can do about it now and we are changing targets anyway so just log it log warn failed to cancel editing model element deleted while edit in progress BLOCK IF if ce null ce stop cell editing ce cancel cell editing CONDITION ce null ce stop cell editing EXPR ce null ce stop cell editing NAME ce CALL ce stop cell editing NAME ce stop cell editing NAME ce NAME stop cell editing ARGUMENT LIST THEN ce cancel cell editing BLOCK EXPR ce cancel cell editing CALL ce cancel cell editing NAME ce cancel cell editing NAME ce NAME cancel cell editing ARGUMENT LIST CATCH catch invalid element exception e most likely cause of this is that someone deleted our target with the event pump turned off so we didn t get notification nothing we can do about it now and we are changing targets anyway so just log it log warn failed to cancel editing model element deleted while edit in progress PARAMETER LIST invalid element exception e PARAMETER invalid element exception e TYPE invalid element exception NAME invalid element exception NAME e BLOCK COMMENT most likely cause of this is that someone deleted our COMMENT target with the event pump turned off so we didn t COMMENT get notification nothing we can do about it now and COMMENT we are changing targets anyway so just log it EXPR log warn failed to cancel editing model element deleted while edit in progress CALL log warn failed to cancel editing model element deleted while edit in progress NAME log warn NAME log NAME warn ARGUMENT LIST ARGUMENT EXPR failed to cancel editing model element deleted while edit in progress make sure any pending edits are flushed root ROOT make xcomp make sure det edits any amod edits pending nsubjpass flushed edits auxpass flushed are ccomp sure flushed private JJ void NN stop VB editing NN root ROOT stop dobj stop editing if IN table NN is VBZ editing NN root ROOT editing nsubj editing table cop editing is table NN cell NN editor NN root ROOT editor compound editor table compound editor cell ce NN table NN get VB cell NN editor NN root ROOT get nsubj get table compound editor cell dobj get editor try VB if IN ce NN null JJ ce NN stop NN cell NN editing NN root ROOT editing compound editing ce compound editing stop compound editing cell ce NN cancel VB cell NN editing NN root ROOT cancel nsubj cancel ce compound editing cell dobj cancel editing catch NN invalid JJ element NN exception NN root ROOT exception amod exception invalid compound exception element e SYM most likely cause of this is that someone deleted our root ROOT is advmod likely most amod cause likely nsubj is cause case this of nmod of cause this mark deleted that nsubj deleted someone ccomp is deleted dobj deleted our target with the event pump turned off so we didn t root ROOT turned nsubj turned target case pump with det pump the compound pump event nmod with target pump compound prt turned off mark didn so nsubj didn we advcl so turned didn dobj didn t get notification nothing we can do about it now and root ROOT get compound nothing notification dobj get nothing nsubj do we aux do can acl relcl nothing do case it about nmod about do it advmod do now cc get and get notification nothing we can do about it now and root ROOT get compound nothing notification dobj get nothing nsubj do we aux do can acl relcl nothing do case it about nmod about do it advmod do now cc get and we are changing targets anyway so just log it root ROOT changing nsubj changing we aux changing are dobj changing targets advmod log anyway advmod log so advmod log just advcl changing log dobj log it log NN warn VBP root ROOT warn nsubj warn log failed VBD to TO cancel VB editing NN model NN element NN deleted VBN while IN edit VB in IN progress NN make are ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/ui/TabTaggedValues.java,202
FUNCTION SPECIFIER public TYPE collection NAME collection NAME get attributes inh PARAMETER LIST object classifier PARAMETER object classifier TYPE object NAME object NAME classifier BLOCK RETURN return impl get attributes inh classifier EXPR impl get attributes inh classifier CALL impl get attributes inh classifier NAME impl get attributes inh NAME impl NAME get attributes inh ARGUMENT LIST ARGUMENT EXPR classifier NAME classifier public NN collection NN get VB attributes NNS inh VBP root ROOT inh csubj inh get dobj get attributes object NN classifier NN return NN impl NN get VB attributes NNS inh VBP root ROOT inh nsubj inh impl acl impl get dobj get attributes classifier NN,0,N/A,ArgoUML0.34/argouml/src/argouml-core-model/src/org/argouml/model/AbstractCoreHelperDecorator.java,122
COMMENT finds all operations in a given collection of classifiers with the given name and the given number of parameters if no operation is found one is created in the first given classifier the applicable operations are returned param classifiers the collection of classifiers to search for operations param name the name of the operation to be found param params the number of parameters of the operation to be found return a list of the sought operations throws parse exception if the operation syntax can not be parsed FUNCTION SPECIFIER private TYPE list NAME list NAME get operation PARAMETER LIST collection classifiers string name int params PARAMETER collection classifiers TYPE collection NAME collection NAME classifiers PARAMETER string name TYPE string NAME string NAME name PARAMETER int params TYPE int NAME int NAME params THROWS throws parse exception ARGUMENT EXPR parse exception NAME parse exception BLOCK DECL STMT TYPE list object NAME list object NAME list ARGUMENT LIST ARGUMENT NAME object NAME operations INIT new array list object EXPR new array list object CALL array list object NAME array list object NAME array list ARGUMENT LIST ARGUMENT NAME object ARGUMENT LIST IF if name null name length return operations CONDITION name null name length EXPR name null name length NAME name CALL name length NAME name length NAME name NAME length ARGUMENT LIST THEN return operations BLOCK RETURN return operations EXPR operations NAME operations FOR for object clf classifiers collection oe model get facade get features clf for object operation oe if model get facade is a operation operation continue if name equals model get facade get name operation continue if params count parameters operation continue operations add operation CONTROL object clf classifiers INIT object clf classifiers TYPE object NAME object NAME clf RANGE classifiers EXPR classifiers NAME classifiers BLOCK DECL STMT TYPE collection NAME collection NAME oe INIT model get facade get features clf EXPR model get facade get features clf CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get features clf NAME get features ARGUMENT LIST ARGUMENT EXPR clf NAME clf FOR for object operation oe if model get facade is a operation operation continue if name equals model get facade get name operation continue if params count parameters operation continue operations add operation CONTROL object operation oe INIT object operation oe TYPE object NAME object NAME operation RANGE oe EXPR oe NAME oe BLOCK IF if model get facade is a operation operation continue CONDITION model get facade is a operation operation EXPR model get facade is a operation operation CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL is a operation operation NAME is a operation ARGUMENT LIST ARGUMENT EXPR operation NAME operation THEN continue BLOCK CONTINUE continue IF if name equals model get facade get name operation continue CONDITION name equals model get facade get name operation EXPR name equals model get facade get name operation CALL name equals model get facade get name operation NAME name equals NAME name NAME equals ARGUMENT LIST ARGUMENT EXPR model get facade get name operation CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get name operation NAME get name ARGUMENT LIST ARGUMENT EXPR operation NAME operation THEN continue BLOCK CONTINUE continue IF if params count parameters operation continue CONDITION params count parameters operation EXPR params count parameters operation NAME params CALL count parameters operation NAME count parameters ARGUMENT LIST ARGUMENT EXPR operation NAME operation THEN continue BLOCK CONTINUE continue EXPR operations add operation CALL operations add operation NAME operations add NAME operations NAME add ARGUMENT LIST ARGUMENT EXPR operation NAME operation IF if operations size return operations CONDITION operations size EXPR operations size CALL operations size NAME operations size NAME operations NAME size ARGUMENT LIST THEN return operations BLOCK RETURN return operations EXPR operations NAME operations DECL STMT TYPE iterator NAME iterator NAME it INIT classifiers iterator EXPR classifiers iterator CALL classifiers iterator NAME classifiers iterator NAME classifiers NAME iterator ARGUMENT LIST IF if it has next string builder expr new string builder name int i for i i params i if i expr append expr append param i expr append jaap branderhorst added next lines to link parameters and operations to the figs that represent them object cls it next object return type project manager get manager get current project get default return type object op model get core factory build operation cls return type new operation notation uml op parse operation expr to string op operations add op CONDITION it has next EXPR it has next CALL it has next NAME it has next NAME it NAME has next ARGUMENT LIST THEN string builder expr new string builder name int i for i i params i if i expr append expr append param i expr append jaap branderhorst added next lines to link parameters and operations to the figs that represent them object cls it next object return type project manager get manager get current project get default return type object op model get core factory build operation cls return type new operation notation uml op parse operation expr to string op operations add op BLOCK DECL STMT TYPE string builder NAME string builder NAME expr INIT new string builder name EXPR new string builder name CALL string builder name NAME string builder ARGUMENT LIST ARGUMENT EXPR name NAME name DECL STMT TYPE int NAME int NAME i FOR for i i params i if i expr append expr append param i CONTROL i i params i INIT i EXPR i NAME i CONDITION i params EXPR i params NAME i NAME params INCR i EXPR i NAME i BLOCK IF if i expr append CONDITION i EXPR i NAME i THEN expr append BLOCK EXPR expr append CALL expr append NAME expr append NAME expr NAME append ARGUMENT LIST ARGUMENT EXPR EXPR expr append param i CALL expr append param i NAME expr append NAME expr NAME append ARGUMENT LIST ARGUMENT EXPR param i NAME i EXPR expr append CALL expr append NAME expr append NAME expr NAME append ARGUMENT LIST ARGUMENT EXPR COMMENT jaap branderhorst added next lines to link COMMENT parameters and operations to the figs that represent COMMENT them DECL STMT TYPE object NAME object NAME cls INIT it next EXPR it next CALL it next NAME it next NAME it NAME next ARGUMENT LIST DECL STMT TYPE object NAME object NAME return type INIT project manager get manager get current project get default return type EXPR project manager get manager get current project get default return type CALL project manager get manager NAME project manager get manager NAME project manager NAME get manager ARGUMENT LIST CALL get current project NAME get current project ARGUMENT LIST CALL get default return type NAME get default return type ARGUMENT LIST DECL STMT TYPE object NAME object NAME op INIT model get core factory build operation cls return type EXPR model get core factory build operation cls return type CALL model get core factory NAME model get core factory NAME model NAME get core factory ARGUMENT LIST CALL build operation cls return type NAME build operation ARGUMENT LIST ARGUMENT EXPR cls NAME cls ARGUMENT EXPR return type NAME return type EXPR new operation notation uml op parse operation expr to string op CALL operation notation uml op NAME operation notation uml ARGUMENT LIST ARGUMENT EXPR op NAME op CALL parse operation expr to string op NAME parse operation ARGUMENT LIST ARGUMENT EXPR expr to string CALL expr to string NAME expr to string NAME expr NAME to string ARGUMENT LIST ARGUMENT EXPR op NAME op EXPR operations add op CALL operations add op NAME operations add NAME operations NAME add ARGUMENT LIST ARGUMENT EXPR op NAME op RETURN return operations EXPR operations NAME operations finds all operations in a given collection of classifiers root ROOT finds det operations all dobj finds operations case collection in det collection a amod collection given nmod in finds collection case classifiers of nmod of collection classifiers with the given name root ROOT name case name with det name the amod name given and the given number of parameters root ROOT and det number the amod number given dep and number case parameters of nmod of number parameters if no operation is found one is created in the first given classifier root ROOT found mark found if neg operation no nsubjpass found operation auxpass found is nsubjpass created one auxpass created is ccomp found created case classifier in det classifier the amod classifier first amod classifier given nmod in created classifier the applicable operations are returned root ROOT returned det operations the amod operations applicable nsubjpass returned operations auxpass returned are param classifiers the collection of classifiers to search for operations root ROOT classifiers compound classifiers param det collection the dep classifiers collection case classifiers of nmod of collection classifiers mark search to acl to collection search case operations for nmod for search operations param name the name of the operation to be found root ROOT name compound name param det name the dep name name case operation of det operation the nmod of name operation mark found to auxpass found be acl to name found param params the number of parameters of the operation to be found root ROOT params nsubj params param det number the dobj params number nsubjpass xsubj found number case parameters of nmod of number parameters case operation of det operation the nmod of parameters operation mark found to auxpass found be xcomp params found return a list of the sought operations root ROOT return det list a dobj return list case operations of det operations the amod operations sought nmod of list operations throws parse exception if the operation syntax can not be parsed root ROOT throws compound exception parse dobj throws exception mark parsed if det syntax the compound syntax operation nsubjpass parsed syntax aux parsed can neg parsed not auxpass parsed be advcl if throws parsed private JJ list NN get VB operation NN root ROOT get dobj get operation collection NN classifiers NNS string NN name NN int NN params NNS throws VBZ parse VB exception NN root ROOT parse dobj parse exception list NN object NN operations NNS new JJ array NN list NN root ROOT list compound list array object NN if IN name NN null JJ name NN length NN root ROOT length compound length name return NN operations NNS for IN object NN clf NN classifiers NNS collection NN oe NN model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB features NNS root ROOT get dobj get features clf NN for IN object NN operation NN oe NN if IN model NN get VB facade NN root ROOT get nsubj get model dobj get facade is VBZ a DT operation NN root ROOT operation cop operation is det operation a operation NN continue VB if IN name NN equals VBZ root ROOT equals nsubj equals name model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB name NN root ROOT get dobj get name operation NN continue VB if IN params NNS count NN parameters NNS root ROOT parameters compound parameters count operation NN continue VB operations NNS add VBP root ROOT add nsubj add operations operation NN if IN operations NNS size NN root ROOT size compound size operations return NN operations NNS iterator NN it PRP classifiers NNS iterator VBP root ROOT iterator nsubj iterator classifiers if IN it PRP has VBZ next JJ root ROOT has nsubj has it advmod has next string NN builder NN root ROOT builder compound builder string expr NN new JJ string NN builder NN root ROOT builder compound builder string name NN int NN i LS for IN i LS i LS params NNS i LS if IN i LS expr NN append NN root ROOT append compound append expr expr NN append NN root ROOT append compound append expr param NN i LS expr NN append NN root ROOT append compound append expr jaap branderhorst added next lines to link root ROOT added compound branderhorst jaap nsubj added branderhorst amod lines next dobj added lines case link to nmod to added link parameters and operations to the figs that represent root ROOT parameters cc parameters and conj and parameters operations case figs to det figs the nmod to parameters figs nsubj represent figs ref figs that acl relcl figs represent them object NN cls NNS it PRP next IN root ROOT it det it next object NN return NN type NN root ROOT type compound type return project NN manager NN get VB manager NN root ROOT get compound manager project nsubj get manager dobj get manager get VB current JJ project NN root ROOT get amod project current dobj get project get VB default NN return NN type NN root ROOT get compound type default compound type return dobj get type object NN op NN model NN get VB core NN factory NN root ROOT model acl model get compound factory core dobj get factory build VB operation NN root ROOT build dobj build operation cls NNS return NN type NN root ROOT type compound type return new JJ operation NN notation NN uml NN root ROOT uml compound uml operation compound uml notation op NN parse VB operation NN root ROOT parse dobj parse operation expr NN to TO string NN root ROOT expr case string to nmod to expr string op NN operations NNS add VBP root ROOT add nsubj add operations op NN return NN operations NNS all no ANTONYM ANTONYM created throws ANTONYM ANTONYM finds name ANTONYM ANTONYM found are ANTONYM ANTONYM found be ANTONYM ANTONYM given created ANTONYM ANTONYM given found ANTONYM ANTONYM given name ANTONYM ANTONYM is found ANTONYM ANTONYM name are ANTONYM ANTONYM name be ANTONYM ANTONYM name created ANTONYM ANTONYM name found ANTONYM ANTONYM name is ANTONYM ANTONYM name number ANTONYM ANTONYM name number ANTONYM ANTONYM name throws ANTONYM ANTONYM number return ANTONYM ANTONYM return throws ANTONYM ANTONYM returned throws ANTONYM ANTONYM,1,A4,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/AbstractMessageNotationUml.java,1691
DECL STMT SPECIFIER public TYPE expression list NAME expression list NAME rank specifier public NN expression NN list NN root ROOT list compound list expression rank NN specifier NN root ROOT specifier compound specifier rank,1,D1,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/nodes/expressions/ArrayCreationExpression.java,18
FUNCTION SPECIFIER public TYPE object NAME object NAME set body PARAMETER LIST object handle PARAMETER object handle TYPE object NAME object NAME handle BLOCK DECL STMT TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME bodies INIT null EXPR null IF if handle instanceof opaque expression bodies opaque expression handle get bodies else if handle instanceof opaque behavior bodies opaque behavior handle get bodies else throw new illegal argument exception handle must be instance of opaque expression or opaque behavior non nls CONDITION handle instanceof opaque expression EXPR handle instanceof opaque expression NAME handle NAME opaque expression THEN bodies opaque expression handle get bodies BLOCK EXPR bodies opaque expression handle get bodies NAME bodies NAME opaque expression NAME handle CALL get bodies NAME get bodies ARGUMENT LIST ELSEIF else if handle instanceof opaque behavior bodies opaque behavior handle get bodies IF if handle instanceof opaque behavior bodies opaque behavior handle get bodies CONDITION handle instanceof opaque behavior EXPR handle instanceof opaque behavior NAME handle NAME opaque behavior THEN bodies opaque behavior handle get bodies BLOCK EXPR bodies opaque behavior handle get bodies NAME bodies NAME opaque behavior NAME handle CALL get bodies NAME get bodies ARGUMENT LIST ELSE else throw new illegal argument exception handle must be instance of opaque expression or opaque behavior non nls BLOCK THROW throw new illegal argument exception handle must be instance of opaque expression or opaque behavior EXPR new illegal argument exception handle must be instance of opaque expression or opaque behavior CALL illegal argument exception handle must be instance of opaque expression or opaque behavior NAME illegal argument exception ARGUMENT LIST ARGUMENT EXPR handle must be instance of opaque expression or opaque behavior COMMENT non nls COMMENT todo support more than one body language IF if bodies size throw new illegal state exception only one body lang supported non nls CONDITION bodies size EXPR bodies size CALL bodies size NAME bodies size NAME bodies NAME size ARGUMENT LIST THEN throw new illegal state exception only one body lang supported non nls BLOCK THROW throw new illegal state exception only one body lang supported EXPR new illegal state exception only one body lang supported CALL illegal state exception only one body lang supported NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR only one body lang supported COMMENT non nls EXPR bodies clear CALL bodies clear NAME bodies clear NAME bodies NAME clear ARGUMENT LIST EXPR bodies add body CALL bodies add body NAME bodies add NAME bodies NAME add ARGUMENT LIST ARGUMENT EXPR body NAME body RETURN return handle EXPR handle NAME handle public NN object NN set VBN body NN root ROOT set dobj set body object NN handle VB list NN string NN bodies NNS null JJ if IN handle VB instanceof NN opaque JJ expression NN root ROOT expression amod expression opaque bodies NNS opaque JJ expression NN root ROOT expression amod expression opaque handle VB get VB bodies NNS root ROOT get dobj get bodies else RB if IN handle VB instanceof NN opaque JJ behavior NN root ROOT behavior amod behavior opaque bodies NNS opaque JJ behavior NN root ROOT behavior amod behavior opaque handle VB get VB bodies NNS root ROOT get dobj get bodies else RB throw VB new JJ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument handle VB must MD be VB instance NN of IN opaque JJ expression NN root ROOT expression amod expression opaque or CC opaque JJ behavior NN root ROOT behavior amod behavior opaque non JJ nls NNS root ROOT nls amod nls non todo support more than one body language root ROOT support compound support todo advmod one more mwe more than nummod language one compound language body dobj support language if IN bodies NNS size NN root ROOT size compound size bodies throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state only RB one CD body NN lang NN root ROOT lang compound lang body supported VBN non JJ nls NNS root ROOT nls amod nls non bodies NNS clear JJ root ROOT clear nsubj clear bodies bodies NNS add VBP root ROOT add nsubj add bodies body NN return NN handle VB,1,A3,ArgoUML0.34/argouml/src/argouml-core-model-euml/src/org/argouml/model/euml/DataTypesHelperEUMLImpl.java,127
COMMENT action key for perspective info DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME action perspective config INIT perspective config EXPR perspective config action key for perspective info root ROOT key compound key action case info for compound info perspective nmod for key info public NN static JJ final JJ string NN action NN perspective NN config NN root ROOT config compound config action compound config perspective perspective NN config NN root ROOT config compound config perspective,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,187
COMMENT these strings match the xml element names in the argo tee exactly DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string showassociationnames INIT showassociationnames EXPR showassociationnames these strings match the xml element names in the argo tee exactly root ROOT match det strings these nsubj match strings det names the compound names xml compound names element dobj match names case tee in det tee the compound tee argo nmod in names tee advmod match exactly these strings match the xml element names in the argo tee exactly root ROOT match det strings these nsubj match strings det names the compound names xml compound names element dobj match names case tee in det tee the compound tee argo nmod in names tee advmod match exactly private JJ static JJ final JJ string NN string NN showassociationnames NNS root ROOT showassociationnames compound showassociationnames string showassociationnames NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/persistence/ArgoTokenTable.java,74
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/statements/WhileStatement.java,17
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR sb append this CALL sb append this NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR this public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN sb NN append IN root ROOT sb dep sb append this DT,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/nodes/expressions/ThisAccessExpression.java,15
COMMENT indicates if the user wants to see the types and parameters of attributes and operations DECL STMT SPECIFIER public SPECIFIER static TYPE final configuration key SPECIFIER final NAME configuration key NAME key show types INIT configuration make key notation show types EXPR configuration make key notation show types CALL configuration make key notation show types NAME configuration make key NAME configuration NAME make key ARGUMENT LIST ARGUMENT EXPR notation ARGUMENT EXPR show ARGUMENT EXPR types indicates if the user wants to see the types and parameters root ROOT indicates mark wants if det user the nsubj wants user nsubj xsubj see user advcl if indicates wants mark see to xcomp wants see det types the dobj see types cc types and dobj see parameters conj and types parameters of attributes and operations root ROOT attributes case attributes of cc attributes and conj and attributes operations public NN static JJ final JJ configuration NN key NN root ROOT key compound key configuration key JJ show NN types NNS root ROOT types amod types key compound types show configuration NN make VBP key NN root ROOT make nsubj make configuration dobj make key notation NN show NN types NNS see key ANTONYM ANTONYM see show ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/Notation.java,159
COMMENT validate every association for the given relation param relation FUNCTION SPECIFIER private TYPE void NAME void NAME validate associations PARAMETER LIST object relation PARAMETER object relation TYPE object NAME object NAME relation BLOCK DECL STMT TYPE collection NAME collection NAME association ends INIT model get facade get association ends relation EXPR model get facade get association ends relation CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get association ends relation NAME get association ends ARGUMENT LIST ARGUMENT EXPR relation NAME relation DECL STMT TYPE iterator NAME iterator NAME it INIT association ends iterator EXPR association ends iterator CALL association ends iterator NAME association ends iterator NAME association ends NAME iterator ARGUMENT LIST WHILE while it has next object relation assoc end it next object association model get facade get association relation assoc end validate association association CONDITION it has next EXPR it has next CALL it has next NAME it has next NAME it NAME has next ARGUMENT LIST BLOCK DECL STMT TYPE object NAME object NAME relation assoc end INIT it next EXPR it next CALL it next NAME it next NAME it NAME next ARGUMENT LIST DECL STMT TYPE object NAME object NAME association INIT model get facade get association relation assoc end EXPR model get facade get association relation assoc end CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get association relation assoc end NAME get association ARGUMENT LIST ARGUMENT EXPR relation assoc end NAME relation assoc end EXPR validate association association CALL validate association association NAME validate association ARGUMENT LIST ARGUMENT EXPR association NAME association validate every association for the given relation root ROOT validate det association every dobj validate association case relation for det relation the amod relation given nmod for association relation param relation root ROOT relation compound relation param private JJ void NN validate VB associations NNS root ROOT validate dobj validate associations object NN relation NN collection NN association NN ends NNS root ROOT ends compound ends association model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB association NN ends NNS root ROOT get compound ends association dobj get ends relation NN iterator NN it PRP association NN ends VBZ iterator NN root ROOT ends nsubj ends association dobj ends iterator while IN it PRP has VBZ next JJ root ROOT has nsubj has it advmod has next object NN relation NN assoc NN end NN root ROOT end compound end relation compound end assoc it PRP next IN root ROOT it det it next object NN association NN model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB association NN root ROOT get dobj get association relation NN assoc NN end NN root ROOT end compound end relation compound end assoc validate VB association NN root ROOT validate dobj validate association association NN validate void ANTONYM ANTONYM,1,B2,ArgoUML0.34/argouml-sql/src/org/argouml/language/sql/ModelValidator.java,241
COMMENT rerender the entire fig p this is may be an expensive operation for subclasses which are complex so should be used sparingly this functionality was originally the functionality of model changed but model changed takes the event now into account FUNCTION SPECIFIER public TYPE void NAME void NAME rendering changed PARAMETER LIST BLOCK EXPR init notation providers get owner CALL init notation providers get owner NAME init notation providers ARGUMENT LIST ARGUMENT EXPR get owner CALL get owner NAME get owner ARGUMENT LIST EXPR update name text CALL update name text NAME update name text ARGUMENT LIST EXPR update stereotype text CALL update stereotype text NAME update stereotype text ARGUMENT LIST EXPR update stereotype icon CALL update stereotype icon NAME update stereotype icon ARGUMENT LIST EXPR update bounds CALL update bounds NAME update bounds ARGUMENT LIST EXPR damage CALL damage NAME damage ARGUMENT LIST rerender the entire fig root ROOT rerender det fig the amod fig entire dobj rerender fig p this is may be an expensive operation for subclasses which are complex root ROOT is nsubj is this aux operation may cop operation be det operation an amod operation expensive ccomp is operation case subclasses for nmod for operation subclasses nsubj complex subclasses ref subclasses which cop complex are acl relcl subclasses complex so should be used sparingly this functionality was originally the root ROOT used advmod used so aux used should auxpass used be advmod the sparingly det functionality this nsubj the functionality cop the was advmod the originally dep used the so should be used sparingly this functionality was originally the root ROOT used advmod used so aux used should auxpass used be advmod the sparingly det functionality this nsubj the functionality cop the was advmod the originally dep used the functionality of model changed but model changed takes the event now into root ROOT changed nsubj changed functionality case model of nmod of functionality model cc changed but nsubj changed model conj but changed changed dep changed takes det event the dobj takes event advmod takes now dep takes into account public NN void NN rendering VBG changed VBN root ROOT changed nsubj changed rendering init NN notation NN providers NNS root ROOT providers compound providers init compound providers notation get VB owner NN root ROOT get dobj get owner update VB name NN text NN root ROOT update compound text name dobj update text update VB stereotype NN text NN root ROOT update compound text stereotype dobj update text update VB stereotype NN icon NN root ROOT update compound icon stereotype dobj update icon update VB bounds NNS root ROOT update dobj update bounds damage NN takes event ANTONYM ANTONYM void entire ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/ui/FigNodeModelElement.java,1809
COMMENT save the configuration to a specified location param url the path to save the configuration at return true if the save was successful false if not FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME save url PARAMETER LIST url url PARAMETER url url TYPE url NAME url NAME url BLOCK COMMENT log info configuration saved to url n RETURN return false EXPR false save the configuration to a specified location root ROOT save det configuration the dobj save configuration case location to det location a amod location specified nmod to save location param url the path to save the configuration at root ROOT url compound url param det path the dep url path mark save to acl to path save det configuration the dobj save configuration dep save at return true if the save was successful false if not root ROOT return amod return true mark false if det save the nsubj false save cop false was advmod false successful advcl if true false dep not if neg false not public NN boolean NN save IN url NN root ROOT url case url save url NN url NN log info configuration saved to url n root ROOT configuration compound configuration log compound configuration info acl configuration saved case n to compound n url nmod to saved n return NN false JJ save return ANTONYM ANTONYM true false ANTONYM ANTONYM,1,B1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/configuration/ConfigurationProperties.java,284
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string INDEX NAME use clar INIT always if only one never EXPR always if only one never BLOCK EXPR always NAME always EXPR if only one NAME if only one EXPR never NAME never private JJ static JJ final JJ string NN use NN clar NN root ROOT clar compound clar use always RB if IN only RB one CD root ROOT one mark one if advmod one only never RB,1,D1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/cognitive/critics/ui/CriticBrowserDialog.java,114
COMMENT insets in pixels DECL STMT SPECIFIER private TYPE j button NAME j button NAME clear tabs INIT new j button translator localize dialog find button clear tabs EXPR new j button translator localize dialog find button clear tabs CALL j button translator localize dialog find button clear tabs NAME j button ARGUMENT LIST ARGUMENT EXPR translator localize dialog find button clear tabs CALL translator localize dialog find button clear tabs NAME translator localize NAME translator NAME localize ARGUMENT LIST ARGUMENT EXPR dialog find button clear tabs insets in pixels root ROOT insets case pixels in nmod in insets pixels private JJ j NN button NN root ROOT button compound button j clear JJ tabs NNS root ROOT tabs amod tabs clear new JJ j NN button NN root ROOT button compound button j translator NN localize VBP root ROOT localize nsubj localize translator dialog NN find VB button NN clear JJ tabs NNS root ROOT find nsubj find dialog compound tabs button amod tabs clear dobj find tabs private clear ANTONYM ANTONYM,1,E1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/FindDialog.java,107
COMMENT helper function to add the value s of an attribute or reference to the given collection param returns a collection that link ref base object s are added to FUNCTION SPECIFIER private TYPE void NAME void NAME get reference or attribute PARAMETER LIST ref featured parent object element collection ref base object returns boolean contents only PARAMETER ref featured parent TYPE ref featured NAME ref featured NAME parent PARAMETER object element TYPE object NAME object NAME element PARAMETER collection ref base object returns TYPE collection ref base object NAME collection ref base object NAME collection ARGUMENT LIST ARGUMENT NAME ref base object NAME returns PARAMETER boolean contents only TYPE boolean NAME boolean NAME contents only BLOCK TRY try if element instanceof javax jmi model attribute element instanceof reference return if element instanceof reference javax jmi model aggregation kind ak reference element get exposed end get aggregation if contents only ak mof composite return string value name javax jmi model model element element get name object refends parent ref get value value name if refends null return if refends instanceof collection collection c collection refends if c is empty for iterator it c iterator it has next object o it next only add mof elements not primitive datatypes if o instanceof ref base object returns add ref base object o else only add mof elements not primitive datatypes if refends instanceof ref base object returns add ref base object refends catch invalid object exception e throw new invalid element exception e BLOCK IF if element instanceof javax jmi model attribute element instanceof reference return CONDITION element instanceof javax jmi model attribute element instanceof reference EXPR element instanceof javax jmi model attribute element instanceof reference NAME element NAME javax jmi model attribute NAME javax NAME jmi NAME model NAME attribute NAME element NAME reference THEN return BLOCK RETURN return IF if element instanceof reference javax jmi model aggregation kind ak reference element get exposed end get aggregation if contents only ak mof composite return CONDITION element instanceof reference EXPR element instanceof reference NAME element NAME reference THEN javax jmi model aggregation kind ak reference element get exposed end get aggregation if contents only ak mof composite return BLOCK DECL STMT TYPE javax jmi model aggregation kind NAME javax jmi model aggregation kind NAME javax NAME jmi NAME model NAME aggregation kind NAME ak INIT reference element get exposed end get aggregation EXPR reference element get exposed end get aggregation NAME reference NAME element CALL get exposed end NAME get exposed end ARGUMENT LIST CALL get aggregation NAME get aggregation ARGUMENT LIST IF if contents only ak mof composite return CONDITION contents only ak mof composite EXPR contents only ak mof composite NAME contents only NAME ak NAME mof composite THEN return BLOCK RETURN return DECL STMT TYPE string NAME string NAME value name INIT javax jmi model model element element get name EXPR javax jmi model model element element get name NAME javax jmi model model element NAME javax NAME jmi NAME model NAME model element NAME element CALL get name NAME get name ARGUMENT LIST DECL STMT TYPE object NAME object NAME refends INIT parent ref get value value name EXPR parent ref get value value name CALL parent ref get value value name NAME parent ref get value NAME parent NAME ref get value ARGUMENT LIST ARGUMENT EXPR value name NAME value name IF if refends null return CONDITION refends null EXPR refends null NAME refends THEN return BLOCK RETURN return IF if refends instanceof collection collection c collection refends if c is empty for iterator it c iterator it has next object o it next only add mof elements not primitive datatypes if o instanceof ref base object returns add ref base object o else only add mof elements not primitive datatypes if refends instanceof ref base object returns add ref base object refends CONDITION refends instanceof collection EXPR refends instanceof collection NAME refends NAME collection THEN collection c collection refends if c is empty for iterator it c iterator it has next object o it next only add mof elements not primitive datatypes if o instanceof ref base object returns add ref base object o BLOCK DECL STMT TYPE collection NAME collection NAME c INIT collection refends EXPR collection refends NAME collection NAME refends IF if c is empty for iterator it c iterator it has next object o it next only add mof elements not primitive datatypes if o instanceof ref base object returns add ref base object o CONDITION c is empty EXPR c is empty CALL c is empty NAME c is empty NAME c NAME is empty ARGUMENT LIST THEN for iterator it c iterator it has next object o it next only add mof elements not primitive datatypes if o instanceof ref base object returns add ref base object o BLOCK FOR for iterator it c iterator it has next object o it next only add mof elements not primitive datatypes if o instanceof ref base object returns add ref base object o CONTROL iterator it c iterator it has next INIT iterator it c iterator TYPE iterator NAME iterator NAME it INIT c iterator EXPR c iterator CALL c iterator NAME c iterator NAME c NAME iterator ARGUMENT LIST CONDITION it has next EXPR it has next CALL it has next NAME it has next NAME it NAME has next ARGUMENT LIST INCR BLOCK DECL STMT TYPE object NAME object NAME o INIT it next EXPR it next CALL it next NAME it next NAME it NAME next ARGUMENT LIST COMMENT only add mof elements not primitive datatypes IF if o instanceof ref base object returns add ref base object o CONDITION o instanceof ref base object EXPR o instanceof ref base object NAME o NAME ref base object THEN returns add ref base object o BLOCK EXPR returns add ref base object o CALL returns add ref base object o NAME returns add NAME returns NAME add ARGUMENT LIST ARGUMENT EXPR ref base object o NAME ref base object NAME o ELSE else only add mof elements not primitive datatypes if refends instanceof ref base object returns add ref base object refends BLOCK COMMENT only add mof elements not primitive datatypes IF if refends instanceof ref base object returns add ref base object refends CONDITION refends instanceof ref base object EXPR refends instanceof ref base object NAME refends NAME ref base object THEN returns add ref base object refends BLOCK EXPR returns add ref base object refends CALL returns add ref base object refends NAME returns add NAME returns NAME add ARGUMENT LIST ARGUMENT EXPR ref base object refends NAME ref base object NAME refends CATCH catch invalid object exception e throw new invalid element exception e PARAMETER LIST invalid object exception e PARAMETER invalid object exception e TYPE invalid object exception NAME invalid object exception NAME e BLOCK THROW throw new invalid element exception e EXPR new invalid element exception e CALL invalid element exception e NAME invalid element exception ARGUMENT LIST ARGUMENT EXPR e NAME e helper function to add the value s of an attribute or reference to the root ROOT function compound function helper mark add to acl to function add det s the compound s value dobj add s case attribute of det attribute an nmod of s attribute cc attribute or nmod of s reference conj or attribute reference case the to nmod to attribute the given collection root ROOT given dobj given collection param returns a collection that link ref base object s are added to root ROOT returns nsubj returns param det collection a nsubj link collection nsubjpass added collection ref collection that acl relcl collection link compound s ref compound s base compound s object dobj link s auxpass added are ccomp returns added nmod added to private JJ void NN get VB reference NN or CC attribute NN root ROOT get dobj get reference cc reference or dobj get attribute conj or reference attribute ref NN featured VBD root ROOT featured nsubj featured ref parent NN object NN element NN collection NN ref NN base NN object NN root ROOT object compound object ref compound object base returns NNS boolean NN contents NNS only RB root ROOT contents advmod contents only try VB if IN element NN instanceof NN javax NN jmi NN model NN attribute NN root ROOT attribute compound attribute javax compound attribute jmi compound attribute model element NN instanceof NN reference NN return NN if IN element NN instanceof NN reference NN javax NN jmi NN model NN aggregation NN kind NN root ROOT kind compound kind javax compound kind jmi compound kind model compound kind aggregation ak IN reference NN element NN get VB exposed VBN end NN root ROOT exposed auxpass exposed get dobj exposed end get VB aggregation NN root ROOT get dobj get aggregation if IN contents NNS only RB root ROOT contents advmod contents only ak IN mof NN composite NN root ROOT composite compound composite mof return NN string NN value NN name NN root ROOT name compound name value javax NN jmi NN model NN model NN element NN root ROOT element compound element javax compound element jmi compound element model compound element model element NN get VB name NN root ROOT get dobj get name object NN refends NNS parent NN ref NN get VBP value NN root ROOT get compound ref parent nsubj get ref dobj get value value NN name NN root ROOT name compound name value if IN refends NNS null JJ return NN if IN refends NNS instanceof NN collection NN collection NN c NN collection NN refends NNS if IN c NN is VBZ empty JJ root ROOT empty nsubj empty c cop empty is for IN iterator NN it PRP c NN iterator NN root ROOT iterator compound iterator c it PRP has VBZ next JJ root ROOT has nsubj has it advmod has next object NN o NN it PRP next IN root ROOT it det it next only add mof elements not primitive datatypes root ROOT add advmod add only amod elements mof dobj add elements neg primitive not acl elements primitive dobj primitive datatypes if IN o NN instanceof NN ref NN base NN object NN root ROOT object compound object ref compound object base returns NNS add VBP root ROOT add nsubj add returns ref NN base NN object NN root ROOT object compound object ref compound object base o NN else RB only add mof elements not primitive datatypes root ROOT add advmod add only amod elements mof dobj add elements neg primitive not acl elements primitive dobj primitive datatypes if IN refends NNS instanceof NN ref NN base NN object NN root ROOT object compound object ref compound object base returns NNS add VBP root ROOT add nsubj add returns ref NN base NN object NN root ROOT object compound object ref compound object base refends NNS catch NN invalid JJ object NN exception NN root ROOT exception amod exception invalid compound exception object e SYM throw VB new JJ invalid JJ element NN exception NN root ROOT exception amod exception invalid compound exception element e SYM add given ANTONYM ANTONYM,1,B3,ArgoUML0.34/argouml/src/argouml-core-model-mdr/src/org/argouml/model/mdr/FacadeMDRImpl.java,2453
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK IF if attributes null attributes to source sb this new line sb CONDITION attributes null EXPR attributes null NAME attributes THEN attributes to source sb this new line sb BLOCK EXPR attributes to source sb CALL attributes to source sb NAME attributes to source NAME attributes NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR this trace modifiers this modifiers sb CALL this trace modifiers this modifiers sb NAME this trace modifiers NAME this NAME trace modifiers ARGUMENT LIST ARGUMENT EXPR this modifiers NAME this modifiers NAME this NAME modifiers ARGUMENT EXPR sb NAME sb EXPR this type to source sb CALL this type to source sb NAME this type to source NAME this NAME type NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR this names get to source sb CALL this names get NAME this names get NAME this NAME names NAME get ARGUMENT LIST ARGUMENT EXPR CALL to source sb NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb COMMENT start block EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR IF if has getter sb append get CONDITION has getter EXPR has getter NAME has getter THEN sb append get BLOCK EXPR sb append get CALL sb append get NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR get IF if has setter sb append set CONDITION has setter EXPR has setter NAME has setter THEN sb append set BLOCK EXPR sb append set CALL sb append set NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR set EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN if IN attributes NNS null JJ attributes NNS to TO source NN root ROOT attributes case source to nmod to attributes source sb NN this DT new JJ line NN sb NN this DT trace NN modifiers NNS this DT modifiers NNS sb NN this DT type NN to TO source NN sb NN sb NN append IN root ROOT sb dep sb append this DT names NNS get VBP to TO source NN root ROOT source case source to sb NN start block root ROOT start dobj start block this DT new JJ line NN sb NN sb NN append IN root ROOT sb dep sb append if IN has VBZ getter RB root ROOT has advmod has getter sb NN append IN root ROOT sb dep sb append get VB if IN has VBZ setter NN root ROOT has dobj has setter sb NN append IN root ROOT sb dep sb append set NN sb NN append IN root ROOT sb dep sb append this DT new JJ line NN sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/members/InterfacePropertyNode.java,16
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb FOR for int i i ranges size i sb append case ranges get i to source sb sb append some ugly special casing due to case blocks having multiple stmts without braces if i ranges size is default case false statement block is has braces false statement block statements size indent this new line sb CONTROL int i i ranges size i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i ranges size EXPR i ranges size NAME i CALL ranges size NAME ranges size NAME ranges NAME size ARGUMENT LIST INCR i EXPR i NAME i BLOCK EXPR sb append case CALL sb append case NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR case EXPR ranges get i to source sb CALL ranges get i NAME ranges get NAME ranges NAME get ARGUMENT LIST ARGUMENT EXPR i NAME i CALL to source sb NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR COMMENT some ugly special casing due to case blocks having multiple stmts without braces IF if i ranges size is default case false statement block is has braces false statement block statements size indent CONDITION i ranges size is default case false statement block is has braces false statement block statements size EXPR i ranges size is default case false statement block is has braces false statement block statements size NAME i CALL ranges size NAME ranges size NAME ranges NAME size ARGUMENT LIST NAME is default case CALL statement block is has braces NAME statement block is has braces NAME statement block NAME is has braces ARGUMENT LIST CALL statement block statements size NAME statement block statements size NAME statement block NAME statements NAME size ARGUMENT LIST THEN indent BLOCK EXPR indent NAME indent EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb IF if is default case sb append default if statement block is has braces false statement block statements size indent this new line sb CONDITION is default case EXPR is default case NAME is default case THEN sb append default if statement block is has braces false statement block statements size indent this new line sb BLOCK EXPR sb append default CALL sb append default NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR default IF if statement block is has braces false statement block statements size indent CONDITION statement block is has braces false statement block statements size EXPR statement block is has braces false statement block statements size CALL statement block is has braces NAME statement block is has braces NAME statement block NAME is has braces ARGUMENT LIST CALL statement block statements size NAME statement block statements size NAME statement block NAME statements NAME size ARGUMENT LIST THEN indent BLOCK EXPR indent NAME indent EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR statement block to source sb CALL statement block to source sb NAME statement block to source NAME statement block NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN this DT new JJ line NN sb NN for IN int NN i LS i LS ranges NNS size NN root ROOT size compound size ranges i LS sb NN append IN root ROOT sb dep sb append case NN ranges NNS get VBP root ROOT get nsubj get ranges i LS to TO source NN root ROOT source case source to sb NN sb NN append IN root ROOT sb dep sb append some ugly special casing due to case blocks having multiple stmts without braces root ROOT blocks det casing some amod casing ugly amod casing special nsubj blocks casing amod casing due case case to nmod to due case xcomp blocks having amod stmts multiple dobj having stmts case braces without nmod without having braces if IN i LS ranges NNS size NN root ROOT size compound size ranges is VBZ default NN case NN root ROOT case cop case is compound case default false JJ statement NN block NN is VBZ has VBZ braces NNS root ROOT has compound block statement nsubj has block aux has is dobj has braces false JJ statement NN block NN statements NNS size NN root ROOT size compound size statement compound size block compound size statements indent JJ this DT new JJ line NN sb NN if IN is VBZ default NN case NN root ROOT case cop case is compound case default sb NN append IN root ROOT sb dep sb append default NN if IN statement NN block NN is VBZ has VBZ braces NNS root ROOT has compound block statement nsubj has block aux has is dobj has braces false JJ statement NN block NN statements NNS size NN root ROOT size compound size statement compound size block compound size statements indent JJ this DT new JJ line NN sb NN statement NN block NN to TO source NN root ROOT block compound block statement case source to nmod to block source sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/statements/CaseNode.java,21
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE string NAME string NAME get instructions PARAMETER LIST int index PARAMETER int index TYPE int NAME int NAME index BLOCK RETURN return null EXPR null override NN protected VBN string NN get VB instructions NNS root ROOT get dobj get instructions int NN index NN return NN null JJ,1,B6,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/ui/FigNodeModelElement.java,2597
FUNCTION ANNOTATION suppress warnings unchecked NAME suppress warnings ARGUMENT LIST ARGUMENT EXPR unchecked SPECIFIER public TYPE list NAME list NAME get debug info PARAMETER LIST BLOCK DECL STMT TYPE list NAME list NAME info INIT new array list EXPR new array list CALL array list NAME array list ARGUMENT LIST EXPR info add event listeners CALL info add event listeners NAME info add NAME info NAME add ARGUMENT LIST ARGUMENT EXPR event listeners FOR for iterator it elements registry entry set iterator it has next map entry entry map entry it next string item entry get key to string list model element node new debug node get debug description item info add model element node map property map map entry get value for iterator property iterator property map entry set iterator property iterator has next map entry property entry map entry property iterator next list property node new debug node property entry get key to string model element node add property node list listener list list property entry get value for iterator list it listener list iterator list it has next object listener list it next list listener node new debug node listener get class get name property node add listener node CONTROL iterator it elements registry entry set iterator it has next INIT iterator it elements registry entry set iterator TYPE iterator NAME iterator NAME it INIT elements registry entry set iterator EXPR elements registry entry set iterator CALL elements registry entry set NAME elements registry entry set NAME elements NAME registry NAME entry set ARGUMENT LIST CALL iterator NAME iterator ARGUMENT LIST CONDITION it has next EXPR it has next CALL it has next NAME it has next NAME it NAME has next ARGUMENT LIST INCR BLOCK DECL STMT TYPE map entry NAME map entry NAME map NAME entry NAME entry INIT map entry it next EXPR map entry it next NAME map entry NAME map NAME entry CALL it next NAME it next NAME it NAME next ARGUMENT LIST DECL STMT TYPE string NAME string NAME item INIT entry get key to string EXPR entry get key to string CALL entry get key NAME entry get key NAME entry NAME get key ARGUMENT LIST CALL to string NAME to string ARGUMENT LIST DECL STMT TYPE list NAME list NAME model element node INIT new debug node get debug description item EXPR new debug node get debug description item CALL new debug node get debug description item NAME new debug node ARGUMENT LIST ARGUMENT EXPR get debug description item CALL get debug description item NAME get debug description ARGUMENT LIST ARGUMENT EXPR item NAME item EXPR info add model element node CALL info add model element node NAME info add NAME info NAME add ARGUMENT LIST ARGUMENT EXPR model element node NAME model element node DECL STMT TYPE map NAME map NAME property map INIT map entry get value EXPR map entry get value NAME map CALL entry get value NAME entry get value NAME entry NAME get value ARGUMENT LIST FOR for iterator property iterator property map entry set iterator property iterator has next map entry property entry map entry property iterator next list property node new debug node property entry get key to string model element node add property node list listener list list property entry get value for iterator list it listener list iterator list it has next object listener list it next list listener node new debug node listener get class get name property node add listener node CONTROL iterator property iterator property map entry set iterator property iterator has next INIT iterator property iterator property map entry set iterator TYPE iterator NAME iterator NAME property iterator INIT property map entry set iterator EXPR property map entry set iterator CALL property map entry set NAME property map entry set NAME property map NAME entry set ARGUMENT LIST CALL iterator NAME iterator ARGUMENT LIST CONDITION property iterator has next EXPR property iterator has next CALL property iterator has next NAME property iterator has next NAME property iterator NAME has next ARGUMENT LIST INCR BLOCK DECL STMT TYPE map entry NAME map entry NAME map NAME entry NAME property entry INIT map entry property iterator next EXPR map entry property iterator next NAME map entry NAME map NAME entry CALL property iterator next NAME property iterator next NAME property iterator NAME next ARGUMENT LIST DECL STMT TYPE list NAME list NAME property node INIT new debug node property entry get key to string EXPR new debug node property entry get key to string CALL new debug node property entry get key to string NAME new debug node ARGUMENT LIST ARGUMENT EXPR property entry get key to string CALL property entry get key NAME property entry get key NAME property entry NAME get key ARGUMENT LIST CALL to string NAME to string ARGUMENT LIST EXPR model element node add property node CALL model element node add property node NAME model element node add NAME model element node NAME add ARGUMENT LIST ARGUMENT EXPR property node NAME property node DECL STMT TYPE list NAME list NAME listener list INIT list property entry get value EXPR list property entry get value NAME list CALL property entry get value NAME property entry get value NAME property entry NAME get value ARGUMENT LIST FOR for iterator list it listener list iterator list it has next object listener list it next list listener node new debug node listener get class get name property node add listener node CONTROL iterator list it listener list iterator list it has next INIT iterator list it listener list iterator TYPE iterator NAME iterator NAME list it INIT listener list iterator EXPR listener list iterator CALL listener list iterator NAME listener list iterator NAME listener list NAME iterator ARGUMENT LIST CONDITION list it has next EXPR list it has next CALL list it has next NAME list it has next NAME list it NAME has next ARGUMENT LIST INCR BLOCK DECL STMT TYPE object NAME object NAME listener INIT list it next EXPR list it next CALL list it next NAME list it next NAME list it NAME next ARGUMENT LIST DECL STMT TYPE list NAME list NAME listener node INIT new debug node listener get class get name EXPR new debug node listener get class get name CALL new debug node listener get class get name NAME new debug node ARGUMENT LIST ARGUMENT EXPR listener get class get name CALL listener get class NAME listener get class NAME listener NAME get class ARGUMENT LIST CALL get name NAME get name ARGUMENT LIST EXPR property node add listener node CALL property node add listener node NAME property node add NAME property node NAME add ARGUMENT LIST ARGUMENT EXPR listener node NAME listener node RETURN return info EXPR info NAME info suppress VB warnings NNS root ROOT suppress dobj suppress warnings unchecked JJ public NN list NN get VB debug VB info NN root ROOT get xcomp get debug dobj debug info list NN info NN new JJ array NN list NN root ROOT list compound list array info NN add VB root ROOT add nsubj add info event NN listeners NNS for IN iterator NN it PRP elements NNS registry NN entry NN set NN root ROOT set compound set elements compound set registry compound set entry iterator NN it PRP has VBZ next JJ root ROOT has nsubj has it advmod has next map NN entry NN root ROOT entry compound entry map entry NN map NN entry NN root ROOT entry compound entry map it PRP next IN root ROOT it det it next string NN item NN entry NN get VB key JJ root ROOT get nsubj get entry xcomp get key to TO string VB root ROOT string mark string to list NN model NN element NN node NN root ROOT node compound node model compound node element new JJ debug NN node NN root ROOT node amod node new compound node debug get VB debug VB description NN root ROOT get xcomp get debug dobj debug description item NN info NN add VB root ROOT add nsubj add info model NN element NN node NN root ROOT node compound node model compound node element map NN property NN map NN root ROOT map compound map property map NN entry NN get VB value NN root ROOT get nsubj get entry dobj get value for IN iterator NN property NN iterator NN root ROOT iterator compound iterator property property NN map NN entry NN set NN root ROOT set compound set property compound set map compound set entry iterator NN property NN iterator NN has VBZ next JJ root ROOT has compound iterator property nsubj has iterator advmod has next map NN entry NN root ROOT entry compound entry map property NN entry NN root ROOT entry compound entry property map NN entry NN root ROOT entry compound entry map property NN iterator NN next IN root ROOT iterator compound iterator property dep iterator next list NN property NN node NN root ROOT node compound node property new JJ debug NN node NN root ROOT node amod node new compound node debug property NN entry NN get VB key JJ root ROOT get compound entry property nsubj get entry xcomp get key to TO string VB root ROOT string mark string to model NN element NN node NN add VBP root ROOT add compound node model compound node element nsubj add node property NN node NN root ROOT node compound node property list NN listener NN list NN root ROOT list compound list listener list NN property NN entry NN get VBP value NN root ROOT get compound entry property nsubj get entry dobj get value for IN iterator NN list NN it PRP root ROOT list dobj list it listener NN list NN iterator NN root ROOT iterator compound iterator listener compound iterator list list NN it PRP has VBZ next JJ root ROOT list nsubj has it acl relcl list has advmod has next object NN listener NN list NN it PRP next IN root ROOT list dobj list it advmod list next list NN listener NN node NN root ROOT node compound node listener new JJ debug NN node NN root ROOT node amod node new compound node debug listener NN get VB class NN root ROOT get nsubj get listener dobj get class get VB name NN root ROOT get dobj get name property NN node NN add VBP root ROOT add compound node property nsubj add node listener NN node NN root ROOT node compound node listener return NN info NN,1,A1,ArgoUML0.34/argouml/src/argouml-core-model-mdr/src/org/argouml/model/mdr/ModelEventPumpMDRImpl.java,932
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK IF if is ref sb append ref else if is out sb append out CONDITION is ref EXPR is ref NAME is ref THEN sb append ref BLOCK EXPR sb append ref CALL sb append ref NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR ref ELSEIF else if is out sb append out IF if is out sb append out CONDITION is out EXPR is out NAME is out THEN sb append out BLOCK EXPR sb append out CALL sb append out NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR out EXPR expression to source sb CALL expression to source sb NAME expression to source NAME expression NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN if IN is VBZ ref NN root ROOT ref cop ref is sb NN append IN root ROOT sb dep sb append ref NN else RB if IN is VBZ out IN root ROOT out cop out is sb NN append IN root ROOT sb dep sb append out IN expression NN to TO source NN root ROOT expression case source to nmod to expression source sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/nodes/expressions/ArgumentNode.java,19
COMMENT check that we can get the inet address for localhost this can fail on unix if etc hosts is not correctly set up FUNCTION SPECIFIER private SPECIFIER static TYPE void NAME void NAME check hosts file PARAMETER LIST BLOCK TRY try inet address get local host catch unknown host exception e system err println error unable to get localhost information e print stack trace system err system err println on unix systems this usually indicates that your etc hosts file is incorrectly setup system err println stopping execution of argo uml system exit BLOCK EXPR inet address get local host CALL inet address get local host NAME inet address get local host NAME inet address NAME get local host ARGUMENT LIST CATCH catch unknown host exception e system err println error unable to get localhost information e print stack trace system err system err println on unix systems this usually indicates that your etc hosts file is incorrectly setup system err println stopping execution of argo uml system exit PARAMETER LIST unknown host exception e PARAMETER unknown host exception e TYPE unknown host exception NAME unknown host exception NAME e BLOCK EXPR system err println error unable to get localhost information CALL system err println error unable to get localhost information NAME system err println NAME system NAME err NAME println ARGUMENT LIST ARGUMENT EXPR error unable to get localhost information EXPR e print stack trace system err CALL e print stack trace system err NAME e print stack trace NAME e NAME print stack trace ARGUMENT LIST ARGUMENT EXPR system err NAME system err NAME system NAME err EXPR system err println on unix systems this usually indicates that your etc hosts file is incorrectly setup CALL system err println on unix systems this usually indicates that your etc hosts file is incorrectly setup NAME system err println NAME system NAME err NAME println ARGUMENT LIST ARGUMENT EXPR on unix systems this usually indicates that your etc hosts file is incorrectly setup EXPR system err println stopping execution of argo uml CALL system err println stopping execution of argo uml NAME system err println NAME system NAME err NAME println ARGUMENT LIST ARGUMENT EXPR stopping execution of argo uml EXPR system exit CALL system exit NAME system exit NAME system NAME exit ARGUMENT LIST ARGUMENT EXPR check that we can get the inet address for localhost root ROOT check mark get that nsubj get we aux get can ccomp check get det address the compound address inet dobj get address case localhost for nmod for address localhost this can fail on unix if etc hosts is not correctly set up root ROOT fail nsubj fail this aux fail can case unix on nmod on fail unix mark set if compound hosts etc nsubj set hosts aux set is neg set not advmod set correctly advcl if fail set compound prt set up private JJ static JJ void NN check NN hosts NNS file NN root ROOT file compound hosts check nsubj file hosts try VB inet NN address NN get VB local JJ host NN root ROOT get compound address inet nsubj get address amod host local dobj get host catch NN unknown JJ host NN exception NN root ROOT exception amod exception unknown compound exception host e SYM system NN err VBP println NN root ROOT err nsubj err system dobj err println error NN unable JJ to TO get VB localhost NN information NN e LS print NN stack VBP trace NN root ROOT stack dep stack e nsubj stack print dobj stack trace system NN err VBP root ROOT err nsubj err system system NN err VBP println NN root ROOT err nsubj err system dobj err println on IN unix NN systems NNS this DT usually RB indicates VBZ that IN your PRP$ etc FW hosts NNS root ROOT hosts compound hosts etc file NN is VBZ incorrectly RB setup NN system NN err VBP println NN root ROOT err nsubj err system dobj err println stopping VBG execution NN of IN argo NN uml NN root ROOT uml compound uml argo system NN exit NN root ROOT exit compound exit system check fail ANTONYM ANTONYM check get ANTONYM ANTONYM check set ANTONYM ANTONYM get can ANTONYM ANTONYM get fail ANTONYM ANTONYM get set ANTONYM ANTONYM set up ANTONYM ANTONYM set static SYNONYM SYNONYM,1,B2,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/application/Main.java,637
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR sb append null CALL sb append null NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR null public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN sb NN append IN root ROOT sb dep sb append null JJ,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/nodes/expressions/primitive/NullPrimitive.java,11
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE icon NAME icon NAME icon INDEX NAME get icons PARAMETER LIST BLOCK IF if model get model management helper is read only get content get owner return new icon CONDITION model get model management helper is read only get content get owner EXPR model get model management helper is read only get content get owner CALL model get model management helper NAME model get model management helper NAME model NAME get model management helper ARGUMENT LIST CALL is read only get content get owner NAME is read only ARGUMENT LIST ARGUMENT EXPR get content get owner CALL get content NAME get content ARGUMENT LIST CALL get owner NAME get owner ARGUMENT LIST THEN return new icon BLOCK RETURN return new icon EXPR new icon NAME icon NAME icon INDEX EXPR RETURN return icons EXPR icons NAME icons override NN protected VBN icon NN get VB icons NNS root ROOT get dobj get icons if IN model NN get VB model JJ management NN helper NN root ROOT get nsubj get model amod helper model compound helper management dobj get helper is VBZ read VBN only RB root ROOT read auxpass read is advmod read only get VB content NN root ROOT get dobj get content get VB owner NN root ROOT get dobj get owner return NN new JJ icon NN return NN icons NNS,1,A1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/SelectionNodeInstance.java,82
COMMENT generate three parts under public protected and private visibility adding the visibility keywords on top of each part param parts the parts to output return the composed parts FUNCTION SPECIFIER private TYPE string NAME string NAME generate all parts PARAMETER LIST string buffer parts PARAMETER string buffer parts TYPE string buffer NAME string buffer NAME string buffer INDEX NAME parts BLOCK DECL STMT TYPE string buffer NAME string buffer NAME sb INIT new string buffer EXPR new string buffer CALL string buffer NAME string buffer ARGUMENT LIST COMMENT generate all parts in order public protected private FOR for int i i all parts length i if parts i to string trim length if generator pass source pass if i sb append line separator sb append append part name i append sb append line separator sb append parts i CONTROL int i i all parts length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i all parts length EXPR i all parts length NAME i NAME all parts length NAME all parts NAME length INCR i EXPR i NAME i BLOCK IF if parts i to string trim length if generator pass source pass if i sb append line separator sb append append part name i append sb append line separator sb append parts i CONDITION parts i to string trim length EXPR parts i to string trim length NAME parts i NAME parts INDEX i EXPR i NAME i CALL to string NAME to string ARGUMENT LIST CALL trim NAME trim ARGUMENT LIST CALL length NAME length ARGUMENT LIST THEN if generator pass source pass if i sb append line separator sb append append part name i append sb append line separator sb append parts i BLOCK IF if generator pass source pass if i sb append line separator sb append append part name i append sb append line separator CONDITION generator pass source pass EXPR generator pass source pass NAME generator pass NAME source pass THEN if i sb append line separator sb append append part name i append sb append line separator BLOCK IF if i sb append line separator CONDITION i EXPR i NAME i THEN sb append line separator BLOCK EXPR sb append line separator CALL sb append line separator NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR line separator NAME line separator EXPR sb append append part name i append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR CALL append part name i NAME append ARGUMENT LIST ARGUMENT EXPR part name i NAME part name i NAME part name INDEX i EXPR i NAME i CALL append NAME append ARGUMENT LIST ARGUMENT EXPR EXPR sb append line separator CALL sb append line separator NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR line separator NAME line separator EXPR sb append parts i CALL sb append parts i NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR parts i NAME parts i NAME parts INDEX i EXPR i NAME i RETURN return sb to string EXPR sb to string CALL sb to string NAME sb to string NAME sb NAME to string ARGUMENT LIST generate three parts under public protected and private visibility root ROOT generate nummod parts three dobj generate parts case visibility under amod visibility public amod visibility protected cc protected and conj and protected private amod visibility private nmod under generate visibility adding the visibility keywords on top of each part root ROOT adding det keywords the compound keywords visibility dobj adding keywords case part on mwe on top mwe on of det part each nmod on top of adding part param parts the parts to output root ROOT parts compound parts param det parts the dep parts parts case output to nmod to parts output return the composed parts root ROOT return det parts the amod parts composed dobj return parts private JJ string NN generate VB all DT parts NNS root ROOT generate det parts all dobj generate parts string NN buffer NN root ROOT buffer compound buffer string parts NNS string NN buffer NN root ROOT buffer compound buffer string sb NN new JJ string NN buffer NN root ROOT buffer compound buffer string generate all parts in order public protected private root ROOT generate det parts all dobj generate parts case private in compound private order amod private public amod private protected nmod in generate private for IN int NN i LS i LS all DT parts NNS root ROOT parts det parts all length NN i LS if IN parts NNS i LS to TO string VB root ROOT string mark string to trim JJ length NN if IN generator NN pass NN root ROOT pass compound pass generator source NN pass NN root ROOT pass compound pass source if IN i LS sb NN append IN root ROOT sb dep sb append line NN separator NN root ROOT separator compound separator line sb NN append IN root ROOT sb dep sb append append IN part NN name NN root ROOT name compound name part i LS append IN sb NN append IN root ROOT sb dep sb append line NN separator NN root ROOT separator compound separator line sb NN append IN root ROOT sb dep sb append parts NNS i LS return NN sb NN to TO string NN root ROOT sb case string to nmod to sb string adding part ANTONYM ANTONYM adding parts ANTONYM ANTONYM output return ANTONYM ANTONYM public private ANTONYM ANTONYM top return ANTONYM ANTONYM top under ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml-cpp/src/org/argouml/language/cpp/generator/GeneratorCpp.java,1410
COMMENT use tag generation for generation of doccomment simple tags of tags which are not used for document or simple tags for all author achim spangler since DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME doc comment tags INIT EXPR use tag generation for generation of doccomment simple tags of root ROOT generation compound generation use compound generation tag case generation for nmod for generation generation case tags of compound tags doccomment amod tags simple nmod of generation tags acl tags of tags which are not used for document or simple tags for all root ROOT tags nsubjpass used tags ref tags which auxpass used are neg used not acl relcl tags used case document for nmod for used document cc document or amod tags simple nmod for used tags conj or document tags case all for nmod for used all author achim spangler root ROOT spangler compound spangler author compound spangler achim since private JJ static JJ final JJ int NN doc NN comment NN tags NNS root ROOT tags compound tags doc compound tags comment,1,E1,ArgoUML0.34/argouml-cpp/src/org/argouml/language/cpp/generator/GeneratorCpp.java,205
COMMENT the following three fields make up a doubly mapped buffer with two sets of pointers the byte buffer objects one for input and one for output bytes are written into the buffer using out bb which advances the current position the following ascii art shows what the buffer looks like code vp vl xxxxxx p l code vp vl are the output buffer writing position and limit respectively and show the free space that can receive bytes the p and l pointers show the input buffer reading position and limit they point to valid bytes which have not yet been converted to characters the xxx bytes have been both written in and read back out the bytes have been written into the buffer but not read out yet DECL STMT SPECIFIER private TYPE byte buffer NAME byte buffer NAME out bb INIT byte buffer wrap bytes EXPR byte buffer wrap bytes CALL byte buffer wrap bytes NAME byte buffer wrap NAME byte buffer NAME wrap ARGUMENT LIST ARGUMENT EXPR bytes NAME bytes the following three fields make up a doubly mapped buffer with two root ROOT make det fields the amod fields following nummod fields three nsubj make fields compound prt make up det buffer a advmod mapped doubly amod buffer mapped dobj make buffer case two with nmod with buffer two sets of pointers the byte buffer objects one for input and one for root ROOT sets case pointers of nmod of sets pointers det objects the compound objects byte compound objects buffer dep sets objects nummod objects one case input for nmod for objects input cc input and nmod for objects one conj and input one acl objects for output bytes are written into the buffer using out bb which advances root ROOT written compound bytes output nsubjpass written bytes auxpass written are case buffer into det buffer the nmod into written buffer xcomp written using compound prt using out compound advances bb det advances which dobj using advances output bytes are written into the buffer using out bb which advances root ROOT written compound bytes output nsubjpass written bytes auxpass written are case buffer into det buffer the nmod into written buffer xcomp written using compound prt using out compound advances bb det advances which dobj using advances the current position the following ascii art shows what the buffer root ROOT position det position the amod position current dep shows position det art the amod art following amod art ascii nsubj shows art acl relcl position shows ref position what det buffer the nsubj what buffer the current position the following ascii art shows what the buffer root ROOT position det position the amod position current dep shows position det art the amod art following amod art ascii nsubj shows art acl relcl position shows ref position what det buffer the nsubj what buffer looks like code root ROOT looks case code like nmod like looks code looks like code root ROOT looks case code like nmod like looks code vp vl root ROOT vl compound vl vp xxxxxx p l root ROOT l compound l p code vp vl are the output buffer writing position and limit root ROOT buffer compound vl code compound vl vp nsubj buffer vl cop buffer are det buffer the compound buffer output compound position writing dep buffer position cc position and dep buffer limit conj and position limit respectively and show the free space that can receive bytes the p root ROOT respectively cc respectively and conj and respectively show det space the amod space free dobj show space nsubj receive space ref space that aux receive can acl relcl space receive dobj receive bytes det p the dobj bytes p respectively and show the free space that can receive bytes the p root ROOT respectively cc respectively and conj and respectively show det space the amod space free dobj show space nsubj receive space ref space that aux receive can acl relcl space receive dobj receive bytes det p the dobj bytes p and l pointers show the input buffer reading position and limit root ROOT show cc show and compound pointers l nsubj show pointers det position the compound position input compound position buffer compound position reading dobj show position cc position and dobj show limit conj and position limit they point to valid bytes which have not yet been converted to root ROOT point nsubj point they case bytes to amod bytes valid nmod to point bytes nsubjpass converted bytes ref bytes which aux converted have neg converted not advmod converted yet auxpass converted been acl relcl bytes converted nmod converted to characters the xxx bytes have been both written in and read back root ROOT characters det bytes the compound bytes xxx nsubjpass written bytes nsubj read bytes aux written have auxpass written been dep written both dep characters written nmod written in cc written and dep characters read conj and written read advmod read back characters the xxx bytes have been both written in and read back root ROOT characters det bytes the compound bytes xxx nsubjpass written bytes nsubj read bytes aux written have auxpass written been dep written both dep characters written nmod written in cc written and dep characters read conj and written read advmod read back out the bytes have been written into the buffer but not read root ROOT written case bytes out det bytes the nmod out written bytes aux written have auxpass written been case buffer into det buffer the nmod into written buffer cc buffer but neg read not nmod into written read conj but buffer read out the bytes have been written into the buffer but not read root ROOT written case bytes out det bytes the nmod out written bytes aux written have auxpass written been case buffer into det buffer the nmod into written buffer cc buffer but neg read not nmod into written read conj but buffer read out yet root ROOT yet advmod yet out private JJ byte NN buffer NN root ROOT buffer compound buffer byte out IN bb NN root ROOT bb case bb out byte NN buffer NN wrap NN root ROOT wrap compound wrap byte compound wrap buffer bytes NNS advances back ANTONYM ANTONYM can back ANTONYM ANTONYM can using ANTONYM ANTONYM current back ANTONYM ANTONYM free limit ANTONYM ANTONYM free using ANTONYM ANTONYM have read ANTONYM ANTONYM looks back ANTONYM ANTONYM make advances ANTONYM ANTONYM make are ANTONYM ANTONYM make been ANTONYM ANTONYM make limit ANTONYM ANTONYM make read ANTONYM ANTONYM make reading ANTONYM ANTONYM make receive ANTONYM ANTONYM make sets ANTONYM ANTONYM make show ANTONYM ANTONYM make shows ANTONYM ANTONYM mapped are ANTONYM ANTONYM mapped been ANTONYM ANTONYM point read ANTONYM ANTONYM position limit ANTONYM ANTONYM position point ANTONYM ANTONYM position point ANTONYM ANTONYM position space ANTONYM ANTONYM reading have ANTONYM ANTONYM reading point ANTONYM ANTONYM sets point ANTONYM ANTONYM l xxx SYNONYM SYNONYM like one SYNONYM SYNONYM one l SYNONYM SYNONYM one xxx SYNONYM SYNONYM three l SYNONYM SYNONYM three one SYNONYM SYNONYM three two SYNONYM SYNONYM three xxx SYNONYM SYNONYM two l SYNONYM SYNONYM two one SYNONYM SYNONYM two xxx SYNONYM SYNONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/persistence/UmlFilePersister.java,680
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK COMMENT todo eventnode to source IF if attributes null attributes to source sb this new line sb CONDITION attributes null EXPR attributes null NAME attributes THEN attributes to source sb this new line sb BLOCK EXPR attributes to source sb CALL attributes to source sb NAME attributes to source NAME attributes NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN todo eventnode to source root ROOT eventnode compound eventnode todo case source to nmod to eventnode source if IN attributes NNS null JJ attributes NNS to TO source NN root ROOT attributes case source to nmod to attributes source sb NN this DT new JJ line NN sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/members/EventNode.java,18
COMMENT the character with a meaning as a visibility at the start of an attribute DECL STMT SPECIFIER static TYPE final string SPECIFIER final NAME string NAME visibilitychars INIT EXPR the character with a meaning as a visibility at the start root ROOT character det character the case meaning with det meaning a nmod with character meaning case visibility as det visibility a nmod as meaning visibility case start at det start the nmod at visibility start of an attribute root ROOT attribute case attribute of det attribute an static JJ final JJ string NN visibilitychars NNS,1,E1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/NotationUtilityUml.java,97
COMMENT return a bitfield containing the modifiers for the parameter FUNCTION SPECIFIER public TYPE short NAME short NAME get modifiers PARAMETER LIST BLOCK RETURN return the modifiers EXPR the modifiers NAME the modifiers return a bitfield containing the modifiers for the parameter root ROOT return det bitfield a dobj return bitfield acl bitfield containing det modifiers the dobj containing modifiers case parameter for det parameter the nmod for modifiers parameter public NN short RB get VB modifiers NNS root ROOT get dobj get modifiers return NN the DT modifiers NNS root ROOT modifiers det modifiers the return containing ANTONYM ANTONYM,1,B6,ArgoUML0.34/argouml-java/src/org/argouml/language/java/reveng/ParameterDeclaration.java,73
COMMENT c doesn t place visibility information for each class member sort items during generation and store visibility state of lastly generated member in central class variable so that the appropriate lines public protected private can be created author achim spangler since DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string INDEX NAME part name INIT public protected private EXPR public protected private BLOCK EXPR public EXPR protected EXPR private c doesn t place visibility information for each class member root ROOT information compound information c compound information doesn compound information t compound information place compound information visibility case member for det member each compound member class nmod for information member sort items during generation and store visibility state root ROOT items compound items sort case generation during nmod during items generation cc generation and compound state store compound state visibility nmod during items state conj and generation state of lastly generated member in central class variable so that root ROOT member case member of advmod generated lastly amod member generated case variable in amod variable central compound variable class nmod in member variable dep member so dep member that the appropriate lines public protected private root ROOT lines det lines the amod lines appropriate amod private public amod private protected dep lines private can be created root ROOT created aux created can auxpass created be author achim spangler root ROOT spangler compound spangler author compound spangler achim since private JJ static JJ final JJ string NN part NN name NN root ROOT name compound name part public NN protected VBN private JJ be name ANTONYM ANTONYM c central ANTONYM ANTONYM class lines ANTONYM ANTONYM class part ANTONYM ANTONYM class part ANTONYM ANTONYM class sort ANTONYM ANTONYM created name ANTONYM ANTONYM lines name ANTONYM ANTONYM lines string ANTONYM ANTONYM place can ANTONYM ANTONYM place lines ANTONYM ANTONYM place name ANTONYM ANTONYM place part ANTONYM ANTONYM public private ANTONYM ANTONYM sort part ANTONYM ANTONYM store lines ANTONYM ANTONYM,1,D1,ArgoUML0.34/argouml-cpp/src/org/argouml/language/cpp/generator/GeneratorCpp.java,181
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR sb append value CALL sb append value NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR value NAME value public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN sb NN append IN root ROOT sb dep sb append value NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/nodes/expressions/primitive/BooleanPrimitive.java,17
COMMENT action key for delete model elements DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME action delete model elements INIT delete model elements EXPR delete model elements action key for delete model elements root ROOT key compound key action case elements for amod elements delete amod elements model nmod for key elements public NN static JJ final JJ string NN action NN delete VB model NN elements NNS root ROOT delete nsubj delete action compound elements model dobj delete elements delete VB model NN elements NNS root ROOT delete compound elements model dobj delete elements,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,130
DECL STMT SPECIFIER public TYPE node collection expression node NAME node collection expression node NAME node collection ARGUMENT LIST ARGUMENT NAME expression node NAME init INIT new node collection expression node EXPR new node collection expression node CALL node collection expression node NAME node collection expression node NAME node collection ARGUMENT LIST ARGUMENT NAME expression node ARGUMENT LIST public NN node NN collection NN root ROOT collection compound collection node expression NN node NN root ROOT node compound node expression init NN new JJ node NN collection NN root ROOT collection compound collection node expression NN node NN root ROOT node compound node expression,1,D1,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/statements/ForStatement.java,14
COMMENT removes the specified component from the layout this is included to satisfy the layout manager interface but is not actually used in this layout implementation param comp the component FUNCTION SPECIFIER public TYPE void NAME void NAME remove layout component PARAMETER LIST component comp PARAMETER component comp TYPE component NAME component NAME comp BLOCK removes the specified component from root ROOT removes det component the amod component specified dobj removes component dep removes from the layout this is included to satisfy the layout manager root ROOT layout det layout the nsubjpass included this nsubj xsubj satisfy this auxpass included is acl relcl layout included mark satisfy to xcomp included satisfy det manager the compound manager layout dobj satisfy manager the layout this is included to satisfy the layout manager root ROOT layout det layout the nsubjpass included this nsubj xsubj satisfy this auxpass included is acl relcl layout included mark satisfy to xcomp included satisfy det manager the compound manager layout dobj satisfy manager interface but is not actually used in this layout root ROOT interface cc interface but auxpass used is neg used not advmod used actually conj but interface used case layout in det layout this nmod in used layout implementation param comp the component root ROOT comp nsubj comp param det component the dobj comp component public NN void NN remove VB layout NN component NN root ROOT remove compound component layout dobj remove component component NN comp NN included removes ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/ui/LabelledLayout.java,170
COMMENT return the ids of the dependencies FUNCTION SPECIFIER public SPECIFIER final TYPE set string NAME set string NAME set ARGUMENT LIST ARGUMENT NAME string NAME get dependencies id PARAMETER LIST BLOCK RETURN return dependencies EXPR dependencies NAME dependencies return the ids of the dependencies root ROOT return det ids the dobj return ids case dependencies of det dependencies the nmod of ids dependencies public NN final JJ set NN string NN get VB dependencies NNS id IN root ROOT get dobj get dependencies dep get id return NN dependencies NNS,1,A4,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/profile/Profile.java,114
FUNCTION SPECIFIER private TYPE object NAME object NAME object INDEX NAME get element for row PARAMETER LIST int index PARAMETER int index TYPE int NAME int NAME index BLOCK RETURN return object elements get index EXPR object elements get index NAME object NAME object INDEX CALL elements get index NAME elements get NAME elements NAME get ARGUMENT LIST ARGUMENT EXPR index NAME index private JJ object NN get VB element NN for IN row NN root ROOT get dobj get element case row for nmod for element row int NN index NN return NN object NN elements NNS get VBP root ROOT get nsubj get elements index NN,1,A4,ArgoUML0.34/argouml-sql/src/org/argouml/ui/SettingsTabSql.java,83
DECL STMT SPECIFIER public TYPE block statement NAME block statement NAME statements INIT new block statement EXPR new block statement CALL block statement NAME block statement ARGUMENT LIST public NN block NN statement NN root ROOT statement compound statement block statements NNS new JJ block NN statement NN root ROOT statement compound statement block,1,E1,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/statements/IfStatement.java,16
DECL STMT SPECIFIER public SPECIFIER static TYPE long NAME long NAME param mods INIT ref out EXPR ref out NAME ref NAME out public NN static JJ long RB param NN mods NNS root ROOT mods compound mods param ref NN out IN,1,E1,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/enums/Modifier.java,47
COMMENT fixme the user model should be received via constructor return the user model FUNCTION SPECIFIER private TYPE object NAME object NAME get model PARAMETER LIST BLOCK IF if model null return model CONDITION model null EXPR model null NAME model THEN return model BLOCK RETURN return model EXPR model NAME model FOR for object user model get project get user defined model list if get model management helper is read only user model model user model return model CONTROL object user model get project get user defined model list INIT object user model get project get user defined model list TYPE object NAME object NAME user model RANGE get project get user defined model list EXPR get project get user defined model list CALL get project NAME get project ARGUMENT LIST CALL get user defined model list NAME get user defined model list ARGUMENT LIST BLOCK IF if get model management helper is read only user model model user model return model CONDITION get model management helper is read only user model EXPR get model management helper is read only user model CALL get model management helper NAME get model management helper ARGUMENT LIST CALL is read only user model NAME is read only ARGUMENT LIST ARGUMENT EXPR user model NAME user model THEN model user model return model BLOCK EXPR model user model NAME model NAME user model RETURN return model EXPR model NAME model THROW throw new illegal state exception an editable user model wasn t found EXPR new illegal state exception an editable user model wasn t found CALL illegal state exception an editable user model wasn t found NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR an editable user model wasn t found fixme the user model should be received via constructor root ROOT received csubjpass received fixme det model the compound model user dobj fixme model aux received should auxpass received be case constructor via nmod via received constructor return the user model root ROOT return det model the compound model user dobj return model private JJ object NN get VB model NN root ROOT get dobj get model if IN model NN null JJ return NN model NN for IN object NN user NN model NN root ROOT model compound model user get VB project NN root ROOT get dobj get project get VB user NN defined VBN model NN list NN root ROOT get compound list user amod list defined compound list model dobj get list if IN get VB model NN management NN helper NN root ROOT get compound helper model compound helper management dobj get helper is VBZ read VBN only RB root ROOT read auxpass read is advmod read only user NN model NN root ROOT model compound model user model NN user NN model NN root ROOT model compound model user return NN model NN throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state an DT editable JJ user NN model NN was VBD n NN t NN root ROOT t compound t n found VBN,1,A1,ArgoUML0.34/argouml-cpp/src/org/argouml/language/cpp/reveng/ModelerImpl.java,218
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/statements/WhileStatement.java,17
FUNCTION SPECIFIER private TYPE collection object NAME collection object NAME collection ARGUMENT LIST ARGUMENT NAME object NAME get fallback model PARAMETER LIST BLOCK DECL STMT TYPE collection object NAME collection object NAME collection ARGUMENT LIST ARGUMENT NAME object NAME result INIT new array list object EXPR new array list object CALL array list object NAME array list object NAME array list ARGUMENT LIST ARGUMENT NAME object ARGUMENT LIST DECL STMT TYPE object NAME object NAME profile INIT model get model management factory create profile EXPR model get model management factory create profile CALL model get model management factory NAME model get model management factory NAME model NAME get model management factory ARGUMENT LIST CALL create profile NAME create profile ARGUMENT LIST EXPR model get core helper set name profile fallback java profile CALL model get core helper NAME model get core helper NAME model NAME get core helper ARGUMENT LIST CALL set name profile fallback java profile NAME set name ARGUMENT LIST ARGUMENT EXPR profile NAME profile ARGUMENT EXPR fallback java profile EXPR result add profile CALL result add profile NAME result add NAME result NAME add ARGUMENT LIST ARGUMENT EXPR profile NAME profile RETURN return result EXPR result NAME result private JJ collection NN object NN get VB fallback JJ model NN root ROOT get amod model fallback dobj get model collection NN object NN result NN new JJ array NN list NN root ROOT list compound list array object NN object NN profile NN model NN get VB model JJ management NN factory NN root ROOT get nsubj get model amod factory model compound factory management dobj get factory create VB profile NN root ROOT create dobj create profile model NN get VB core NN helper NN root ROOT model acl model get compound helper core dobj get helper set VBN name NN root ROOT set dobj set name profile NN fallback NN java NN profile NN result NN add VB root ROOT add nsubj add result profile NN return NN result NN,1,A1,ArgoUML0.34/argouml-java/src/org/argouml/language/java/profile/ProfileJava.java,134
COMMENT instance variables DECL STMT SPECIFIER private TYPE string buffer NAME string buffer NAME text INIT new string buffer EXPR new string buffer CALL string buffer NAME string buffer ARGUMENT LIST ARGUMENT EXPR instance variables root ROOT variables compound variables instance private JJ string NN buffer NN root ROOT buffer compound buffer string text NN new JJ string NN buffer NN root ROOT buffer compound buffer string,1,D1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/persistence/XMLElement.java,53
COMMENT get element residences todo unused should be added to facade tfm param handle a model element return collection the element residence for this model element FUNCTION SPECIFIER public TYPE collection element residence NAME collection element residence NAME collection ARGUMENT LIST ARGUMENT NAME element residence NAME get element residence PARAMETER LIST object handle PARAMETER object handle TYPE object NAME object NAME handle BLOCK TRY try if handle instanceof model element return org omg uml uml package model element handle ref outermost package get core get a resident element residence get element residence model element handle catch invalid object exception e throw new invalid element exception e BLOCK IF if handle instanceof model element return org omg uml uml package model element handle ref outermost package get core get a resident element residence get element residence model element handle CONDITION handle instanceof model element EXPR handle instanceof model element NAME handle NAME model element THEN return org omg uml uml package model element handle ref outermost package get core get a resident element residence get element residence model element handle BLOCK RETURN return org omg uml uml package model element handle ref outermost package get core get a resident element residence get element residence model element handle EXPR org omg uml uml package model element handle ref outermost package get core get a resident element residence get element residence model element handle CALL org omg uml uml package model element handle NAME org omg uml uml package NAME org NAME omg NAME uml NAME uml package ARGUMENT LIST ARGUMENT EXPR model element handle NAME model element NAME handle CALL ref outermost package NAME ref outermost package ARGUMENT LIST CALL get core NAME get core ARGUMENT LIST CALL get a resident element residence NAME get a resident element residence ARGUMENT LIST CALL get element residence model element handle NAME get element residence ARGUMENT LIST ARGUMENT EXPR model element handle NAME model element NAME handle CATCH catch invalid object exception e throw new invalid element exception e PARAMETER LIST invalid object exception e PARAMETER invalid object exception e TYPE invalid object exception NAME invalid object exception NAME e BLOCK THROW throw new invalid element exception e EXPR new invalid element exception e CALL invalid element exception e NAME invalid element exception ARGUMENT LIST ARGUMENT EXPR e NAME e THROW throw new illegal argument exception handle handle EXPR new illegal argument exception handle handle CALL illegal argument exception handle handle NAME illegal argument exception ARGUMENT LIST ARGUMENT EXPR handle handle NAME handle get element residences root ROOT get compound residences element dobj get residences todo unused should be added to facade tfm root ROOT added nsubjpass added todo amod todo unused aux added should auxpass added be case tfm to compound tfm facade nmod to added tfm todo unused should be added to facade tfm root ROOT added nsubjpass added todo amod todo unused aux added should auxpass added be case tfm to compound tfm facade nmod to added tfm todo unused should be added to facade tfm root ROOT added nsubjpass added todo amod todo unused aux added should auxpass added be case tfm to compound tfm facade nmod to added tfm param handle a model element root ROOT handle nsubj handle param det element a compound element model dobj handle element return collection the element residence for this model element root ROOT collection compound collection return det residence the compound residence element dep collection residence case element for det element this compound element model nmod for residence element public NN collection NN element NN residence NN root ROOT residence compound residence element get VB element NN residence NN root ROOT get compound residence element dobj get residence object NN handle VB try VB if IN handle VB instanceof NN model NN element NN root ROOT element compound element model return NN org NN omg NN uml NN uml NN package NN root ROOT package compound package org compound package omg compound package uml compound package uml model NN element NN root ROOT element compound element model handle VB ref NN outermost NN package NN root ROOT package compound package ref compound package outermost get VB core NN root ROOT get dobj get core get VB a DT resident JJ element NN residence NN root ROOT get det residence a amod residence resident compound residence element dobj get residence get VB element NN residence NN root ROOT get compound residence element dobj get residence model NN element NN root ROOT element compound element model handle VB catch NN invalid JJ object NN exception NN root ROOT exception amod exception invalid compound exception object e SYM throw VB new JJ invalid JJ element NN exception NN root ROOT exception amod exception invalid compound exception element e SYM throw VB new JJ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument handle VB handle VB get added ANTONYM ANTONYM get model ANTONYM ANTONYM get return ANTONYM ANTONYM,1,A4,ArgoUML0.34/argouml/src/argouml-core-model-mdr/src/org/argouml/model/mdr/CoreHelperMDRImpl.java,2307
COMMENT indicates if the user wants to see the arrows when both association ends in an association are navigable DECL STMT SPECIFIER public SPECIFIER static TYPE final configuration key SPECIFIER final NAME configuration key NAME key hide bidirectional arrows INIT configuration make key notation hide bidirectional arrows EXPR configuration make key notation hide bidirectional arrows CALL configuration make key notation hide bidirectional arrows NAME configuration make key NAME configuration NAME make key ARGUMENT LIST ARGUMENT EXPR notation ARGUMENT EXPR hide ARGUMENT EXPR bidirectional arrows indicates if the user wants to see the arrows when both root ROOT indicates mark wants if det user the nsubj wants user nsubj xsubj see user advcl if indicates wants mark see to xcomp wants see det arrows the dobj see arrows dep see when dep when both association ends in an association are navigable root ROOT navigable nsubj ends association csubj navigable ends case association in det association an nmod in ends association cop navigable are public NN static JJ final JJ configuration NN key NN root ROOT key compound key configuration key JJ hide VB bidirectional JJ arrows NNS root ROOT hide nsubj hide key amod arrows bidirectional dobj hide arrows configuration NN make VBP key NN root ROOT make nsubj make configuration dobj make key notation NN hide VB bidirectional JJ arrows NNS root ROOT arrows amod arrows bidirectional hide indicates ANTONYM ANTONYM see key ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/DiagramAppearance.java,98
COMMENT use tag generation for generation of doccomment simple tags of tags which are not used for document or simple tags for all author achim spangler since DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME all tags INIT EXPR use tag generation for generation of doccomment simple tags of root ROOT generation compound generation use compound generation tag case generation for nmod for generation generation case tags of compound tags doccomment amod tags simple nmod of generation tags acl tags of tags which are not used for document or simple tags for all root ROOT tags nsubjpass used tags ref tags which auxpass used are neg used not acl relcl tags used case document for nmod for used document cc document or amod tags simple nmod for used tags conj or document tags case all for nmod for used all author achim spangler root ROOT spangler compound spangler author compound spangler achim since private JJ static JJ final JJ int NN all DT tags NNS root ROOT tags det tags all,1,E1,ArgoUML0.34/argouml-cpp/src/org/argouml/language/cpp/generator/GeneratorCpp.java,207
COMMENT extends DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME superclass INIT EXPR extends public NN static JJ final JJ int NN superclass NN,0,N/A,ArgoUML0.34/argouml-java/src/org/argouml/language/java/reveng/classfile/ParserUtils.java,300
COMMENT checks if there is a directed association between two classifiers and creates one if necessary p todo hide this method in the implementation of a to be defined interface FUNCTION SPECIFIER private TYPE void NAME void NAME ensure directed association PARAMETER LIST object from cls object to cls PARAMETER object from cls TYPE object NAME object NAME from cls PARAMETER object to cls TYPE object NAME object NAME to cls BLOCK DECL STMT TYPE string NAME string NAME from name INIT model get facade get name from cls EXPR model get facade get name from cls CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get name from cls NAME get name ARGUMENT LIST ARGUMENT EXPR from cls NAME from cls DECL STMT TYPE string NAME string NAME to name INIT model get facade get name to cls EXPR model get facade get name to cls CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get name to cls NAME get name ARGUMENT LIST ARGUMENT EXPR to cls NAME to cls DECL STMT TYPE object NAME object NAME assoc end INIT null EXPR null FOR for iterator i model get facade get association ends to cls iterator i has next object ae i next object assoc model get facade get association ae if model get facade get connections assoc size model get facade get type model get facade get next end ae from cls model get facade get name ae null model get facade is navigable ae assoc end ae CONTROL iterator i model get facade get association ends to cls iterator i has next INIT iterator i model get facade get association ends to cls iterator TYPE iterator NAME iterator NAME i INIT model get facade get association ends to cls iterator EXPR model get facade get association ends to cls iterator CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get association ends to cls NAME get association ends ARGUMENT LIST ARGUMENT EXPR to cls NAME to cls CALL iterator NAME iterator ARGUMENT LIST CONDITION i has next EXPR i has next CALL i has next NAME i has next NAME i NAME has next ARGUMENT LIST INCR BLOCK DECL STMT TYPE object NAME object NAME ae INIT i next EXPR i next CALL i next NAME i next NAME i NAME next ARGUMENT LIST DECL STMT TYPE object NAME object NAME assoc INIT model get facade get association ae EXPR model get facade get association ae CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get association ae NAME get association ARGUMENT LIST ARGUMENT EXPR ae NAME ae IF if model get facade get connections assoc size model get facade get type model get facade get next end ae from cls model get facade get name ae null model get facade is navigable ae assoc end ae CONDITION model get facade get connections assoc size model get facade get type model get facade get next end ae from cls model get facade get name ae null model get facade is navigable ae EXPR model get facade get connections assoc size model get facade get type model get facade get next end ae from cls model get facade get name ae null model get facade is navigable ae CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get connections assoc NAME get connections ARGUMENT LIST ARGUMENT EXPR assoc NAME assoc CALL size NAME size ARGUMENT LIST CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get type model get facade get next end ae NAME get type ARGUMENT LIST ARGUMENT EXPR model get facade get next end ae CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get next end ae NAME get next end ARGUMENT LIST ARGUMENT EXPR ae NAME ae NAME from cls CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get name ae NAME get name ARGUMENT LIST ARGUMENT EXPR ae NAME ae CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL is navigable ae NAME is navigable ARGUMENT LIST ARGUMENT EXPR ae NAME ae THEN assoc end ae BLOCK EXPR assoc end ae NAME assoc end NAME ae IF if assoc end null string assoc name from name to name modeller build directed association assoc name from cls to cls CONDITION assoc end null EXPR assoc end null NAME assoc end THEN string assoc name from name to name modeller build directed association assoc name from cls to cls BLOCK DECL STMT TYPE string NAME string NAME assoc name INIT from name to name EXPR from name to name NAME from name NAME to name EXPR modeller build directed association assoc name from cls to cls CALL modeller build directed association assoc name from cls to cls NAME modeller build directed association NAME modeller NAME build directed association ARGUMENT LIST ARGUMENT EXPR assoc name NAME assoc name ARGUMENT EXPR from cls NAME from cls ARGUMENT EXPR to cls NAME to cls checks if there is a directed association between two classifiers and root ROOT checks mark is if expl is there advcl if checks is det association a amod association directed nsubj is association case classifiers between nummod classifiers two nmod between association classifiers cc classifiers and creates one if necessary p root ROOT creates dobj creates one case p if amod p necessary nmod if one p creates one if necessary p root ROOT creates dobj creates one case p if amod p necessary nmod if one p todo hide this method in the implementation of a to be defined root ROOT hide nsubj hide todo det method this dobj hide method case implementation in det implementation the nmod in hide implementation case defined of det defined a mark defined to auxpass defined be nmod of implementation defined interface private JJ void NN ensure VB directed VBN association NN root ROOT ensure amod association directed dobj ensure association object NN from IN cls NNS root ROOT cls case cls from object NN to TO cls NNS root ROOT cls case cls to string NN from IN name NN root ROOT name case name from model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB name NN root ROOT get dobj get name from IN cls NNS root ROOT cls case cls from string NN to TO name VB root ROOT name mark name to model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB name NN root ROOT get dobj get name to TO cls NNS root ROOT cls case cls to object NN assoc NN end NN root ROOT end compound end assoc null JJ for IN iterator NN i LS model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB association NN ends NNS root ROOT get compound ends association dobj get ends to TO cls NNS root ROOT cls case cls to iterator NN i LS has VBZ next JJ root ROOT i root i has advmod has next object NN ae IN i LS next IN root ROOT i advmod i next object NN assoc IN model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB association NN root ROOT get dobj get association ae IN if IN model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB connections NNS root ROOT get dobj get connections assoc IN size NN model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB type NN root ROOT get dobj get type model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB next JJ end NN root ROOT get amod end next dobj get end ae IN from IN cls NNS root ROOT cls case cls from model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB name NN root ROOT get dobj get name ae IN null JJ model NN get VB facade NN root ROOT get nsubj get model dobj get facade is VBZ navigable JJ root ROOT navigable cop navigable is ae IN assoc NN end NN root ROOT end compound end assoc ae IN if IN assoc NN end NN root ROOT end compound end assoc null JJ string NN assoc NN name NN root ROOT name compound name assoc from IN name NN root ROOT name case name from to TO name VB root ROOT name mark name to modeller NN build VB directed JJ association NN root ROOT build nsubj build modeller amod association directed dobj build association assoc NN name NN root ROOT name compound name assoc from IN cls NNS root ROOT cls case cls from to TO cls NNS root ROOT cls case cls to checks directed ANTONYM ANTONYM two one SYNONYM SYNONYM,1,B2,ArgoUML0.34/argouml-java/src/org/argouml/language/java/ui/RESequenceDiagramDialog.java,881
DECL STMT SPECIFIER public TYPE long NAME long NAME modifiers public NN long RB modifiers NNS,1,E1,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/members/ParamDeclNode.java,14
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR sb append try CALL sb append try NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR try EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR try block to source sb CALL try block to source sb NAME try block to source NAME try block NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb FOR for catch node cb catch blocks cb to source sb CONTROL catch node cb catch blocks INIT catch node cb catch blocks TYPE catch node NAME catch node NAME cb RANGE catch blocks EXPR catch blocks NAME catch blocks BLOCK EXPR cb to source sb CALL cb to source sb NAME cb to source NAME cb NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb IF if finally block null finally block to source sb CONDITION finally block null EXPR finally block null NAME finally block THEN finally block to source sb BLOCK EXPR finally block to source sb CALL finally block to source sb NAME finally block to source NAME finally block NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN sb NN append IN root ROOT sb dep sb append try VB this DT new JJ line NN sb NN try VB block NN to TO source NN root ROOT try dobj try block case source to nmod to try source sb NN for IN catch NN node NN root ROOT node compound node catch cb NN catch NN blocks NNS root ROOT blocks compound blocks catch cb NN to TO source NN root ROOT cb case source to nmod to cb source sb NN if IN finally RB block NN root ROOT block advmod block finally null JJ finally RB block VB to TO source NN root ROOT block advmod block finally case source to nmod to block source sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/statements/TryStatement.java,20
COMMENT marks a constructor DECL STMT SPECIFIER public SPECIFIER static TYPE final bit set SPECIFIER final NAME bit set NAME qi ctor INIT new bit set EXPR new bit set CALL bit set NAME bit set ARGUMENT LIST ARGUMENT EXPR marks a constructor root ROOT marks det constructor a dobj marks constructor public NN static JJ final JJ bit NN set NN root ROOT set compound set bit qi NN ctor NN root ROOT ctor compound ctor qi new JJ bit NN set NN root ROOT set compound set bit,0,N/A,ArgoUML0.34/argouml-cpp/src/org/argouml/language/cpp/reveng/CPPvariables.java,70
COMMENT test if the given namespace is a valid namespace to add the diagram to todo this method was created to facilitate the merge of this class with action add diagram param ns the namespace to check return returns code true code if valid FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME is valid namespace PARAMETER LIST object ns PARAMETER object ns TYPE object NAME object NAME ns BLOCK RETURN return true EXPR true test if the given namespace is a valid namespace to add the diagram to root ROOT test mark namespace if det namespace the amod namespace given nsubj namespace namespace nsubj xsubj add namespace cop namespace is det namespace a amod namespace valid advcl if test namespace mark add to xcomp namespace add det diagram the dobj add diagram dep add to todo this method was created to facilitate the merge root ROOT todo det method this nsubjpass created method nsubj xsubj facilitate method auxpass created was acl relcl todo created mark facilitate to xcomp created facilitate det merge the dobj facilitate merge of this class with action add diagram root ROOT add case class of det class this nmod of add class case action with nmod with class action dobj add diagram param ns the namespace to check root ROOT ns nsubj ns param det namespace the dobj ns namespace mark check to advcl to ns check return returns code true code if valid root ROOT code compound returns return nsubj code returns amod code true dobj code code mark valid if advcl if code valid public NN boolean NN is VBZ valid JJ namespace NN root ROOT namespace cop namespace is amod namespace valid object NN ns NNS return NN true JJ add check ANTONYM ANTONYM check return ANTONYM ANTONYM check returns ANTONYM ANTONYM given add ANTONYM ANTONYM given check ANTONYM ANTONYM given created ANTONYM ANTONYM,1,B1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/ui/ActionNewDiagram.java,162
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR sb append using CALL sb append using NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR using COMMENT target EXPR target to source sb CALL target to source sb NAME target to source NAME target NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb IF if is alias sb append alias name to source sb CONDITION is alias EXPR is alias NAME is alias THEN sb append alias name to source sb BLOCK EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR alias name to source sb CALL alias name to source sb NAME alias name to source NAME alias name NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN sb NN append IN root ROOT sb dep sb append using VBG target target NN to TO source NN root ROOT target case source to nmod to target source sb NN if IN is VBZ alias IN root ROOT alias cop alias is sb NN append IN root ROOT sb dep sb append alias IN name NN to TO source NN root ROOT alias dobj alias name case source to nmod to name source sb NN sb NN append IN root ROOT sb dep sb append this DT new JJ line NN sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/structural/UsingDirectiveNode.java,35
COMMENT the argo uml version with which this project was last saved DECL STMT SPECIFIER private TYPE final list string SPECIFIER final NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME searchpath INIT new array list string EXPR new array list string CALL array list string NAME array list string NAME array list ARGUMENT LIST ARGUMENT NAME string ARGUMENT LIST the argo uml version with which this project was last saved root ROOT version det version the compound version argo compound version uml nmod with saved version case which with ref version which det project this nsubjpass saved project auxpass saved was advmod saved last acl relcl version saved private JJ final JJ list NN string NN searchpath NN new JJ array NN list NN root ROOT list compound list array string NN was last ANTONYM ANTONYM,1,D1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/kernel/ProjectImpl.java,120
FUNCTION TYPE list command NAME list command NAME list ARGUMENT LIST ARGUMENT NAME command NAME get commands PARAMETER LIST BLOCK RETURN return new array list command commands EXPR new array list command commands CALL array list command commands NAME array list command NAME array list ARGUMENT LIST ARGUMENT NAME command ARGUMENT LIST ARGUMENT EXPR commands NAME commands list NN command NN get VB commands NNS root ROOT get dobj get commands return NN new JJ array NN list NN root ROOT list compound list array command NN commands NNS,1,A1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/kernel/DefaultUndoManager.java,276
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK DECL STMT TYPE string NAME string NAME dot INIT EXPR FOR for int i i identifier length i sb append dot identifier i dot CONTROL int i i identifier length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i identifier length EXPR i identifier length NAME i NAME identifier length NAME identifier NAME length INCR i EXPR i NAME i BLOCK EXPR sb append dot identifier i CALL sb append dot identifier i NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR dot identifier i NAME dot NAME identifier i NAME identifier INDEX i EXPR i NAME i EXPR dot NAME dot public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN string NN dot NN for IN int NN i LS i LS identifier NN length NN root ROOT length compound length identifier i LS sb NN append IN root ROOT sb dep sb append dot NN identifier NN i LS dot NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/nodes/expressions/IdentifierExpression.java,47
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE icon NAME icon NAME icon INDEX NAME get icons PARAMETER LIST BLOCK IF if model get model management helper is read only get content get owner return new icon null dep dep right null null CONDITION model get model management helper is read only get content get owner EXPR model get model management helper is read only get content get owner CALL model get model management helper NAME model get model management helper NAME model NAME get model management helper ARGUMENT LIST CALL is read only get content get owner NAME is read only ARGUMENT LIST ARGUMENT EXPR get content get owner CALL get content NAME get content ARGUMENT LIST CALL get owner NAME get owner ARGUMENT LIST THEN return new icon null dep dep right null null BLOCK RETURN return new icon null dep dep right null null EXPR new icon null dep dep right null null NAME icon NAME icon INDEX BLOCK EXPR null EXPR dep NAME dep EXPR dep right NAME dep right EXPR null EXPR null RETURN return icons EXPR icons NAME icons override NN protected VBN icon NN get VB icons NNS root ROOT get dobj get icons if IN model NN get VB model JJ management NN helper NN root ROOT get nsubj get model amod helper model compound helper management dobj get helper is VBZ read VBN only RB root ROOT read auxpass read is advmod read only get VB content NN root ROOT get dobj get content get VB owner NN root ROOT get dobj get owner return NN new JJ icon NN null JJ dep NN dep NN right NN root ROOT right compound right dep null JJ null JJ return NN icons NNS,1,A1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/SelectionComponentInstance.java,85
COMMENT see javax management notification broadcaster get notification info FUNCTION SPECIFIER public TYPE m bean notification info NAME m bean notification info NAME m bean notification info INDEX NAME get notification info PARAMETER LIST BLOCK RETURN return notifier get notification info EXPR notifier get notification info CALL notifier get notification info NAME notifier get notification info NAME notifier NAME get notification info ARGUMENT LIST see javax management notification broadcaster get notification info root ROOT see compound broadcaster javax compound broadcaster management compound broadcaster notification nsubj get broadcaster ccomp see get compound info notification dobj get info public NN m NN bean NN notification NN info NN root ROOT info compound info m compound info bean compound info notification get VB notification NN info NN root ROOT get compound info notification dobj get info return NN notifier NN get VB notification NN info NN root ROOT get nsubj get notifier compound info notification dobj get info,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/gefext/ArgoFigInk.java,101
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE string NAME string NAME get instructions PARAMETER LIST int index PARAMETER int index TYPE int NAME int NAME index BLOCK RETURN return instructions index base EXPR instructions index base NAME instructions index base NAME instructions INDEX index base EXPR index base NAME index NAME base override NN protected VBN string NN get VB instructions NNS root ROOT get dobj get instructions int NN index NN return NN instructions NNS index NN base NN,1,B6,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/SelectionNode.java,88
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE collection NAME collection NAME get profile packages PARAMETER LIST BLOCK EXPR load model CALL load model NAME load model ARGUMENT LIST RETURN return profile packages EXPR profile packages NAME profile packages override NN public NN collection NN get VB profile NN packages NNS root ROOT get compound packages profile dobj get packages load NN model NN root ROOT model compound model load return NN profile NN packages NNS root ROOT packages compound packages profile,1,A1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/profile/UserDefinedProfile.java,743
COMMENT a token for notation settings DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME token showtypes INIT EXPR a token for notation settings root ROOT token det token a case settings for compound settings notation nmod for token settings a token for notation settings root ROOT token det token a case settings for compound settings notation nmod for token settings public NN static JJ final JJ int NN token JJ showtypes NNS root ROOT showtypes amod showtypes token,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/persistence/ArgoTokenTable.java,131
COMMENT these strings match the xml element names in the argo tee exactly DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string showproperties INIT showproperties EXPR showproperties these strings match the xml element names in the argo tee exactly root ROOT match det strings these nsubj match strings det names the compound names xml compound names element dobj match names case tee in det tee the compound tee argo nmod in names tee advmod match exactly these strings match the xml element names in the argo tee exactly root ROOT match det strings these nsubj match strings det names the compound names xml compound names element dobj match names case tee in det tee the compound tee argo nmod in names tee advmod match exactly private JJ static JJ final JJ string NN string NN showproperties NNS root ROOT showproperties compound showproperties string showproperties NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/persistence/ArgoTokenTable.java,79
COMMENT return the critiquing root FUNCTION SPECIFIER public SPECIFIER static TYPE object NAME object NAME get critiquing root PARAMETER LIST BLOCK SYNCHRONIZED synchronized the designer return critiquing root INIT the designer EXPR the designer CALL the designer NAME the designer ARGUMENT LIST BLOCK RETURN return critiquing root EXPR critiquing root NAME critiquing root return the critiquing root root ROOT return det root the amod root critiquing dobj return root public NN static JJ object NN get VB critiquing VBG root NN root ROOT get xcomp get critiquing dobj critiquing root synchronized VBN the DT designer NN root ROOT designer det designer the return NN critiquing VBG root NN root ROOT critiquing dobj critiquing root,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/cognitive/Designer.java,626
COMMENT a custom separator for texts singles out the line ends and consequently the lines if they are in either dos mac or unix format DECL STMT SPECIFIER private TYPE final token sep SPECIFIER final NAME token sep NAME delims a custom separator for texts singles out the line ends root ROOT ends det separator a compound separator custom nsubj ends separator case singles for compound singles texts nmod for separator singles case line out det line the nmod out separator line a custom separator for texts singles out the line ends root ROOT ends det separator a compound separator custom nsubj ends separator case singles for compound singles texts nmod for separator singles case line out det line the nmod out separator line and consequently the lines if they are in either dos mac root ROOT lines cc lines and advmod lines consequently det lines the mark mac if nsubj mac they cop mac are case mac in det mac either compound mac dos advcl in lines mac or unix format root ROOT format cc format or amod format unix or unix format root ROOT format cc format or amod format unix private JJ final JJ token JJ sep NN root ROOT sep amod sep token delims NNS dos format ANTONYM ANTONYM,1,E1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT return the string that should represent this profile in the gui FUNCTION SPECIFIER public TYPE string NAME string NAME get display name PARAMETER LIST BLOCK COMMENT todo seems like overkill to load the model just to get the display COMMENT name but that s where it s stored currently tfm EXPR load model CALL load model NAME load model ARGUMENT LIST RETURN return display name EXPR display name NAME display name return the string that should represent this profile in the gui root ROOT return det string the dobj return string nsubj represent string ref string that aux represent should acl relcl string represent det profile this dobj represent profile case gui in det gui the nmod in represent gui public NN string NN get VB display NN name NN root ROOT get compound name display dobj get name todo seems like overkill to load the model just to get the display root ROOT seems nsubj seems todo case overkill like nmod like seems overkill mark load to acl to overkill load det model the dobj load model nsubj xsubj get model advmod get just mark get to xcomp load get det display the dobj get display name but that s where it s stored currently tfm root ROOT name cc name but conj but name that root that s advmod stored where nsubjpass stored it auxpass stored s acl relcl s stored advmod stored currently advmod stored tfm load NN model NN root ROOT model compound model load return NN display NN name NN root ROOT name compound name display,1,A1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/profile/UserDefinedProfile.java,700
COMMENT number of points to compute for gravity point circle DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME circle points INIT EXPR number of points to compute for gravity point circle root ROOT number case points of nmod of number points mark compute to acl to number compute case circle for compound circle gravity compound circle point nmod for compute circle private JJ static JJ final JJ int NN circle NN points NNS root ROOT points compound points circle,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/state/ui/FigStateVertex.java,169
FUNCTION SPECIFIER public TYPE list profile NAME list profile NAME list ARGUMENT LIST ARGUMENT NAME profile NAME get default profiles PARAMETER LIST BLOCK RETURN return collections unmodifiable list default profiles EXPR collections unmodifiable list default profiles CALL collections unmodifiable list default profiles NAME collections unmodifiable list NAME collections NAME unmodifiable list ARGUMENT LIST ARGUMENT EXPR default profiles NAME default profiles public NN list NN profile NN get VB default NN profiles NNS root ROOT get compound profiles default dobj get profiles return NN collections NNS unmodifiable JJ list NN root ROOT list compound list collections amod list unmodifiable default NN profiles NNS root ROOT profiles compound profiles default,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/profile/internal/ProfileManagerImpl.java,357
DECL STMT SPECIFIER private SPECIFIER static TYPE final char SPECIFIER final NAME char NAME char INDEX NAME target INIT xmi content to char array EXPR xmi content to char array CALL to char array NAME to char array ARGUMENT LIST private JJ static JJ final JJ char NN target NN xmi NN content NN root ROOT content compound content xmi to TO char VB array NN root ROOT char mark char to dobj char array,1,D1,ArgoUML0.34/argouml/src/argouml-core-model-mdr/src/org/argouml/model/mdr/XmiWriterMDRImpl.java,90
FUNCTION SPECIFIER private TYPE void NAME void NAME reader to writer PARAMETER LIST reader reader writer writer PARAMETER reader reader TYPE reader NAME reader NAME reader PARAMETER writer writer TYPE writer NAME writer NAME writer THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK DECL STMT TYPE int NAME int NAME ch WHILE while ch reader read if ch x ffff log info stripping out x ffff from save file else if ch log info stripping out x from save file else writer write ch CONDITION ch reader read EXPR ch reader read NAME ch CALL reader read NAME reader read NAME reader NAME read ARGUMENT LIST BLOCK IF if ch x ffff log info stripping out x ffff from save file else if ch log info stripping out x from save file else writer write ch CONDITION ch x ffff EXPR ch x ffff NAME ch THEN log info stripping out x ffff from save file BLOCK EXPR log info stripping out x ffff from save file CALL log info stripping out x ffff from save file NAME log info NAME log NAME info ARGUMENT LIST ARGUMENT EXPR stripping out x ffff from save file ELSEIF else if ch log info stripping out x from save file IF if ch log info stripping out x from save file CONDITION ch EXPR ch NAME ch THEN log info stripping out x from save file BLOCK EXPR log info stripping out x from save file CALL log info stripping out x from save file NAME log info NAME log NAME info ARGUMENT LIST ARGUMENT EXPR stripping out x from save file ELSE else writer write ch BLOCK EXPR writer write ch CALL writer write ch NAME writer write NAME writer NAME write ARGUMENT LIST ARGUMENT EXPR ch NAME ch private JJ void NN reader NN to TO writer NN root ROOT reader case writer to nmod to reader writer reader NN reader NN writer NN writer NN throws VBZ io NN exception NN root ROOT exception compound exception io int NN ch NN while IN ch NN reader NN read VBD root ROOT read nsubj read reader if IN ch NN x CC ffff NN root ROOT ffff compound ffff x log NN info NN root ROOT info compound info log stripping VBG out IN x CC ffff NN root ROOT ffff compound ffff x from IN save IN file NN else RB if IN ch NN log NN info NN root ROOT info compound info log stripping VBG out IN x NN from IN save IN file NN else RB writer NN write VB root ROOT write nsubj write writer ch NN,1,B5,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/persistence/ZargoFilePersister.java,521
COMMENT the number of columns seen DECL STMT SPECIFIER protected TYPE int NAME int NAME num columns INIT EXPR the number of columns seen root ROOT seen det number the nsubj seen number case columns of nmod of number columns the number of columns seen root ROOT seen det number the nsubj seen number case columns of nmod of number columns protected VBN int NN num NN columns NNS root ROOT columns compound columns num,0,N/A,ArgoUML0.34/argouml-documentation/src/docbook-setup/docbook-xsl/extensions/saxon643/com/nwalsh/saxon/ColumnUpdateEmitter.java,43
COMMENT return returns the upper right panel tabs the diagram tabs FUNCTION SPECIFIER protected TYPE j tabbed pane NAME j tabbed pane NAME get tabs PARAMETER LIST BLOCK RETURN return tabs EXPR tabs NAME tabs return returns the upper right panel tabs the diagram tabs root ROOT returns nsubj returns return det tabs the amod tabs upper amod tabs right compound tabs panel dobj returns tabs det tabs the compound tabs diagram dep tabs tabs protected VBN j NN tabbed VBD pane NN root ROOT tabbed nsubj tabbed j dobj tabbed pane get VB tabs NNS root ROOT get dobj get tabs return NN tabs NNS,1,B6,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/MultiEditorPane.java,372
DECL STMT SPECIFIER private TYPE void NAME void NAME check profile for ARGUMENT LIST ARGUMENT EXPR object o profile profile null NAME object NAME o NAME profile NAME profile ARGUMENT EXPR model get facade is a applied profile element o object pkg model get facade get namespace o if pkg null string name model get facade get name pkg profile profile facade get manager look for registered profile name CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL is a applied profile element o NAME is a applied profile element ARGUMENT LIST ARGUMENT EXPR o NAME o BLOCK EXPR object pkg model get facade get namespace o NAME object NAME pkg CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get namespace o NAME get namespace ARGUMENT LIST ARGUMENT EXPR o NAME o IF if pkg null string name model get facade get name pkg profile profile facade get manager look for registered profile name CONDITION pkg null EXPR pkg null NAME pkg THEN string name model get facade get name pkg profile profile facade get manager look for registered profile name BLOCK DECL STMT TYPE string NAME string NAME name INIT model get facade get name pkg EXPR model get facade get name pkg CALL model get facade NAME model get facade NAME model NAME get facade ARGUMENT LIST CALL get name pkg NAME get name ARGUMENT LIST ARGUMENT EXPR pkg NAME pkg EXPR profile profile facade get manager look for registered profile name NAME profile CALL profile facade get manager NAME profile facade get manager NAME profile facade NAME get manager ARGUMENT LIST CALL look for registered profile name NAME look for registered profile ARGUMENT LIST ARGUMENT EXPR name NAME name IF if profile null get profile configuration add profile profile m CONDITION profile null EXPR profile null NAME profile THEN get profile configuration add profile profile m BLOCK EXPR get profile configuration add profile profile m CALL get profile configuration NAME get profile configuration ARGUMENT LIST CALL add profile profile m NAME add profile ARGUMENT LIST ARGUMENT EXPR profile NAME profile ARGUMENT EXPR m NAME m private JJ void NN check NN profile NN for IN root ROOT profile compound profile check dep profile for object NN o NN profile NN profile NN null JJ if IN model NN get VB facade NN root ROOT get nsubj get model dobj get facade is VBZ a DT applied VBN profile NN element NN root ROOT element cop element is det element a amod element applied compound element profile o NN object NN pkg NN model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB namespace NN root ROOT get dobj get namespace o NN if IN pkg NN null JJ string NN name NN model NN get VB facade NN root ROOT get nsubj get model dobj get facade get VB name NN root ROOT get dobj get name pkg NN profile NN profile NN facade NN get VB manager NN root ROOT get compound facade profile nsubj get facade dobj get manager look VB for IN registered VBN profile NN root ROOT look case profile for amod profile registered nmod for look profile name NN if IN profile NN null JJ get VB profile NN configuration NN root ROOT get compound configuration profile dobj get configuration add VB profile NN root ROOT add dobj add profile profile NN m NN,1,B2,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/kernel/ProjectImpl.java,1187
COMMENT get the java profile from project if available param p the project return the java profile FUNCTION TYPE profile NAME profile NAME get java profile PARAMETER LIST project p PARAMETER project p TYPE project NAME project NAME p BLOCK FOR for profile profile p get profile configuration get profiles if java equals profile get display name return profile CONTROL profile profile p get profile configuration get profiles INIT profile profile p get profile configuration get profiles TYPE profile NAME profile NAME profile RANGE p get profile configuration get profiles EXPR p get profile configuration get profiles CALL p get profile configuration NAME p get profile configuration NAME p NAME get profile configuration ARGUMENT LIST CALL get profiles NAME get profiles ARGUMENT LIST BLOCK IF if java equals profile get display name return profile CONDITION java equals profile get display name EXPR java equals profile get display name CALL equals profile get display name NAME equals ARGUMENT LIST ARGUMENT EXPR profile get display name CALL profile get display name NAME profile get display name NAME profile NAME get display name ARGUMENT LIST THEN return profile BLOCK RETURN return profile EXPR profile NAME profile RETURN return null EXPR null get the java profile from project if available root ROOT get det profile the compound profile java dobj get profile case project from nmod from get project mark available if advcl if get available param p the project root ROOT p compound p param det project the dep p project return the java profile root ROOT return det profile the compound profile java dobj return profile private JJ profile NN get VB java NN profile NN root ROOT get compound profile java dobj get profile project NN p NN for IN profile NN profile NN p NN get VB profile JJ configuration NN root ROOT get nsubj get p amod configuration profile dobj get configuration get VB profiles NNS root ROOT get dobj get profiles if IN java NN equals VBZ profile NN get VB display NN name NN root ROOT get nsubj get profile compound name display dobj get name return NN profile NN return NN null JJ get return ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml-java/src/org/argouml/language/java/reveng/classfile/ClassfileImport.java,459
DECL STMT SPECIFIER private TYPE j tabbed pane NAME j tabbed pane NAME tabs private JJ j NN tabbed VBD pane NN root ROOT tabbed nsubj tabbed j dobj tabbed pane tabs NNS,1,E1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/SettingsDialog.java,68
DECL STMT SPECIFIER private SPECIFIER static TYPE int NAME int NAME int INDEX NAME precedence private JJ static JJ int NN precedence NN,1,D1,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/main/Parser.java,40
COMMENT a token for notation settings DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME token showboldnames INIT EXPR a token for notation settings root ROOT token det token a case settings for compound settings notation nmod for token settings a token for notation settings root ROOT token det token a case settings for compound settings notation nmod for token settings public NN static JJ final JJ int NN token JJ showboldnames NNS root ROOT showboldnames amod showboldnames token,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/persistence/ArgoTokenTable.java,137
COMMENT a token for notation settings DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME token hidebidirectionalarrows INIT EXPR a token for notation settings root ROOT token det token a case settings for compound settings notation nmod for token settings public NN static JJ final JJ int NN token JJ hidebidirectionalarrows NNS root ROOT hidebidirectionalarrows amod hidebidirectionalarrows token,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/persistence/ArgoTokenTable.java,152
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK IF if attributes null attributes to source sb this new line sb CONDITION attributes null EXPR attributes null NAME attributes THEN attributes to source sb this new line sb BLOCK EXPR attributes to source sb CALL attributes to source sb NAME attributes to source NAME attributes NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR this trace modifiers this modifiers sb CALL this trace modifiers this modifiers sb NAME this trace modifiers NAME this NAME trace modifiers ARGUMENT LIST ARGUMENT EXPR this modifiers NAME this modifiers NAME this NAME modifiers ARGUMENT EXPR sb NAME sb EXPR this type to source sb CALL this type to source sb NAME this type to source NAME this NAME type NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR this names get to source sb CALL this names get NAME this names get NAME this NAME names NAME get ARGUMENT LIST ARGUMENT EXPR CALL to source sb NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR IF if params null string comma for int i i params size i sb append comma comma params get i to source sb CONDITION params null EXPR params null NAME params THEN string comma for int i i params size i sb append comma comma params get i to source sb BLOCK DECL STMT TYPE string NAME string NAME comma INIT EXPR FOR for int i i params size i sb append comma comma params get i to source sb CONTROL int i i params size i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i params size EXPR i params size NAME i CALL params size NAME params size NAME params NAME size ARGUMENT LIST INCR i EXPR i NAME i BLOCK EXPR sb append comma CALL sb append comma NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR comma NAME comma EXPR comma NAME comma EXPR params get i to source sb CALL params get i NAME params get NAME params NAME get ARGUMENT LIST ARGUMENT EXPR i NAME i CALL to source sb NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR this new line sb CALL this new line sb NAME this new line NAME this NAME new line ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR statement block to source sb CALL statement block to source sb NAME statement block to source NAME statement block NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN if IN attributes NNS null JJ attributes NNS to TO source NN root ROOT attributes case source to nmod to attributes source sb NN this DT new JJ line NN sb NN this DT trace NN modifiers NNS this DT modifiers NNS sb NN this DT type NN to TO source NN sb NN sb NN append IN root ROOT sb dep sb append this DT names NNS get VBP to TO source NN root ROOT source case source to sb NN sb NN append IN root ROOT sb dep sb append if IN params NNS null JJ string NN comma NN for IN int NN i LS i LS params NNS size NN root ROOT size compound size params i LS sb NN append IN root ROOT sb dep sb append comma NN comma NN params NNS get VBP root ROOT get nsubj get params i LS to TO source NN root ROOT source case source to sb NN sb NN append IN root ROOT sb dep sb append this DT new JJ line NN sb NN statement NN block NN to TO source NN root ROOT block compound block statement case source to nmod to block source sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/members/MethodNode.java,20
FUNCTION SPECIFIER public TYPE void NAME void NAME to source PARAMETER LIST string builder sb PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK FOR for t node this base node b base node node b to source sb CONTROL t node this INIT t node this TYPE t NAME t NAME node RANGE this EXPR this NAME this BLOCK DECL STMT TYPE base node NAME base node NAME b INIT base node node EXPR base node node NAME base node NAME node EXPR b to source sb CALL b to source sb NAME b to source NAME b NAME to source ARGUMENT LIST ARGUMENT EXPR sb NAME sb public NN void NN to TO source NN root ROOT source case source to string NN builder NN root ROOT builder compound builder string sb NN for IN t NN node NN this DT base NN node NN root ROOT node compound node base b NN base NN node NN root ROOT node compound node base node NN b NN to TO source NN root ROOT b case source to nmod to b source sb NN,1,B5,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/collections/NodeCollection.java,17
COMMENT returns a list of all targets returns an empty list if there are no targets if there are several targets then the first object by an iterator on the returned list or the zero th object in an array on this list is guaranteed to be the object returned by link get single target the value will be that of the new target s during a target set target added target removed notification since they are just that notifications that the target s has just changed return a list with all targets FUNCTION SPECIFIER public SPECIFIER synchronized TYPE list NAME list NAME get targets PARAMETER LIST BLOCK RETURN return collections unmodifiable list targets EXPR collections unmodifiable list targets CALL collections unmodifiable list targets NAME collections unmodifiable list NAME collections NAME unmodifiable list ARGUMENT LIST ARGUMENT EXPR targets NAME targets returns a list of all targets returns an empty list root ROOT returns det list a nsubj returns list case targets of det targets all nmod of list targets acl relcl returns returns det list an amod list empty dobj returns list returns a list of all targets returns an empty list root ROOT returns det list a nsubj returns list case targets of det targets all nmod of list targets acl relcl returns returns det list an amod list empty dobj returns list if there are no targets if there are several targets then the first root ROOT are mark are if expl are there neg targets no nsubj are targets mark are if expl are there advcl if are are amod targets several nsubj are targets advmod first then det first the dep targets first if there are no targets if there are several targets then the first root ROOT are mark are if expl are there neg targets no nsubj are targets mark are if expl are there advcl if are are amod targets several nsubj are targets advmod first then det first the dep targets first object by an iterator on the returned list or the zero th object root ROOT object case iterator by det iterator an nmod by object iterator case list on det list the amod list returned nmod on iterator list cc iterator or det object the nummod object zero det object th nmod by object object conj or iterator object in an array on this list is guaranteed to be the object returned root ROOT guaranteed case array in det array an nmod in guaranteed array case list on det list this nmod on array list auxpass guaranteed is mark object to cop object be det object the xcomp guaranteed object dep guaranteed returned by link get single target root ROOT link case link by acl link get amod target single dobj get target the value will be that of the new target s during a target set root ROOT be det value the nsubj be value aux be will dep be that case s of det s the amod s new compound s target nmod of that s case set during det set a compound set target nmod during s set target added target removed notification since they are just that root ROOT added nsubj added target nsubj removed target ccomp added removed dobj removed notification mark that since nsubj that they cop that are advmod that just advcl since removed that notifications that the target s has just changed root ROOT notifications dobj changed notifications ref notifications that det s the compound s target nsubj changed s aux changed has advmod changed just acl relcl notifications changed return a list with all targets root ROOT return det list a dobj return list case targets with det targets all nmod with list targets public NN synchronized VBN list NN get VB targets NNS root ROOT get dobj get targets return NN collections NNS unmodifiable JJ list NN root ROOT list compound list collections amod list unmodifiable targets NNS all no ANTONYM ANTONYM all several ANTONYM ANTONYM all zero ANTONYM ANTONYM no several ANTONYM ANTONYM first zero SYNONYM SYNONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/targetmanager/TargetManager.java,700
COMMENT the list of custom separators to use when tokenizing parameters DECL STMT SPECIFIER private TYPE final list custom separator SPECIFIER final NAME list custom separator NAME list ARGUMENT LIST ARGUMENT NAME custom separator NAME parameter custom sep the list of custom separators to use when tokenizing parameters root ROOT list det list the case separators of compound separators custom nmod of list separators mark use to acl to list use advmod parameters when amod parameters tokenizing advcl use parameters private JJ final JJ list NN custom NN separator NN root ROOT separator compound separator custom parameter NN custom NN sep NN root ROOT sep compound sep parameter compound sep custom,1,D1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/AbstractMessageNotationUml.java,140
COMMENT creator method for the project browser which optionally allows all components to be created without making a top level application window visible param splash true if we are allowed to show a splash screen param main application true to create a top level application false if integrated with something else param left bottom pane panel to place in the bottom left corner of the gui return the singleton instance of the projectbrowser FUNCTION SPECIFIER public SPECIFIER static TYPE project browser NAME project browser NAME make instance PARAMETER LIST splash screen splash boolean main application j panel left bottom pane PARAMETER splash screen splash TYPE splash screen NAME splash screen NAME splash PARAMETER boolean main application TYPE boolean NAME boolean NAME main application PARAMETER j panel left bottom pane TYPE j panel NAME j panel NAME left bottom pane BLOCK RETURN return new project browser argo uml splash main application left bottom pane EXPR new project browser argo uml splash main application left bottom pane CALL project browser argo uml splash main application left bottom pane NAME project browser ARGUMENT LIST ARGUMENT EXPR argo uml ARGUMENT EXPR splash NAME splash ARGUMENT EXPR main application NAME main application ARGUMENT EXPR left bottom pane NAME left bottom pane creator method for the project browser which optionally allows all root ROOT method compound method creator case browser for det browser the compound browser project nmod for method browser nsubj allows browser ref browser which advmod allows optionally acl relcl browser allows dobj allows all components to be created without making a top level application window root ROOT components mark created to auxpass created be acl to components created mark making without advcl without created making det window a amod window top compound window level compound window application dobj making window visible param splash root ROOT splash compound splash param true if we are allowed to show a splash screen root ROOT true mark allowed if nsubjpass allowed we nsubj xsubj show we auxpass allowed are advcl if true allowed mark show to xcomp allowed show det screen a compound screen splash dobj show screen param main application root ROOT application compound application param amod application main true to create a top level application false if integrated root ROOT true mark create to xcomp true create det application a amod application top compound application level dobj create application amod application false mark integrated if advcl if false integrated with something else root ROOT something case something with advmod something else param left bottom pane panel to place in the bottom left corner of the gui root ROOT left nsubj left param amod panel bottom compound panel pane dobj left panel case place to nmod to left place case corner in det corner the amod corner bottom amod corner left nmod in left corner case gui of det gui the nmod of corner gui return the singleton instance of the projectbrowser root ROOT return det instance the compound instance singleton dobj return instance case projectbrowser of det projectbrowser the nmod of instance projectbrowser public NN static JJ project NN browser NN root ROOT browser compound browser project make VB instance NN root ROOT make dobj make instance splash NN screen NN root ROOT screen compound screen splash splash NN boolean NN main JJ application NN root ROOT application amod application main j NN panel NN root ROOT panel compound panel j left RB bottom JJ pane NN root ROOT pane advmod pane left amod pane bottom return NN new JJ project NN browser NN root ROOT browser compound browser project argo NN uml NN root ROOT uml compound uml argo splash NN main JJ application NN root ROOT application amod application main left RB bottom JJ pane NN root ROOT pane advmod pane left amod pane bottom be making ANTONYM ANTONYM left place ANTONYM ANTONYM left return ANTONYM ANTONYM level place ANTONYM ANTONYM level show ANTONYM ANTONYM making are ANTONYM ANTONYM making left ANTONYM ANTONYM making return ANTONYM ANTONYM making show ANTONYM ANTONYM making top ANTONYM ANTONYM place bottom ANTONYM ANTONYM show place ANTONYM ANTONYM show return ANTONYM ANTONYM top bottom ANTONYM ANTONYM top bottom ANTONYM ANTONYM top left ANTONYM ANTONYM top return ANTONYM ANTONYM top screen ANTONYM ANTONYM true false ANTONYM ANTONYM level true SYNONYM SYNONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/ProjectBrowser.java,423
FUNCTION SPECIFIER private TYPE org eclipse uml uml class NAME org eclipse uml uml class NAME org NAME eclipse NAME uml NAME uml NAME class NAME get metaclass PARAMETER LIST object base class PARAMETER object base class TYPE object NAME object NAME base class BLOCK DECL STMT TYPE org eclipse uml uml class NAME org eclipse uml uml class NAME org NAME eclipse NAME uml NAME uml NAME class NAME metaclass INIT null EXPR null IF if base class instanceof string uri uri uri create uri uml resource uml metamodel uri resource set rs model impl get editing domain get resource set resource res rs get resource uri true model m model ecore util get object by type res get contents uml package literals package metaclass org eclipse uml uml class m get owned type string base class else if base class instanceof org eclipse uml uml class metaclass org eclipse uml uml class base class CONDITION base class instanceof string EXPR base class instanceof string NAME base class NAME string THEN uri uri uri create uri uml resource uml metamodel uri resource set rs model impl get editing domain get resource set resource res rs get resource uri true model m model ecore util get object by type res get contents uml package literals package metaclass org eclipse uml uml class m get owned type string base class BLOCK DECL STMT TYPE uri NAME uri NAME uri INIT uri create uri uml resource uml metamodel uri EXPR uri create uri uml resource uml metamodel uri CALL uri create uri uml resource uml metamodel uri NAME uri create uri NAME uri NAME create uri ARGUMENT LIST ARGUMENT EXPR uml resource uml metamodel uri NAME uml resource uml metamodel uri NAME uml resource NAME uml metamodel uri DECL STMT TYPE resource set NAME resource set NAME rs INIT model impl get editing domain get resource set EXPR model impl get editing domain get resource set CALL model impl get editing domain NAME model impl get editing domain NAME model impl NAME get editing domain ARGUMENT LIST CALL get resource set NAME get resource set ARGUMENT LIST DECL STMT TYPE resource NAME resource NAME res INIT rs get resource uri true EXPR rs get resource uri true CALL rs get resource uri true NAME rs get resource NAME rs NAME get resource ARGUMENT LIST ARGUMENT EXPR uri NAME uri ARGUMENT EXPR true DECL STMT TYPE model NAME model NAME m INIT model ecore util get object by type res get contents uml package literals package EXPR model ecore util get object by type res get contents uml package literals package NAME model CALL ecore util get object by type res get contents uml package literals package NAME ecore util get object by type NAME ecore util NAME get object by type ARGUMENT LIST ARGUMENT EXPR res get contents CALL res get contents NAME res get contents NAME res NAME get contents ARGUMENT LIST ARGUMENT EXPR uml package literals package NAME uml package literals package NAME uml package NAME literals NAME package EXPR metaclass org eclipse uml uml class m get owned type string base class NAME metaclass NAME org eclipse uml uml class NAME org NAME eclipse NAME uml NAME uml NAME class CALL m get owned type string base class NAME m get owned type NAME m NAME get owned type ARGUMENT LIST ARGUMENT EXPR string base class NAME string NAME base class ELSEIF else if base class instanceof org eclipse uml uml class metaclass org eclipse uml uml class base class IF if base class instanceof org eclipse uml uml class metaclass org eclipse uml uml class base class CONDITION base class instanceof org eclipse uml uml class EXPR base class instanceof org eclipse uml uml class NAME base class NAME org eclipse uml uml class NAME org NAME eclipse NAME uml NAME uml NAME class THEN metaclass org eclipse uml uml class base class BLOCK EXPR metaclass org eclipse uml uml class base class NAME metaclass NAME org eclipse uml uml class NAME org NAME eclipse NAME uml NAME uml NAME class NAME base class RETURN return metaclass EXPR metaclass NAME metaclass private JJ org NN eclipse NN uml NN uml NN class NN get VB metaclass NN root ROOT get dobj get metaclass object NN base NN class NN root ROOT class compound class base org NN eclipse NN uml NN uml NN class NN metaclass NN null JJ if IN base NN class NN root ROOT class compound class base instanceof NN string NN uri NN uri NN uri NN create VB uri NN root ROOT create nsubj create uri dobj create uri uml NN resource NN uml NN root ROOT uml compound uml uml compound uml resource metamodel NN uri NN root ROOT uri compound uri metamodel resource NN set NN root ROOT set compound set resource rs NNS model NN impl NN get VB editing NN domain NN root ROOT get compound impl model nsubj get impl compound domain editing dobj get domain get VB resource NN set NN root ROOT get compound set resource dobj get set resource NN res NNS rs NNS get VBP resource NN root ROOT get nsubj get rs dobj get resource uri NN true JJ model NN m NN model NN ecore NN util NN get VB object NN by IN type NN root ROOT get compound util ecore nsubj get util dobj get object case type by nmod by get type res NNS get VBP contents NNS root ROOT get nsubj get res dobj get contents uml NN package NN literals NNS package NN metaclass NN org NN eclipse NN uml NN uml NN class NN m NN get VB owned VBN type NN root ROOT get amod type owned dobj get type string NN base NN class NN root ROOT class compound class base else RB if IN base NN class NN root ROOT class compound class base instanceof NN org NN eclipse NN uml NN uml NN class NN metaclass NN org NN eclipse NN uml NN uml NN class NN base NN class NN root ROOT class compound class base return NN metaclass NN,1,A1,ArgoUML0.34/argouml/src/argouml-core-model-euml/src/org/argouml/model/euml/ExtensionMechanismsHelperEUMLImpl.java,500
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE set critic NAME set critic NAME set ARGUMENT LIST ARGUMENT NAME critic NAME get critics PARAMETER LIST BLOCK IF if critics null load critics CONDITION critics null EXPR critics null NAME critics THEN load critics BLOCK EXPR load critics CALL load critics NAME load critics ARGUMENT LIST RETURN return super get critics EXPR super get critics CALL super get critics NAME super get critics NAME super NAME get critics ARGUMENT LIST override NN public NN set NN critic NN get VB critics NNS root ROOT get dobj get critics if IN critics NNS null JJ load NN critics NNS root ROOT critics compound critics load return NN super JJ get VB critics NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/cognitive/critics/ProfileCodeGeneration.java,147
FUNCTION TYPE test if the component wants to set the content length public boolean NAME COMMENT test if the component wants to set the content length SPECIFIER public NAME boolean NAME should set content length PARAMETER LIST BLOCK RETURN return false EXPR false test if the component wants to set the content length root ROOT test mark wants if det component the nsubj wants component advcl if test wants mark set to xcomp wants set det content the dobj set content dobj wants length nsubj xsubj set length public NN boolean NN should MD set VB content JJ length NN root ROOT set aux set should amod length content dobj set length return NN false JJ,1,B1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/reading/AbstractReader.java,105
COMMENT exception classes DECL STMT SPECIFIER private TYPE class NAME class NAME class INDEX NAME clazz exception classes root ROOT classes compound classes exception private JJ class NN clazz NN,1,D1,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/selection/ExceptionSelector.java,59
FUNCTION SPECIFIER public TYPE enumeration NAME enumeration NAME get locales PARAMETER LIST BLOCK RETURN return this req get locales EXPR this req get locales CALL this req get locales NAME this req get locales NAME this NAME req NAME get locales ARGUMENT LIST public NN enumeration NN get VB locales NNS root ROOT get dobj get locales return NN this DT req NN get VB locales NNS,0,N/A,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/http/HttpRequest.java,497
COMMENT utility function to begin a code group code tag pair with added attributes FUNCTION SPECIFIER private TYPE void NAME void NAME start group PARAMETER LIST string name attributes atts PARAMETER string name TYPE string NAME string NAME name PARAMETER attributes atts TYPE attributes NAME attributes NAME atts THROWS throws sax exception ARGUMENT EXPR sax exception NAME sax exception BLOCK DECL STMT TYPE attributes impl NAME attributes impl NAME ai INIT atts null new attributes impl new attributes impl atts EXPR atts null new attributes impl new attributes impl atts TERNARY atts null new attributes impl new attributes impl atts CONDITION atts null EXPR atts null NAME atts THEN new attributes impl EXPR new attributes impl CALL attributes impl NAME attributes impl ARGUMENT LIST ELSE new attributes impl atts EXPR new attributes impl atts CALL attributes impl atts NAME attributes impl ARGUMENT LIST ARGUMENT EXPR atts NAME atts EXPR ai add attribute namespace name name cdata name CALL ai add attribute namespace name name cdata name NAME ai add attribute NAME ai NAME add attribute ARGUMENT LIST ARGUMENT EXPR namespace NAME namespace ARGUMENT EXPR name ARGUMENT EXPR name ARGUMENT EXPR cdata ARGUMENT EXPR name NAME name EXPR super content handler start element namespace group group ai CALL super content handler start element namespace group group ai NAME super content handler start element NAME super NAME content handler NAME start element ARGUMENT LIST ARGUMENT EXPR namespace NAME namespace ARGUMENT EXPR group ARGUMENT EXPR group ARGUMENT EXPR ai NAME ai utility function to begin a code group code tag pair with added attributes root ROOT function compound function utility mark begin to acl to function begin det pair a compound pair code compound pair group compound pair code compound pair tag dobj begin pair case attributes with amod attributes added nmod with pair attributes utility function to begin a code group code tag pair with added attributes root ROOT function compound function utility mark begin to acl to function begin det pair a compound pair code compound pair group compound pair code compound pair tag dobj begin pair case attributes with amod attributes added nmod with pair attributes private JJ void NN start VB group NN root ROOT start dobj start group string NN name NN attributes NNS atts NNS throws VBZ sax NN exception NN root ROOT exception compound exception sax attributes NNS impl VBP root ROOT impl nsubj impl attributes ai VBP atts NNS null JJ new JJ attributes NNS impl VBP root ROOT impl nsubj impl attributes new JJ attributes NNS impl VBP root ROOT impl nsubj impl attributes atts NNS ai VBP add VB attribute NN root ROOT add aux add ai dobj add attribute namespace NN name NN name NN cdata NN name NN super JJ content NN handler NN start NN element NN namespace NN group NN group NN ai VBP name throws ANTONYM ANTONYM,0,N/A,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/generation/StatusGenerator.java,615
FUNCTION SPECIFIER public TYPE enumeration NAME enumeration NAME get headers PARAMETER LIST string name PARAMETER string name TYPE string NAME string NAME name BLOCK RETURN return request get headers name EXPR request get headers name CALL request get headers name NAME request get headers NAME request NAME get headers ARGUMENT LIST ARGUMENT EXPR name NAME name public NN enumeration NN get VB headers NNS root ROOT get dobj get headers string NN name NN return NN request NN get VB headers NNS root ROOT get nsubj get request dobj get headers name NN,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/processing/impl/MockProcessInfoProvider.java,169
COMMENT generates sax events from the xm lizable and handle sax exception param source the data FUNCTION SPECIFIER public SPECIFIER static TYPE void NAME void NAME to sax PARAMETER LIST xm lizable source content handler handler PARAMETER xm lizable source TYPE xm lizable NAME xm lizable NAME source PARAMETER content handler handler TYPE content handler NAME content handler NAME handler THROWS throws sax exception io exception processing exception ARGUMENT EXPR sax exception NAME sax exception ARGUMENT EXPR io exception NAME io exception ARGUMENT EXPR processing exception NAME processing exception BLOCK TRY try source to sax handler catch sax exception e unwrap processing exception io exception and extreme cases of sax exceptions handle source exception see also handle sax exception final exception cause e get exception if cause null if cause instanceof source exception throw handle source exception cause if cause instanceof processing exception throw processing exception cause if cause instanceof io exception throw io exception cause if cause instanceof sax exception throw sax exception cause throw original sax exception throw e BLOCK EXPR source to sax handler CALL source to sax handler NAME source to sax NAME source NAME to sax ARGUMENT LIST ARGUMENT EXPR handler NAME handler CATCH catch sax exception e unwrap processing exception io exception and extreme cases of sax exceptions handle source exception see also handle sax exception final exception cause e get exception if cause null if cause instanceof source exception throw handle source exception cause if cause instanceof processing exception throw processing exception cause if cause instanceof io exception throw io exception cause if cause instanceof sax exception throw sax exception cause throw original sax exception throw e PARAMETER LIST sax exception e PARAMETER sax exception e TYPE sax exception NAME sax exception NAME e BLOCK COMMENT unwrap processing exception io exception and extreme cases of sax exceptions COMMENT handle source exception COMMENT see also handle sax exception DECL STMT TYPE final exception SPECIFIER final NAME exception NAME cause INIT e get exception EXPR e get exception CALL e get exception NAME e get exception NAME e NAME get exception ARGUMENT LIST IF if cause null if cause instanceof source exception throw handle source exception cause if cause instanceof processing exception throw processing exception cause if cause instanceof io exception throw io exception cause if cause instanceof sax exception throw sax exception cause CONDITION cause null EXPR cause null NAME cause THEN if cause instanceof source exception throw handle source exception cause if cause instanceof processing exception throw processing exception cause if cause instanceof io exception throw io exception cause if cause instanceof sax exception throw sax exception cause BLOCK IF if cause instanceof source exception throw handle source exception cause CONDITION cause instanceof source exception EXPR cause instanceof source exception NAME cause NAME source exception THEN throw handle source exception cause BLOCK THROW throw handle source exception cause EXPR handle source exception cause CALL handle source exception cause NAME handle ARGUMENT LIST ARGUMENT EXPR source exception cause NAME source exception NAME cause IF if cause instanceof processing exception throw processing exception cause CONDITION cause instanceof processing exception EXPR cause instanceof processing exception NAME cause NAME processing exception THEN throw processing exception cause BLOCK THROW throw processing exception cause EXPR processing exception cause NAME processing exception NAME cause IF if cause instanceof io exception throw io exception cause CONDITION cause instanceof io exception EXPR cause instanceof io exception NAME cause NAME io exception THEN throw io exception cause BLOCK THROW throw io exception cause EXPR io exception cause NAME io exception NAME cause IF if cause instanceof sax exception throw sax exception cause CONDITION cause instanceof sax exception EXPR cause instanceof sax exception NAME cause NAME sax exception THEN throw sax exception cause BLOCK THROW throw sax exception cause EXPR sax exception cause NAME sax exception NAME cause COMMENT throw original sax exception THROW throw e EXPR e NAME e generates sax events from the xm lizable and handle sax exception root ROOT generates compound events sax dobj generates events case xm from det xm the nmod from events xm amod xm lizable cc generates and conj and generates handle compound exception sax dobj handle exception param source the data root ROOT source compound source param det data the dobj source data public NN static JJ void NN to TO sax NN root ROOT sax case sax to xm NN lizable JJ root ROOT lizable nmod npmod lizable xm source NN content JJ handler NN root ROOT handler amod handler content handler NN throws VBZ sax NN exception NN root ROOT exception compound exception sax io NN exception NN root ROOT exception compound exception io processing VBG exception NN root ROOT processing dobj processing exception try VB source NN to TO sax NN root ROOT source case sax to nmod to source sax handler NN catch NN sax NN exception NN root ROOT exception compound exception sax e SYM unwrap processing exception io exception and extreme cases of sax exceptions root ROOT exception compound exception unwrap compound exception processing compound exception exception compound exception io cc exception and amod cases extreme conj and exception cases case exceptions of compound exceptions sax nmod of cases exceptions handle source exception root ROOT handle compound exception source dobj handle exception see also handle sax exception root ROOT see advmod handle also ccomp see handle compound exception sax dobj handle exception final JJ exception NN cause NN e LS get VB exception NN root ROOT e root e get dobj get exception if IN cause NN null JJ if IN cause NN instanceof NN source NN exception NN root ROOT exception compound exception source throw VB handle VB source NN exception NN root ROOT exception compound exception source cause NN if IN cause NN instanceof NN processing VBG exception NN root ROOT processing dobj processing exception throw VB processing VBG exception NN root ROOT processing dobj processing exception cause NN if IN cause NN instanceof NN io NN exception NN root ROOT exception compound exception io throw VB io NN exception NN root ROOT exception compound exception io cause NN if IN cause NN instanceof NN sax NN exception NN root ROOT exception compound exception sax throw VB sax NN exception NN root ROOT exception compound exception sax cause NN throw original sax exception root ROOT throw amod exception original compound exception sax dobj throw exception throw VB e SYM generates throws ANTONYM ANTONYM,1,B5,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/util/SourceUtil.java,109
DECL STMT SPECIFIER public SPECIFIER static TYPE string NAME string NAME get view ARGUMENT LIST ARGUMENT EXPR string query NAME string NAME query IF if query null int index query index of constants view param if index index query char at index query length index constants view param length query char at index constants view param length string tmp query substring index constants view param length index tmp index of if index return tmp substring index else return tmp else return env get view else return env get view CONDITION query null EXPR query null NAME query THEN int index query index of constants view param if index index query char at index query length index constants view param length query char at index constants view param length string tmp query substring index constants view param length index tmp index of if index return tmp substring index else return tmp else return env get view BLOCK DECL STMT TYPE int NAME int NAME index INIT query index of constants view param EXPR query index of constants view param CALL query index of constants view param NAME query index of NAME query NAME index of ARGUMENT LIST ARGUMENT EXPR constants view param NAME constants view param NAME constants NAME view param IF if index index query char at index query length index constants view param length query char at index constants view param length string tmp query substring index constants view param length index tmp index of if index return tmp substring index else return tmp else return env get view CONDITION index index query char at index query length index constants view param length query char at index constants view param length EXPR index index query char at index query length index constants view param length query char at index constants view param length NAME index NAME index CALL query char at index NAME query char at NAME query NAME char at ARGUMENT LIST ARGUMENT EXPR index NAME index CALL query length NAME query length NAME query NAME length ARGUMENT LIST NAME index CALL constants view param length NAME constants view param length NAME constants NAME view param NAME length ARGUMENT LIST CALL query char at index constants view param length NAME query char at NAME query NAME char at ARGUMENT LIST ARGUMENT EXPR index constants view param length NAME index CALL constants view param length NAME constants view param length NAME constants NAME view param NAME length ARGUMENT LIST THEN string tmp query substring index constants view param length index tmp index of if index return tmp substring index else return tmp BLOCK DECL STMT TYPE string NAME string NAME tmp INIT query substring index constants view param length EXPR query substring index constants view param length CALL query substring index constants view param length NAME query substring NAME query NAME substring ARGUMENT LIST ARGUMENT EXPR index constants view param length NAME index CALL constants view param length NAME constants view param length NAME constants NAME view param NAME length ARGUMENT LIST EXPR index tmp index of NAME index CALL tmp index of NAME tmp index of NAME tmp NAME index of ARGUMENT LIST ARGUMENT EXPR IF if index return tmp substring index else return tmp CONDITION index EXPR index NAME index THEN return tmp substring index BLOCK RETURN return tmp substring index EXPR tmp substring index CALL tmp substring index NAME tmp substring NAME tmp NAME substring ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR index NAME index ELSE else return tmp BLOCK RETURN return tmp EXPR tmp NAME tmp ELSE else return env get view BLOCK RETURN return env get view EXPR env get view CALL env get view NAME env get view NAME env NAME get view ARGUMENT LIST ELSE else return env get view BLOCK RETURN return env get view EXPR env get view CALL env get view NAME env get view NAME env NAME get view ARGUMENT LIST public NN static JJ string NN get VB view NN root ROOT get dobj get view string NN query NN if IN query NN null JJ int NN index NN query NN index NN of IN root ROOT index compound index query acl index of constants NNS view VBP root ROOT view nsubj view constants param NN if IN index NN index NN query NN char NN at IN root ROOT char compound char query dep char at index NN query NN length NN root ROOT length compound length query index NN constants NNS view VBP root ROOT view nsubj view constants param NN length NN root ROOT length compound length param query NN char NN at IN root ROOT char compound char query dep char at index NN constants NNS view VBP root ROOT view nsubj view constants param NN length NN root ROOT length compound length param string NN tmp NN query NN substring NN root ROOT substring compound substring query index NN constants NNS view VBP root ROOT view nsubj view constants param NN length NN root ROOT length compound length param index NN tmp NN index NN of IN root ROOT index compound index tmp acl index of if IN index NN return NN tmp NN substring NN root ROOT substring compound substring tmp index NN else RB return NN tmp NN else RB return NN env NN get VB view NN root ROOT get nsubj get env dobj get view else RB return NN env NN get VB view NN root ROOT get nsubj get env dobj get view,1,B7,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/impl/SitemapSourceInfo.java,131
FUNCTION SPECIFIER public TYPE void NAME void NAME to sax PARAMETER LIST service manager manager source source content handler handler parameters type parameters boolean filter document event PARAMETER service manager manager source source TYPE service manager manager source NAME service manager NAME manager NAME source NAME source PARAMETER content handler handler TYPE content handler NAME content handler NAME handler PARAMETER parameters type parameters TYPE parameters NAME parameters NAME type parameters PARAMETER boolean filter document event TYPE boolean NAME boolean NAME filter document event THROWS throws sax exception io exception processing exception ARGUMENT EXPR sax exception NAME sax exception ARGUMENT EXPR io exception NAME io exception ARGUMENT EXPR processing exception NAME processing exception BLOCK COMMENT test for url rewriting IF if type parameters null type parameters get parameter url rewriter parameter mode null null handler new url rewriter type parameters handler CONDITION type parameters null type parameters get parameter url rewriter parameter mode null null EXPR type parameters null type parameters get parameter url rewriter parameter mode null null NAME type parameters CALL type parameters get parameter url rewriter parameter mode null NAME type parameters get parameter NAME type parameters NAME get parameter ARGUMENT LIST ARGUMENT EXPR url rewriter parameter mode NAME url rewriter parameter mode NAME url rewriter NAME parameter mode ARGUMENT EXPR null THEN handler new url rewriter type parameters handler BLOCK EXPR handler new url rewriter type parameters handler NAME handler CALL url rewriter type parameters handler NAME url rewriter ARGUMENT LIST ARGUMENT EXPR type parameters NAME type parameters ARGUMENT EXPR handler NAME handler DECL STMT TYPE string NAME string NAME mime type hint INIT null EXPR null IF if type parameters null mime type hint type parameters get parameter mime type mime type hint CONDITION type parameters null EXPR type parameters null NAME type parameters THEN mime type hint type parameters get parameter mime type mime type hint BLOCK EXPR mime type hint type parameters get parameter mime type mime type hint NAME mime type hint CALL type parameters get parameter mime type mime type hint NAME type parameters get parameter NAME type parameters NAME get parameter ARGUMENT LIST ARGUMENT EXPR mime type ARGUMENT EXPR mime type hint NAME mime type hint IF if filter document event include xml consumer filter new include xml consumer handler to sax manager source mime type hint filter else to sax manager source mime type hint handler CONDITION filter document event EXPR filter document event NAME filter document event THEN include xml consumer filter new include xml consumer handler to sax manager source mime type hint filter BLOCK DECL STMT TYPE include xml consumer NAME include xml consumer NAME filter INIT new include xml consumer handler EXPR new include xml consumer handler CALL include xml consumer handler NAME include xml consumer ARGUMENT LIST ARGUMENT EXPR handler NAME handler EXPR to sax manager source mime type hint filter CALL to sax manager source mime type hint filter NAME to sax ARGUMENT LIST ARGUMENT EXPR manager NAME manager ARGUMENT EXPR source NAME source ARGUMENT EXPR mime type hint NAME mime type hint ARGUMENT EXPR filter NAME filter ELSE else to sax manager source mime type hint handler BLOCK EXPR to sax manager source mime type hint handler CALL to sax manager source mime type hint handler NAME to sax ARGUMENT LIST ARGUMENT EXPR manager NAME manager ARGUMENT EXPR source NAME source ARGUMENT EXPR mime type hint NAME mime type hint ARGUMENT EXPR handler NAME handler static JJ public NN void NN to TO sax NN root ROOT sax case sax to service NN manager NN root ROOT manager compound manager service manager NN source NN source NN content JJ handler NN root ROOT handler amod handler content handler NN parameters NNS type NN parameters NNS root ROOT parameters compound parameters type boolean NN filter NN document NN event NN root ROOT event compound event filter compound event document throws VBZ sax NN exception NN root ROOT exception compound exception sax io NN exception NN root ROOT exception compound exception io processing VBG exception NN root ROOT processing dobj processing exception test for url rewriting root ROOT rewriting nsubj rewriting test case url for nmod for test url if IN type NN parameters NNS root ROOT parameters compound parameters type null JJ type NN parameters NNS get VBP parameter NN root ROOT get compound parameters type nsubj get parameters dobj get parameter url NN rewriter NN parameter NN root ROOT parameter compound parameter url compound parameter rewriter mode NN null JJ null JJ handler NN new JJ url NN rewriter NN root ROOT rewriter compound rewriter url type NN parameters NNS root ROOT parameters compound parameters type handler NN string NN mime NN type NN hint NN root ROOT hint compound hint mime compound hint type null JJ if IN type NN parameters NNS root ROOT parameters compound parameters type null JJ mime NN type NN hint NN root ROOT hint compound hint mime compound hint type type NN parameters NNS get VBP parameter NN root ROOT get compound parameters type nsubj get parameters dobj get parameter mime NN type NN root ROOT type compound type mime mime NN type NN hint NN root ROOT hint compound hint mime compound hint type if IN filter NN document NN event NN root ROOT event compound event filter compound event document include VB xml NN consumer NN root ROOT include compound consumer xml dobj include consumer filter NN new JJ include VB xml NN consumer NN root ROOT include compound consumer xml dobj include consumer handler NN to TO sax NN root ROOT sax case sax to manager NN source NN mime NN type NN hint NN root ROOT hint compound hint mime compound hint type filter NN else RB to TO sax NN root ROOT sax case sax to manager NN source NN mime NN type NN hint NN root ROOT hint compound hint mime compound hint type handler NN,1,B5,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/util/SourceUtil.java,80
COMMENT non javadoc see org apache cocoon environment environment get output stream int FUNCTION SPECIFIER public TYPE output stream NAME output stream NAME get output stream PARAMETER LIST int buffer size PARAMETER int buffer size TYPE int NAME int NAME buffer size THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK COMMENT this method could be called several times during request processing COMMENT with differing values of buffer size and should handle this situation COMMENT correctly IF if buffer size if this secure output stream null this secure output stream new buffered output stream this output stream return this secure output stream else if buffer size discard secure output stream if it was created before if this secure output stream null this secure output stream null return this output stream else fixme triple buffering anyone this output stream new java io buffered output stream this output stream buffer size return this output stream CONDITION buffer size EXPR buffer size NAME buffer size THEN if this secure output stream null this secure output stream new buffered output stream this output stream return this secure output stream BLOCK IF if this secure output stream null this secure output stream new buffered output stream this output stream CONDITION this secure output stream null EXPR this secure output stream null NAME this secure output stream NAME this NAME secure output stream THEN this secure output stream new buffered output stream this output stream BLOCK EXPR this secure output stream new buffered output stream this output stream NAME this secure output stream NAME this NAME secure output stream CALL buffered output stream this output stream NAME buffered output stream ARGUMENT LIST ARGUMENT EXPR this output stream NAME this output stream NAME this NAME output stream RETURN return this secure output stream EXPR this secure output stream NAME this secure output stream NAME this NAME secure output stream ELSEIF else if buffer size discard secure output stream if it was created before if this secure output stream null this secure output stream null return this output stream IF if buffer size discard secure output stream if it was created before if this secure output stream null this secure output stream null return this output stream CONDITION buffer size EXPR buffer size NAME buffer size THEN discard secure output stream if it was created before if this secure output stream null this secure output stream null return this output stream BLOCK COMMENT discard secure output stream if it was created before IF if this secure output stream null this secure output stream null CONDITION this secure output stream null EXPR this secure output stream null NAME this secure output stream NAME this NAME secure output stream THEN this secure output stream null BLOCK EXPR this secure output stream null NAME this secure output stream NAME this NAME secure output stream RETURN return this output stream EXPR this output stream NAME this output stream NAME this NAME output stream ELSE else fixme triple buffering anyone this output stream new java io buffered output stream this output stream buffer size return this output stream BLOCK COMMENT fixme triple buffering anyone EXPR this output stream new java io buffered output stream this output stream buffer size NAME this output stream NAME this NAME output stream CALL java io buffered output stream this output stream buffer size NAME java io buffered output stream NAME java NAME io NAME buffered output stream ARGUMENT LIST ARGUMENT EXPR this output stream NAME this output stream NAME this NAME output stream ARGUMENT EXPR buffer size NAME buffer size RETURN return this output stream EXPR this output stream NAME this output stream NAME this NAME output stream non javadoc root ROOT javadoc amod javadoc non see org apache cocoon environment environment get output stream int root ROOT see advmod apache org amod environment apache compound environment cocoon compound environment environment nsubj get environment ccomp see get compound int output compound int stream dobj get int public NN output NN stream NN root ROOT stream compound stream output get VB output NN stream NN root ROOT get compound stream output dobj get stream int NN buffer NN size NN root ROOT size compound size buffer throws VBZ io NN exception NN root ROOT exception compound exception io this method could be called several times during request processing root ROOT called det method this nsubjpass called method aux called could auxpass called be amod times several nmod tmod called times case processing during compound processing request nmod during times processing with differing values of buffer size and should handle this situation root ROOT values case values with amod values differing case size of compound size buffer nmod of values size cc values and aux handle should conj and values handle det situation this dobj handle situation correctly if IN buffer NN size NN root ROOT size compound size buffer if IN this DT secure JJ output NN stream NN null JJ this DT secure JJ output NN stream NN new JJ buffered JJ output NN stream NN root ROOT stream amod stream buffered compound stream output this DT output NN stream NN return NN this DT secure JJ output NN stream NN else RB if IN buffer NN size NN root ROOT size compound size buffer discard secure output stream if it was created before root ROOT discard amod stream secure compound stream output dobj discard stream mark created if nsubjpass created it auxpass created was advcl if discard created advmod created before if IN this DT secure JJ output NN stream NN null JJ this DT secure JJ output NN stream NN null JJ return NN this DT output NN stream NN else RB fixme triple buffering anyone root ROOT fixme dep fixme triple dep triple buffering dobj buffering anyone this DT output NN stream NN new JJ java NN io NN buffered JJ output NN stream NN root ROOT stream compound stream java compound stream io amod stream buffered compound stream output this DT output NN stream NN buffer NN size NN root ROOT size compound size buffer return NN this DT output NN stream NN see throws ANTONYM ANTONYM,1,A1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/AbstractEnvironment.java,224
COMMENT if a redirect should happen this returns the url otherwise code null code is returned FUNCTION SPECIFIER public TYPE string NAME string NAME get redirect url PARAMETER LIST BLOCK RETURN return this redirect url EXPR this redirect url NAME this redirect url NAME this NAME redirect url if a redirect should happen this returns the url root ROOT happen mark happen if det redirect a nsubj happen redirect aux happen should nsubj returns this ccomp happen returns det url the dobj returns url otherwise code null code is returned root ROOT returned advmod returned otherwise compound code code amod code null nsubjpass returned code auxpass returned is public NN string NN get VB redirect VB url NN root ROOT get xcomp get redirect dobj redirect url return NN this DT redirect NN url NN happen returned ANTONYM ANTONYM happen returns ANTONYM ANTONYM,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/wrapper/EnvironmentWrapper.java,178
COMMENT see org apache cocoon components treeprocessor tree builder get enter sitemap event listeners FUNCTION SPECIFIER public TYPE list NAME list NAME get enter sitemap event listeners PARAMETER LIST BLOCK COMMENT we make a copy here so we can clear recylce the list after the COMMENT sitemap is build RETURN return list array list this enter sitemap event listeners clone EXPR list array list this enter sitemap event listeners clone CALL list array list this enter sitemap event listeners NAME list ARGUMENT LIST ARGUMENT EXPR array list this enter sitemap event listeners NAME array list NAME this enter sitemap event listeners NAME this NAME enter sitemap event listeners CALL clone NAME clone ARGUMENT LIST see org apache cocoon components treeprocessor tree builder get enter sitemap event listeners root ROOT see advmod apache org amod components apache compound components cocoon dobj see components amod builder treeprocessor compound builder tree nsubj enter builder aux enter get acl relcl components enter compound listeners sitemap compound listeners event dobj enter listeners public NN list NN get VB enter VB sitemap NN event NN listeners NNS root ROOT enter aux enter get compound listeners sitemap compound listeners event dobj enter listeners we make a copy here so we can clear recylce the list after the root ROOT make nsubj make we det copy a dobj make copy advmod make here mark clear so nsubj clear we aux clear can advcl so make clear xcomp clear recylce det list the dobj recylce list case the after nmod after recylce the sitemap is build root ROOT build nsubj build sitemap aux build is return NN list NN array NN list NN root ROOT list compound list array this DT enter VBP sitemap JJ event NN listeners NNS clone NN,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/treeprocessor/sitemap/SitemapLanguage.java,236
COMMENT an alias for the component role DECL STMT SPECIFIER private TYPE string NAME string NAME alias an alias for the component role root ROOT alias det alias an case role for det role the compound role component nmod for alias role an alias for the component role root ROOT alias det alias an case role for det role the compound role component nmod for alias role private JJ string NN alias IN component role ANTONYM ANTONYM,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/core/container/spring/avalon/ComponentInfo.java,92
FUNCTION SPECIFIER public TYPE string NAME string NAME get id PARAMETER LIST BLOCK EXPR check valid CALL check valid NAME check valid ARGUMENT LIST RETURN return id EXPR id NAME id public NN string NN get VB id NN root ROOT get dobj get id check NN valid JJ root ROOT valid nmod npmod valid check return NN id NN,1,A1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/test/java/org/apache/cocoon/environment/mock/MockSession.java,45
COMMENT see org apache cocoon environment request get request uri FUNCTION SPECIFIER public TYPE string NAME string NAME get request uri PARAMETER LIST BLOCK IF if this environment null return request uri CONDITION this environment null EXPR this environment null NAME this environment NAME this NAME environment THEN return request uri BLOCK RETURN return request uri EXPR request uri NAME request uri RETURN return this environment get uri EXPR this environment get uri CALL this environment get uri NAME this environment get uri NAME this NAME environment NAME get uri ARGUMENT LIST see org apache cocoon environment request get request uri root ROOT see advmod apache org amod request apache compound request cocoon compound request environment nsubj get request ccomp see get compound uri request dobj get uri public NN string NN get VB request NN uri NN root ROOT get compound uri request dobj get uri if IN this DT environment NN null JJ return NN request NN uri NN root ROOT uri compound uri request return NN this DT environment NN get VB uri NN,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/test/java/org/apache/cocoon/environment/mock/MockRequest.java,396
COMMENT list of source locations that need to be resolved DECL STMT SPECIFIER protected TYPE array list NAME array list NAME need resolve INIT new array list EXPR new array list CALL array list NAME array list ARGUMENT LIST list of source locations that need to be resolved root ROOT list case locations of compound locations source nmod of list locations nsubj need locations nsubjpass xsubj resolved locations ref locations that acl relcl locations need mark resolved to auxpass resolved be xcomp need resolved protected VBN array NN list NN root ROOT list compound list array need NN resolve NN root ROOT resolve compound resolve need new JJ array NN list NN root ROOT list compound list array,1,D1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/flow/AbstractInterpreter.java,67
FUNCTION SPECIFIER public TYPE string NAME string NAME get alias PARAMETER LIST BLOCK RETURN return alias EXPR alias NAME alias public NN string NN get VB alias NNS root ROOT get dobj get alias return NN alias IN,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/core/container/spring/avalon/ComponentInfo.java,280
COMMENT set the code source resolver code object model code map code the source and sitemap code parameters code used to process the request if you wish to process the parameters override this method call code super code and then add your code FUNCTION SPECIFIER public TYPE void NAME void NAME setup PARAMETER LIST source resolver resolver map object model string src parameters par PARAMETER source resolver resolver TYPE source resolver NAME source resolver NAME resolver PARAMETER map object model TYPE map NAME map NAME object model PARAMETER string src TYPE string NAME string NAME src PARAMETER parameters par TYPE parameters NAME parameters NAME par THROWS throws processing exception sax exception io exception ARGUMENT EXPR processing exception NAME processing exception ARGUMENT EXPR sax exception NAME sax exception ARGUMENT EXPR io exception NAME io exception BLOCK EXPR this resolver resolver NAME this resolver NAME this NAME resolver NAME resolver EXPR this object model object model NAME this object model NAME this NAME object model NAME object model EXPR this source src NAME this source NAME this NAME source NAME src EXPR this parameters par NAME this parameters NAME this NAME parameters NAME par set the code source resolver code object model code map code root ROOT set det code the compound code code compound code source compound code resolver compound code code compound code object compound code model compound code code compound code map dobj set code the source and sitemap code parameters code used to process the request root ROOT code det source the nsubj code source cc source and compound parameters sitemap compound parameters code conj and source parameters nsubj code parameters dep code used mark process to xcomp used process det request the dobj process request if you wish to process the parameters override this method call root ROOT override mark wish if nsubj wish you nsubj xsubj process you csubj override wish mark process to xcomp wish process det parameters the dobj process parameters det call this compound call method dobj override call code super code and then add your code root ROOT code compound code code amod code super cc code and advmod add then conj and code add nmod poss code your dobj add code public NN void NN setup NN source NN resolver NN root ROOT resolver compound resolver source resolver NN map NN object NN model NN root ROOT model compound model object string NN src NN parameters NNS par NN throws VBZ processing VBG exception NN root ROOT processing dobj processing exception sax NN exception NN root ROOT exception compound exception sax io NN exception NN root ROOT exception compound exception io this DT resolver NN resolver NN this DT object NN model NN object NN model NN root ROOT model compound model object this DT source NN src NN this DT parameters NNS par NN wish call ANTONYM ANTONYM,0,N/A,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/transformation/AbstractDOMTransformer.java,100
COMMENT return the key for the event pipeline if the event pipeline the complete pipeline without the serializer is cacheable and valid return a key otherwise return code null code FUNCTION SPECIFIER public TYPE string NAME string NAME get key for event pipeline PARAMETER LIST BLOCK RETURN return null EXPR null return the key for the event pipeline root ROOT return det key the dobj return key case pipeline for det pipeline the compound pipeline event nmod for key pipeline if the event pipeline the complete pipeline without the root ROOT pipeline mark pipeline if det pipeline the compound pipeline event nsubj pipeline pipeline det pipeline the amod pipeline complete case the without nmod without pipeline the serializer is cacheable and valid return a key root ROOT cacheable nsubj cacheable serializer cop cacheable is cc cacheable and amod return valid conj and cacheable return det key a dep return key otherwise return code null code root ROOT return advmod return otherwise compound code code amod code null dobj return code public NN string NN get VB key JJ for IN event NN pipeline NN root ROOT get xcomp get key case pipeline for compound pipeline event nmod for key pipeline return NN null JJ return event ANTONYM ANTONYM valid null ANTONYM ANTONYM,1,B1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/pipeline/AbstractProcessingPipeline.java,796
COMMENT get the last modification time for the wrapped code source code the age of the returned information is guaranteed to be lower than or equal to the delay specified in the constructor p this method is also thread safe even if the underlying source is not return the last modification time see org apache excalibur source source get last modified FUNCTION SPECIFIER public SPECIFIER final TYPE long NAME long NAME get last modified PARAMETER LIST BLOCK COMMENT do we have to refresh the source IF if system current time millis next check time yes this refresh CONDITION system current time millis next check time EXPR system current time millis next check time CALL system current time millis NAME system current time millis NAME system NAME current time millis ARGUMENT LIST NAME next check time THEN yes this refresh BLOCK COMMENT yes EXPR this refresh CALL this refresh NAME this refresh NAME this NAME refresh ARGUMENT LIST RETURN return this last modified EXPR this last modified NAME this last modified NAME this NAME last modified get the last modification time for the wrapped code source code the root ROOT code aux code get det time the amod time last compound time modification nsubj code time case source for det source the amod source wrapped compound source code nmod for time source dobj code the get the last modification time for the wrapped code source code the root ROOT code aux code get det time the amod time last compound time modification nsubj code time case source for det source the amod source wrapped compound source code nmod for time source dobj code the age of the returned information is guaranteed to be lower than or equal to root ROOT guaranteed nsubjpass guaranteed age nsubj xsubj lower age case information of det information the amod information returned nmod of age information auxpass guaranteed is mark lower to cop lower be xcomp guaranteed lower case equal than cc equal or advcl than lower equal dep guaranteed to the delay specified in the constructor root ROOT delay det delay the acl delay specified case constructor in det constructor the nmod in specified constructor p this method is also thread safe even if the underlying source is not root ROOT thread det method this nsubj thread method cop thread is advmod thread also dep thread safe dep safe even dep even if det source the amod source underlying dep if source dep source is neg is not return the last modification time root ROOT return det time the amod time last compound time modification dobj return time see org apache excalibur source source get last modified root ROOT see advmod apache org amod source apache compound source excalibur compound source source dobj see source acl source get xcomp get last dep last modified public NN final JJ long RB get VB last JJ modified VBN root ROOT get xcomp get last dep last modified do we have to refresh the source root ROOT have aux have do nsubj have we nsubj xsubj refresh we mark refresh to xcomp have refresh det source the dobj refresh source if IN system NN current JJ time NN millis IN root ROOT time compound time system amod time current dep time millis next JJ check NN time NN root ROOT time amod time next compound time check yes this DT refresh NN return NN this DT last JJ modified VBN delay see ANTONYM ANTONYM get last ANTONYM ANTONYM get lower ANTONYM ANTONYM get return ANTONYM ANTONYM get returned ANTONYM ANTONYM get see ANTONYM ANTONYM get specified ANTONYM ANTONYM get thread ANTONYM ANTONYM guaranteed see ANTONYM ANTONYM last be ANTONYM ANTONYM last delay ANTONYM ANTONYM last is ANTONYM ANTONYM last lower ANTONYM ANTONYM lower final ANTONYM ANTONYM safe lower ANTONYM ANTONYM specified see ANTONYM ANTONYM wrapped thread ANTONYM ANTONYM safe guaranteed SYNONYM SYNONYM,1,A1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/impl/DelayedRefreshSourceWrapper.java,110
COMMENT return the current object model param context the component context return the object model FUNCTION SPECIFIER public SPECIFIER static SPECIFIER final TYPE map NAME map NAME get object model PARAMETER LIST context context PARAMETER context context TYPE context NAME context NAME context BLOCK COMMENT the object model is always present TRY try return map context get context object model catch context exception ce throw new context resource not found exception unable to get the object model from the context ce BLOCK RETURN return map context get context object model EXPR map context get context object model NAME map CALL context get context object model NAME context get NAME context NAME get ARGUMENT LIST ARGUMENT EXPR context object model NAME context object model CATCH catch context exception ce throw new context resource not found exception unable to get the object model from the context ce PARAMETER LIST context exception ce PARAMETER context exception ce TYPE context exception NAME context exception NAME ce BLOCK THROW throw new context resource not found exception unable to get the object model from the context ce EXPR new context resource not found exception unable to get the object model from the context ce CALL context resource not found exception unable to get the object model from the context ce NAME context resource not found exception ARGUMENT LIST ARGUMENT EXPR unable to get the object model from the context ARGUMENT EXPR ce NAME ce return the current object model root ROOT return det model the amod model current compound model object dobj return model param context the component context root ROOT context compound context param det component the dep context component dep component context return the object model root ROOT return det model the compound model object dobj return model public NN static JJ final JJ map NN get VB object VB model NN root ROOT get xcomp get object dobj object model context NN context NN the object model is always present root ROOT present det model the compound model object nsubj present model cop present is advmod present always try VB return NN map NN context NN get VB root ROOT get nsubj get context context NN object NN model NN root ROOT model compound model context compound model object catch NN context NN exception NN root ROOT exception compound exception context ce NN throw VB new JJ context NN resource NN not RB found VBN exception NN root ROOT found compound resource context nsubj found resource neg found not dobj found exception unable JJ to TO get VB the DT object NN model NN from IN the DT context NN ce NN,1,A4,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/ContextHelper.java,86
COMMENT permanently removes a poolable from the pool s active list and destroys it so that it will not ever be reused p this method is only called by threads that have m semaphore locked FUNCTION SPECIFIER protected TYPE void NAME void NAME permanently remove poolable PARAMETER LIST object poolable PARAMETER object poolable TYPE object NAME object NAME poolable BLOCK EXPR this size NAME this size NAME this NAME size permanently removes a poolable from the pool s active list and root ROOT removes advmod removes permanently det poolable a dobj removes poolable case list from det list the compound list pool compound list s amod list active nmod from poolable list cc removes and destroys it so that it will not ever be reused root ROOT destroys dobj destroys it mark reused so mwe so that nsubjpass reused it aux reused will neg reused not advmod reused ever auxpass reused be advcl so that destroys reused p this method is only called by threads that have m semaphore locked root ROOT called det method this nsubjpass called method auxpass called is advmod called only case threads by nmod agent called threads nsubj have threads ref threads that acl relcl threads have compound semaphore m nsubj locked semaphore ccomp have locked protected VBN void NN permanently RB remove VB poolable JJ root ROOT remove advmod remove permanently dobj remove poolable object NN poolable JJ this DT size NN list called ANTONYM ANTONYM locked removes ANTONYM ANTONYM removes have ANTONYM ANTONYM,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/core/container/spring/avalon/PoolableFactoryBean.java,187
DECL STMT TYPE int NAME int NAME hours INIT EXPR int NN hours NNS,1,E1,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/acting/HttpCacheAction.java,89
COMMENT return the time the read source was last modified or if it is not possible to detect FUNCTION SPECIFIER public TYPE long NAME long NAME get last modified PARAMETER LIST BLOCK RETURN return EXPR return the time the read source was last modified or if it is not root ROOT return det time the dobj return time det source the compound source read nsubjpass modified source auxpass modified was advmod modified last dep time modified cc modified or mark is if nsubj is it dep time is conj or modified is neg is not possible to detect root ROOT possible mark detect to xcomp possible detect public NN long RB get VB last JJ modified VBN root ROOT get xcomp get last dep last modified return NN last is ANTONYM ANTONYM was last ANTONYM ANTONYM,1,B1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/reading/AbstractReader.java,87
COMMENT non javadoc see javax servlet http http servlet request get request url FUNCTION SPECIFIER public TYPE string buffer NAME string buffer NAME get request url PARAMETER LIST BLOCK RETURN return this req get request url EXPR this req get request url CALL this req get request url NAME this req get request url NAME this NAME req NAME get request url ARGUMENT LIST non javadoc root ROOT javadoc amod javadoc non see javax servlet http http servlet request get request url root ROOT see compound request javax amod request servlet compound request http compound request http compound request servlet nsubj get request ccomp see get compound url request dobj get url public NN string NN buffer NN root ROOT buffer compound buffer string get VB request NN url NN root ROOT get compound url request dobj get url return NN this DT req NN get VB request NN url NN,1,A4,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/wrapper/AbstractRequestWrapper.java,466
COMMENT stream this buffer into the provided content handler if content handler object implements lexical handler it will get lexical events as well FUNCTION SPECIFIER public TYPE void NAME void NAME to sax PARAMETER LIST content handler content handler PARAMETER content handler content handler TYPE content handler NAME content handler NAME content handler THROWS throws sax exception ARGUMENT EXPR sax exception NAME sax exception BLOCK FOR for iterator i saxbits iterator i has next sax bit saxbit sax bit i next saxbit send content handler CONTROL iterator i saxbits iterator i has next INIT iterator i saxbits iterator TYPE iterator NAME iterator NAME i INIT saxbits iterator EXPR saxbits iterator CALL saxbits iterator NAME saxbits iterator NAME saxbits NAME iterator ARGUMENT LIST CONDITION i has next EXPR i has next CALL i has next NAME i has next NAME i NAME has next ARGUMENT LIST INCR BLOCK DECL STMT TYPE sax bit NAME sax bit NAME saxbit INIT sax bit i next EXPR sax bit i next NAME sax bit CALL i next NAME i next NAME i NAME next ARGUMENT LIST EXPR saxbit send content handler CALL saxbit send content handler NAME saxbit send NAME saxbit NAME send ARGUMENT LIST ARGUMENT EXPR content handler NAME content handler stream this buffer into the provided content handler root ROOT stream det buffer this dobj stream buffer case content into det content the amod content provided nmod into stream content dep content handler if content handler object implements lexical handler it will get lexical root ROOT get mark implements if compound object content compound object handler nsubj implements object advcl if get implements amod handler lexical dobj implements handler nsubj get it aux get will xcomp get lexical events as well root ROOT events advmod events as mwe as well public NN void NN to TO sax NN root ROOT sax case sax to content JJ handler NN root ROOT handler amod handler content content JJ handler NN root ROOT handler amod handler content throws VBZ sax NN exception NN root ROOT exception compound exception sax for IN iterator NN i LS saxbits JJ iterator NN root ROOT iterator amod iterator saxbits i LS has VBZ next JJ root ROOT i root i has advmod has next sax NN bit NN root ROOT bit compound bit sax saxbit NN sax NN bit NN root ROOT bit compound bit sax i LS next IN root ROOT i advmod i next saxbit NN send VB root ROOT send nsubj send saxbit content JJ handler NN root ROOT handler amod handler content get provided ANTONYM ANTONYM get throws ANTONYM ANTONYM get will ANTONYM ANTONYM provided will ANTONYM ANTONYM,1,B5,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/xml/SaxBuffer.java,191
COMMENT ignore the code end dtd code event this method does nothing exception sax exception if an error occurs FUNCTION SPECIFIER public TYPE void NAME void NAME end dtd PARAMETER LIST THROWS throws sax exception ARGUMENT EXPR sax exception NAME sax exception BLOCK COMMENT ignored EXPR this in dtd false NAME this in dtd NAME this NAME in dtd ignore the code end dtd code event this method does nothing root ROOT ignore det event the compound event code compound event end compound event dtd compound event code dobj ignore event det method this nsubj does method acl relcl event does dobj does nothing exception sax exception if an error occurs root ROOT exception compound exception exception compound exception sax mark occurs if det error an nsubj occurs error dep exception occurs public NN void NN end NN dtd SYM root ROOT end dep end dtd throws VBZ sax NN exception NN root ROOT exception compound exception sax ignored this DT in IN dtd NN false JJ does occurs ANTONYM ANTONYM does throws ANTONYM ANTONYM,0,N/A,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/xml/EmbeddedXMLPipe.java,94
COMMENT operation codes DECL STMT SPECIFIER private TYPE final static int SPECIFIER final SPECIFIER static NAME int NAME op names INIT EXPR operation codes root ROOT codes compound codes operation private JJ final JJ static JJ int NN op NN names NNS root ROOT names compound names op,1,E1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/InputModuleHelper.java,36
COMMENT output the fragment if the fragment is a document start end document events are discarded FUNCTION SPECIFIER public TYPE void NAME void NAME to sax PARAMETER LIST content handler ch PARAMETER content handler ch TYPE content handler NAME content handler NAME ch THROWS throws sax exception ARGUMENT EXPR sax exception NAME sax exception BLOCK COMMENT stream bytes and discard start end document DECL STMT TYPE xml byte stream interpreter NAME xml byte stream interpreter NAME deserializer INIT new xml byte stream interpreter EXPR new xml byte stream interpreter CALL xml byte stream interpreter NAME xml byte stream interpreter ARGUMENT LIST EXPR deserializer set content handler new embedded xml pipe ch CALL deserializer set content handler new embedded xml pipe ch NAME deserializer set content handler NAME deserializer NAME set content handler ARGUMENT LIST ARGUMENT EXPR new embedded xml pipe ch CALL embedded xml pipe ch NAME embedded xml pipe ARGUMENT LIST ARGUMENT EXPR ch NAME ch EXPR deserializer deserialize this xml bytes CALL deserializer deserialize this xml bytes NAME deserializer deserialize NAME deserializer NAME deserialize ARGUMENT LIST ARGUMENT EXPR this xml bytes NAME this xml bytes NAME this NAME xml bytes output the fragment if the fragment is a document start end document root ROOT output det fragment the dobj output fragment mark document if det fragment the nsubj document fragment cop document is det document a compound document document compound document start compound document end advcl if output document output the fragment if the fragment is a document start end document root ROOT output det fragment the dobj output fragment mark document if det fragment the nsubj document fragment cop document is det document a compound document document compound document start compound document end advcl if output document events are discarded root ROOT discarded nsubjpass discarded events auxpass discarded are public NN void NN to TO sax NN root ROOT sax case sax to content JJ handler NN root ROOT handler amod handler content ch NN throws VBZ sax NN exception NN root ROOT exception compound exception sax stream bytes and discard start end document root ROOT bytes compound bytes stream cc bytes and conj and bytes discard compound document start compound document end dobj discard document xml NN byte NN stream NN interpreter NN root ROOT interpreter compound interpreter xml compound interpreter byte compound interpreter stream deserializer NN new JJ xml NN byte NN stream NN interpreter NN root ROOT interpreter compound interpreter xml compound interpreter byte compound interpreter stream deserializer NN set VBD content JJ handler NN root ROOT set nsubj set deserializer amod handler content dobj set handler new JJ embedded JJ xml NN pipe NN root ROOT pipe amod pipe embedded compound pipe xml ch NN deserializer NN deserialize NN root ROOT deserialize compound deserialize deserializer this DT xml NN bytes NNS discarded throws ANTONYM ANTONYM,1,B5,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/sax/XMLByteStreamFragment.java,49
COMMENT operation codes DECL STMT SPECIFIER private TYPE final static int SPECIFIER final SPECIFIER static NAME int NAME op names INIT EXPR operation codes root ROOT codes compound codes operation private JJ final JJ static JJ int NN op NN names NNS root ROOT names compound names op,1,E1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/InputModuleHelper.java,36
COMMENT see org apache cocoon processing process info provider get object model FUNCTION SPECIFIER public TYPE map NAME map NAME get object model PARAMETER LIST BLOCK RETURN return this get current object model EXPR this get current object model CALL this get current object model NAME this get current object model NAME this NAME get current object model ARGUMENT LIST see org apache cocoon processing process info provider get object model root ROOT see advmod apache org amod provider apache compound provider cocoon compound provider processing compound provider process compound provider info dobj see provider dep see get compound model object dobj get model public NN map NN get VB object VB model NN root ROOT get xcomp get object dobj object model return NN this DT get VB current JJ object NN model NN,1,A4,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/processing/impl/ProcessInfoProviderImpl.java,81
FUNCTION SPECIFIER public TYPE enumeration NAME enumeration NAME get locales PARAMETER LIST BLOCK RETURN return request get locales EXPR request get locales CALL request get locales NAME request get locales NAME request NAME get locales ARGUMENT LIST public NN enumeration NN get VB locales NNS root ROOT get dobj get locales return NN request NN get VB locales NNS root ROOT get nsubj get request dobj get locales,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/processing/impl/MockProcessInfoProvider.java,182
COMMENT see org apache cocoon environment context get attributes FUNCTION SPECIFIER public TYPE map NAME map NAME get attributes PARAMETER LIST BLOCK RETURN return new context map this EXPR new context map this CALL context map this NAME context map ARGUMENT LIST ARGUMENT EXPR this NAME this see org apache cocoon environment context get attributes root ROOT see advmod apache org amod context apache compound context cocoon compound context environment nsubj get context ccomp see get dobj get attributes public NN map NN get VB attributes NNS root ROOT get dobj get attributes return NN new JJ context NN map NN root ROOT map compound map context this DT,1,A1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/impl/AbstractContext.java,213
COMMENT x path expression cache for single attribute values DECL STMT SPECIFIER private TYPE map NAME map NAME expression cache x path expression cache for single attribute values root ROOT x compound cache path compound cache expression dobj x cache case values for amod values single compound values attribute nmod for cache values x path expression cache for single attribute values root ROOT x compound cache path compound cache expression dobj x cache case values for amod values single compound values attribute nmod for cache values private JJ map NN expression NN cache NN root ROOT cache compound cache expression,0,N/A,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/XMLFileModule.java,116
DECL STMT SPECIFIER private TYPE map NAME map NAME object model private JJ map NN object NN model NN root ROOT model compound model object,1,D1,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/impl/XModuleSource.java,81
DECL STMT SPECIFIER public TYPE final char SPECIFIER final NAME char NAME char INDEX NAME ch public NN final JJ char NN ch NN,1,D1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/xml/SaxBuffer.java,532
COMMENT the request object model DECL STMT SPECIFIER protected TYPE map NAME map NAME object model the request object model root ROOT model det model the compound model request compound model object protected VBN map NN object NN model NN root ROOT model compound model object,1,D1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/transformation/AbstractDOMTransformer.java,58
COMMENT the system id used for caching DECL STMT SPECIFIER private TYPE string NAME string NAME system id for caching the system id used for caching root ROOT id det id the compound id system acl id used mark caching for advcl for used caching private JJ string NN system NN id NN for IN caching VBG root ROOT id compound id system mark caching for acl for id caching,0,N/A,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/impl/SitemapSource.java,69
COMMENT non javadoc see org apache cocoon acting abstract validator action set result java util map java util map java util map boolean FUNCTION SPECIFIER protected TYPE map NAME map NAME set result PARAMETER LIST map object model map action map map result map boolean all ok PARAMETER map object model TYPE map NAME map NAME object model PARAMETER map action map TYPE map NAME map NAME action map PARAMETER map result map TYPE map NAME map NAME result map PARAMETER boolean all ok TYPE boolean NAME boolean NAME all ok BLOCK IF if all ok http session session object model helper get request object model get session for iterator i action map key set iterator i has next string name string i next session set attribute name action map get name CONDITION all ok EXPR all ok NAME all ok THEN http session session object model helper get request object model get session for iterator i action map key set iterator i has next string name string i next session set attribute name action map get name BLOCK DECL STMT TYPE http session NAME http session NAME session INIT object model helper get request object model get session EXPR object model helper get request object model get session CALL object model helper get request object model NAME object model helper get request NAME object model helper NAME get request ARGUMENT LIST ARGUMENT EXPR object model NAME object model CALL get session NAME get session ARGUMENT LIST FOR for iterator i action map key set iterator i has next string name string i next session set attribute name action map get name CONTROL iterator i action map key set iterator i has next INIT iterator i action map key set iterator TYPE iterator NAME iterator NAME i INIT action map key set iterator EXPR action map key set iterator CALL action map key set NAME action map key set NAME action map NAME key set ARGUMENT LIST CALL iterator NAME iterator ARGUMENT LIST CONDITION i has next EXPR i has next CALL i has next NAME i has next NAME i NAME has next ARGUMENT LIST INCR BLOCK DECL STMT TYPE string NAME string NAME name INIT string i next EXPR string i next NAME string CALL i next NAME i next NAME i NAME next ARGUMENT LIST EXPR session set attribute name action map get name CALL session set attribute name action map get name NAME session set attribute NAME session NAME set attribute ARGUMENT LIST ARGUMENT EXPR name NAME name ARGUMENT EXPR action map get name CALL action map get name NAME action map get NAME action map NAME get ARGUMENT LIST ARGUMENT EXPR name NAME name RETURN return super set result object model action map result map all ok EXPR super set result object model action map result map all ok CALL super set result object model action map result map all ok NAME super set result NAME super NAME set result ARGUMENT LIST ARGUMENT EXPR object model NAME object model ARGUMENT EXPR action map NAME action map ARGUMENT EXPR result map NAME result map ARGUMENT EXPR all ok NAME all ok non javadoc root ROOT javadoc amod javadoc non see org apache cocoon acting abstract validator action set result java util map java util map java util map boolean root ROOT see advmod apache org amod cocoon apache nsubj set cocoon amod action acting amod action abstract compound action validator dep cocoon action ccomp see set dobj set result compound boolean java compound boolean util compound boolean map compound boolean java compound boolean util compound boolean map compound boolean java compound boolean util compound boolean map dobj result boolean protected VBN map NN set VBN result NN root ROOT set dobj set result map NN object NN model NN root ROOT model compound model object map NN action NN map NN root ROOT map compound map action map NN result NN map NN root ROOT result dobj result map boolean NN all DT ok NN root ROOT ok det ok all if IN all DT ok NN root ROOT ok det ok all http JJ session NN root ROOT session amod session http session NN object NN model NN helper NN get VB request NN root ROOT get compound helper object compound helper model nsubj get helper dobj get request object NN model NN root ROOT model compound model object get VB session NN root ROOT get dobj get session for IN iterator NN i LS action NN map NN key JJ set NN root ROOT set compound set action compound set map amod set key iterator NN i LS has VBZ next JJ root ROOT i root i has advmod has next string NN name NN string NN i LS next IN root ROOT i advmod i next session NN set VBD attribute NN root ROOT set nsubj set session dobj set attribute name NN action NN map NN get VB root ROOT get compound map action nsubj get map name NN return NN super JJ set NN result NN object NN model NN root ROOT model compound model object action NN map NN root ROOT map compound map action result NN map NN root ROOT result dobj result map all DT ok NN root ROOT ok det ok all acting map ANTONYM ANTONYM,1,A3,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/acting/SessionValidatorAction.java,61
COMMENT cache for avoiding unnecessary checks of namespaces abilities it associates a boolean to the transformer class name DECL STMT SPECIFIER private SPECIFIER static TYPE final map SPECIFIER final NAME map NAME needs namespace cache INIT new hash map EXPR new hash map CALL hash map NAME hash map ARGUMENT LIST cache for avoiding unnecessary checks of namespaces abilities root ROOT cache mark avoiding for acl for cache avoiding amod checks unnecessary dobj avoiding checks case abilities of compound abilities namespaces nmod of checks abilities it associates a boolean to the transformer class name root ROOT associates nsubj associates it det boolean a dobj associates boolean case name to det name the compound name transformer compound name class nmod to associates name private JJ static JJ final JJ map NN needs NNS namespace VBP cache NN root ROOT namespace nsubj namespace needs dobj namespace cache new JJ hash VB map NN root ROOT hash dobj hash map associates class ANTONYM ANTONYM,0,N/A,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/serialization/AbstractTextSerializer.java,73
COMMENT setup a component and optionnaly initializes if it s code initializable code and starts it if it s code startable code param component the component to setup param initialize and start if true code intialize code and code start code will be called return the component passed in to allow function chaining throws exception if something went wrong FUNCTION SPECIFIER public TYPE object NAME object NAME setup component PARAMETER LIST object component boolean initialize and start PARAMETER object component TYPE object NAME object NAME component PARAMETER boolean initialize and start TYPE boolean NAME boolean NAME initialize and start THROWS throws exception ARGUMENT EXPR exception NAME exception BLOCK RETURN return setup component component this logger this context this service manager this configuration initialize and start EXPR setup component component this logger this context this service manager this configuration initialize and start CALL setup component component this logger this context this service manager this configuration initialize and start NAME setup component ARGUMENT LIST ARGUMENT EXPR component NAME component ARGUMENT EXPR this logger NAME this logger NAME this NAME logger ARGUMENT EXPR this context NAME this context NAME this NAME context ARGUMENT EXPR this service manager NAME this service manager NAME this NAME service manager ARGUMENT EXPR this configuration NAME this configuration NAME this NAME configuration ARGUMENT EXPR initialize and start NAME initialize and start setup a component and optionnaly initializes if it s code initializable code root ROOT setup det component a dobj setup component cc component and amod initializes optionnaly dobj setup initializes conj and component initializes mark code if nsubj code it cop code s compound code code amod code initializable advcl if setup code and starts it if it s code startable code root ROOT starts cc starts and dobj starts it mark code if nsubj code it cop code s compound code code amod code startable advcl if starts code param component the component to setup root ROOT component compound component param det component the dep component component case setup to nmod to component setup param initialize and start if true code intialize code and code start code root ROOT initialize nsubj initialize param nsubj start param cc initialize and conj and initialize start mark start if amod code true compound code code compound code intialize nsubj start code cc code and conj and code code nsubj start code advcl if initialize start dobj start code will be called root ROOT called aux called will auxpass called be return the component passed in to allow function chaining root ROOT return det component the dobj return component acl component passed compound prt passed in mark allow to xcomp passed allow dobj allow function xcomp allow chaining throws exception if something went wrong root ROOT throws dobj throws exception mark went if nsubj went something advcl if throws went xcomp went wrong public NN object NN setup NN component NN root ROOT component compound component setup object NN component NN boolean NN initialize VB and CC start VB root ROOT initialize cc initialize and conj and initialize start throws VBZ exception NN return NN setup NN component NN root ROOT component compound component setup component NN this DT logger NN this DT context NN this DT service NN manager NN this DT configuration NN initialize VB and CC start VB root ROOT initialize cc initialize and conj and initialize start be went ANTONYM ANTONYM component function ANTONYM ANTONYM passed function ANTONYM ANTONYM passed throws ANTONYM ANTONYM return throws ANTONYM ANTONYM return went ANTONYM ANTONYM start function ANTONYM ANTONYM start passed ANTONYM ANTONYM starts function ANTONYM ANTONYM starts passed ANTONYM ANTONYM will allow ANTONYM ANTONYM wrong true ANTONYM ANTONYM,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/LifecycleHelper.java,104
COMMENT return valid validity objects for the event pipeline if the event pipeline the complete pipeline without the serializer is cacheable and valid return all validity objects otherwise return code null code FUNCTION SPECIFIER public TYPE source validity NAME source validity NAME get validity for event pipeline PARAMETER LIST BLOCK RETURN return this cache validity EXPR this cache validity NAME this cache validity NAME this NAME cache validity return valid validity objects for the event pipeline root ROOT objects compound objects return amod objects valid compound objects validity case pipeline for det pipeline the compound pipeline event nmod for objects pipeline if the event pipeline the complete pipeline without the root ROOT pipeline mark pipeline if det pipeline the compound pipeline event nsubj pipeline pipeline det pipeline the amod pipeline complete case the without nmod without pipeline the serializer is cacheable and valid return all validity objects root ROOT cacheable nsubj cacheable serializer cop cacheable is cc cacheable and amod return valid conj and cacheable return det objects all compound objects validity dep return objects otherwise return code null code root ROOT return advmod return otherwise compound code code amod code null dobj return code public NN source NN validity NN root ROOT validity compound validity source get VB validity NN for IN event NN pipeline NN root ROOT get dobj get validity case pipeline for compound pipeline event nmod for validity pipeline return NN this DT cache NN validity NN return event ANTONYM ANTONYM valid null ANTONYM ANTONYM,0,N/A,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/pipeline/impl/ExpiresCachingProcessingPipeline.java,270
COMMENT hex digits lookup table DECL STMT SPECIFIER static TYPE char NAME char NAME char INDEX NAME hex char INIT a b c d e f EXPR a b c d e f BLOCK EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR a EXPR b EXPR c EXPR d EXPR e EXPR f hex digits lookup table root ROOT lookup compound digits hex nsubj lookup digits dobj lookup table static JJ char NN hex NN char NN root ROOT char compound char hex a DT b NN c NN d NN e SYM f SYM,1,D1,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/DigestMetaModule.java,326
COMMENT generate the unique key this key must be unique inside the space of this component this method must be invoked before the generate validity method return the generated key or code code if the component is currently not cacheable FUNCTION SPECIFIER public TYPE java io serializable NAME java io serializable NAME java NAME io NAME serializable NAME get key PARAMETER LIST BLOCK RETURN return this caching key EXPR this caching key NAME this caching key NAME this NAME caching key generate the unique key root ROOT generate det key the amod key unique dobj generate key this key must be unique inside the space of this component root ROOT unique det key this nsubj unique key aux unique must cop unique be case space inside det space the nmod inside unique space case component of det component this nmod of space component this method must be invoked before the generate validity method root ROOT invoked det method this nsubjpass invoked method aux invoked must auxpass invoked be case method before det method the amod method generate compound method validity nmod before invoked method return the generated key or code code if the component root ROOT return det key the amod key generated dobj return key cc key or compound code code dobj return code conj or key code dep return if det component the root if component is currently not cacheable root ROOT cacheable cop cacheable is advmod cacheable currently neg cacheable not public NN java NN io NN serializable NN root ROOT serializable compound serializable java compound serializable io get VB key NN root ROOT get dobj get key return NN this DT caching NN key NN,0,N/A,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/serialization/AbstractTextSerializer.java,390
FUNCTION SPECIFIER public TYPE string buffer NAME string buffer NAME get request url PARAMETER LIST BLOCK COMMENT fixme implement this method if needed THROW throw new unsupported operation exception EXPR new unsupported operation exception CALL unsupported operation exception NAME unsupported operation exception ARGUMENT LIST public NN string NN buffer NN root ROOT buffer compound buffer string get VB request NN url NN root ROOT get compound url request dobj get url fixme implement this method if needed root ROOT implement nsubj implement fixme det method this dobj implement method mark needed if advcl if implement needed throw VB new JJ unsupported JJ operation NN exception NN root ROOT exception amod exception unsupported compound exception operation,1,A4,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/processing/impl/MockProcessInfoProvider.java,331
COMMENT whether reloading of scripts should be done specified through the reload scripts attribute in code flow xmap code DECL STMT SPECIFIER protected TYPE boolean NAME boolean NAME reload scripts whether reloading of scripts should be done specified through root ROOT done mark done whether nsubjpass done reloading case scripts of nmod of reloading scripts aux done should auxpass done be dep done specified dep specified through whether reloading of scripts should be done specified through root ROOT done mark done whether nsubjpass done reloading case scripts of nmod of reloading scripts aux done should auxpass done be dep done specified dep specified through the reload scripts attribute in code flow xmap code root ROOT attribute det scripts the compound scripts reload nsubj attribute scripts case code in compound code code compound code flow compound code xmap nmod in attribute code protected VBN boolean NN reload NN scripts NNS root ROOT scripts compound scripts reload done specified ANTONYM ANTONYM specified attribute ANTONYM ANTONYM,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/flow/AbstractInterpreter.java,81
COMMENT if the url does not end with a keep the last part in order to add it later again after traversing up FUNCTION SPECIFIER protected TYPE string NAME string NAME extract filename PARAMETER LIST string urlstring PARAMETER string urlstring TYPE string NAME string NAME urlstring BLOCK DECL STMT TYPE string NAME string NAME filename INIT EXPR IF if urlstring ends with int idx urlstring last index of filename urlstring substring idx CONDITION urlstring ends with EXPR urlstring ends with CALL urlstring ends with NAME urlstring ends with NAME urlstring NAME ends with ARGUMENT LIST ARGUMENT EXPR THEN int idx urlstring last index of filename urlstring substring idx BLOCK DECL STMT TYPE int NAME int NAME idx INIT urlstring last index of EXPR urlstring last index of CALL urlstring last index of NAME urlstring last index of NAME urlstring NAME last index of ARGUMENT LIST ARGUMENT EXPR EXPR filename urlstring substring idx NAME filename CALL urlstring substring idx NAME urlstring substring NAME urlstring NAME substring ARGUMENT LIST ARGUMENT EXPR idx NAME idx RETURN return filename EXPR filename NAME filename if the url does not end with a keep the last part in root ROOT end mark end if det url the nsubj end url aux end does neg end not mark keep with nsubj keep a advcl with end keep det part the amod part last dobj keep part acl part in order to add it later again after traversing up root ROOT order mark add to acl to order add dobj add it advmod again later advmod add again mark traversing after advcl after add traversing compound prt traversing up protected VBN string NN extract NN filename NN root ROOT filename compound filename extract string NN urlstring NN string NN filename NN if IN urlstring NN ends VBZ with IN root ROOT ends nsubj ends urlstring dep ends with int NN idx NN urlstring NN last JJ index NN of IN root ROOT index compound index urlstring amod index last acl index of filename NN urlstring NN substring NN root ROOT substring compound substring urlstring idx NN return NN filename NN add part ANTONYM ANTONYM does order ANTONYM ANTONYM end part ANTONYM ANTONYM keep part ANTONYM ANTONYM,0,N/A,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/LocateResource.java,103
COMMENT the mime type of the content described by this object if the source is not able to determine the mime type by itself this can be null FUNCTION SPECIFIER public TYPE string NAME string NAME get mime type PARAMETER LIST BLOCK RETURN return this mime type EXPR this mime type NAME this mime type NAME this NAME mime type the mime type of the content described by this object root ROOT type det type the compound type mime case content of det content the nmod of type content acl content described case object by det object this nmod by described object if the source is not able to determine the mime type by itself root ROOT able mark able if det source the nsubj able source nsubj xsubj determine source cop able is neg able not mark determine to xcomp able determine det type the compound type mime dobj determine type case itself by nmod by determine itself this can be null root ROOT null nsubj null this aux null can cop null be public NN string NN get VB mime JJ type NN root ROOT get amod type mime dobj get type return NN this DT mime NN type NN described string ANTONYM ANTONYM,0,N/A,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/impl/SitemapSource.java,260
FUNCTION SPECIFIER public SPECIFIER final TYPE map NAME map NAME get object model PARAMETER LIST BLOCK RETURN return this objectmodel EXPR this objectmodel NAME this objectmodel NAME this NAME objectmodel public NN final JJ map NN get VB object VB model NN root ROOT get xcomp get object dobj object model return NN this DT objectmodel NN,1,A4,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/test/java/org/apache/cocoon/AbstractTestCase.java,75
DECL STMT SPECIFIER protected TYPE array list NAME array list NAME is cache point INIT new array list EXPR new array list CALL array list NAME array list ARGUMENT LIST protected VBN array NN list NN root ROOT list compound list array is VBZ cache NN point NN root ROOT point cop point is compound point cache new JJ array NN list NN root ROOT list compound list array,1,D2,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/pipeline/impl/CachingPointProcessingPipeline.java,48
COMMENT helper method for get node list from path FUNCTION SPECIFIER private SPECIFIER static TYPE void NAME void NAME get nodes from path PARAMETER LIST final node list impl result final node context node final string path final int start index PARAMETER final node list impl result TYPE final node list impl SPECIFIER final NAME node list impl NAME result PARAMETER final node context node TYPE final node SPECIFIER final NAME node NAME context node PARAMETER final string path TYPE final string SPECIFIER final NAME string NAME string INDEX NAME path PARAMETER final int start index TYPE final int SPECIFIER final NAME int NAME start index BLOCK DECL STMT TYPE final node list SPECIFIER final NAME node list NAME childs INIT context node get child nodes EXPR context node get child nodes CALL context node get child nodes NAME context node get child nodes NAME context node NAME get child nodes ARGUMENT LIST DECL STMT TYPE int NAME int NAME m TYPE NAME l DECL STMT TYPE node NAME node NAME item IF if start index path length if childs null m l childs get length while m l item childs item m if item get node type node element node work around org apache xerces dom element impl doesn t handle get local name correct if path start index equals item get local name null item get local name item get node name result add node item m else if childs null m l childs get length while m l item childs item m if item get node type node element node work around org apache xerces dom element impl doesn t handle get local name correct if path start index equals item get local name null item get local name item get node name get nodes from path result item path start index m CONDITION start index path length EXPR start index path length NAME start index NAME path length NAME path NAME length THEN if childs null m l childs get length while m l item childs item m if item get node type node element node work around org apache xerces dom element impl doesn t handle get local name correct if path start index equals item get local name null item get local name item get node name result add node item m BLOCK IF if childs null m l childs get length while m l item childs item m if item get node type node element node work around org apache xerces dom element impl doesn t handle get local name correct if path start index equals item get local name null item get local name item get node name result add node item m CONDITION childs null EXPR childs null NAME childs THEN m l childs get length while m l item childs item m if item get node type node element node work around org apache xerces dom element impl doesn t handle get local name correct if path start index equals item get local name null item get local name item get node name result add node item m BLOCK EXPR m NAME m EXPR l childs get length NAME l CALL childs get length NAME childs get length NAME childs NAME get length ARGUMENT LIST WHILE while m l item childs item m if item get node type node element node work around org apache xerces dom element impl doesn t handle get local name correct if path start index equals item get local name null item get local name item get node name result add node item m CONDITION m l EXPR m l NAME m NAME l BLOCK EXPR item childs item m NAME item CALL childs item m NAME childs item NAME childs NAME item ARGUMENT LIST ARGUMENT EXPR m NAME m IF if item get node type node element node work around org apache xerces dom element impl doesn t handle get local name correct if path start index equals item get local name null item get local name item get node name result add node item CONDITION item get node type node element node EXPR item get node type node element node CALL item get node type NAME item get node type NAME item NAME get node type ARGUMENT LIST NAME node element node NAME node NAME element node THEN work around org apache xerces dom element impl doesn t handle get local name correct if path start index equals item get local name null item get local name item get node name result add node item BLOCK COMMENT work around org apache xerces dom element impl COMMENT doesn t handle get local name correct IF if path start index equals item get local name null item get local name item get node name result add node item CONDITION path start index equals item get local name null item get local name item get node name EXPR path start index equals item get local name null item get local name item get node name NAME path start index NAME path INDEX start index EXPR start index NAME start index CALL equals item get local name null item get local name item get node name NAME equals ARGUMENT LIST ARGUMENT EXPR item get local name null item get local name item get node name TERNARY item get local name null item get local name item get node name CONDITION item get local name null EXPR item get local name null CALL item get local name NAME item get local name NAME item NAME get local name ARGUMENT LIST THEN item get local name EXPR item get local name CALL item get local name NAME item get local name NAME item NAME get local name ARGUMENT LIST ELSE item get node name EXPR item get node name CALL item get node name NAME item get node name NAME item NAME get node name ARGUMENT LIST THEN result add node item BLOCK EXPR result add node item CALL result add node item NAME result add node NAME result NAME add node ARGUMENT LIST ARGUMENT EXPR item NAME item EXPR m NAME m ELSE else if childs null m l childs get length while m l item childs item m if item get node type node element node work around org apache xerces dom element impl doesn t handle get local name correct if path start index equals item get local name null item get local name item get node name get nodes from path result item path start index m BLOCK IF if childs null m l childs get length while m l item childs item m if item get node type node element node work around org apache xerces dom element impl doesn t handle get local name correct if path start index equals item get local name null item get local name item get node name get nodes from path result item path start index m CONDITION childs null EXPR childs null NAME childs THEN m l childs get length while m l item childs item m if item get node type node element node work around org apache xerces dom element impl doesn t handle get local name correct if path start index equals item get local name null item get local name item get node name get nodes from path result item path start index m BLOCK EXPR m NAME m EXPR l childs get length NAME l CALL childs get length NAME childs get length NAME childs NAME get length ARGUMENT LIST WHILE while m l item childs item m if item get node type node element node work around org apache xerces dom element impl doesn t handle get local name correct if path start index equals item get local name null item get local name item get node name get nodes from path result item path start index m CONDITION m l EXPR m l NAME m NAME l BLOCK EXPR item childs item m NAME item CALL childs item m NAME childs item NAME childs NAME item ARGUMENT LIST ARGUMENT EXPR m NAME m IF if item get node type node element node work around org apache xerces dom element impl doesn t handle get local name correct if path start index equals item get local name null item get local name item get node name get nodes from path result item path start index CONDITION item get node type node element node EXPR item get node type node element node CALL item get node type NAME item get node type NAME item NAME get node type ARGUMENT LIST NAME node element node NAME node NAME element node THEN work around org apache xerces dom element impl doesn t handle get local name correct if path start index equals item get local name null item get local name item get node name get nodes from path result item path start index BLOCK COMMENT work around org apache xerces dom element impl COMMENT doesn t handle get local name correct IF if path start index equals item get local name null item get local name item get node name get nodes from path result item path start index CONDITION path start index equals item get local name null item get local name item get node name EXPR path start index equals item get local name null item get local name item get node name NAME path start index NAME path INDEX start index EXPR start index NAME start index CALL equals item get local name null item get local name item get node name NAME equals ARGUMENT LIST ARGUMENT EXPR item get local name null item get local name item get node name TERNARY item get local name null item get local name item get node name CONDITION item get local name null EXPR item get local name null CALL item get local name NAME item get local name NAME item NAME get local name ARGUMENT LIST THEN item get local name EXPR item get local name CALL item get local name NAME item get local name NAME item NAME get local name ARGUMENT LIST ELSE item get node name EXPR item get node name CALL item get node name NAME item get node name NAME item NAME get node name ARGUMENT LIST THEN get nodes from path result item path start index BLOCK EXPR get nodes from path result item path start index CALL get nodes from path result item path start index NAME get nodes from path ARGUMENT LIST ARGUMENT EXPR result NAME result ARGUMENT EXPR item NAME item ARGUMENT EXPR path NAME path ARGUMENT EXPR start index NAME start index EXPR m NAME m helper method for get node list from path root ROOT method compound method helper mark get for acl for method get compound list node dobj get list case path from nmod from get path private JJ static JJ void NN get VB nodes NNS from IN path NN root ROOT get dobj get nodes case path from nmod from get path final JJ node NN list NN impl NN root ROOT impl compound impl node compound impl list result NN final JJ node NN context NN node NN root ROOT node compound node context final JJ string NN path NN final JJ int NN start VB index NN root ROOT start dobj start index final JJ node NN list NN root ROOT list compound list node childs NNS context NN node NN get VB child NN nodes NNS root ROOT get compound node context nsubj get node compound nodes child dobj get nodes int NN m NN l NN node NN item NN if IN start VB index NN root ROOT start dobj start index path NN length NN root ROOT length compound length path if IN childs NNS null JJ m NN l NN childs NNS get VBP length NN root ROOT get nsubj get childs dobj get length while IN m NN l NN item NN childs NNS item NN root ROOT item compound item childs m NN if IN item NN get VB node NN type NN root ROOT get nsubj get item compound type node dobj get type node NN element NN root ROOT element compound element node node NN work around org apache xerces dom element impl root ROOT xerces nsubj xerces work case apache around compound apache org nmod around work apache compound impl dom compound impl element dobj xerces impl doesn t handle get local name correct root ROOT handle compound t doesn nsubj handle t ccomp handle get amod name local nsubj correct name xcomp get correct if IN path NN start VB index NN root ROOT start dobj start index equals VBZ item NN get VB local JJ name NN root ROOT get nsubj get item amod name local dobj get name null JJ item NN get VB local JJ name NN root ROOT get nsubj get item amod name local dobj get name item NN get VB node NN name NN root ROOT get compound name node dobj get name result NN add VB node NN root ROOT add nsubj add result dobj add node item NN m NN else RB if IN childs NNS null JJ m NN l NN childs NNS get VBP length NN root ROOT get nsubj get childs dobj get length while IN m NN l NN item NN childs NNS item NN root ROOT item compound item childs m NN if IN item NN get VB node NN type NN root ROOT get nsubj get item compound type node dobj get type node NN element NN root ROOT element compound element node node NN work around org apache xerces dom element impl root ROOT xerces nsubj xerces work case apache around compound apache org nmod around work apache compound impl dom compound impl element dobj xerces impl doesn t handle get local name correct root ROOT handle compound t doesn nsubj handle t ccomp handle get amod name local nsubj correct name xcomp get correct if IN path NN start VB index NN root ROOT start dobj start index equals VBZ item NN get VB local JJ name NN root ROOT get nsubj get item amod name local dobj get name null JJ item NN get VB local JJ name NN root ROOT get nsubj get item amod name local dobj get name item NN get VB node NN name NN root ROOT get compound name node dobj get name get VB nodes NNS from IN path NN root ROOT get dobj get nodes case path from nmod from get path result NN item NN path NN start VB index NN root ROOT start dobj start index m NN,1,B3,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/xml/dom/DOMUtil.java,1103
DECL STMT SPECIFIER private TYPE hash map NAME hash map NAME method index private JJ hash VB map NN root ROOT hash dobj hash map method NN index NN root ROOT index compound index method,1,D1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/acting/AbstractMultiAction.java,51
DECL STMT SPECIFIER private TYPE map NAME map NAME header INIT new hash map EXPR new hash map CALL hash map NAME hash map ARGUMENT LIST private JJ map NN header NN new JJ hash VB map NN root ROOT hash dobj hash map,1,D1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/test/java/org/apache/cocoon/environment/mock/MockResponse.java,35
DECL STMT SPECIFIER protected TYPE int NAME int NAME sublevels INIT EXPR protected VBN int NN sublevels NNS,1,E1,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/acting/SessionStateAction.java,89
COMMENT the object model DECL STMT SPECIFIER protected TYPE map NAME map NAME object model INIT new hash map EXPR new hash map CALL hash map NAME hash map ARGUMENT LIST the object model root ROOT model det model the compound model object protected VBN map NN object NN model NN root ROOT model compound model object new JJ hash VB map NN root ROOT hash dobj hash map,1,D1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/AbstractEnvironment.java,52
DECL STMT SPECIFIER private TYPE map NAME map NAME holder INIT collections synchronized map new hash map EXPR collections synchronized map new hash map CALL collections synchronized map new hash map NAME collections synchronized map NAME collections NAME synchronized map ARGUMENT LIST ARGUMENT EXPR new hash map CALL hash map NAME hash map ARGUMENT LIST private JJ map NN holder NN collections NNS synchronized VBD map NN root ROOT synchronized nsubj synchronized collections dobj synchronized map new JJ hash VB map NN root ROOT hash dobj hash map,1,D1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/flow/ContinuationsManagerImpl.java,518
COMMENT register all extension packages listed in the configuration through code lt package name fully qualified package prefix prefix gt code in the given function library param conf a code configuration code value FUNCTION SPECIFIER private TYPE void NAME void NAME get packages PARAMETER LIST configuration conf PARAMETER configuration conf TYPE configuration NAME configuration NAME conf BLOCK DECL STMT TYPE configuration NAME configuration NAME configuration INDEX NAME children INIT conf get children package EXPR conf get children package CALL conf get children package NAME conf get children NAME conf NAME get children ARGUMENT LIST ARGUMENT EXPR package DECL STMT TYPE int NAME int NAME i INIT children length EXPR children length NAME children length NAME children NAME length WHILE while i string package name children i get attribute name null string prefix children i get attribute prefix null if package name null prefix null this library add functions new package functions package name prefix CONDITION i EXPR i NAME i BLOCK DECL STMT TYPE string NAME string NAME package name INIT children i get attribute name null EXPR children i get attribute name null NAME children i NAME children INDEX i EXPR i NAME i CALL get attribute name null NAME get attribute ARGUMENT LIST ARGUMENT EXPR name ARGUMENT EXPR null DECL STMT TYPE string NAME string NAME prefix INIT children i get attribute prefix null EXPR children i get attribute prefix null NAME children i NAME children INDEX i EXPR i NAME i CALL get attribute prefix null NAME get attribute ARGUMENT LIST ARGUMENT EXPR prefix ARGUMENT EXPR null IF if package name null prefix null this library add functions new package functions package name prefix CONDITION package name null prefix null EXPR package name null prefix null NAME package name NAME prefix THEN this library add functions new package functions package name prefix BLOCK EXPR this library add functions new package functions package name prefix CALL this library add functions new package functions package name prefix NAME this library add functions NAME this NAME library NAME add functions ARGUMENT LIST ARGUMENT EXPR new package functions package name prefix CALL package functions package name prefix NAME package functions ARGUMENT LIST ARGUMENT EXPR package name NAME package name ARGUMENT EXPR prefix NAME prefix register all extension packages listed in the configuration root ROOT register det packages all compound packages extension dobj register packages acl packages listed case configuration in det configuration the nmod in listed configuration through code lt package name fully qualified package root ROOT qualified case name through compound name code compound name lt compound name package nmod through qualified name advmod qualified fully dobj qualified package prefix prefix gt code in the given function library root ROOT code compound code prefix compound code prefix compound code gt case library in det library the amod library given compound library function nmod in code library param conf a code configuration code value root ROOT conf nsubj conf param det value a compound value code compound value configuration compound value code dobj conf value private JJ void NN get VB packages NNS root ROOT get dobj get packages configuration NN conf NN configuration NN children NNS conf NN get VB children NNS root ROOT get nsubj get conf dobj get children package NN int NN i LS children NNS length NN root ROOT length compound length children while IN i LS string NN package NN name NN root ROOT name compound name package children NNS i LS get VB attribute NN root ROOT get dobj get attribute name NN null JJ string NN prefix NN children NNS i LS get VB attribute NN root ROOT get dobj get attribute prefix NN null JJ if IN package NN name NN root ROOT name compound name package null JJ prefix NN null JJ this DT library NN add VB functions NNS new JJ package NN functions NNS root ROOT functions compound functions package package NN name NN root ROOT name compound name package prefix NN name given ANTONYM ANTONYM listed qualified SYNONYM SYNONYM,1,B6,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/JXPathHelperConfiguration.java,142
DECL STMT SPECIFIER private TYPE void NAME void NAME get interfaces ARGUMENT LIST ARGUMENT EXPR set interfaces class clazz interfaces clazz get interfaces NAME set NAME interfaces NAME class NAME class INDEX NAME clazz interfaces CALL clazz get interfaces NAME clazz get interfaces NAME clazz NAME get interfaces ARGUMENT LIST ARGUMENT EXPR int i i clazz interfaces length i add all interfaces extended by this interface or directly implemented by this class get interfaces interfaces clazz interfaces i the superclazz is null if class is instanceof object is an interface a primitive type or void class superclazz clazz get superclass NAME int NAME i NAME i NAME clazz interfaces length NAME clazz interfaces NAME length NAME i BLOCK COMMENT add all interfaces extended by this interface or directly COMMENT implemented by this class EXPR get interfaces interfaces clazz interfaces i CALL get interfaces interfaces clazz interfaces i NAME get interfaces ARGUMENT LIST ARGUMENT EXPR interfaces NAME interfaces ARGUMENT EXPR clazz interfaces i NAME clazz interfaces i NAME clazz interfaces INDEX i EXPR i NAME i COMMENT the superclazz is null if class is instanceof object is COMMENT an interface a primitive type or void NAME class NAME superclazz CALL clazz get superclass NAME clazz get superclass NAME clazz NAME get superclass ARGUMENT LIST ARGUMENT EXPR superclazz null add all interfaces of the superclass to the list get interfaces interfaces superclazz interfaces add all arrays as list clazz interfaces NAME superclazz BLOCK COMMENT add all interfaces of the superclass to the list EXPR get interfaces interfaces superclazz CALL get interfaces interfaces superclazz NAME get interfaces ARGUMENT LIST ARGUMENT EXPR interfaces NAME interfaces ARGUMENT EXPR superclazz NAME superclazz CALL interfaces add all arrays as list clazz interfaces NAME interfaces add all NAME interfaces NAME add all ARGUMENT LIST ARGUMENT EXPR arrays as list clazz interfaces CALL arrays as list clazz interfaces NAME arrays as list NAME arrays NAME as list ARGUMENT LIST ARGUMENT EXPR clazz interfaces NAME clazz interfaces private JJ void NN get VB interfaces NNS root ROOT get dobj get interfaces set NN interfaces NNS class NN clazz NN interfaces NNS root ROOT interfaces compound interfaces clazz clazz NN get VB interfaces NNS root ROOT get nsubj get clazz dobj get interfaces for IN int NN i LS i LS clazz NN interfaces NNS length NN root ROOT length compound length clazz compound length interfaces i LS add all interfaces extended by this interface or directly root ROOT add det interfaces all dobj add interfaces acl interfaces extended case interface by det interface this nmod by extended interface cc add or advmod add directly implemented by this class root ROOT implemented case class by det class this nmod by implemented class get VB interfaces NNS root ROOT get dobj get interfaces interfaces NNS clazz NN interfaces NNS root ROOT interfaces compound interfaces clazz i LS the superclazz is null if class is instanceof object is root ROOT null det superclazz the nsubj null superclazz cop null is mark object if nsubj object class cop object is amod object instanceof advcl if null object dep null is an interface a primitive type or void root ROOT interface det interface an det type a amod type primitive dep interface type cc type or dep interface void conj or type void class NN superclazz NN clazz NN get VB superclass JJ root ROOT get nsubj get clazz xcomp get superclass if IN superclazz NN null JJ add all interfaces of the superclass to the list root ROOT add det interfaces all dobj add interfaces case superclass of det superclass the nmod of interfaces superclass case list to det list the nmod to add list get VB interfaces NNS root ROOT get dobj get interfaces interfaces NNS superclazz NN interfaces NNS add VBP all DT root ROOT add nsubj add interfaces dobj add all arrays NNS as IN list NN root ROOT arrays case list as nmod as arrays list clazz NN interfaces NNS root ROOT interfaces compound interfaces clazz,1,B6,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/pipeline/spring/PipelineComponentProxyDecorator.java,103
FUNCTION TYPE long NAME long NAME get creation time PARAMETER LIST BLOCK EXPR check valid CALL check valid NAME check valid ARGUMENT LIST RETURN return creationtime EXPR creationtime NAME creationtime public NN long RB get VB creation NN time NN root ROOT get compound time creation dobj get time check NN valid JJ root ROOT valid nmod npmod valid check return NN creationtime NN,1,A1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/test/java/org/apache/cocoon/environment/mock/MockSession.java,36
COMMENT implement this method to obtain sax events FUNCTION SPECIFIER public TYPE void NAME void NAME to sax PARAMETER LIST content handler handler PARAMETER content handler handler TYPE content handler NAME content handler NAME handler THROWS throws sax exception ARGUMENT EXPR sax exception NAME sax exception BLOCK DECL STMT TYPE object NAME object NAME obj INIT get input attribute this attribute type this attribute name EXPR get input attribute this attribute type this attribute name CALL get input attribute this attribute type this attribute name NAME get input attribute ARGUMENT LIST ARGUMENT EXPR this attribute type NAME this attribute type NAME this NAME attribute type ARGUMENT EXPR this attribute name NAME this attribute name NAME this NAME attribute name IF if obj null throw new sax exception the attribute this attribute name is empty CONDITION obj null EXPR obj null NAME obj THEN throw new sax exception the attribute this attribute name is empty BLOCK THROW throw new sax exception the attribute this attribute name is empty EXPR new sax exception the attribute this attribute name is empty CALL sax exception the attribute this attribute name is empty NAME sax exception ARGUMENT LIST ARGUMENT EXPR the attribute this attribute name is empty NAME this attribute name NAME this NAME attribute name IF if this x path length this x path equals jx path context context jx path context new context obj obj context get pointer this x path get node if obj null throw new sax exception the xpath this x path applied on the attribute this attribute name returns null CONDITION this x path length this x path equals EXPR this x path length this x path equals CALL this x path length NAME this x path length NAME this NAME x path NAME length ARGUMENT LIST CALL this x path equals NAME this x path equals NAME this NAME x path NAME equals ARGUMENT LIST ARGUMENT EXPR THEN jx path context context jx path context new context obj obj context get pointer this x path get node if obj null throw new sax exception the xpath this x path applied on the attribute this attribute name returns null BLOCK DECL STMT TYPE jx path context NAME jx path context NAME context INIT jx path context new context obj EXPR jx path context new context obj CALL jx path context new context obj NAME jx path context new context NAME jx path context NAME new context ARGUMENT LIST ARGUMENT EXPR obj NAME obj EXPR obj context get pointer this x path get node NAME obj CALL context get pointer this x path NAME context get pointer NAME context NAME get pointer ARGUMENT LIST ARGUMENT EXPR this x path NAME this x path NAME this NAME x path CALL get node NAME get node ARGUMENT LIST IF if obj null throw new sax exception the xpath this x path applied on the attribute this attribute name returns null CONDITION obj null EXPR obj null NAME obj THEN throw new sax exception the xpath this x path applied on the attribute this attribute name returns null BLOCK THROW throw new sax exception the xpath this x path applied on the attribute this attribute name returns null EXPR new sax exception the xpath this x path applied on the attribute this attribute name returns null CALL sax exception the xpath this x path applied on the attribute this attribute name returns null NAME sax exception ARGUMENT LIST ARGUMENT EXPR the xpath this x path applied on the attribute this attribute name returns null NAME this x path NAME this NAME x path NAME this attribute name NAME this NAME attribute name IF if obj instanceof document dom streamer dom streamer new dom streamer handler dom streamer stream document obj else if obj instanceof node dom streamer dom streamer new dom streamer handler handler start document dom streamer stream node obj handler end document else if obj instanceof xm lizable xm lizable obj to sax handler else throw new sax exception the object type obj get class could not be serialized to xml obj CONDITION obj instanceof document EXPR obj instanceof document NAME obj NAME document THEN dom streamer dom streamer new dom streamer handler dom streamer stream document obj BLOCK DECL STMT TYPE dom streamer NAME dom streamer NAME dom streamer INIT new dom streamer handler EXPR new dom streamer handler CALL dom streamer handler NAME dom streamer ARGUMENT LIST ARGUMENT EXPR handler NAME handler EXPR dom streamer stream document obj CALL dom streamer stream document obj NAME dom streamer stream NAME dom streamer NAME stream ARGUMENT LIST ARGUMENT EXPR document obj NAME document NAME obj ELSEIF else if obj instanceof node dom streamer dom streamer new dom streamer handler handler start document dom streamer stream node obj handler end document IF if obj instanceof node dom streamer dom streamer new dom streamer handler handler start document dom streamer stream node obj handler end document CONDITION obj instanceof node EXPR obj instanceof node NAME obj NAME node THEN dom streamer dom streamer new dom streamer handler handler start document dom streamer stream node obj handler end document BLOCK DECL STMT TYPE dom streamer NAME dom streamer NAME dom streamer INIT new dom streamer handler EXPR new dom streamer handler CALL dom streamer handler NAME dom streamer ARGUMENT LIST ARGUMENT EXPR handler NAME handler EXPR handler start document CALL handler start document NAME handler start document NAME handler NAME start document ARGUMENT LIST EXPR dom streamer stream node obj CALL dom streamer stream node obj NAME dom streamer stream NAME dom streamer NAME stream ARGUMENT LIST ARGUMENT EXPR node obj NAME node NAME obj EXPR handler end document CALL handler end document NAME handler end document NAME handler NAME end document ARGUMENT LIST ELSEIF else if obj instanceof xm lizable xm lizable obj to sax handler IF if obj instanceof xm lizable xm lizable obj to sax handler CONDITION obj instanceof xm lizable EXPR obj instanceof xm lizable NAME obj NAME xm lizable THEN xm lizable obj to sax handler BLOCK EXPR xm lizable obj to sax handler NAME xm lizable NAME obj CALL to sax handler NAME to sax ARGUMENT LIST ARGUMENT EXPR handler NAME handler ELSE else throw new sax exception the object type obj get class could not be serialized to xml obj BLOCK THROW throw new sax exception the object type obj get class could not be serialized to xml obj EXPR new sax exception the object type obj get class could not be serialized to xml obj CALL sax exception the object type obj get class could not be serialized to xml obj NAME sax exception ARGUMENT LIST ARGUMENT EXPR the object type obj get class could not be serialized to xml obj CALL obj get class NAME obj get class NAME obj NAME get class ARGUMENT LIST NAME obj implement this method to obtain sax events root ROOT implement det method this dobj implement method mark obtain to advcl to implement obtain compound events sax dobj obtain events public NN void NN to TO sax NN root ROOT sax case sax to content JJ handler NN root ROOT handler amod handler content handler NN throws VBZ sax NN exception NN root ROOT exception compound exception sax object NN obj NN get VB input NN attribute NN root ROOT get compound attribute input dobj get attribute this DT attribute NN type NN this DT attribute NN name NN if IN obj NN null JJ throw VB new JJ sax NN exception NN root ROOT exception compound exception sax the DT attribute NN this DT attribute NN name NN is VBZ empty JJ if IN this DT x CC path NN length NN this DT x CC path NN equals VBZ jx NN path NN context NN root ROOT context compound context jx compound context path context NN jx NN path NN context NN new JJ context NN root ROOT context compound context jx compound context path compound context context amod context new obj NN obj NN context NN get VB pointer NN root ROOT get nsubj get context dobj get pointer this DT x CC path NN get VB node NN root ROOT get dobj get node if IN obj NN null JJ throw VB new JJ sax NN exception NN root ROOT exception compound exception sax the DT xpath NN this DT x CC path NN applied VBN on IN the DT attribute NN this DT attribute NN name NN returns NNS null JJ if IN obj NN instanceof NN document NN dom NN streamer NN root ROOT streamer compound streamer dom dom NN streamer NN root ROOT streamer compound streamer dom new JJ dom NN streamer NN root ROOT streamer compound streamer dom handler NN dom NN streamer NN stream NN root ROOT stream compound stream dom compound stream streamer document NN obj NN else RB if IN obj NN instanceof NN node NN dom NN streamer NN root ROOT streamer compound streamer dom dom NN streamer NN root ROOT streamer compound streamer dom new JJ dom NN streamer NN root ROOT streamer compound streamer dom handler NN handler NN start NN document NN root ROOT document compound document handler compound document start dom NN streamer NN stream NN root ROOT stream compound stream dom compound stream streamer node NN obj NN handler NN end NN document NN root ROOT document compound document handler compound document end else RB if IN obj NN instanceof NN xm NN lizable JJ root ROOT lizable nmod npmod lizable xm xm NN lizable JJ root ROOT lizable nmod npmod lizable xm obj NN to TO sax NN root ROOT sax case sax to handler NN else RB throw VB new JJ sax NN exception NN root ROOT exception compound exception sax the DT object NN type NN obj NN get VB class NN root ROOT get nsubj get obj dobj get class could MD not RB be VB serialized VBN to TO xml NN obj NN obtain throws ANTONYM ANTONYM,1,B5,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/impl/XModuleSource.java,142
COMMENT see javax servlet servlet context get servlets FUNCTION SPECIFIER public TYPE enumeration NAME enumeration NAME get servlets PARAMETER LIST BLOCK RETURN return null EXPR null see javax servlet servlet context get servlets root ROOT see compound context javax compound context servlet compound context servlet nsubj get context ccomp see get dobj get servlets public NN enumeration NN get VB servlets NNS root ROOT get dobj get servlets return NN null JJ,1,B7,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/impl/AbstractContext.java,192
COMMENT initializes the instance for first use stores references to service manager and service selector in instance param manager a code service manager code value throws input module exception if an error occurs FUNCTION SPECIFIER public TYPE void NAME void NAME setup PARAMETER LIST service manager manager PARAMETER service manager manager TYPE service manager NAME service manager NAME manager THROWS throws input module exception ARGUMENT EXPR input module exception NAME input module exception BLOCK EXPR this input modules new hash map NAME this input modules NAME this NAME input modules CALL hash map NAME hash map ARGUMENT LIST EXPR this service manager manager NAME this service manager NAME this NAME service manager NAME manager initializes the instance for first use stores references to root ROOT initializes det instance the dobj initializes instance case stores for amod stores first compound stores use nmod for instance stores dep stores references dep references to initializes the instance for first use stores references to root ROOT initializes det instance the dobj initializes instance case stores for amod stores first compound stores use nmod for instance stores dep stores references dep references to service manager and service selector in instance root ROOT manager compound manager service cc manager and compound selector service conj and manager selector case instance in nmod in manager instance param manager a code service manager code value root ROOT manager compound manager param det value a compound value code compound value service compound value manager compound value code dobj manager value throws input module exception if an error occurs root ROOT throws compound exception input compound exception module dobj throws exception mark occurs if det error an nsubj occurs error advcl if throws occurs public NN void NN setup NN service NN manager NN root ROOT manager compound manager service manager NN throws VBZ input NN module NN exception NN root ROOT exception compound exception input compound exception module this DT input NN modules NNS new JJ hash VB map NN root ROOT hash dobj hash map this DT service NN manager NN manager NN,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/InputModuleHelper.java,126
COMMENT can the data sent to an code output stream code returned by link get output stream be cancelled return true if the stream can be cancelled FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME can cancel PARAMETER LIST output stream stream PARAMETER output stream stream TYPE output stream NAME output stream NAME stream BLOCK RETURN return false EXPR false can the data sent to an code output stream code returned by root ROOT can det data the nsubj can data acl data sent case code to det code an compound code code compound code output compound code stream nmod to sent code acl code returned nmod returned by link get output stream be cancelled root ROOT get nsubj get link compound stream output nsubjpass cancelled stream auxpass cancelled be ccomp get cancelled return true if the stream can be cancelled root ROOT return amod return true mark cancelled if det stream the nsubjpass cancelled stream aux cancelled can auxpass cancelled be advcl if true cancelled public NN boolean NN can MD cancel VB root ROOT cancel aux cancel can output NN stream NN root ROOT stream compound stream output stream NN return NN false JJ,1,B1,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/impl/XModuleSource.java,282
COMMENT p check the validity of this link source validity instance p see source validity is valid FUNCTION SPECIFIER public TYPE int NAME int NAME is valid PARAMETER LIST BLOCK IF if system current time millis expiry validity not expired so don t even check return source validity valid CONDITION system current time millis expiry EXPR system current time millis expiry CALL system current time millis NAME system current time millis NAME system NAME current time millis ARGUMENT LIST NAME expiry THEN validity not expired so don t even check return source validity valid BLOCK COMMENT validity not expired so don t even check RETURN return source validity valid EXPR source validity valid NAME source validity valid NAME source validity NAME valid COMMENT re calculate the expiry time based on the current time EXPR expiry system current time millis delay NAME expiry CALL system current time millis NAME system current time millis NAME system NAME current time millis ARGUMENT LIST NAME delay IF if uris null is closed we have not been closed yet or we were forced to be invalid return source validity invalid else compute the status of all the sources listed in this instance return compute status null CONDITION uris null is closed EXPR uris null is closed NAME uris NAME is closed THEN we have not been closed yet or we were forced to be invalid return source validity invalid BLOCK COMMENT we have not been closed yet or we were forced to be invalid RETURN return source validity invalid EXPR source validity invalid NAME source validity invalid NAME source validity NAME invalid ELSE else compute the status of all the sources listed in this instance return compute status null BLOCK COMMENT compute the status of all the sources listed in this instance RETURN return compute status null EXPR compute status null CALL compute status null NAME compute status ARGUMENT LIST ARGUMENT EXPR null p check the validity of this link source validity instance p root ROOT check nsubj check p det validity the dobj check validity case instance of det instance this compound instance link compound instance source compound instance validity nmod of validity instance nmod tmod check p p check the validity of this link source validity instance p root ROOT check nsubj check p det validity the dobj check validity case instance of det instance this compound instance link compound instance source compound instance validity nmod of validity instance nmod tmod check p see source validity is valid root ROOT valid csubj valid see compound validity source dobj see validity cop valid is public NN int NN is VBZ valid JJ root ROOT valid cop valid is if IN system NN current JJ time NN millis IN root ROOT time compound time system amod time current dep time millis expiry NN validity not expired so don t even check root ROOT expired nsubj expired validity neg expired not advmod don so ccomp expired don dobj don t advmod check even dep don check return NN source NN validity NN valid JJ root ROOT valid compound validity source nsubj valid validity re calculate the expiry time based on the current time root ROOT calculate nsubj calculate re det time the compound time expiry dobj calculate time case time based mwe based on det time the amod time current nmod based on time time expiry NN system NN current JJ time NN millis IN root ROOT time compound time system amod time current dep time millis delay NN if IN uris NN null JJ is VBZ closed VBN root ROOT closed auxpass closed is we have not been closed yet or we were forced to be invalid root ROOT closed nsubjpass closed we aux closed have neg closed not auxpass closed been advmod closed yet cc closed or nsubjpass forced we nsubj xsubj invalid we auxpass forced were conj or closed forced mark invalid to cop invalid be xcomp forced invalid return NN source NN validity NN invalid JJ root ROOT invalid compound validity source nsubj invalid validity else RB compute the status of all the sources listed in this instance root ROOT compute det status the dobj compute status case sources of det predet sources all det sources the nmod of status sources acl sources listed case instance in det instance this nmod in listed instance return NN compute VB status NN root ROOT compute dobj compute status null JJ,1,A2,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/impl/MultiSourceValidity.java,109
COMMENT override start element event to add namespace and prefix FUNCTION SPECIFIER public TYPE void NAME void NAME end element PARAMETER LIST string namespace uri string local name string raw PARAMETER string namespace uri TYPE string NAME string NAME namespace uri PARAMETER string local name TYPE string NAME string NAME local name PARAMETER string raw TYPE string NAME string NAME raw THROWS throws sax exception ARGUMENT EXPR sax exception NAME sax exception BLOCK EXPR this root element index NAME this root element index NAME this NAME root element index IF if this root element index get logger debug skipping root element end event return CONDITION this root element index EXPR this root element index NAME this root element index NAME this NAME root element index THEN get logger debug skipping root element end event return BLOCK EXPR get logger debug skipping root element end event CALL get logger NAME get logger ARGUMENT LIST CALL debug skipping root element end event NAME debug ARGUMENT LIST ARGUMENT EXPR skipping root element end event RETURN return IF if namespace uri null namespace uri equals final string qname this current element prefix equals local name this current element prefix local name this content handler end element this current element namespace local name qname else this content handler end element namespace uri local name raw CONDITION namespace uri null namespace uri equals EXPR namespace uri null namespace uri equals NAME namespace uri CALL namespace uri equals NAME namespace uri equals NAME namespace uri NAME equals ARGUMENT LIST ARGUMENT EXPR THEN final string qname this current element prefix equals local name this current element prefix local name this content handler end element this current element namespace local name qname BLOCK DECL STMT TYPE final string SPECIFIER final NAME string NAME qname INIT this current element prefix equals local name this current element prefix local name EXPR this current element prefix equals local name this current element prefix local name TERNARY this current element prefix equals local name this current element prefix local name CONDITION this current element prefix equals EXPR this current element prefix equals CALL this current element prefix equals NAME this current element prefix equals NAME this NAME current element NAME prefix NAME equals ARGUMENT LIST ARGUMENT EXPR THEN local name EXPR local name NAME local name ELSE this current element prefix local name EXPR this current element prefix local name NAME this current element prefix NAME this NAME current element NAME prefix NAME local name EXPR this content handler end element this current element namespace local name qname CALL this content handler end element this current element namespace local name qname NAME this content handler end element NAME this NAME content handler NAME end element ARGUMENT LIST ARGUMENT EXPR this current element namespace NAME this current element namespace NAME this NAME current element NAME namespace ARGUMENT EXPR local name NAME local name ARGUMENT EXPR qname NAME qname ELSE else this content handler end element namespace uri local name raw BLOCK EXPR this content handler end element namespace uri local name raw CALL this content handler end element namespace uri local name raw NAME this content handler end element NAME this NAME content handler NAME end element ARGUMENT LIST ARGUMENT EXPR namespace uri NAME namespace uri ARGUMENT EXPR local name NAME local name ARGUMENT EXPR raw NAME raw override start element event to add namespace and prefix root ROOT event compound event override compound event start compound event element mark add to acl to event add dobj add namespace cc namespace and dobj add prefix conj and namespace prefix public NN void NN end NN element NN root ROOT element compound element end string NN namespace NN uri NN root ROOT uri compound uri namespace string NN local JJ name NN root ROOT name amod name local string NN raw JJ throws VBZ sax NN exception NN root ROOT exception compound exception sax this DT root NN element NN index NN if IN this DT root NN element NN index NN get VB logger NN root ROOT get dobj get logger debug VB skipping VBG root NN element NN end NN event NN return NN if IN namespace NN uri NN root ROOT uri compound uri namespace null JJ namespace NN uri NN equals VBZ root ROOT equals compound uri namespace nsubj equals uri final JJ string NN qname NN this DT current JJ element NN prefix NN equals VBZ local JJ name NN root ROOT name amod name local this DT current JJ element NN prefix NN local JJ name NN root ROOT name amod name local this DT content NN handler NN end NN element NN this DT current JJ element NN namespace NN local JJ name NN root ROOT name amod name local qname NN else RB this DT content NN handler NN end NN element NN namespace NN uri NN root ROOT uri compound uri namespace local JJ name NN root ROOT name amod name local raw JJ,1,C2,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/sitemap/DefaultContentAggregator.java,354
DECL STMT SPECIFIER private TYPE map NAME map NAME get expression cache ARGUMENT LIST ARGUMENT EXPR map cache synchronized cache map map map cache get key if map null map collections synchronized map new hash map cache put key map return map NAME map NAME cache SYNCHRONIZED synchronized cache map map map cache get key if map null map collections synchronized map new hash map cache put key map return map INIT cache EXPR cache NAME cache BLOCK DECL STMT TYPE map NAME map NAME map INIT map cache get key EXPR map cache get key NAME map CALL cache get key NAME cache get NAME cache NAME get ARGUMENT LIST ARGUMENT EXPR key NAME key IF if map null map collections synchronized map new hash map cache put key map CONDITION map null EXPR map null NAME map THEN map collections synchronized map new hash map cache put key map BLOCK EXPR map collections synchronized map new hash map NAME map CALL collections synchronized map new hash map NAME collections synchronized map NAME collections NAME synchronized map ARGUMENT LIST ARGUMENT EXPR new hash map CALL hash map NAME hash map ARGUMENT LIST EXPR cache put key map CALL cache put key map NAME cache put NAME cache NAME put ARGUMENT LIST ARGUMENT EXPR key NAME key ARGUMENT EXPR map NAME map RETURN return map EXPR map NAME map private JJ map NN get VB expression NN cache NN root ROOT get compound cache expression dobj get cache map NN cache NN synchronized VBN cache NN map NN map NN map NN cache NN get VB root ROOT get nsubj get cache key NN if IN map NN null JJ map NN collections NNS synchronized VBD map NN root ROOT synchronized nsubj synchronized collections dobj synchronized map new JJ hash VB map NN root ROOT hash dobj hash map cache NN put VBD root ROOT put nsubj put cache key NN map NN return NN map NN,1,B7,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/XMLFileModule.java,452
DECL STMT TYPE map NAME map NAME objectmodel private JJ map NN objectmodel NN,1,D1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/test/java/org/apache/cocoon/environment/mock/MockEnvironment.java,38
DECL STMT TYPE int NAME int NAME days INIT EXPR int NN days NNS,1,E1,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/acting/HttpCacheAction.java,88
COMMENT since dom level FUNCTION SPECIFIER public TYPE object NAME object NAME set user data PARAMETER LIST string key object value user data handler handler PARAMETER string key TYPE string NAME string NAME key PARAMETER object value TYPE object NAME object NAME value PARAMETER user data handler handler TYPE user data handler NAME user data handler NAME handler BLOCK THROW throw new unsupported operation exception domlevel err msg EXPR new unsupported operation exception domlevel err msg CALL unsupported operation exception domlevel err msg NAME unsupported operation exception ARGUMENT LIST ARGUMENT EXPR domlevel err msg NAME domlevel err msg since dom level root ROOT level case level since compound level dom public NN object NN set VBN user NN data NNS root ROOT set compound data user dobj set data string NN key NN object NN value NN user NN data NNS handler NN root ROOT handler compound handler user compound handler data handler NN throw VB new JJ unsupported JJ operation NN exception NN root ROOT exception amod exception unsupported compound exception operation domlevel JJ err VBP msg NN root ROOT err nsubj err domlevel dobj err msg,1,A3,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/xml/dom/DocumentWrapper.java,1012
DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME all names INIT false EXPR false private JJ boolean NN all DT names NNS root ROOT names det names all false JJ,1,E1,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/ChainMetaModule.java,69
COMMENT get the content length of the source or if it is not possible to determine the length FUNCTION SPECIFIER public TYPE long NAME long NAME get content length PARAMETER LIST BLOCK RETURN return EXPR get the content length of the source or if it root ROOT get det length the compound length content dobj get length case source of det source the nmod of length source cc get or conj or get if dep if it is not possible to determine the length root ROOT possible cop possible is neg possible not mark determine to xcomp possible determine det length the dobj determine length public NN long RB get VB content JJ length NN root ROOT get amod length content dobj get length return NN get determine ANTONYM ANTONYM,1,B1,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/impl/SitemapSource.java,165
DECL STMT SPECIFIER private TYPE byte NAME byte NAME byte INDEX NAME input private JJ byte NN input NN,1,D1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/sax/XMLByteStreamInterpreter.java,30
COMMENT see org apache cocoon components treeprocessor tree builder get leave sitemap event listeners FUNCTION SPECIFIER public TYPE list NAME list NAME get leave sitemap event listeners PARAMETER LIST BLOCK COMMENT we make a copy here so we can clear recylce the list after the COMMENT sitemap is build RETURN return list array list this leave sitemap event listeners clone EXPR list array list this leave sitemap event listeners clone CALL list array list this leave sitemap event listeners NAME list ARGUMENT LIST ARGUMENT EXPR array list this leave sitemap event listeners NAME array list NAME this leave sitemap event listeners NAME this NAME leave sitemap event listeners CALL clone NAME clone ARGUMENT LIST see org apache cocoon components treeprocessor tree builder get leave sitemap event listeners root ROOT see advmod apache org amod components apache compound components cocoon dobj see components amod builder treeprocessor compound builder tree nsubj leave builder aux leave get acl relcl components leave compound listeners sitemap compound listeners event dobj leave listeners public NN list NN get VB leave VB sitemap NN event NN listeners NNS root ROOT leave aux leave get compound listeners sitemap compound listeners event dobj leave listeners we make a copy here so we can clear recylce the list after the root ROOT make nsubj make we det copy a dobj make copy advmod make here mark clear so nsubj clear we aux clear can advcl so make clear xcomp clear recylce det list the dobj recylce list case the after nmod after recylce the sitemap is build root ROOT build nsubj build sitemap aux build is return NN list NN array NN list NN root ROOT list compound list array this DT leave NN sitemap NN event NN listeners NNS clone NN,1,A1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/treeprocessor/sitemap/SitemapLanguage.java,245
COMMENT start processing elements of our namespace this hook is invoked for each sax event with our namespace param uri the namespace of the element param name the local name of the element param raw the qualified name of the element FUNCTION SPECIFIER public TYPE void NAME void NAME end transforming element PARAMETER LIST string uri string name string raw PARAMETER string uri TYPE string NAME string NAME uri PARAMETER string name TYPE string NAME string NAME name PARAMETER string raw TYPE string NAME string NAME raw THROWS throws processing exception io exception sax exception ARGUMENT EXPR processing exception NAME processing exception ARGUMENT EXPR io exception NAME io exception ARGUMENT EXPR sax exception NAME sax exception BLOCK IF if this ignore events count super end element uri name raw CONDITION this ignore events count EXPR this ignore events count NAME this ignore events count NAME this NAME ignore events count THEN super end element uri name raw BLOCK EXPR super end element uri name raw CALL super end element uri name raw NAME super end element NAME super NAME end element ARGUMENT LIST ARGUMENT EXPR uri NAME uri ARGUMENT EXPR name NAME name ARGUMENT EXPR raw NAME raw start processing elements of our namespace root ROOT elements compound elements start compound elements processing case namespace of nmod poss namespace our nmod of elements namespace this hook is invoked for each sax event with our namespace root ROOT invoked det hook this nsubjpass invoked hook auxpass invoked is case event for det event each compound event sax nmod for invoked event case namespace with nmod poss namespace our nmod with event namespace param uri the namespace of the element root ROOT uri compound uri param det namespace the dep uri namespace case element of det element the nmod of namespace element param name the local name of the element root ROOT name compound name param det name the amod name local dep name name case element of det element the nmod of name element param raw the qualified name of the element root ROOT name compound name param amod name raw det name the amod name qualified case element of det element the nmod of name element public NN void NN end NN transforming NN element NN root ROOT element compound element end compound element transforming string NN uri NN string NN name NN string NN raw JJ throws VBZ processing VBG exception NN root ROOT processing dobj processing exception io NN exception NN root ROOT exception compound exception io sax NN exception NN root ROOT exception compound exception sax if IN this DT ignore VB events NNS count NN super JJ end NN element NN uri NN name NN raw JJ invoked name ANTONYM ANTONYM is name ANTONYM ANTONYM name throws ANTONYM ANTONYM,1,C2,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/transformation/AbstractSAXTransformer.java,916
COMMENT see org apache cocoon environment request get headers java lang string FUNCTION SPECIFIER public TYPE enumeration NAME enumeration NAME get headers PARAMETER LIST string name PARAMETER string name TYPE string NAME string NAME name BLOCK THROW throw new assertion failed error not implemented EXPR new assertion failed error not implemented CALL assertion failed error not implemented NAME assertion failed error ARGUMENT LIST ARGUMENT EXPR not implemented see org apache cocoon environment request get headers java lang string root ROOT see advmod apache org amod request apache compound request cocoon compound request environment nsubj get request ccomp see get compound string headers compound string java compound string lang dobj get string public NN enumeration NN get VB headers NNS root ROOT get dobj get headers string NN name NN throw VB new JJ assertion NN failed VBD error NN root ROOT failed nsubj failed assertion dobj failed error not RB implemented VBN see name ANTONYM ANTONYM,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/test/java/org/apache/cocoon/environment/mock/MockRequest.java,308
DECL STMT TYPE int NAME int NAME minutes INIT EXPR int NN minutes NNS,1,E1,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/acting/HttpCacheAction.java,90
COMMENT alternative setup component method that takes a service manager instead of a component manger FUNCTION SPECIFIER public SPECIFIER static TYPE object NAME object NAME setup component PARAMETER LIST final object component final logger logger final context context final service manager service manager final configuration configuration PARAMETER final object component TYPE final object SPECIFIER final NAME object NAME component PARAMETER final logger logger TYPE final logger SPECIFIER final NAME logger NAME logger PARAMETER final context context TYPE final context SPECIFIER final NAME context NAME context PARAMETER final service manager service manager TYPE final service manager SPECIFIER final NAME service manager NAME service manager PARAMETER final configuration configuration TYPE final configuration SPECIFIER final NAME configuration NAME configuration THROWS throws exception ARGUMENT EXPR exception NAME exception BLOCK RETURN return setup component component logger context service manager configuration true EXPR setup component component logger context service manager configuration true CALL setup component component logger context service manager configuration true NAME setup component ARGUMENT LIST ARGUMENT EXPR component NAME component ARGUMENT EXPR logger NAME logger ARGUMENT EXPR context NAME context ARGUMENT EXPR service manager NAME service manager ARGUMENT EXPR configuration NAME configuration ARGUMENT EXPR true alternative setup component method that takes a service manager instead of a component manger root ROOT method amod method alternative compound method setup compound method component nsubj takes method ref method that acl relcl method takes det manager a compound manager service dobj takes manager case manger instead mwe instead of det manger a compound manger component nmod instead of takes manger public NN static JJ object NN setup NN component NN root ROOT component compound component setup final JJ object NN component NN final JJ logger NN logger NN final JJ context NN context NN final JJ service NN manager NN root ROOT manager compound manager service service NN manager NN root ROOT manager compound manager service final JJ configuration NN configuration NN throws VBZ exception NN return NN setup NN component NN root ROOT component compound component setup component NN logger NN context NN service NN manager NN root ROOT manager compound manager service configuration NN true JJ takes throws ANTONYM ANTONYM,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/LifecycleHelper.java,118
COMMENT non javadoc see org apache cocoon environment request get locales FUNCTION SPECIFIER public TYPE enumeration NAME enumeration NAME get locales PARAMETER LIST BLOCK RETURN return this req get locales EXPR this req get locales CALL this req get locales NAME this req get locales NAME this NAME req NAME get locales ARGUMENT LIST non javadoc root ROOT javadoc amod javadoc non see org apache cocoon environment request get locales root ROOT see advmod apache org amod request apache compound request cocoon compound request environment dobj see request dep see get dobj get locales public NN enumeration NN get VB locales NNS root ROOT get dobj get locales return NN this DT req NN get VB locales NNS,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/wrapper/AbstractRequestWrapper.java,193
COMMENT the object model used to resolve processing pipeline parameters DECL STMT SPECIFIER protected TYPE map NAME map NAME processing pipeline object model the object model used to resolve processing pipeline parameters root ROOT model det model the compound model object acl model used mark resolve to xcomp used resolve compound parameters processing compound parameters pipeline dobj resolve parameters protected VBN map NN processing VBG pipeline NN object NN model NN root ROOT processing compound model pipeline compound model object dobj processing model,1,D1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/treeprocessor/InvokeContext.java,79
COMMENT this method is used for leaving the current environment p it s the counterpart to the link enter environment environment method p FUNCTION SPECIFIER public SPECIFIER static TYPE environment NAME environment NAME leave environment PARAMETER LIST BLOCK DECL STMT TYPE final environment stack SPECIFIER final NAME environment stack NAME stack INIT environment stack environment stack get EXPR environment stack environment stack get NAME environment stack CALL environment stack get NAME environment stack get NAME environment stack NAME get ARGUMENT LIST DECL STMT TYPE final environment info SPECIFIER final NAME environment info NAME info INIT environment info stack pop EXPR environment info stack pop NAME environment info CALL stack pop NAME stack pop NAME stack NAME pop ARGUMENT LIST EXPR stack set offset info old stack count CALL stack set offset info old stack count NAME stack set offset NAME stack NAME set offset ARGUMENT LIST ARGUMENT EXPR info old stack count NAME info old stack count NAME info NAME old stack count RETURN return info environment EXPR info environment NAME info environment NAME info NAME environment this method is used for leaving the current environment root ROOT used det method this nsubjpass used method auxpass used is mark leaving for advcl for used leaving det environment the amod environment current dobj leaving environment p it s the counterpart to the link enter environment environment method p root ROOT enter nsubj enter p nsubj counterpart it cop counterpart s det counterpart the acl relcl p counterpart case link to det link the nmod to counterpart link compound p environment compound p environment compound p method dobj enter p p it s the counterpart to the link enter environment environment method p root ROOT enter nsubj enter p nsubj counterpart it cop counterpart s det counterpart the acl relcl p counterpart case link to det link the nmod to counterpart link compound p environment compound p environment compound p method dobj enter p public NN static JJ environment NN leave VB environment NN root ROOT leave dobj leave environment final JJ environment NN stack VBP root ROOT stack nsubj stack environment stack VB environment NN stack VBP root ROOT stack nsubj stack environment environment NN stack VBP get VB root ROOT stack nsubj stack environment ccomp stack get final JJ environment NN info NN root ROOT info compound info environment info NN environment NN info NN root ROOT info compound info environment stack VB pop NN root ROOT stack dobj stack pop stack VB set VBN offset VBN root ROOT stack dep stack set dep set offset info NN old JJ stack VBP count NN root ROOT stack nsubj stack info amod info old dobj stack count return NN info NN environment NN root ROOT environment compound environment info,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/internal/EnvironmentHelper.java,322
COMMENT operation codes DECL STMT SPECIFIER private TYPE final static int SPECIFIER final SPECIFIER static NAME int NAME op values INIT EXPR operation codes root ROOT codes compound codes operation private JJ final JJ static JJ int NN op NN values NNS root ROOT values compound values op,1,E1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/AbstractMetaModule.java,67
COMMENT register all namespaces listed in the configuration through code lt namespace uri uri foo prefix bar gt code in the configuration param conf a code configuration code value FUNCTION SPECIFIER private TYPE void NAME void NAME get namespaces PARAMETER LIST configuration conf PARAMETER configuration conf TYPE configuration NAME configuration NAME conf THROWS throws configuration exception ARGUMENT EXPR configuration exception NAME configuration exception BLOCK DECL STMT TYPE configuration NAME configuration NAME configuration INDEX NAME children INIT conf get children namespace EXPR conf get children namespace CALL conf get children namespace NAME conf get children NAME conf NAME get children ARGUMENT LIST ARGUMENT EXPR namespace DECL STMT TYPE int NAME int NAME i INIT children length EXPR children length NAME children length NAME children NAME length IF if i this namespaces new hash map i CONDITION i EXPR i NAME i THEN this namespaces new hash map i BLOCK EXPR this namespaces new hash map i NAME this namespaces NAME this NAME namespaces CALL hash map i NAME hash map ARGUMENT LIST ARGUMENT EXPR i NAME i WHILE while i string uri children i get attribute uri string prefix children i get attribute prefix if uri null prefix null this namespaces put prefix uri CONDITION i EXPR i NAME i BLOCK DECL STMT TYPE string NAME string NAME uri INIT children i get attribute uri EXPR children i get attribute uri NAME children i NAME children INDEX i EXPR i NAME i CALL get attribute uri NAME get attribute ARGUMENT LIST ARGUMENT EXPR uri DECL STMT TYPE string NAME string NAME prefix INIT children i get attribute prefix EXPR children i get attribute prefix NAME children i NAME children INDEX i EXPR i NAME i CALL get attribute prefix NAME get attribute ARGUMENT LIST ARGUMENT EXPR prefix IF if uri null prefix null this namespaces put prefix uri CONDITION uri null prefix null EXPR uri null prefix null NAME uri NAME prefix THEN this namespaces put prefix uri BLOCK EXPR this namespaces put prefix uri CALL this namespaces put prefix uri NAME this namespaces put NAME this NAME namespaces NAME put ARGUMENT LIST ARGUMENT EXPR prefix NAME prefix ARGUMENT EXPR uri NAME uri register all namespaces listed in the configuration root ROOT register det namespaces all dobj register namespaces acl namespaces listed case configuration in det configuration the nmod in listed configuration through code lt namespace uri uri foo root ROOT foo case foo through compound foo code compound foo lt compound foo namespace compound foo uri compound foo uri prefix bar gt code in the configuration root ROOT code compound code prefix compound code bar compound code gt case configuration in det configuration the nmod in code configuration param conf a code configuration code value root ROOT conf nsubj conf param det value a compound value code compound value configuration compound value code dobj conf value private JJ void NN get VB namespaces NNS root ROOT get dobj get namespaces configuration NN conf NN throws VBZ configuration NN exception NN root ROOT exception compound exception configuration configuration NN children NNS conf NN get VB children NNS root ROOT get nsubj get conf dobj get children namespace NN int NN i LS children NNS length NN root ROOT length compound length children if IN i LS this DT namespaces NNS new JJ hash VB map NN root ROOT hash dobj hash map i LS while IN i LS string NN uri NN children NNS i LS get VB attribute NN root ROOT get dobj get attribute uri NN string NN prefix NN children NNS i LS get VB attribute NN root ROOT get dobj get attribute prefix NN if IN uri NN null JJ prefix NN null JJ this DT namespaces NN put VBD prefix NN uri NN,1,B6,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/JXPathHelperConfiguration.java,162
COMMENT return valid validity objects for the event pipeline if the event pipeline the complete pipeline without the serializer is cacheable and valid return all validity objects otherwise return code null code FUNCTION SPECIFIER public TYPE source validity NAME source validity NAME get validity for event pipeline PARAMETER LIST BLOCK RETURN return null EXPR null return valid validity objects for the event pipeline root ROOT objects compound objects return amod objects valid compound objects validity case pipeline for det pipeline the compound pipeline event nmod for objects pipeline if the event pipeline the complete pipeline without the root ROOT pipeline mark pipeline if det pipeline the compound pipeline event nsubj pipeline pipeline det pipeline the amod pipeline complete case the without nmod without pipeline the serializer is cacheable and valid return all validity objects root ROOT cacheable nsubj cacheable serializer cop cacheable is cc cacheable and amod return valid conj and cacheable return det objects all compound objects validity dep return objects otherwise return code null code root ROOT return advmod return otherwise compound code code amod code null dobj return code public NN source NN validity NN root ROOT validity compound validity source get VB validity NN for IN event NN pipeline NN root ROOT get dobj get validity case pipeline for compound pipeline event nmod for validity pipeline return NN null JJ return event ANTONYM ANTONYM valid null ANTONYM ANTONYM,1,B1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/pipeline/AbstractProcessingPipeline.java,786
COMMENT the current code map code of the object model DECL STMT SPECIFIER protected TYPE map NAME map NAME object model the current code map code of the object model root ROOT code det code the amod code current compound code code compound code map case model of det model the compound model object nmod of code model the current code map code of the object model root ROOT code det code the amod code current compound code code compound code map case model of det model the compound model object nmod of code model protected VBN map NN object NN model NN root ROOT model compound model object,1,D1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/reading/AbstractReader.java,44
COMMENT see org apache cocoon environment request get locales FUNCTION SPECIFIER public TYPE enumeration NAME enumeration NAME get locales PARAMETER LIST BLOCK RETURN return collections enumeration collections singleton get locale EXPR collections enumeration collections singleton get locale CALL collections enumeration collections singleton get locale NAME collections enumeration NAME collections NAME enumeration ARGUMENT LIST ARGUMENT EXPR collections singleton get locale CALL collections singleton get locale NAME collections singleton NAME collections NAME singleton ARGUMENT LIST ARGUMENT EXPR get locale CALL get locale NAME get locale ARGUMENT LIST see org apache cocoon environment request get locales root ROOT see advmod apache org amod request apache compound request cocoon compound request environment dobj see request dep see get dobj get locales public NN enumeration NN get VB locales NNS root ROOT get dobj get locales return NN collections NNS enumeration NN root ROOT enumeration compound enumeration collections collections NNS singleton NN root ROOT singleton compound singleton collections get VB locale NN root ROOT get dobj get locale,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/test/java/org/apache/cocoon/environment/mock/MockRequest.java,237
DECL STMT SPECIFIER public TYPE string NAME string NAME set parameter ARGUMENT LIST ARGUMENT EXPR string arg NAME string NAME arg RETURN return wrapped parameters set parameter arg arg EXPR wrapped parameters set parameter arg arg CALL wrapped parameters set parameter arg arg NAME wrapped parameters set parameter NAME wrapped parameters NAME set parameter ARGUMENT LIST ARGUMENT EXPR arg NAME arg ARGUMENT EXPR arg NAME arg public NN string NN set VBN parameter NN root ROOT set dobj set parameter string NN arg NN return NN wrapped VBN parameters NNS set VBD parameter NN root ROOT set amod parameters wrapped nsubj set parameters dobj set parameter arg NN arg NN,1,A3,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/objectmodel/helper/ParametersMap.java,101
FUNCTION TYPE source parameters NAME source parameters NAME get parameters PARAMETER LIST parameters source PARAMETER parameters source TYPE parameters NAME parameters NAME source BLOCK IF if source null string names source get names for int i i names length i final string current parameter name names i this parameters set parameter current parameter name source get parameter current parameter name CONDITION source null EXPR source null NAME source THEN string names source get names for int i i names length i final string current parameter name names i this parameters set parameter current parameter name source get parameter current parameter name BLOCK DECL STMT TYPE string NAME string NAME string INDEX NAME names INIT source get names EXPR source get names CALL source get names NAME source get names NAME source NAME get names ARGUMENT LIST FOR for int i i names length i final string current parameter name names i this parameters set parameter current parameter name source get parameter current parameter name CONTROL int i i names length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i names length EXPR i names length NAME i NAME names length NAME names NAME length INCR i EXPR i NAME i BLOCK DECL STMT TYPE final string SPECIFIER final NAME string NAME current parameter name INIT names i EXPR names i NAME names i NAME names INDEX i EXPR i NAME i EXPR this parameters set parameter current parameter name source get parameter current parameter name CALL this parameters set parameter current parameter name source get parameter current parameter name NAME this parameters set parameter NAME this NAME parameters NAME set parameter ARGUMENT LIST ARGUMENT EXPR current parameter name NAME current parameter name ARGUMENT EXPR source get parameter current parameter name CALL source get parameter current parameter name NAME source get parameter NAME source NAME get parameter ARGUMENT LIST ARGUMENT EXPR current parameter name NAME current parameter name ARGUMENT EXPR RETURN return parameters EXPR parameters NAME parameters public NN source NN parameters NNS root ROOT parameters compound parameters source get VB parameters NNS root ROOT get dobj get parameters parameters NNS source NN if IN source NN null JJ string NN names NNS source NN get VB names NNS root ROOT get nsubj get source dobj get names for IN int NN i LS i LS names NNS length NN root ROOT length compound length names i LS final JJ string NN current JJ parameter NN name NN root ROOT name amod name current compound name parameter names NNS i LS this DT parameters NNS set VBN parameter NN current JJ parameter NN name NN root ROOT name amod name current compound name parameter source NN get VB parameter NN root ROOT get nsubj get source dobj get parameter current JJ parameter NN name NN root ROOT name amod name current compound name parameter return NN parameters NNS,1,A1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/transformation/helpers/ParametersRecorder.java,51
COMMENT ignore the code end document code event this method does nothing exception sax exception if an error occurs FUNCTION SPECIFIER public TYPE void NAME void NAME end document PARAMETER LIST THROWS throws sax exception ARGUMENT EXPR sax exception NAME sax exception BLOCK ignore the code end document code event this method does nothing root ROOT ignore det event the compound event code compound event end compound event document compound event code dobj ignore event det method this nsubj does method acl relcl event does dobj does nothing exception sax exception if an error occurs root ROOT exception compound exception exception compound exception sax mark occurs if det error an nsubj occurs error dep exception occurs public NN void NN end NN document NN root ROOT document compound document end throws VBZ sax NN exception NN root ROOT exception compound exception sax does occurs ANTONYM ANTONYM does throws ANTONYM ANTONYM,0,N/A,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/xml/EmbeddedXMLPipe.java,75
FUNCTION SPECIFIER public TYPE int NAME int NAME is valid PARAMETER LIST BLOCK RETURN return this validity null this validity is valid source validity invalid EXPR this validity null this validity is valid source validity invalid TERNARY this validity null this validity is valid source validity invalid CONDITION this validity null EXPR this validity null NAME this validity NAME this NAME validity THEN this validity is valid EXPR this validity is valid CALL this validity is valid NAME this validity is valid NAME this NAME validity NAME is valid ARGUMENT LIST ELSE source validity invalid EXPR source validity invalid NAME source validity invalid NAME source validity NAME invalid public NN int NN is VBZ valid JJ root ROOT valid cop valid is return NN this DT validity NN null JJ this DT validity NN is VBZ valid JJ source NN validity NN invalid JJ root ROOT invalid compound validity source nsubj invalid validity,1,A2,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/impl/SitemapSource.java,473
COMMENT return the serialized xml string return a string containing the recorded xml information formatted by the properties passed to the corresponding start serialized xml recording FUNCTION SPECIFIER public TYPE string NAME string NAME end serialized xml recording PARAMETER LIST THROWS throws sax exception processing exception ARGUMENT EXPR sax exception NAME sax exception ARGUMENT EXPR processing exception NAME processing exception BLOCK DECL STMT TYPE xm lizable NAME xm lizable NAME xml INIT end sax recording EXPR end sax recording CALL end sax recording NAME end sax recording ARGUMENT LIST DECL STMT TYPE string NAME string NAME text INIT xml utils serialize xml properties this stack pop EXPR xml utils serialize xml properties this stack pop CALL xml utils serialize xml properties this stack pop NAME xml utils serialize NAME xml utils NAME serialize ARGUMENT LIST ARGUMENT EXPR xml NAME xml ARGUMENT EXPR properties this stack pop NAME properties CALL this stack pop NAME this stack pop NAME this NAME stack NAME pop ARGUMENT LIST IF if get logger is debug enabled get logger debug end serialized xml recording xml text CONDITION get logger is debug enabled EXPR get logger is debug enabled CALL get logger NAME get logger ARGUMENT LIST CALL is debug enabled NAME is debug enabled ARGUMENT LIST THEN get logger debug end serialized xml recording xml text BLOCK EXPR get logger debug end serialized xml recording xml text CALL get logger NAME get logger ARGUMENT LIST CALL debug end serialized xml recording xml text NAME debug ARGUMENT LIST ARGUMENT EXPR end serialized xml recording xml text NAME text RETURN return text EXPR text NAME text return the serialized xml string root ROOT return det string the amod string serialized compound string xml dobj return string return a string containing the recorded xml information formatted by root ROOT return det string a dobj return string acl string containing det information the amod information recorded compound information xml dobj containing information acl information formatted nmod formatted by the properties passed to the corresponding start serialized xml recording root ROOT passed det properties the nsubj passed properties case start to det start the amod start corresponding nmod to passed start dep passed serialized compound recording xml dobj serialized recording public NN string NN end NN serialized VBD xml NN recording NN root ROOT serialized nsubj serialized end compound recording xml dobj serialized recording throws VBZ sax NN exception NN root ROOT exception compound exception sax processing VBG exception NN root ROOT processing dobj processing exception xm NN lizable JJ root ROOT lizable nmod npmod lizable xm xml NN end NN sax NN recording NN root ROOT recording compound recording end compound recording sax string NN text NN xml NN utils NNS serialize VBP root ROOT serialize compound utils xml nsubj serialize utils xml NN properties NNS this DT stack VBP pop NN if IN get VB logger NN root ROOT get dobj get logger is VBZ debug NN enabled VBD root ROOT enabled cop debug is nsubj enabled debug get VB logger NN root ROOT get dobj get logger debug VB end NN serialized VBN xml NN recording VBG xml NN text NN return NN text NN containing corresponding ANTONYM ANTONYM containing throws ANTONYM ANTONYM passed throws ANTONYM ANTONYM return containing ANTONYM ANTONYM return throws ANTONYM ANTONYM string passed ANTONYM ANTONYM,0,N/A,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/transformation/AbstractSAXTransformer.java,739
COMMENT appends children representing the object s state to the given node by using the results of code to sax code FUNCTION SPECIFIER public TYPE void NAME void NAME to dom PARAMETER LIST node node PARAMETER node node TYPE node NAME node NAME node THROWS throws exception ARGUMENT EXPR exception NAME exception BLOCK EXPR to sax new dom builder node CALL to sax new dom builder node NAME to sax ARGUMENT LIST ARGUMENT EXPR new dom builder node CALL dom builder node NAME dom builder ARGUMENT LIST ARGUMENT EXPR node NAME node appends children representing the object s state to the given node root ROOT s compound children appends nsubj s children acl children representing det object the dobj representing object dobj s state case node to det node the amod node given nmod to state node by using the results of code to sax code root ROOT using mark using by det results the dobj using results case code of nmod of results code case code to compound code sax nmod to using code public NN void NN to TO dom VB root ROOT dom mark dom to node NN node NN throws VBZ exception NN to TO sax NN root ROOT sax case sax to new JJ dom NN builder NN root ROOT builder compound builder dom node NN given results ANTONYM ANTONYM given using ANTONYM ANTONYM representing given ANTONYM ANTONYM,0,N/A,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/xml/AbstractSAXFragment.java,39
DECL STMT TYPE int NAME int NAME seconds INIT EXPR int NN seconds NNS,1,E1,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/acting/HttpCacheAction.java,91
COMMENT generate the validity object before this method can be invoked the generate key method must be invoked return the generated validity object or code null code if the component is currently not cacheable FUNCTION SPECIFIER public TYPE source validity NAME source validity NAME get validity PARAMETER LIST BLOCK RETURN return nop validity shared instance EXPR nop validity shared instance NAME nop validity shared instance NAME nop validity NAME shared instance generate the validity object root ROOT generate det object the compound object validity dobj generate object before this method can be invoked the generate key method root ROOT invoked mark invoked before det method this nsubjpass invoked method aux invoked can auxpass invoked be det method the amod method generate compound method key dobj invoked method must be invoked root ROOT invoked aux invoked must auxpass invoked be return the generated validity object or code null code if the root ROOT return det object the amod object generated compound object validity dobj return object cc object or compound code code amod code null dobj return code conj or object code case the if nmod if return the component is currently not cacheable root ROOT cacheable nsubj cacheable component cop cacheable is advmod cacheable currently neg cacheable not public NN source NN validity NN root ROOT validity compound validity source get VB validity NN root ROOT get dobj get validity return NN nop NN validity NN shared VBD root ROOT shared compound validity nop nsubj shared validity instance NN,0,N/A,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/serialization/AbstractTextSerializer.java,402
COMMENT generates sax events representing the object s state br b note b if the implementation can produce lexical events care should be taken that code handler code can actually be a link org apache cocoon xml xml consumer that accepts such events FUNCTION SPECIFIER public TYPE void NAME void NAME to sax PARAMETER LIST org xml sax content handler handler PARAMETER org xml sax content handler handler TYPE org xml sax content handler NAME org xml sax content handler NAME org NAME xml NAME sax NAME content handler NAME handler THROWS throws sax exception ARGUMENT EXPR sax exception NAME sax exception BLOCK DECL STMT TYPE dom streamer NAME dom streamer NAME ds INIT new dom streamer handler EXPR new dom streamer handler CALL dom streamer handler NAME dom streamer ARGUMENT LIST ARGUMENT EXPR handler NAME handler EXPR ds stream this document get document element CALL ds stream this document get document element NAME ds stream NAME ds NAME stream ARGUMENT LIST ARGUMENT EXPR this document get document element CALL this document get document element NAME this document get document element NAME this NAME document NAME get document element ARGUMENT LIST generates sax events representing the object s state br root ROOT generates compound events sax dobj generates events acl events representing det br the compound br object compound br s compound br state dobj representing br generates sax events representing the object s state br root ROOT generates compound events sax dobj generates events acl events representing det br the compound br object compound br s compound br state dobj representing br b note b if the implementation can produce lexical events root ROOT b compound b b compound b note mark produce if det implementation the nsubj produce implementation aux produce can dep b produce amod events lexical dobj produce events care should be taken that code handler code can actually be root ROOT taken nsubjpass taken care aux taken should auxpass taken be mark be that compound code code compound code handler nsubj be code aux be can advmod be actually ccomp taken be a link org apache cocoon xml xml consumer that accepts such root ROOT consumer det consumer a compound consumer link compound consumer org compound consumer apache compound consumer cocoon compound consumer xml compound consumer xml nsubj accepts consumer ref consumer that acl relcl consumer accepts xcomp accepts such events public NN void NN to TO sax NN root ROOT sax case sax to org NN xml NN sax NN content NN handler NN root ROOT content compound content org compound content xml compound content sax dep content handler handler NN throws VBZ sax NN exception NN root ROOT exception compound exception sax dom NN streamer NN root ROOT streamer compound streamer dom ds JJ new JJ dom NN streamer NN root ROOT streamer compound streamer dom handler NN ds JJ stream NN root ROOT stream amod stream ds this DT document NN get VB document NN element NN can taken ANTONYM ANTONYM care taken ANTONYM ANTONYM generates produce ANTONYM ANTONYM generates taken ANTONYM ANTONYM produce taken ANTONYM ANTONYM state taken ANTONYM ANTONYM,1,B5,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/xml/dom/DocumentWrapper.java,70
COMMENT p check the validity of this instance comparing it with a recently acquired new link source validity object p see source validity is valid source validity FUNCTION SPECIFIER public TYPE int NAME int NAME is valid PARAMETER LIST source validity new validity PARAMETER source validity new validity TYPE source validity NAME source validity NAME new validity BLOCK IF if uris null is closed we have not been closed yet or we were forced to be invalid return source validity invalid CONDITION uris null is closed EXPR uris null is closed NAME uris NAME is closed THEN we have not been closed yet or we were forced to be invalid return source validity invalid BLOCK COMMENT we have not been closed yet or we were forced to be invalid RETURN return source validity invalid EXPR source validity invalid NAME source validity invalid NAME source validity NAME invalid COMMENT perform a simple class check and compute the validity of the sources IF if new validity instanceof multi source validity return compute status multi source validity new validity resolver else the supplied validity is not an instance of ourselves forget it return source validity invalid CONDITION new validity instanceof multi source validity EXPR new validity instanceof multi source validity NAME new validity NAME multi source validity THEN return compute status multi source validity new validity resolver BLOCK RETURN return compute status multi source validity new validity resolver EXPR compute status multi source validity new validity resolver CALL compute status multi source validity new validity resolver NAME compute status ARGUMENT LIST ARGUMENT EXPR multi source validity new validity resolver NAME multi source validity NAME new validity NAME resolver ELSE else the supplied validity is not an instance of ourselves forget it return source validity invalid BLOCK COMMENT the supplied validity is not an instance of ourselves forget it RETURN return source validity invalid EXPR source validity invalid NAME source validity invalid NAME source validity NAME invalid p check the validity of this instance comparing it with a recently acquired root ROOT check nsubj check p det validity the dobj check validity case instance of det instance this nmod of validity instance acl validity comparing dobj comparing it case acquired with det acquired a advmod acquired recently nmod with comparing acquired new link source validity object p root ROOT p amod p new compound p link compound p source compound p validity compound p object new link source validity object p root ROOT p amod p new compound p link compound p source compound p validity compound p object see source validity is valid source validity root ROOT validity csubj validity see compound validity source dobj see validity cop validity is amod validity valid compound validity source public NN int NN is VBZ valid JJ root ROOT valid cop valid is source NN validity NN root ROOT validity compound validity source new JJ validity NN root ROOT validity amod validity new if IN uris NN null JJ is VBZ closed VBN root ROOT closed auxpass closed is we have not been closed yet or we were forced to be invalid root ROOT closed nsubjpass closed we aux closed have neg closed not auxpass closed been advmod closed yet cc closed or nsubjpass forced we nsubj xsubj invalid we auxpass forced were conj or closed forced mark invalid to cop invalid be xcomp forced invalid return NN source NN validity NN invalid JJ root ROOT invalid compound validity source nsubj invalid validity perform a simple class check and compute the validity of the sources root ROOT perform det check a amod check simple compound check class dobj perform check cc perform and conj and perform compute det validity the dobj compute validity case sources of det sources the nmod of validity sources if IN new JJ validity NN root ROOT validity amod validity new instanceof NN multi NNS source NN validity NN root ROOT validity compound validity multi compound validity source return NN compute VB status NN root ROOT compute dobj compute status multi NNS source NN validity NN root ROOT validity compound validity multi compound validity source new JJ validity NN root ROOT validity amod validity new resolver NN else RB the supplied validity is not an instance of ourselves forget it root ROOT instance det validity the amod validity supplied nsubj instance validity cop instance is neg instance not det instance an case ourselves of nmod of forget ourselves acl instance forget dobj forget it return NN source NN validity NN invalid JJ root ROOT invalid compound validity source nsubj invalid validity check acquired ANTONYM ANTONYM,1,A2,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/impl/MultiSourceValidity.java,133
COMMENT generates sax events from the given source p b note b if the implementation can produce lexical events care should be taken that code handler code can actually directly implement the lexical handler interface p param source the data throws processing exception if no suitable converter is found FUNCTION SPECIFIER static SPECIFIER public TYPE void NAME void NAME to sax PARAMETER LIST service manager manager source source content handler handler PARAMETER service manager manager TYPE service manager NAME service manager NAME manager PARAMETER source source TYPE source NAME source NAME source PARAMETER content handler handler TYPE content handler NAME content handler NAME handler THROWS throws sax exception io exception processing exception ARGUMENT EXPR sax exception NAME sax exception ARGUMENT EXPR io exception NAME io exception ARGUMENT EXPR processing exception NAME processing exception BLOCK EXPR to sax manager source null handler CALL to sax manager source null handler NAME to sax ARGUMENT LIST ARGUMENT EXPR manager NAME manager ARGUMENT EXPR source NAME source ARGUMENT EXPR null ARGUMENT EXPR handler NAME handler generates sax events from the given source root ROOT generates compound events sax dobj generates events case source from det source the amod source given nmod from events source p b note b if the implementation can produce lexical events root ROOT b compound b p compound b b compound b note mark produce if det implementation the nsubj produce implementation aux produce can dep b produce amod events lexical dobj produce events care should be taken that code handler code can actually root ROOT taken nsubjpass taken care aux taken should auxpass taken be mark actually that compound code code compound code handler nsubj actually code aux actually can ccomp taken actually directly implement the lexical handler interface p root ROOT implement advmod implement directly det interface the amod interface lexical compound interface handler dobj implement interface dep implement p directly implement the lexical handler interface p root ROOT implement advmod implement directly det interface the amod interface lexical compound interface handler dobj implement interface dep implement p param source the data root ROOT source compound source param det data the dobj source data throws processing exception if no suitable converter is found root ROOT throws compound exception processing dobj throws exception mark found if neg converter no amod converter suitable nsubjpass found converter auxpass found is advcl if throws found static JJ public NN void NN to TO sax NN root ROOT sax case sax to service NN manager NN root ROOT manager compound manager service manager NN source NN source NN content JJ handler NN root ROOT handler amod handler content handler NN throws VBZ sax NN exception NN root ROOT exception compound exception sax io NN exception NN root ROOT exception compound exception io processing VBG exception NN root ROOT processing dobj processing exception to TO sax NN root ROOT sax case sax to manager NN source NN null JJ handler NN be found ANTONYM ANTONYM can taken ANTONYM ANTONYM care taken ANTONYM ANTONYM generates produce ANTONYM ANTONYM generates taken ANTONYM ANTONYM generates throws ANTONYM ANTONYM given found ANTONYM ANTONYM given implement ANTONYM ANTONYM given produce ANTONYM ANTONYM given taken ANTONYM ANTONYM given taken ANTONYM ANTONYM is found ANTONYM ANTONYM produce taken ANTONYM ANTONYM produce throws ANTONYM ANTONYM taken throws ANTONYM ANTONYM,1,B5,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/util/SourceUtil.java,147
COMMENT operation codes DECL STMT SPECIFIER private TYPE final static string SPECIFIER final SPECIFIER static NAME string NAME string INDEX NAME opname INIT new string get value get values get names EXPR new string get value get values get names NAME string NAME string INDEX BLOCK EXPR get value EXPR get values EXPR get names operation codes root ROOT codes compound codes operation private JJ final JJ static JJ string NN opname NN new JJ string NN get VB value NN root ROOT get dobj get value get VB values NNS root ROOT get dobj get values get VB names NNS root ROOT get dobj get names,1,D1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/AbstractMetaModule.java,69
COMMENT ignore the code start dtd code event this method does nothing exception sax exception if an error occurs FUNCTION SPECIFIER public TYPE void NAME void NAME start dtd PARAMETER LIST string name string public id string system id PARAMETER string name TYPE string NAME string NAME name PARAMETER string public id TYPE string NAME string NAME public id PARAMETER string system id TYPE string NAME string NAME system id THROWS throws sax exception ARGUMENT EXPR sax exception NAME sax exception BLOCK COMMENT ignored EXPR this in dtd true NAME this in dtd NAME this NAME in dtd ignore the code start dtd code event this method does nothing root ROOT dtd csubj dtd ignore det start the compound start code dobj ignore start compound event code dobj dtd event det method this nsubj does method ccomp dtd does dobj does nothing exception sax exception if an error occurs root ROOT exception compound exception exception compound exception sax mark occurs if det error an nsubj occurs error dep exception occurs public NN void NN start VB dtd NN root ROOT start dobj start dtd string NN name NN string NN public JJ id NN root ROOT id amod id public string NN system NN id NN root ROOT id compound id system throws VBZ sax NN exception NN root ROOT exception compound exception sax ignored this DT in IN dtd NN true JJ does name ANTONYM ANTONYM does occurs ANTONYM ANTONYM does throws ANTONYM ANTONYM name throws ANTONYM ANTONYM,0,N/A,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/xml/EmbeddedXMLPipe.java,83
COMMENT ignore the code start document code event this method does nothing exception sax exception if an error occurs FUNCTION SPECIFIER public TYPE void NAME void NAME start document PARAMETER LIST THROWS throws sax exception ARGUMENT EXPR sax exception NAME sax exception BLOCK ignore the code start document code event this method does nothing root ROOT ignore det event the compound event code compound event start compound event document compound event code dobj ignore event det method this nsubj does method acl relcl event does dobj does nothing exception sax exception if an error occurs root ROOT exception compound exception exception compound exception sax mark occurs if det error an nsubj occurs error dep exception occurs public NN void NN start VB document NN root ROOT start dobj start document throws VBZ sax NN exception NN root ROOT exception compound exception sax does occurs ANTONYM ANTONYM does throws ANTONYM ANTONYM,0,N/A,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/xml/EmbeddedXMLPipe.java,67
FUNCTION SPECIFIER public TYPE long NAME long NAME get last accessed time PARAMETER LIST BLOCK EXPR check valid CALL check valid NAME check valid ARGUMENT LIST RETURN return lastaccessedtime EXPR lastaccessedtime NAME lastaccessedtime public NN long RB get VB last JJ accessed VBN time NN root ROOT get amod time last amod time accessed nmod tmod get time check NN valid JJ root ROOT valid nmod npmod valid check return NN lastaccessedtime NN,1,A1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/test/java/org/apache/cocoon/environment/mock/MockSession.java,50
FUNCTION SPECIFIER public TYPE int NAME int NAME get max inactive interval PARAMETER LIST BLOCK EXPR check valid CALL check valid NAME check valid ARGUMENT LIST RETURN return maxinactiveinterval EXPR maxinactiveinterval NAME maxinactiveinterval public NN int NN get VB max NN inactive JJ interval NN root ROOT get compound interval max amod interval inactive dobj get interval check NN valid JJ root ROOT valid nmod npmod valid check return NN maxinactiveinterval NN,1,A1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/test/java/org/apache/cocoon/environment/mock/MockSession.java,60
COMMENT test if the component wants to set the content length FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME should set content length PARAMETER LIST BLOCK RETURN return false EXPR false test if the component wants to set the content length root ROOT test mark wants if det component the nsubj wants component advcl if test wants mark set to xcomp wants set det content the dobj set content dobj wants length nsubj xsubj set length public NN boolean NN should MD set VB content JJ length NN root ROOT set aux set should amod length content dobj set length return NN false JJ,1,B1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/serialization/AbstractSerializer.java,62
FUNCTION SPECIFIER public TYPE source parameters NAME source parameters NAME get parameters PARAMETER LIST source parameters source PARAMETER source parameters source TYPE source parameters NAME source parameters NAME source BLOCK IF if source null iterator iter source get parameter names iterator values iter string value par name while iter has next true par name string iter next values iter source get parameter values par name while values iter has next true value string values iter next this parameters set parameter par name value CONDITION source null EXPR source null NAME source THEN iterator iter source get parameter names iterator values iter string value par name while iter has next true par name string iter next values iter source get parameter values par name while values iter has next true value string values iter next this parameters set parameter par name value BLOCK DECL STMT TYPE iterator NAME iterator NAME iter INIT source get parameter names EXPR source get parameter names CALL source get parameter names NAME source get parameter names NAME source NAME get parameter names ARGUMENT LIST DECL STMT TYPE iterator NAME iterator NAME values iter DECL STMT TYPE string NAME string NAME value TYPE NAME par name WHILE while iter has next true par name string iter next values iter source get parameter values par name while values iter has next true value string values iter next this parameters set parameter par name value CONDITION iter has next true EXPR iter has next true CALL iter has next NAME iter has next NAME iter NAME has next ARGUMENT LIST BLOCK EXPR par name string iter next NAME par name NAME string CALL iter next NAME iter next NAME iter NAME next ARGUMENT LIST EXPR values iter source get parameter values par name NAME values iter CALL source get parameter values par name NAME source get parameter values NAME source NAME get parameter values ARGUMENT LIST ARGUMENT EXPR par name NAME par name WHILE while values iter has next true value string values iter next this parameters set parameter par name value CONDITION values iter has next true EXPR values iter has next true CALL values iter has next NAME values iter has next NAME values iter NAME has next ARGUMENT LIST BLOCK EXPR value string values iter next NAME value NAME string CALL values iter next NAME values iter next NAME values iter NAME next ARGUMENT LIST EXPR this parameters set parameter par name value CALL this parameters set parameter par name value NAME this parameters set parameter NAME this NAME parameters NAME set parameter ARGUMENT LIST ARGUMENT EXPR par name NAME par name ARGUMENT EXPR value NAME value RETURN return parameters EXPR parameters NAME parameters public NN source NN parameters NNS root ROOT parameters compound parameters source get VB parameters NNS root ROOT get dobj get parameters source NN parameters NNS root ROOT parameters compound parameters source source NN if IN source NN null JJ iterator NN iter NN source NN get VB parameter NN names NNS root ROOT get nsubj get source compound names parameter dobj get names iterator NN values NNS iter VBP root ROOT iter nsubj iter values string NN value NN par JJ name NN root ROOT name amod name par while IN iter NN has VBZ next JJ root ROOT has nsubj has iter advmod has next true JJ par JJ name NN root ROOT name amod name par string NN iter NN next IN root ROOT iter dep iter next values NNS iter VBP root ROOT iter nsubj iter values source NN get VB parameter NN values NNS root ROOT get nsubj get source compound values parameter dobj get values par JJ name NN root ROOT name amod name par while IN values NNS iter VBP has VBZ next JJ root ROOT iter nsubj iter values dep iter has advmod has next true JJ value NN string NN values NNS iter VBP next JJ root ROOT iter nsubj iter values advmod iter next this DT parameters NNS set VBN parameter NN par JJ name NN root ROOT name amod name par value NN return NN parameters NNS,1,A1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/transformation/helpers/ParametersRecorder.java,62
COMMENT register all extension functions listed in the configuration through code lt function name fully qualified class prefix prefix gt code in the given function library param conf a code configuration code value FUNCTION SPECIFIER private TYPE void NAME void NAME get functions PARAMETER LIST configuration conf PARAMETER configuration conf TYPE configuration NAME configuration NAME conf BLOCK DECL STMT TYPE configuration NAME configuration NAME configuration INDEX NAME children INIT conf get children function EXPR conf get children function CALL conf get children function NAME conf get children NAME conf NAME get children ARGUMENT LIST ARGUMENT EXPR function DECL STMT TYPE int NAME int NAME i INIT children length EXPR children length NAME children length NAME children NAME length WHILE while i string clazz name children i get attribute name null string prefix children i get attribute prefix null if clazz name null prefix null try class clazz class for name clazz name this library add functions new class functions clazz prefix catch class not found exception cnf ignore CONDITION i EXPR i NAME i BLOCK DECL STMT TYPE string NAME string NAME clazz name INIT children i get attribute name null EXPR children i get attribute name null NAME children i NAME children INDEX i EXPR i NAME i CALL get attribute name null NAME get attribute ARGUMENT LIST ARGUMENT EXPR name ARGUMENT EXPR null DECL STMT TYPE string NAME string NAME prefix INIT children i get attribute prefix null EXPR children i get attribute prefix null NAME children i NAME children INDEX i EXPR i NAME i CALL get attribute prefix null NAME get attribute ARGUMENT LIST ARGUMENT EXPR prefix ARGUMENT EXPR null IF if clazz name null prefix null try class clazz class for name clazz name this library add functions new class functions clazz prefix catch class not found exception cnf ignore CONDITION clazz name null prefix null EXPR clazz name null prefix null NAME clazz name NAME prefix THEN try class clazz class for name clazz name this library add functions new class functions clazz prefix catch class not found exception cnf ignore BLOCK TRY try class clazz class for name clazz name this library add functions new class functions clazz prefix catch class not found exception cnf ignore BLOCK DECL STMT TYPE class NAME class NAME clazz INIT class for name clazz name EXPR class for name clazz name CALL class for name clazz name NAME class for name NAME class NAME for name ARGUMENT LIST ARGUMENT EXPR clazz name NAME clazz name EXPR this library add functions new class functions clazz prefix CALL this library add functions new class functions clazz prefix NAME this library add functions NAME this NAME library NAME add functions ARGUMENT LIST ARGUMENT EXPR new class functions clazz prefix CALL class functions clazz prefix NAME class functions ARGUMENT LIST ARGUMENT EXPR clazz NAME clazz ARGUMENT EXPR prefix NAME prefix CATCH catch class not found exception cnf ignore PARAMETER LIST class not found exception cnf PARAMETER class not found exception cnf TYPE class not found exception NAME class not found exception NAME cnf BLOCK COMMENT ignore register all extension functions listed in the configuration root ROOT register det functions all compound functions extension dobj register functions acl functions listed case configuration in det configuration the nmod in listed configuration through code lt function name fully qualified class root ROOT qualified case name through compound name code compound name lt compound name function nmod through qualified name advmod qualified fully dobj qualified class prefix prefix gt code in the given function library root ROOT code compound code prefix compound code prefix compound code gt case library in det library the amod library given compound library function nmod in code library param conf a code configuration code value root ROOT conf nsubj conf param det value a compound value code compound value configuration compound value code dobj conf value private JJ void NN get VB functions NNS root ROOT get dobj get functions configuration NN conf NN configuration NN children NNS conf NN get VB children NNS root ROOT get nsubj get conf dobj get children function NN int NN i LS children NNS length NN root ROOT length compound length children while IN i LS string NN clazz NN name NN root ROOT name compound name clazz children NNS i LS get VB attribute NN root ROOT get dobj get attribute name NN null JJ string NN prefix NN children NNS i LS get VB attribute NN root ROOT get dobj get attribute prefix NN null JJ if IN clazz NN name NN root ROOT name compound name clazz null JJ prefix NN null JJ try VB class NN clazz NN class NN for IN name NN clazz NN name NN root ROOT name compound name clazz this DT library NN add VB functions NNS new JJ class NN functions NNS root ROOT functions compound functions class clazz NN prefix NN catch NN class NN not RB found VBN exception NN root ROOT found nsubj found class neg found not dobj found exception cnf NN ignore configuration class ANTONYM ANTONYM name given ANTONYM ANTONYM listed qualified SYNONYM SYNONYM,1,B6,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/JXPathHelperConfiguration.java,117
FUNCTION SPECIFIER public TYPE void NAME void NAME to string PARAMETER LIST string buffer value PARAMETER string buffer value TYPE string buffer NAME string buffer NAME value BLOCK EXPR value append ch CALL value append ch NAME value append NAME value NAME append ARGUMENT LIST ARGUMENT EXPR ch NAME ch public NN void NN to TO string VB root ROOT string mark string to string NN buffer NN root ROOT buffer compound buffer string value NN value NN append IN root ROOT value dep value append ch NN,1,B5,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/xml/SaxBuffer.java,477
DECL STMT SPECIFIER private TYPE map NAME map NAME objectmodel private JJ map NN objectmodel NN,1,D1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/test/java/org/apache/cocoon/AbstractTestCase.java,56
FUNCTION SPECIFIER public TYPE enumeration NAME enumeration NAME get headers PARAMETER LIST string name PARAMETER string name TYPE string NAME string NAME name BLOCK RETURN return this req get headers name EXPR this req get headers name CALL this req get headers name NAME this req get headers NAME this NAME req NAME get headers ARGUMENT LIST ARGUMENT EXPR name NAME name public NN enumeration NN get VB headers NNS root ROOT get dobj get headers string NN name NN return NN this DT req NN get VB headers NNS name NN,0,N/A,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/http/HttpRequest.java,171
COMMENT non javadoc see javax servlet http http servlet request get request url FUNCTION SPECIFIER public TYPE string buffer NAME string buffer NAME get request url PARAMETER LIST BLOCK COMMENT todo the method was added when request was made extending http servlet request implement the method THROW throw new unsupported operation exception EXPR new unsupported operation exception CALL unsupported operation exception NAME unsupported operation exception ARGUMENT LIST non javadoc root ROOT javadoc amod javadoc non see javax servlet http http servlet request get request url root ROOT see compound request javax amod request servlet compound request http compound request http compound request servlet nsubj get request ccomp see get compound url request dobj get url public NN string NN buffer NN root ROOT buffer compound buffer string get VB request NN url NN root ROOT get compound url request dobj get url todo the method was added when request was made extending http servlet request implement the method root ROOT added mark added todo det method the nsubjpass added method auxpass added was advmod made when nsubjpass made request auxpass made was advcl added made xcomp made extending amod request http compound request servlet dobj extending request dep added implement det method the dobj implement method throw VB new JJ unsupported JJ operation NN exception NN root ROOT exception amod exception unsupported compound exception operation,1,A4,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/impl/AbstractRequest.java,64
FUNCTION SPECIFIER public TYPE int NAME int NAME is valid PARAMETER LIST source validity validity PARAMETER source validity validity TYPE source validity NAME source validity NAME validity BLOCK IF if validity instanceof sitemap source validity return this validity null this validity is valid sitemap source validity validity get nested validity source validity invalid CONDITION validity instanceof sitemap source validity EXPR validity instanceof sitemap source validity NAME validity NAME sitemap source validity THEN return this validity null this validity is valid sitemap source validity validity get nested validity source validity invalid BLOCK RETURN return this validity null this validity is valid sitemap source validity validity get nested validity source validity invalid EXPR this validity null this validity is valid sitemap source validity validity get nested validity source validity invalid TERNARY this validity null this validity is valid sitemap source validity validity get nested validity source validity invalid CONDITION this validity null EXPR this validity null NAME this validity NAME this NAME validity THEN this validity is valid sitemap source validity validity get nested validity EXPR this validity is valid sitemap source validity validity get nested validity CALL this validity is valid sitemap source validity validity get nested validity NAME this validity is valid NAME this NAME validity NAME is valid ARGUMENT LIST ARGUMENT EXPR sitemap source validity validity get nested validity NAME sitemap source validity NAME validity CALL get nested validity NAME get nested validity ARGUMENT LIST ELSE source validity invalid EXPR source validity invalid NAME source validity invalid NAME source validity NAME invalid RETURN return source validity invalid EXPR source validity invalid NAME source validity invalid NAME source validity NAME invalid public NN int NN is VBZ valid JJ root ROOT valid cop valid is source NN validity NN root ROOT validity compound validity source validity NN if IN validity NN instanceof NN sitemap NN source NN validity NN root ROOT validity compound validity sitemap compound validity source return NN this DT validity NN null JJ this DT validity NN is VBZ valid JJ sitemap NN source NN validity NN root ROOT validity compound validity sitemap compound validity source validity NN get VB nested JJ validity NN root ROOT get amod validity nested dobj get validity source NN validity NN invalid JJ root ROOT invalid compound validity source nsubj invalid validity return NN source NN validity NN invalid JJ root ROOT invalid compound validity source nsubj invalid validity,1,A2,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/impl/SitemapSource.java,479
COMMENT operation codes DECL STMT SPECIFIER private TYPE final static int SPECIFIER final SPECIFIER static NAME int NAME op values INIT EXPR operation codes root ROOT codes compound codes operation private JJ final JJ static JJ int NN op NN values NNS root ROOT values compound values op,1,E1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/AbstractMetaModule.java,67
DECL STMT SPECIFIER private TYPE iterator NAME iterator NAME iter private JJ iterator NN iter NN,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/wrapper/RequestParameters.java,171
COMMENT non javadoc see org apache cocoon environment environment get object model FUNCTION SPECIFIER public TYPE map NAME map NAME get object model PARAMETER LIST BLOCK RETURN return env get object model EXPR env get object model CALL env get object model NAME env get object model NAME env NAME get object model ARGUMENT LIST non javadoc root ROOT javadoc amod javadoc non see org apache cocoon environment environment get object model root ROOT get csubj get see advmod apache org amod environment apache compound environment cocoon compound environment environment dobj see environment compound model object dobj get model public NN map NN get VB object VB model NN root ROOT get xcomp get object dobj object model return NN env NN get VB object VB model NN root ROOT env acl env get xcomp get object dobj object model,1,A4,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/wrapper/MutableEnvironmentFacade.java,152
FUNCTION SPECIFIER public TYPE map NAME map NAME get object model PARAMETER LIST BLOCK RETURN return object model EXPR object model NAME object model public NN map NN get VB object VB model NN root ROOT get xcomp get object dobj object model return NN object NN model NN root ROOT model compound model object,1,A4,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/processing/impl/MockProcessInfoProvider.java,56
COMMENT generates character sax events from the given source param source the data param encoding the character encoding of the data FUNCTION SPECIFIER public SPECIFIER static TYPE void NAME void NAME to characters PARAMETER LIST source source string encoding content handler handler PARAMETER source source TYPE source NAME source NAME source PARAMETER string encoding TYPE string NAME string NAME encoding PARAMETER content handler handler TYPE content handler NAME content handler NAME handler THROWS throws sax exception io exception processing exception ARGUMENT EXPR sax exception NAME sax exception ARGUMENT EXPR io exception NAME io exception ARGUMENT EXPR processing exception NAME processing exception BLOCK TRY try reader r encoding null new input stream reader source get input stream new input stream reader source get input stream encoding int len char chr new char try while len r read chr handler characters chr len finally r close catch sax exception e handle sax exception source get uri e BLOCK DECL STMT TYPE reader NAME reader NAME r INIT encoding null new input stream reader source get input stream new input stream reader source get input stream encoding EXPR encoding null new input stream reader source get input stream new input stream reader source get input stream encoding TERNARY encoding null new input stream reader source get input stream new input stream reader source get input stream encoding CONDITION encoding null EXPR encoding null NAME encoding THEN new input stream reader source get input stream EXPR new input stream reader source get input stream CALL input stream reader source get input stream NAME input stream reader ARGUMENT LIST ARGUMENT EXPR source get input stream CALL source get input stream NAME source get input stream NAME source NAME get input stream ARGUMENT LIST ELSE new input stream reader source get input stream encoding EXPR new input stream reader source get input stream encoding CALL input stream reader source get input stream encoding NAME input stream reader ARGUMENT LIST ARGUMENT EXPR source get input stream CALL source get input stream NAME source get input stream NAME source NAME get input stream ARGUMENT LIST ARGUMENT EXPR encoding NAME encoding DECL STMT TYPE int NAME int NAME len DECL STMT TYPE char NAME char NAME char INDEX NAME chr INIT new char EXPR new char NAME char NAME char INDEX EXPR TRY try while len r read chr handler characters chr len finally r close BLOCK WHILE while len r read chr handler characters chr len CONDITION len r read chr EXPR len r read chr NAME len CALL r read chr NAME r read NAME r NAME read ARGUMENT LIST ARGUMENT EXPR chr NAME chr BLOCK EXPR handler characters chr len CALL handler characters chr len NAME handler characters NAME handler NAME characters ARGUMENT LIST ARGUMENT EXPR chr NAME chr ARGUMENT EXPR ARGUMENT EXPR len NAME len FINALLY finally r close BLOCK EXPR r close CALL r close NAME r close NAME r NAME close ARGUMENT LIST CATCH catch sax exception e handle sax exception source get uri e PARAMETER LIST sax exception e PARAMETER sax exception e TYPE sax exception NAME sax exception NAME e BLOCK EXPR handle sax exception source get uri e CALL handle sax exception source get uri e NAME handle sax exception ARGUMENT LIST ARGUMENT EXPR source get uri CALL source get uri NAME source get uri NAME source NAME get uri ARGUMENT LIST ARGUMENT EXPR e NAME e generates character sax events from the given source root ROOT generates compound events character compound events sax dobj generates events case source from det source the amod source given nmod from events source param source the data root ROOT source compound source param det data the dobj source data param encoding the character encoding of the data root ROOT param acl param encoding det encoding the compound encoding character dobj encoding encoding case data of det data the nmod of encoding data public NN static JJ void NN to TO characters NNS root ROOT characters case characters to source NN source NN string NN encoding VBG content JJ handler NN root ROOT handler amod handler content handler NN throws VBZ sax NN exception NN root ROOT exception compound exception sax io NN exception NN root ROOT exception compound exception io processing VBG exception NN root ROOT processing dobj processing exception try VB reader NN r NN encoding VBG null JJ new JJ input NN stream NN reader NN root ROOT reader compound reader input compound reader stream source NN get VB input NN stream NN root ROOT get nsubj get source compound stream input dobj get stream new JJ input NN stream NN reader NN root ROOT reader compound reader input compound reader stream source NN get VB input NN stream NN root ROOT get nsubj get source compound stream input dobj get stream encoding VBG int NN len NN char NN chr NN new JJ char NN try VB while IN len NN r NN read NN root ROOT read compound read r chr NN handler NN characters NNS root ROOT characters compound characters handler chr NN len NN finally RB r NN close NN root ROOT close compound close r catch NN sax NN exception NN root ROOT exception compound exception sax e SYM handle VB sax NN exception NN root ROOT handle compound exception sax dobj handle exception source NN get VB uri NN root ROOT get nsubj get source dobj get uri e SYM character events ANTONYM ANTONYM character source ANTONYM ANTONYM generates throws ANTONYM ANTONYM,1,B5,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/util/SourceUtil.java,200
COMMENT non javadoc see org apache cocoon environment environment get object model FUNCTION SPECIFIER public TYPE map NAME map NAME get object model PARAMETER LIST BLOCK RETURN return this object model EXPR this object model NAME this object model NAME this NAME object model non javadoc root ROOT javadoc amod javadoc non see org apache cocoon environment environment get object model root ROOT get csubj get see advmod apache org amod environment apache compound environment cocoon compound environment environment dobj see environment compound model object dobj get model public NN map NN get VB object VB model NN root ROOT get xcomp get object dobj object model return NN this DT object NN model NN,1,A4,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/AbstractEnvironment.java,175
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME action results INIT action set node class get name action results EXPR action set node class get name action results CALL action set node class get name NAME action set node class get name NAME action set node NAME class get name NAME class NAME get name ARGUMENT LIST public NN static JJ final JJ string NN action NN results NNS root ROOT results compound results action action NN set VBD node NN class NN get VB name NN action NN results NNS root ROOT results compound results action,1,E1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/treeprocessor/sitemap/ActionSetNode.java,38
COMMENT the xml byte stream DECL STMT SPECIFIER private TYPE object NAME object NAME xml bytes the xml byte stream root ROOT stream det stream the compound stream xml compound stream byte private JJ object NN xml NN bytes NNS root ROOT bytes compound bytes xml,1,E1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/sax/XMLByteStreamFragment.java,33
DECL STMT SPECIFIER protected SPECIFIER static TYPE final collection SPECIFIER final NAME collection NAME col protected VBN static JJ final JJ collection NN col NN,0,N/A,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/LocateResource.java,61
COMMENT get the last modification date return the last modification in milliseconds since january gmt or if it is unknown FUNCTION SPECIFIER public TYPE long NAME long NAME get last modified PARAMETER LIST BLOCK RETURN return EXPR get the last modification date root ROOT get det date the amod date last compound date modification dobj get date return the last modification in milliseconds since january gmt root ROOT return det modification the amod modification last dobj return modification case milliseconds in nmod in modification milliseconds case gmt since compound gmt january nmod since modification gmt or if it is unknown root ROOT unknown cc unknown or mark unknown if nsubj unknown it cop unknown is public NN long RB get VB last JJ modified VBN root ROOT get xcomp get last dep last modified return NN get last ANTONYM ANTONYM get return ANTONYM ANTONYM last is ANTONYM ANTONYM,1,B1,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/source/impl/SitemapSource.java,174
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME caller parameters INIT action set node class get name caller parameters EXPR action set node class get name caller parameters CALL action set node class get name NAME action set node class get name NAME action set node NAME class get name NAME class NAME get name ARGUMENT LIST public NN static JJ final JJ string NN caller NN parameters NNS root ROOT parameters compound parameters caller action NN set VBD node NN class NN get VB name NN caller NN parameters NNS root ROOT parameters compound parameters caller,1,E1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/treeprocessor/sitemap/ActionSetNode.java,37
COMMENT splits a node name into a prefix and a local name return an array containing two elements the first one is the prefix can be null the second one is the local name FUNCTION SPECIFIER private TYPE string NAME string NAME string INDEX NAME get prefix and local name PARAMETER LIST string node name PARAMETER string node name TYPE string NAME string NAME node name BLOCK DECL STMT TYPE string NAME string NAME prefix TYPE NAME local name DECL STMT TYPE int NAME int NAME colon pos INIT node name index of EXPR node name index of CALL node name index of NAME node name index of NAME node name NAME index of ARGUMENT LIST ARGUMENT EXPR IF if colon pos prefix node name substring colon pos local name node name substring colon pos node name length else prefix null local name node name CONDITION colon pos EXPR colon pos NAME colon pos THEN prefix node name substring colon pos local name node name substring colon pos node name length BLOCK EXPR prefix node name substring colon pos NAME prefix CALL node name substring colon pos NAME node name substring NAME node name NAME substring ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR colon pos NAME colon pos EXPR local name node name substring colon pos node name length NAME local name CALL node name substring colon pos node name length NAME node name substring NAME node name NAME substring ARGUMENT LIST ARGUMENT EXPR colon pos NAME colon pos ARGUMENT EXPR node name length CALL node name length NAME node name length NAME node name NAME length ARGUMENT LIST ELSE else prefix null local name node name BLOCK EXPR prefix null NAME prefix EXPR local name node name NAME local name NAME node name RETURN return new string prefix local name EXPR new string prefix local name NAME string NAME string INDEX BLOCK EXPR prefix NAME prefix EXPR local name NAME local name splits a node name into a prefix and a local name root ROOT splits det name a compound name node dobj splits name case prefix into det prefix a nmod into splits prefix cc prefix and det name a amod name local nmod into splits name conj and prefix name return an array containing two elements the first one is the prefix can be null the root ROOT null csubj null return det array an dobj return array acl array containing nummod elements two dobj containing elements det one the amod one first nsubj prefix one cop prefix is det prefix the acl relcl elements prefix aux null can cop null be dep null the second one is the local name root ROOT name amod one second nsubj name one cop name is det name the amod name local private JJ string NN get VB prefix NN and CC local JJ name NN root ROOT get compound name prefix cc prefix and conj and prefix local compound name local dobj get name string NN node NN name NN root ROOT name compound name node string NN prefix NN local JJ name NN root ROOT name amod name local int NN colon NN pos NNS root ROOT pos compound pos colon node NN name NN index NN of IN root ROOT index compound index node compound index name dep index of if IN colon NN pos NNS root ROOT pos compound pos colon prefix NN node NN name NN substring VBG root ROOT name compound name node acl name substring colon NN pos NNS root ROOT pos compound pos colon local JJ name NN root ROOT name amod name local node NN name NN substring VBG root ROOT name compound name node acl name substring colon NN pos NNS root ROOT pos compound pos colon node NN name NN length NN root ROOT length compound length node compound length name else RB prefix NN null JJ local JJ name NN root ROOT name amod name local node NN name NN root ROOT name compound name node return NN new JJ string NN prefix NN local JJ name NN root ROOT name amod name local containing be ANTONYM ANTONYM containing is ANTONYM ANTONYM return containing ANTONYM ANTONYM two one SYNONYM SYNONYM,1,A1,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/xml/dom/DOMStreamer.java,534
FUNCTION SPECIFIER public TYPE map NAME map NAME get header PARAMETER LIST BLOCK RETURN return header EXPR header NAME header public NN map NN get VB header NN root ROOT get dobj get header return NN header NN,1,A4,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/test/java/org/apache/cocoon/environment/mock/MockResponse.java,118
COMMENT maintains the forest of code web continuation code trees this set is used only for debugging puroses by link display all continuations method DECL STMT SPECIFIER protected TYPE set NAME set NAME forest INIT collections synchronized set new hash set EXPR collections synchronized set new hash set CALL collections synchronized set new hash set NAME collections synchronized set NAME collections NAME synchronized set ARGUMENT LIST ARGUMENT EXPR new hash set CALL hash set NAME hash set ARGUMENT LIST maintains the forest of code web continuation code trees root ROOT maintains det forest the dobj maintains forest case trees of compound trees code compound trees web compound trees continuation compound trees code nmod of forest trees this set is used only for debugging puroses by root ROOT used det set this nsubjpass used set auxpass used is advmod debugging only mark debugging for advcl for used debugging dobj debugging puroses dep used by link display all continuations method root ROOT display nsubj display link det method all compound method continuations dobj display method protected VBN set NN forest NN collections NNS synchronized VBD set NN root ROOT synchronized nsubj synchronized collections dobj synchronized set new JJ hash JJ set NN root ROOT set amod set hash,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/flow/ContinuationsManagerImpl.java,94
FUNCTION SPECIFIER public TYPE object NAME object NAME set value PARAMETER LIST object value PARAMETER object value TYPE object NAME object NAME value BLOCK THROW throw new unsupported operation exception EXPR new unsupported operation exception CALL unsupported operation exception NAME unsupported operation exception ARGUMENT LIST public NN object NN set VBN value NN root ROOT set dobj set value object NN value NN throw VB new JJ unsupported JJ operation NN exception NN root ROOT exception amod exception unsupported compound exception operation,1,A3,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/impl/BaseMap.java,46
COMMENT this method should never be called by the tree processor since a code lt map flow gt code element should not be in an executable sitemap node param env an code environment code value param context an code invoke context code value return a code boolean code value exception exception if an error occurs FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME invoke PARAMETER LIST environment env invoke context context PARAMETER environment env TYPE environment NAME environment NAME env PARAMETER invoke context context TYPE invoke context NAME invoke context NAME context THROWS throws exception ARGUMENT EXPR exception NAME exception BLOCK RETURN return true EXPR true this method should never be called by the tree processor since a root ROOT called det method this nsubjpass called method aux called should neg called never auxpass called be case processor by det processor the compound processor tree nmod agent called processor case a since nmod since called a code lt map flow gt code element should not be in an root ROOT an compound element code compound element lt compound element map compound element flow compound element gt compound element code nsubj an element aux an should neg an not cop an be case an in executable sitemap node root ROOT node amod node executable compound node sitemap param env an code environment code value root ROOT env compound env param det value an compound value code compound value environment compound value code dobj env value param context an code invoke context code value root ROOT context compound context param det code an nsubj invoke code acl relcl context invoke compound value context compound value code dobj invoke value return a code boolean code value root ROOT return det value a compound value code compound value boolean compound value code dobj return value exception exception if an error occurs root ROOT exception compound exception exception mark occurs if det error an nsubj occurs error advcl if exception occurs public NN boolean NN invoke VB environment NN env NN invoke VB context NN root ROOT invoke dobj invoke context context NN throws VBZ exception NN return NN true JJ be map ANTONYM ANTONYM flow return ANTONYM ANTONYM return occurs ANTONYM ANTONYM return throws ANTONYM ANTONYM,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/treeprocessor/sitemap/FlowNode.java,82
DECL STMT SPECIFIER private TYPE input stream NAME input stream NAME is private JJ input NN stream NN root ROOT stream compound stream input is VBZ,0,N/A,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/sax/XMLInputStreamInterpreter.java,37
COMMENT the category node DECL STMT SPECIFIER private TYPE category node NAME category node NAME resources the category node root ROOT node det node the compound node category private JJ category NN node NN root ROOT node compound node category resources NNS,1,E1,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/components/treeprocessor/sitemap/CallNode.java,43
COMMENT finds a namespace uri declared on this element FUNCTION SPECIFIER public TYPE string NAME string NAME get namespace uri PARAMETER LIST string prefix PARAMETER string prefix TYPE string NAME string NAME prefix BLOCK IF if namespace declarations null namespace declarations size return null CONDITION namespace declarations null namespace declarations size EXPR namespace declarations null namespace declarations size NAME namespace declarations CALL namespace declarations size NAME namespace declarations size NAME namespace declarations NAME size ARGUMENT LIST THEN return null BLOCK RETURN return null EXPR null RETURN return string namespace declarations get prefix EXPR string namespace declarations get prefix NAME string CALL namespace declarations get prefix NAME namespace declarations get NAME namespace declarations NAME get ARGUMENT LIST ARGUMENT EXPR prefix NAME prefix finds a namespace uri declared on this element root ROOT finds det uri a compound uri namespace dobj finds uri acl uri declared case element on det element this nmod on declared element public NN string NN get VB namespace NN uri NN root ROOT get compound uri namespace dobj get uri string NN prefix NN if IN namespace NN declarations NNS root ROOT declarations compound declarations namespace null JJ namespace NN declarations NNS size NN root ROOT size compound size namespace compound size declarations return NN null JJ return NN string NN namespace NN declarations NNS get VBP root ROOT get compound declarations namespace nsubj get declarations prefix NN,0,N/A,cocoon/cocoon-pipeline-impl/cocoon-pipeline-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/xml/dom/DOMStreamer.java,627
COMMENT get the location of a code parameters code object returning link location unknown if no location could be found param param return the location since FUNCTION SPECIFIER public SPECIFIER static TYPE location NAME location NAME get location PARAMETER LIST parameters param PARAMETER parameters param TYPE parameters NAME parameters NAME param BLOCK DECL STMT TYPE location NAME location NAME loc INIT null EXPR null IF if param instanceof locatable loc locatable param get location CONDITION param instanceof locatable EXPR param instanceof locatable NAME param NAME locatable THEN loc locatable param get location BLOCK EXPR loc locatable param get location NAME loc NAME locatable NAME param CALL get location NAME get location ARGUMENT LIST RETURN return loc null location unknown loc EXPR loc null location unknown loc TERNARY loc null location unknown loc CONDITION loc null EXPR loc null NAME loc THEN location unknown EXPR location unknown NAME location unknown NAME location NAME unknown ELSE loc EXPR loc NAME loc get the location of a code parameters code object returning root ROOT get det location the nsubj code location case parameters of det parameters a compound parameters code nmod of location parameters ccomp get code dobj code object acl object returning link location unknown if no location could be found root ROOT unknown compound location link nsubj unknown location mark found if neg location no nsubjpass found location aux found could auxpass found be advcl if unknown found param param root ROOT param compound param param return the location root ROOT return det location the dobj return location since public NN static JJ location NN get VB location NN root ROOT get dobj get location parameters NNS param NN location NN loc NN null JJ if IN param NN instanceof NN locatable JJ loc NN locatable JJ param NN get VB location NN root ROOT get dobj get location return NN loc NN null JJ location NN unknown NN root ROOT unknown compound unknown location loc NN get returning ANTONYM ANTONYM,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/sitemap/SitemapParameters.java,56
DECL STMT SPECIFIER protected TYPE final list SPECIFIER final NAME list NAME includes protected VBN final JJ list NN includes VBZ,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/classloader/DefaultClassLoader.java,38
COMMENT associated symbolic names can be null DECL STMT SPECIFIER private TYPE string NAME string NAME string INDEX NAME name associated symbolic names can be null root ROOT null amod names associated amod names symbolic nsubj null names aux null can cop null be private JJ string NN name NN be name ANTONYM ANTONYM names be ANTONYM ANTONYM,1,D1,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/selection/ExceptionSelector.java,62
COMMENT default value for cacheability of xpath expressions defaults to true DECL STMT TYPE boolean NAME boolean NAME cache expressions default value for cacheability of xpath expressions defaults to true root ROOT value compound value default case cacheability for nmod for value cacheability case expressions of compound expressions xpath nmod of cacheability expressions dep expressions defaults case true to nmod to defaults true default value for cacheability of xpath expressions defaults to true root ROOT value compound value default case cacheability for nmod for value cacheability case expressions of compound expressions xpath nmod of cacheability expressions dep expressions defaults case true to nmod to defaults true default value for cacheability of xpath expressions defaults to true root ROOT value compound value default case cacheability for nmod for value cacheability case expressions of compound expressions xpath nmod of cacheability expressions dep expressions defaults case true to nmod to defaults true boolean NN cache NN expressions NNS root ROOT expressions compound expressions cache,0,N/A,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/components/modules/input/XMLFileModule.java,103
COMMENT non javadoc see org apache cocoon environment request get headers java lang string FUNCTION SPECIFIER public TYPE enumeration NAME enumeration NAME get headers PARAMETER LIST string name PARAMETER string name TYPE string NAME string NAME name BLOCK RETURN return this req get headers name EXPR this req get headers name CALL this req get headers name NAME this req get headers NAME this NAME req NAME get headers ARGUMENT LIST ARGUMENT EXPR name NAME name non javadoc root ROOT javadoc amod javadoc non see org apache cocoon environment request get headers java lang string root ROOT see advmod apache org amod request apache compound request cocoon compound request environment nsubj get request ccomp see get compound string headers compound string java compound string lang dobj get string public NN enumeration NN get VB headers NNS root ROOT get dobj get headers string NN name NN return NN this DT req NN get VB headers NNS name NN see name ANTONYM ANTONYM,0,N/A,cocoon/cocoon-sitemap-impl/cocoon-sitemap-impl-1.0.0-RC2/src/main/java/org/apache/cocoon/environment/wrapper/AbstractRequestWrapper.java,235
DECL STMT SPECIFIER public TYPE final static string SPECIFIER final SPECIFIER static NAME string NAME param parameters INIT parameters EXPR parameters public NN final JJ static JJ string NN param NN parameters NNS root ROOT parameters compound parameters param parameters NNS,0,N/A,cocoon/cocoon-sitemap-components/cocoon-sitemap-components-1.0.0-RC2/src/main/java/org/apache/cocoon/acting/RequestParamAction.java,90
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set show errors PARAMETER LIST boolean show errors PARAMETER boolean show errors TYPE boolean NAME boolean NAME show errors BLOCK EXPR this show errors show errors NAME this show errors NAME this NAME show errors NAME show errors RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN show NN errors NNS root ROOT set compound errors show dobj set errors boolean NN show NN errors NNS root ROOT errors compound errors show this DT show NN errors NNS show NN errors NNS root ROOT errors compound errors show return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,480
FUNCTION SPECIFIER public TYPE project building request NAME project building request NAME set remote repositories PARAMETER LIST list artifact repository remote repositories PARAMETER list artifact repository remote repositories TYPE list artifact repository NAME list artifact repository NAME list ARGUMENT LIST ARGUMENT NAME artifact repository NAME remote repositories BLOCK IF if remote repositories null this remote repositories new array list remote repositories else this remote repositories clear CONDITION remote repositories null EXPR remote repositories null NAME remote repositories THEN this remote repositories new array list remote repositories BLOCK EXPR this remote repositories new array list remote repositories NAME this remote repositories NAME this NAME remote repositories CALL array list remote repositories NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR remote repositories NAME remote repositories ELSE else this remote repositories clear BLOCK EXPR this remote repositories clear CALL this remote repositories clear NAME this remote repositories clear NAME this NAME remote repositories NAME clear ARGUMENT LIST RETURN return this EXPR this NAME this public NN project NN building NN request NN root ROOT request compound request project compound request building set VBN remote JJ repositories NNS root ROOT set amod repositories remote dobj set repositories list NN artifact NN repository NN root ROOT repository compound repository artifact remote JJ repositories NNS root ROOT repositories amod repositories remote if IN remote JJ repositories NNS root ROOT repositories amod repositories remote null JJ this DT remote JJ repositories NNS new JJ array NN list NN root ROOT list compound list array remote JJ repositories NNS root ROOT repositories amod repositories remote else RB this DT remote JJ repositories NNS clear JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuildingRequest.java,125
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE model building request NAME model building request NAME set model building listener PARAMETER LIST model building listener model building listener PARAMETER model building listener model building listener TYPE model building listener NAME model building listener NAME model building listener BLOCK EXPR this model building listener model building listener NAME this model building listener NAME this NAME model building listener NAME model building listener RETURN return this EXPR this NAME this override NN public NN model NN building NN request NN root ROOT request compound request model compound request building set VBN model NN building NN listener NN root ROOT set compound listener model compound listener building dobj set listener model NN building NN listener NN root ROOT listener compound listener model compound listener building model NN building NN listener NN root ROOT listener compound listener model compound listener building this DT model NN building NN listener NN model NN building NN listener NN root ROOT listener compound listener model compound listener building return NN this DT,1,A3,maven/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuildingRequest.java,360
FUNCTION SPECIFIER public TYPE project builder configuration NAME project builder configuration NAME set local repository PARAMETER LIST artifact repository local repository PARAMETER artifact repository local repository TYPE artifact repository NAME artifact repository NAME local repository BLOCK EXPR this local repository local repository NAME this local repository NAME this NAME local repository NAME local repository RETURN return this EXPR this NAME this public NN project NN builder NN configuration NN root ROOT configuration compound configuration project compound configuration builder set VBN local JJ repository NN root ROOT set amod repository local dobj set repository artifact NN repository NN root ROOT repository compound repository artifact local JJ repository NN root ROOT repository amod repository local this DT local JJ repository NN local JJ repository NN root ROOT repository amod repository local return NN this DT,1,A3,maven/maven-compat/src/main/java/org/apache/maven/project/DefaultProjectBuilderConfiguration.java,58
DECL STMT SPECIFIER public TYPE void NAME void NAME get artifact ARGUMENT LIST ARGUMENT EXPR artifact artifact throws transfer failed exception resource does not exist exception get artifact artifact remote repositories null false NAME artifact NAME artifact THROWS throws transfer failed exception resource does not exist exception get artifact artifact remote repositories null false ARGUMENT EXPR transfer failed exception NAME transfer failed exception ARGUMENT EXPR resource does not exist exception get artifact artifact remote repositories null false NAME resource does not exist exception BLOCK EXPR get artifact artifact remote repositories null false CALL get artifact artifact remote repositories null false NAME get artifact ARGUMENT LIST ARGUMENT EXPR artifact NAME artifact ARGUMENT EXPR remote repositories NAME remote repositories ARGUMENT EXPR null ARGUMENT EXPR false public NN void NN get VB artifact NN root ROOT get dobj get artifact artifact NN artifact NN throws VBZ transfer NN failed VBD exception NN root ROOT failed nsubj failed transfer dobj failed exception resource NN does VBZ not RB exist VB exception NN root ROOT exist nsubj exist resource aux exist does neg exist not dobj exist exception get VB artifact NN root ROOT get dobj get artifact artifact NN remote JJ repositories NNS root ROOT repositories amod repositories remote null JJ false JJ,1,B3,maven/maven-compat/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java,152
FUNCTION TYPE override public maven execution request NAME override SPECIFIER public NAME maven execution request NAME set global checksum policy PARAMETER LIST string global checksum policy PARAMETER string global checksum policy TYPE string NAME string NAME global checksum policy BLOCK EXPR this global checksum policy global checksum policy NAME this global checksum policy NAME this NAME global checksum policy NAME global checksum policy RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN global JJ checksum NN policy NN root ROOT set amod policy global compound policy checksum dobj set policy string NN global JJ checksum NN policy NN root ROOT policy amod policy global compound policy checksum this DT global JJ checksum NN policy NN global JJ checksum NN policy NN root ROOT policy amod policy global compound policy checksum return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,742
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set remote repositories PARAMETER LIST list artifact repository remote repositories PARAMETER list artifact repository remote repositories TYPE list artifact repository NAME list artifact repository NAME list ARGUMENT LIST ARGUMENT NAME artifact repository NAME remote repositories BLOCK IF if remote repositories null this remote repositories new array list remote repositories else this remote repositories null CONDITION remote repositories null EXPR remote repositories null NAME remote repositories THEN this remote repositories new array list remote repositories BLOCK EXPR this remote repositories new array list remote repositories NAME this remote repositories NAME this NAME remote repositories CALL array list remote repositories NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR remote repositories NAME remote repositories ELSE else this remote repositories null BLOCK EXPR this remote repositories null NAME this remote repositories NAME this NAME remote repositories RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN remote JJ repositories NNS root ROOT set amod repositories remote dobj set repositories list NN artifact NN repository NN root ROOT repository compound repository artifact remote JJ repositories NNS root ROOT repositories amod repositories remote if IN remote JJ repositories NNS root ROOT repositories amod repositories remote null JJ this DT remote JJ repositories NNS new JJ array NN list NN root ROOT list compound list array remote JJ repositories NNS root ROOT repositories amod repositories remote else RB this DT remote JJ repositories NNS null JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,363
COMMENT the non proxy hosts follows java system property format code foo com localhost code DECL STMT SPECIFIER private TYPE string NAME string NAME non proxy hosts the non proxy hosts follows java system property format code foo com localhost code root ROOT follows det hosts the amod hosts non compound hosts proxy nsubj follows hosts compound code java compound code system compound code property compound code format compound code code compound code foo compound code com compound code localhost dobj follows code the non proxy hosts follows java system property format code foo com localhost code root ROOT follows det hosts the amod hosts non compound hosts proxy nsubj follows hosts compound code java compound code system compound code property compound code format compound code code compound code foo compound code com compound code localhost dobj follows code private JJ string NN non JJ proxy NN hosts NNS root ROOT hosts amod hosts non compound hosts proxy,1,E1,maven/maven-artifact/src/main/java/org/apache/maven/repository/Proxy.java,58
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME proxy socks INIT socks EXPR socks public NN static JJ final JJ string NN proxy NN socks NNS root ROOT socks compound socks proxy socks NNS,0,N/A,maven/maven-artifact/src/main/java/org/apache/maven/repository/Proxy.java,26
FUNCTION SPECIFIER public TYPE string NAME string NAME get group id PARAMETER LIST BLOCK IF if group id null return group id else return artifact get group id CONDITION group id null EXPR group id null NAME group id THEN return group id BLOCK RETURN return group id EXPR group id NAME group id ELSE else return artifact get group id BLOCK RETURN return artifact get group id EXPR artifact get group id CALL artifact get group id NAME artifact get group id NAME artifact NAME get group id ARGUMENT LIST public NN string NN get VB group NN id NN root ROOT get compound id group dobj get id if IN group NN id NN root ROOT id compound id group null JJ return NN group NN id NN root ROOT id compound id group else RB return NN artifact NN get VB group NN id NN root ROOT get nsubj get artifact compound id group dobj get id,0,N/A,maven/maven-aether-provider/src/main/java/org/apache/maven/repository/internal/RelocatedArtifact.java,55
FUNCTION SPECIFIER public TYPE list NAME list NAME get ids activated by default PARAMETER LIST BLOCK RETURN return default ids EXPR default ids NAME default ids public NN list NN get VB ids NNS activated VBN by IN default NN root ROOT get dobj get ids acl ids activated case default by nmod by activated default return NN default NN ids NNS root ROOT ids compound ids default,0,N/A,maven/maven-compat/src/main/java/org/apache/maven/profiles/DefaultProfileManager.java,237
DECL STMT SPECIFIER private TYPE final model problem collector SPECIFIER final NAME model problem collector NAME problems private JJ final JJ model NN problem NN collector NN root ROOT collector compound collector model compound collector problem problems NNS,0,N/A,maven/maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ProblemDetectingValueSource.java,45
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set cache not found PARAMETER LIST boolean cache not found PARAMETER boolean cache not found TYPE boolean NAME boolean NAME cache not found BLOCK EXPR this cache not found cache not found NAME this cache not found NAME this NAME cache not found NAME cache not found RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN cache NN not RB found VBN root ROOT set dobj set cache neg found not acl cache found boolean NN cache NN not RB found VBN root ROOT cache neg found not acl cache found this DT cache NN not RB found VBN cache NN not RB found VBN root ROOT cache neg found not acl cache found return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,1214
COMMENT at the moment this class is totally immutable and this is in line with thoughts about the pre calculated execution plan that stays the same during the execution if deciding to add mutable state to this class it should be at least considered to separate this into a separate mutable structure DECL STMT SPECIFIER private TYPE final list execution plan item SPECIFIER final NAME list execution plan item NAME list ARGUMENT LIST ARGUMENT NAME execution plan item NAME plan item at IN the DT moment NN this DT class NN is VBZ totally RB immutable JJ and CC this DT is VBZ in IN line NN with IN thoughts NNS about IN the DT pre JJ calculated VBN root ROOT pre dep pre calculated execution NN plan NN that IN stays NNS the DT same JJ during IN the DT execution NN if IN deciding VBG to TO add VB mutable JJ state NN to TO this DT class NN it PRP should MD be VB at IN least JJS considered VBN to TO separate JJ this DT into IN a DT separate JJ mutable JJ structure NN private JJ final JJ list NN execution NN plan NN item NN root ROOT item compound item execution compound item plan plan NN item NN root ROOT item compound item plan calculated considered ANTONYM ANTONYM class line ANTONYM ANTONYM immutable mutable ANTONYM ANTONYM least about ANTONYM ANTONYM state separate ANTONYM ANTONYM thoughts calculated ANTONYM ANTONYM,1,D1,maven/maven-core/src/main/java/org/apache/maven/lifecycle/MavenExecutionPlan.java,58
FUNCTION SPECIFIER public TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME get dependency trail PARAMETER LIST THROWS throws over constrained version exception ARGUMENT EXPR over constrained version exception NAME over constrained version exception BLOCK DECL STMT TYPE list artifact NAME list artifact NAME list ARGUMENT LIST ARGUMENT NAME artifact NAME trial INIT get trail EXPR get trail CALL get trail NAME get trail ARGUMENT LIST DECL STMT TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME ret INIT new array list trial size EXPR new array list trial size CALL array list trial size NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR trial size CALL trial size NAME trial size NAME trial NAME size ARGUMENT LIST FOR for artifact artifact trial ret add artifact get id CONTROL artifact artifact trial INIT artifact artifact trial TYPE artifact NAME artifact NAME artifact RANGE trial EXPR trial NAME trial BLOCK EXPR ret add artifact get id CALL ret add artifact get id NAME ret add NAME ret NAME add ARGUMENT LIST ARGUMENT EXPR artifact get id CALL artifact get id NAME artifact get id NAME artifact NAME get id ARGUMENT LIST RETURN return ret EXPR ret NAME ret public NN list NN string NN get VB dependency NN trail NN root ROOT get compound trail dependency dobj get trail throws VBZ over IN constrained VBN version NN exception NN root ROOT exception case exception over amod exception constrained compound exception version list NN artifact NN trial NN get VB trail NN root ROOT get dobj get trail list NN string NN ret NN new JJ array NN list NN root ROOT list compound list array trial NN size NN root ROOT size compound size trial for IN artifact NN artifact NN trial NN ret NN add VB root ROOT add nsubj add ret artifact NN get VB id NN root ROOT get nsubj get artifact dobj get id return NN ret NN,1,A1,maven/maven-core/src/main/java/org/apache/maven/artifact/resolver/ResolutionNode.java,114
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set user settings file PARAMETER LIST file user settings file PARAMETER file user settings file TYPE file NAME file NAME user settings file BLOCK EXPR this user settings file user settings file NAME this user settings file NAME this NAME user settings file NAME user settings file RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN user NN settings NNS file NN root ROOT set compound file user compound file settings dobj set file file NN user NN settings NNS file NN root ROOT file compound file user compound file settings this DT user NN settings NNS file NN user NN settings NNS file NN root ROOT file compound file user compound file settings return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,998
FUNCTION SPECIFIER public TYPE void NAME void NAME validate PARAMETER LIST plugin descriptor plugin descriptor PARAMETER plugin descriptor plugin descriptor TYPE plugin descriptor NAME plugin descriptor NAME plugin descriptor BLOCK COMMENT note for plugins that depend on other plugin artifacts the plugin realm contains more than one plugin descriptor however only the first descriptor is of interest IF if first descriptor return CONDITION first descriptor EXPR first descriptor NAME first descriptor THEN return BLOCK RETURN return EXPR first descriptor false NAME first descriptor IF if plugin artifact get group id equals plugin descriptor get group id errors add plugin s descriptor contains the wrong group id plugin descriptor get group id CONDITION plugin artifact get group id equals plugin descriptor get group id EXPR plugin artifact get group id equals plugin descriptor get group id CALL plugin artifact get group id NAME plugin artifact get group id NAME plugin artifact NAME get group id ARGUMENT LIST CALL equals plugin descriptor get group id NAME equals ARGUMENT LIST ARGUMENT EXPR plugin descriptor get group id CALL plugin descriptor get group id NAME plugin descriptor get group id NAME plugin descriptor NAME get group id ARGUMENT LIST THEN errors add plugin s descriptor contains the wrong group id plugin descriptor get group id BLOCK EXPR errors add plugin s descriptor contains the wrong group id plugin descriptor get group id CALL errors add plugin s descriptor contains the wrong group id plugin descriptor get group id NAME errors add NAME errors NAME add ARGUMENT LIST ARGUMENT EXPR plugin s descriptor contains the wrong group id plugin descriptor get group id CALL plugin descriptor get group id NAME plugin descriptor get group id NAME plugin descriptor NAME get group id ARGUMENT LIST IF if plugin artifact get artifact id equals plugin descriptor get artifact id errors add plugin s descriptor contains the wrong artifact id plugin descriptor get artifact id CONDITION plugin artifact get artifact id equals plugin descriptor get artifact id EXPR plugin artifact get artifact id equals plugin descriptor get artifact id CALL plugin artifact get artifact id NAME plugin artifact get artifact id NAME plugin artifact NAME get artifact id ARGUMENT LIST CALL equals plugin descriptor get artifact id NAME equals ARGUMENT LIST ARGUMENT EXPR plugin descriptor get artifact id CALL plugin descriptor get artifact id NAME plugin descriptor get artifact id NAME plugin descriptor NAME get artifact id ARGUMENT LIST THEN errors add plugin s descriptor contains the wrong artifact id plugin descriptor get artifact id BLOCK EXPR errors add plugin s descriptor contains the wrong artifact id plugin descriptor get artifact id CALL errors add plugin s descriptor contains the wrong artifact id plugin descriptor get artifact id NAME errors add NAME errors NAME add ARGUMENT LIST ARGUMENT EXPR plugin s descriptor contains the wrong artifact id plugin descriptor get artifact id CALL plugin descriptor get artifact id NAME plugin descriptor get artifact id NAME plugin descriptor NAME get artifact id ARGUMENT LIST IF if plugin artifact get base version equals plugin descriptor get version errors add plugin s descriptor contains the wrong version plugin descriptor get version CONDITION plugin artifact get base version equals plugin descriptor get version EXPR plugin artifact get base version equals plugin descriptor get version CALL plugin artifact get base version NAME plugin artifact get base version NAME plugin artifact NAME get base version ARGUMENT LIST CALL equals plugin descriptor get version NAME equals ARGUMENT LIST ARGUMENT EXPR plugin descriptor get version CALL plugin descriptor get version NAME plugin descriptor get version NAME plugin descriptor NAME get version ARGUMENT LIST THEN errors add plugin s descriptor contains the wrong version plugin descriptor get version BLOCK EXPR errors add plugin s descriptor contains the wrong version plugin descriptor get version CALL errors add plugin s descriptor contains the wrong version plugin descriptor get version NAME errors add NAME errors NAME add ARGUMENT LIST ARGUMENT EXPR plugin s descriptor contains the wrong version plugin descriptor get version CALL plugin descriptor get version NAME plugin descriptor get version NAME plugin descriptor NAME get version ARGUMENT LIST public NN void NN validate VB plugin NN descriptor NN root ROOT descriptor compound descriptor plugin plugin NN descriptor NN root ROOT descriptor compound descriptor plugin note for plugins that depend on other plugin artifacts the plugin realm contains more than one plugin root ROOT note case plugins for nmod for note plugins nsubj depend plugins ref plugins that acl relcl plugins depend case artifacts on amod artifacts other compound artifacts plugin nmod on contains artifacts det realm the compound realm plugin nsubj contains realm ccomp depend contains advmod one more mwe more than nummod plugin one dobj contains plugin descriptor however only the first descriptor is of interest root ROOT interest compound interest descriptor advmod interest however advmod descriptor only det descriptor the amod descriptor first nsubj interest descriptor cop interest is case interest of descriptor however only the first descriptor is of interest root ROOT interest compound interest descriptor advmod interest however advmod descriptor only det descriptor the amod descriptor first nsubj interest descriptor cop interest is case interest of if IN first RB descriptor NN root ROOT descriptor advmod descriptor first return NN first RB descriptor NN root ROOT descriptor advmod descriptor first false JJ if IN plugin NN artifact NN get VB group NN id NN root ROOT get compound artifact plugin nsubj get artifact compound id group dobj get id equals VBZ plugin NN descriptor NN get VB group NN id NN root ROOT get compound descriptor plugin nsubj get descriptor compound id group dobj get id errors NNS add VBP root ROOT add nsubj add errors plugin NN s NNS descriptor NN contains VBZ the DT wrong JJ group NN id NN plugin NN descriptor NN get VB group NN id NN root ROOT get compound descriptor plugin nsubj get descriptor compound id group dobj get id if IN plugin NN artifact NN get VB artifact NN id NN root ROOT get compound artifact plugin nsubj get artifact compound id artifact dobj get id equals VBZ plugin NN descriptor NN get VB artifact NN id NN root ROOT get compound descriptor plugin nsubj get descriptor compound id artifact dobj get id errors NNS add VBP root ROOT add nsubj add errors plugin NN s NNS descriptor NN contains VBZ the DT wrong JJ artifact NN id NN plugin NN descriptor NN get VB artifact NN id NN root ROOT get compound descriptor plugin nsubj get descriptor compound id artifact dobj get id if IN plugin NN artifact NN get VB base JJ version NN root ROOT get compound artifact plugin nsubj get artifact amod version base dobj get version equals VBZ plugin NN descriptor NN get VB version NN root ROOT get compound descriptor plugin nsubj get descriptor dobj get version errors NNS add VBP root ROOT add nsubj add errors plugin NN s NNS descriptor NN contains VBZ the DT wrong JJ version NN plugin NN descriptor NN get VB version NN root ROOT get compound descriptor plugin nsubj get descriptor dobj get version void validate ANTONYM ANTONYM,1,B2,maven/maven-core/src/main/java/org/apache/maven/plugin/MavenPluginValidator.java,41
FUNCTION SPECIFIER public TYPE project building request NAME project building request NAME set user properties PARAMETER LIST properties user properties PARAMETER properties user properties TYPE properties NAME properties NAME user properties BLOCK IF if user properties null this user properties new properties this user properties put all user properties else this user properties clear CONDITION user properties null EXPR user properties null NAME user properties THEN this user properties new properties this user properties put all user properties BLOCK EXPR this user properties new properties NAME this user properties NAME this NAME user properties CALL properties NAME properties ARGUMENT LIST EXPR this user properties put all user properties CALL this user properties put all user properties NAME this user properties put all NAME this NAME user properties NAME put all ARGUMENT LIST ARGUMENT EXPR user properties NAME user properties ELSE else this user properties clear BLOCK EXPR this user properties clear CALL this user properties clear NAME this user properties clear NAME this NAME user properties NAME clear ARGUMENT LIST RETURN return this EXPR this NAME this public NN project NN building NN request NN root ROOT request compound request project compound request building set VBN user NN properties NNS root ROOT set compound properties user dobj set properties properties NNS user NN properties NNS root ROOT properties compound properties user if IN user NN properties NNS root ROOT properties compound properties user null JJ this DT user NN properties NNS new JJ properties NNS this DT user NN properties NNS put VBD all DT user NN properties NNS root ROOT properties compound properties user else RB this DT user NN properties NNS clear JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuildingRequest.java,186
FUNCTION SPECIFIER public TYPE dependency resolution request NAME dependency resolution request NAME set resolution filter PARAMETER LIST dependency filter filter PARAMETER dependency filter filter TYPE dependency filter NAME dependency filter NAME filter BLOCK EXPR this filter filter NAME this filter NAME this NAME filter NAME filter RETURN return this EXPR this NAME this public NN dependency NN resolution NN request NN root ROOT request compound request dependency compound request resolution set VBN resolution NN filter NN root ROOT set compound filter resolution dobj set filter dependency NN filter NN root ROOT filter compound filter dependency filter NN this DT filter NN filter NN return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/project/DefaultDependencyResolutionRequest.java,64
DECL STMT ANNOTATION requirement NAME requirement SPECIFIER private TYPE plexus container NAME plexus container NAME plexus requirement NN private JJ plexus NN container NN root ROOT container compound container plexus plexus NN,0,N/A,maven/maven-compat/src/main/java/org/apache/maven/repository/legacy/LegacyRepositorySystem.java,108
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set mirrors PARAMETER LIST list mirror mirrors PARAMETER list mirror mirrors TYPE list mirror NAME list mirror NAME list ARGUMENT LIST ARGUMENT NAME mirror NAME mirrors BLOCK IF if mirrors null this mirrors new array list mirrors else this mirrors null CONDITION mirrors null EXPR mirrors null NAME mirrors THEN this mirrors new array list mirrors BLOCK EXPR this mirrors new array list mirrors NAME this mirrors NAME this NAME mirrors CALL array list mirrors NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR mirrors NAME mirrors ELSE else this mirrors null BLOCK EXPR this mirrors null NAME this mirrors NAME this NAME mirrors RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN mirrors VBZ root ROOT set dobj set mirrors list NN mirror NN mirrors VBZ if IN mirrors VBZ null JJ this DT mirrors VBZ new JJ array NN list NN root ROOT list compound list array mirrors VBZ else RB this DT mirrors VBZ null JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,856
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME illegal repo id chars INIT illegal fs chars EXPR illegal fs chars NAME illegal fs chars private JJ static JJ final JJ string NN illegal JJ repo NN id NN chars VBZ root ROOT chars amod id illegal compound id repo nsubj chars id illegal JJ fs NN chars VBZ root ROOT chars amod fs illegal nsubj chars fs,1,E1,maven/maven-settings-builder/src/main/java/org/apache/maven/settings/validation/DefaultSettingsValidator.java,49
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set project present PARAMETER LIST boolean project present PARAMETER boolean project present TYPE boolean NAME boolean NAME project present BLOCK EXPR is project present project present NAME is project present NAME project present RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN project NN present JJ root ROOT present amod project set nsubj present project boolean NN project NN present JJ root ROOT present nmod npmod present project is VBZ project NN present JJ root ROOT present cop present is nmod npmod present project project NN present JJ root ROOT present nmod npmod present project return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,982
FUNCTION SPECIFIER protected TYPE void NAME void NAME get transfer PARAMETER LIST resource resource file destination input stream input boolean close input int max size PARAMETER resource resource file destination TYPE resource resource file NAME resource NAME resource NAME file NAME destination PARAMETER input stream input TYPE input stream NAME input stream NAME input PARAMETER boolean close input TYPE boolean NAME boolean NAME close input PARAMETER int max size TYPE int NAME int NAME max size THROWS throws transfer failed exception ARGUMENT EXPR transfer failed exception NAME transfer failed exception BLOCK EXPR add transfer get transfer resource get name CALL add transfer get transfer resource get name NAME add transfer ARGUMENT LIST ARGUMENT EXPR get transfer resource get name CALL resource get name NAME resource get name NAME resource NAME get name ARGUMENT LIST EXPR super get transfer resource destination input close input max size CALL super get transfer resource destination input close input max size NAME super get transfer NAME super NAME get transfer ARGUMENT LIST ARGUMENT EXPR resource NAME resource ARGUMENT EXPR destination NAME destination ARGUMENT EXPR input NAME input ARGUMENT EXPR close input NAME close input ARGUMENT EXPR max size NAME max size protected VBN void NN get VB transfer NN root ROOT get dobj get transfer resource NN resource NN file NN destination NN input NN stream NN root ROOT stream compound stream input input NN boolean NN close RB input NN root ROOT input amod input close int NN max NN size NN root ROOT size compound size max throws VBZ transfer NN failed VBD exception NN root ROOT failed nsubj failed transfer dobj failed exception add VB transfer NN root ROOT add dobj add transfer get VB transfer NN root ROOT get dobj get transfer resource NN get VB name NN root ROOT get nsubj get resource dobj get name super JJ get VB transfer NN resource NN destination NN input NN close RB input NN root ROOT input amod input close max NN size NN root ROOT size compound size max,1,B3,maven/maven-compat/src/test/java/org/apache/maven/artifact/resolver/TestFileWagon.java,41
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE model building request NAME model building request NAME set build start time PARAMETER LIST date build start time PARAMETER date build start time TYPE date NAME date NAME build start time BLOCK EXPR this build start time build start time NAME this build start time NAME this NAME build start time NAME build start time RETURN return this EXPR this NAME this override NN public NN model NN building NN request NN root ROOT request compound request model compound request building set VBN build VB start VB time NN root ROOT set xcomp set build ccomp build start dobj start time date NN build VB start VB time NN root ROOT build ccomp build start dobj start time this DT build VB start VB time NN build VB start VB time NN root ROOT build ccomp build start dobj start time return NN this DT,1,A3,maven/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuildingRequest.java,332
FUNCTION SPECIFIER private TYPE void NAME void NAME validate projects PARAMETER LIST list maven project projects PARAMETER list maven project projects TYPE list maven project NAME list maven project NAME list ARGUMENT LIST ARGUMENT NAME maven project NAME projects BLOCK DECL STMT TYPE map string maven project NAME map string maven project NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME maven project NAME projects map INIT new hash map EXPR new hash map CALL hash map NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST FOR for maven project p projects string project key artifact utils key p get group id p get artifact id p get version projects map put project key p CONTROL maven project p projects INIT maven project p projects TYPE maven project NAME maven project NAME p RANGE projects EXPR projects NAME projects BLOCK DECL STMT TYPE string NAME string NAME project key INIT artifact utils key p get group id p get artifact id p get version EXPR artifact utils key p get group id p get artifact id p get version CALL artifact utils key p get group id p get artifact id p get version NAME artifact utils key NAME artifact utils NAME key ARGUMENT LIST ARGUMENT EXPR p get group id CALL p get group id NAME p get group id NAME p NAME get group id ARGUMENT LIST ARGUMENT EXPR p get artifact id CALL p get artifact id NAME p get artifact id NAME p NAME get artifact id ARGUMENT LIST ARGUMENT EXPR p get version CALL p get version NAME p get version NAME p NAME get version ARGUMENT LIST EXPR projects map put project key p CALL projects map put project key p NAME projects map put NAME projects map NAME put ARGUMENT LIST ARGUMENT EXPR project key NAME project key ARGUMENT EXPR p NAME p FOR for maven project project projects mng mng building plugins with extensions cannot be part of reactor for plugin plugin project get build plugins if plugin is extensions string plugin key artifact utils key plugin get group id plugin get artifact id plugin get version if projects map contains key plugin key logger warn project get name uses plugin get key as extensions which is not possible within the same reactor build this plugin was pulled from the local repository CONTROL maven project project projects INIT maven project project projects TYPE maven project NAME maven project NAME project RANGE projects EXPR projects NAME projects BLOCK COMMENT mng mng building plugins with extensions cannot be part of reactor FOR for plugin plugin project get build plugins if plugin is extensions string plugin key artifact utils key plugin get group id plugin get artifact id plugin get version if projects map contains key plugin key logger warn project get name uses plugin get key as extensions which is not possible within the same reactor build this plugin was pulled from the local repository CONTROL plugin plugin project get build plugins INIT plugin plugin project get build plugins TYPE plugin NAME plugin NAME plugin RANGE project get build plugins EXPR project get build plugins CALL project get build plugins NAME project get build plugins NAME project NAME get build plugins ARGUMENT LIST BLOCK IF if plugin is extensions string plugin key artifact utils key plugin get group id plugin get artifact id plugin get version if projects map contains key plugin key logger warn project get name uses plugin get key as extensions which is not possible within the same reactor build this plugin was pulled from the local repository CONDITION plugin is extensions EXPR plugin is extensions CALL plugin is extensions NAME plugin is extensions NAME plugin NAME is extensions ARGUMENT LIST THEN string plugin key artifact utils key plugin get group id plugin get artifact id plugin get version if projects map contains key plugin key logger warn project get name uses plugin get key as extensions which is not possible within the same reactor build this plugin was pulled from the local repository BLOCK DECL STMT TYPE string NAME string NAME plugin key INIT artifact utils key plugin get group id plugin get artifact id plugin get version EXPR artifact utils key plugin get group id plugin get artifact id plugin get version CALL artifact utils key plugin get group id plugin get artifact id plugin get version NAME artifact utils key NAME artifact utils NAME key ARGUMENT LIST ARGUMENT EXPR plugin get group id CALL plugin get group id NAME plugin get group id NAME plugin NAME get group id ARGUMENT LIST ARGUMENT EXPR plugin get artifact id CALL plugin get artifact id NAME plugin get artifact id NAME plugin NAME get artifact id ARGUMENT LIST ARGUMENT EXPR plugin get version CALL plugin get version NAME plugin get version NAME plugin NAME get version ARGUMENT LIST IF if projects map contains key plugin key logger warn project get name uses plugin get key as extensions which is not possible within the same reactor build this plugin was pulled from the local repository CONDITION projects map contains key plugin key EXPR projects map contains key plugin key CALL projects map contains key plugin key NAME projects map contains key NAME projects map NAME contains key ARGUMENT LIST ARGUMENT EXPR plugin key NAME plugin key THEN logger warn project get name uses plugin get key as extensions which is not possible within the same reactor build this plugin was pulled from the local repository BLOCK EXPR logger warn project get name uses plugin get key as extensions which is not possible within the same reactor build this plugin was pulled from the local repository CALL logger warn project get name uses plugin get key as extensions which is not possible within the same reactor build this plugin was pulled from the local repository NAME logger warn NAME logger NAME warn ARGUMENT LIST ARGUMENT EXPR project get name uses plugin get key as extensions which is not possible within the same reactor build this plugin was pulled from the local repository CALL project get name NAME project get name NAME project NAME get name ARGUMENT LIST CALL plugin get key NAME plugin get key NAME plugin NAME get key ARGUMENT LIST private JJ void NN validate VB projects NNS root ROOT validate dobj validate projects list NN maven NN project NN root ROOT project compound project maven projects NNS map NN string NN maven NN project NN root ROOT project compound project maven projects NNS map VBP root ROOT map nsubj map projects new JJ hash VB map NN root ROOT hash dobj hash map for IN maven NN project NN root ROOT project compound project maven p NN projects NNS string NN project NN key NN root ROOT key compound key project artifact NN utils NNS key JJ root ROOT key compound utils artifact nsubj key utils p NN get VB group NN id NN root ROOT p dep p get compound id group dobj get id p NN get VB artifact NN id NN root ROOT get nsubj get p compound id artifact dobj get id p NN get VB version NN root ROOT get nsubj get p dobj get version projects NNS map VBP put VBN root ROOT map nsubj map projects dep map put project NN key NN root ROOT key compound key project p NN for IN maven NN project NN root ROOT project compound project maven project NN projects NNS mng mng building plugins with extensions can not be part of reactor root ROOT part compound plugins mng compound plugins mng compound plugins building nsubj part plugins case extensions with nmod with plugins extensions aux part can neg part not cop part be case reactor of nmod of part reactor for IN plugin NN plugin NN project NN get VBP build VB plugins NNS root ROOT build nsubj build project aux build get dobj build plugins if IN plugin NN is VBZ extensions NNS root ROOT extensions nsubj extensions plugin cop extensions is string NN plugin NN key NN root ROOT key compound key plugin artifact NN utils NNS key JJ root ROOT key compound utils artifact nsubj key utils plugin NN get VB group NN id NN root ROOT get nsubj get plugin compound id group dobj get id plugin NN get VB artifact NN id NN root ROOT get nsubj get plugin compound id artifact dobj get id plugin NN get VB version NN root ROOT get nsubj get plugin dobj get version if IN projects NNS map VBP contains VBZ key NN root ROOT map nsubj map projects ccomp map contains dobj contains key plugin NN key NN root ROOT key compound key plugin logger NN warn VBP root ROOT warn nsubj warn logger project NN get VB name NN root ROOT get nsubj get project dobj get name uses NNS plugin NN get VB key JJ root ROOT get nsubj get plugin xcomp get key as IN extensions NNS which WDT is VBZ not RB possible JJ within IN the DT same JJ reactor NN build VB this DT plugin NN was VBD pulled VBD from IN the DT local JJ repository NN,1,B2,maven/maven-core/src/main/java/org/apache/maven/graph/DefaultGraphBuilder.java,456
COMMENT gets the effective group identifier of the model return the effective group identifier of the model or an empty string if unknown never code null FUNCTION SPECIFIER public TYPE string NAME string NAME get group id PARAMETER LIST BLOCK RETURN return group id null group id EXPR group id null group id TERNARY group id null group id CONDITION group id null EXPR group id null NAME group id THEN group id EXPR group id NAME group id ELSE EXPR gets the effective group identifier of the model root ROOT gets det identifier the amod identifier effective compound identifier group dobj gets identifier case model of det model the nmod of identifier model return the effective group identifier of the model or an empty string if unknown never code null root ROOT return det identifier the amod identifier effective compound identifier group dobj return identifier case model of det model the nmod of identifier model cc model or det string an amod string empty nmod of identifier string conj or model string mark code if nsubj code unknown neg code never advcl if return code dobj code null public NN string NN get VB group NN id NN root ROOT get compound id group dobj get id return NN group NN id NN root ROOT id compound id group null JJ group NN id NN root ROOT id compound id group gets model ANTONYM ANTONYM gets return ANTONYM ANTONYM gets string ANTONYM ANTONYM,0,N/A,maven/maven-model-builder/src/main/java/org/apache/maven/model/building/ModelData.java,147
DECL STMT SPECIFIER private TYPE final model problem collector SPECIFIER final NAME model problem collector NAME problems private JJ final JJ model NN problem NN collector NN root ROOT collector compound collector model compound collector problem problems NNS,0,N/A,maven/maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ProblemDetectingValueSource.java,45
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set plugin groups PARAMETER LIST list string plugin groups PARAMETER list string plugin groups TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME plugin groups BLOCK IF if plugin groups null this plugin groups new array list plugin groups else this plugin groups null CONDITION plugin groups null EXPR plugin groups null NAME plugin groups THEN this plugin groups new array list plugin groups BLOCK EXPR this plugin groups new array list plugin groups NAME this plugin groups NAME this NAME plugin groups CALL array list plugin groups NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR plugin groups NAME plugin groups ELSE else this plugin groups null BLOCK EXPR this plugin groups null NAME this plugin groups NAME this NAME plugin groups RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN plugin NN groups NNS root ROOT set compound groups plugin dobj set groups list NN string NN plugin NN groups NNS root ROOT groups compound groups plugin if IN plugin NN groups NNS root ROOT groups compound groups plugin null JJ this DT plugin NN groups NNS new JJ array NN list NN root ROOT list compound list array plugin NN groups NNS root ROOT groups compound groups plugin else RB this DT plugin NN groups NNS null JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,928
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE model building request NAME model building request NAME set model building listener PARAMETER LIST model building listener model building listener PARAMETER model building listener model building listener TYPE model building listener NAME model building listener NAME model building listener BLOCK EXPR request set model building listener model building listener CALL request set model building listener model building listener NAME request set model building listener NAME request NAME set model building listener ARGUMENT LIST ARGUMENT EXPR model building listener NAME model building listener RETURN return this EXPR this NAME this override NN public NN model NN building NN request NN root ROOT request compound request model compound request building set VBN model NN building NN listener NN root ROOT set compound listener model compound listener building dobj set listener model NN building NN listener NN root ROOT listener compound listener model compound listener building model NN building NN listener NN root ROOT listener compound listener model compound listener building request NN set VBD model NN building NN listener NN root ROOT set nsubj set request compound listener model compound listener building dobj set listener model NN building NN listener NN root ROOT listener compound listener model compound listener building return NN this DT,1,A3,maven/maven-model-builder/src/main/java/org/apache/maven/model/building/FilterModelBuildingRequest.java,237
FUNCTION SPECIFIER public TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME get messages PARAMETER LIST BLOCK RETURN return collections unmodifiable list messages EXPR collections unmodifiable list messages CALL collections unmodifiable list messages NAME collections unmodifiable list NAME collections NAME unmodifiable list ARGUMENT LIST ARGUMENT EXPR messages NAME messages public NN list NN string NN get VB messages NNS root ROOT get dobj get messages return NN collections NNS unmodifiable JJ list NN root ROOT list compound list collections amod list unmodifiable messages NNS,0,N/A,maven/maven-compat/src/main/java/org/apache/maven/project/validation/ModelValidationResult.java,53
FUNCTION SPECIFIER public TYPE plugin NAME plugin NAME get plugin PARAMETER LIST BLOCK IF if mojo descriptor null return mojo descriptor get plugin descriptor get plugin CONDITION mojo descriptor null EXPR mojo descriptor null NAME mojo descriptor THEN return mojo descriptor get plugin descriptor get plugin BLOCK RETURN return mojo descriptor get plugin descriptor get plugin EXPR mojo descriptor get plugin descriptor get plugin CALL mojo descriptor get plugin descriptor NAME mojo descriptor get plugin descriptor NAME mojo descriptor NAME get plugin descriptor ARGUMENT LIST CALL get plugin NAME get plugin ARGUMENT LIST RETURN return plugin EXPR plugin NAME plugin public NN plugin NN get VB plugin NN root ROOT get dobj get plugin if IN mojo NN descriptor NN root ROOT descriptor compound descriptor mojo null JJ return NN mojo NN descriptor NN get VB plugin JJ descriptor NN root ROOT get compound descriptor mojo nsubj get descriptor amod descriptor plugin dobj get descriptor get VB plugin NN root ROOT get dobj get plugin return NN plugin NN,0,N/A,maven/maven-core/src/main/java/org/apache/maven/plugin/MojoExecution.java,125
FUNCTION SPECIFIER private TYPE void NAME void NAME validate effective plugin dependencies PARAMETER LIST model problem collector problems model building request request PARAMETER model problem collector problems model building request request TYPE model problem collector problems model building request NAME model problem collector NAME problems NAME model building request NAME request BLOCK DECL STMT TYPE list dependency NAME list dependency NAME list ARGUMENT LIST ARGUMENT NAME dependency NAME dependencies INIT plugin get dependencies EXPR plugin get dependencies CALL plugin get dependencies NAME plugin get dependencies NAME plugin NAME get dependencies ARGUMENT LIST IF if dependencies is empty string prefix build plugins plugin plugin get key dependencies dependency severity err on get severity request model building request validation level maven for dependency d dependencies validate effective dependency problems d false prefix request validate version prefix version problems err on version base d get version d get management key d validate enum prefix scope problems err on version base d get scope d get management key d compile runtime system CONDITION dependencies is empty EXPR dependencies is empty CALL dependencies is empty NAME dependencies is empty NAME dependencies NAME is empty ARGUMENT LIST THEN string prefix build plugins plugin plugin get key dependencies dependency severity err on get severity request model building request validation level maven for dependency d dependencies validate effective dependency problems d false prefix request validate version prefix version problems err on version base d get version d get management key d validate enum prefix scope problems err on version base d get scope d get management key d compile runtime system BLOCK DECL STMT TYPE string NAME string NAME prefix INIT build plugins plugin plugin get key dependencies dependency EXPR build plugins plugin plugin get key dependencies dependency CALL plugin get key NAME plugin get key NAME plugin NAME get key ARGUMENT LIST DECL STMT TYPE severity NAME severity NAME err on INIT get severity request model building request validation level maven EXPR get severity request model building request validation level maven CALL get severity request model building request validation level maven NAME get severity ARGUMENT LIST ARGUMENT EXPR request NAME request ARGUMENT EXPR model building request validation level maven NAME model building request validation level maven NAME model building request NAME validation level maven FOR for dependency d dependencies validate effective dependency problems d false prefix request validate version prefix version problems err on version base d get version d get management key d validate enum prefix scope problems err on version base d get scope d get management key d compile runtime system CONTROL dependency d dependencies INIT dependency d dependencies TYPE dependency NAME dependency NAME d RANGE dependencies EXPR dependencies NAME dependencies BLOCK EXPR validate effective dependency problems d false prefix request CALL validate effective dependency problems d false prefix request NAME validate effective dependency ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR d NAME d ARGUMENT EXPR false ARGUMENT EXPR prefix NAME prefix ARGUMENT EXPR request NAME request EXPR validate version prefix version problems err on version base d get version d get management key d CALL validate version prefix version problems err on version base d get version d get management key d NAME validate version ARGUMENT LIST ARGUMENT EXPR prefix version NAME prefix ARGUMENT EXPR problems NAME problems ARGUMENT EXPR err on NAME err on ARGUMENT EXPR version base NAME version base NAME version NAME base ARGUMENT EXPR d get version CALL d get version NAME d get version NAME d NAME get version ARGUMENT LIST ARGUMENT EXPR d get management key CALL d get management key NAME d get management key NAME d NAME get management key ARGUMENT LIST ARGUMENT EXPR d NAME d EXPR validate enum prefix scope problems err on version base d get scope d get management key d compile runtime system CALL validate enum prefix scope problems err on version base d get scope d get management key d compile runtime system NAME validate enum ARGUMENT LIST ARGUMENT EXPR prefix scope NAME prefix ARGUMENT EXPR problems NAME problems ARGUMENT EXPR err on NAME err on ARGUMENT EXPR version base NAME version base NAME version NAME base ARGUMENT EXPR d get scope CALL d get scope NAME d get scope NAME d NAME get scope ARGUMENT LIST ARGUMENT EXPR d get management key CALL d get management key NAME d get management key NAME d NAME get management key ARGUMENT LIST ARGUMENT EXPR d NAME d ARGUMENT EXPR compile ARGUMENT EXPR runtime ARGUMENT EXPR system private JJ void NN validate VB effective JJ plugin NN dependencies NNS root ROOT validate amod dependencies effective compound dependencies plugin dobj validate dependencies model NN problem NN collector NN root ROOT collector compound collector model compound collector problem problems NNS model NN building NN request NN root ROOT request compound request model compound request building request NN list NN dependency NN dependencies NNS plugin NN get VB dependencies NNS root ROOT get nsubj get plugin dobj get dependencies if IN dependencies NNS is VBZ empty JJ root ROOT empty nsubj empty dependencies cop empty is string NN prefix NN build VB plugins NNS plugin IN root ROOT build dobj build plugins dep build plugin plugin NN get VB key JJ root ROOT get nsubj get plugin xcomp get key dependencies NNS dependency NN root ROOT dependency compound dependency dependencies severity NN err VB on IN root ROOT err compound prt err on get VB severity NN root ROOT get dobj get severity request NN model NN building NN request NN validation NN root ROOT validation compound validation model compound validation building compound validation request level NN maven NN root ROOT maven compound maven level for IN dependency NN d NN dependencies NNS validate VB effective JJ dependency NN root ROOT validate amod dependency effective dobj validate dependency problems NNS d NN false JJ prefix NN request NN validate VB version NN root ROOT validate dobj validate version prefix NN version NN problems NNS err VB on IN root ROOT err compound prt err on version NN base NN root ROOT base compound base version d NN get VB version NN root ROOT get nsubj get d dobj get version d NN get VB management NN key NN root ROOT get nsubj get d compound key management dobj get key d NN validate VB enum NN root ROOT validate dobj validate enum prefix NN scope NN problems NNS err VB on IN root ROOT err compound prt err on version NN base NN root ROOT base compound base version d NN get VB scope NN root ROOT get nsubj get d dobj get scope d NN get VB management NN key NN root ROOT get nsubj get d compound key management dobj get key d NN compile VB runtime NN system NN void validate ANTONYM ANTONYM,1,B2,maven/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java,526
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE toolchains building request NAME toolchains building request NAME set user toolchains source PARAMETER LIST source user toolchains source PARAMETER source user toolchains source TYPE source NAME source NAME user toolchains source BLOCK EXPR this user toolchains source user toolchains source NAME this user toolchains source NAME this NAME user toolchains source NAME user toolchains source RETURN return this EXPR this NAME this override NN public NN toolchains NNS building VBG request NN root ROOT toolchains acl toolchains building dobj building request set VBN user NN toolchains NNS source NN root ROOT set compound source user compound source toolchains dobj set source source NN user NN toolchains NNS source NN root ROOT source compound source user compound source toolchains this DT user NN toolchains NNS source NN user NN toolchains NNS source NN root ROOT source compound source user compound source toolchains return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/toolchain/building/DefaultToolchainsBuildingRequest.java,56
DECL STMT SPECIFIER private TYPE file NAME file NAME settings private JJ file NN settings NNS,1,E1,maven/maven-settings/src/main/java/org/apache/maven/settings/RuntimeInfo.java,39
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set servers PARAMETER LIST list server servers PARAMETER list server servers TYPE list server NAME list server NAME list ARGUMENT LIST ARGUMENT NAME server NAME servers BLOCK IF if servers null this servers new array list servers else this servers null CONDITION servers null EXPR servers null NAME servers THEN this servers new array list servers BLOCK EXPR this servers new array list servers NAME this servers NAME this NAME servers CALL array list servers NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR servers NAME servers ELSE else this servers null BLOCK EXPR this servers null NAME this servers NAME this NAME servers RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN servers NNS root ROOT set dobj set servers list NN server NN servers NNS if IN servers NNS null JJ this DT servers NNS new JJ array NN list NN root ROOT list compound list array servers NNS else RB this DT servers NNS null JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,810
COMMENT backward compat FUNCTION SPECIFIER public TYPE map string object NAME map string object NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME object NAME get plugin context PARAMETER LIST plugin descriptor plugin maven project project PARAMETER plugin descriptor plugin TYPE plugin descriptor NAME plugin descriptor NAME plugin PARAMETER maven project project TYPE maven project NAME maven project NAME project BLOCK DECL STMT TYPE string NAME string NAME project key INIT project get id EXPR project get id CALL project get id NAME project get id NAME project NAME get id ARGUMENT LIST DECL STMT TYPE map string map string object NAME map string map string object NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME map string object NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME object NAME plugin contexts by key INIT plugin contexts by project and plugin key get project key EXPR plugin contexts by project and plugin key get project key CALL plugin contexts by project and plugin key get project key NAME plugin contexts by project and plugin key get NAME plugin contexts by project and plugin key NAME get ARGUMENT LIST ARGUMENT EXPR project key NAME project key IF if plugin contexts by key null plugin contexts by key new concurrent hash map plugin contexts by project and plugin key put project key plugin contexts by key CONDITION plugin contexts by key null EXPR plugin contexts by key null NAME plugin contexts by key THEN plugin contexts by key new concurrent hash map plugin contexts by project and plugin key put project key plugin contexts by key BLOCK EXPR plugin contexts by key new concurrent hash map NAME plugin contexts by key CALL concurrent hash map NAME concurrent hash map NAME concurrent hash map ARGUMENT LIST ARGUMENT LIST EXPR plugin contexts by project and plugin key put project key plugin contexts by key CALL plugin contexts by project and plugin key put project key plugin contexts by key NAME plugin contexts by project and plugin key put NAME plugin contexts by project and plugin key NAME put ARGUMENT LIST ARGUMENT EXPR project key NAME project key ARGUMENT EXPR plugin contexts by key NAME plugin contexts by key DECL STMT TYPE string NAME string NAME plugin key INIT plugin get plugin lookup key EXPR plugin get plugin lookup key CALL plugin get plugin lookup key NAME plugin get plugin lookup key NAME plugin NAME get plugin lookup key ARGUMENT LIST DECL STMT TYPE map string object NAME map string object NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME object NAME plugin context INIT plugin contexts by key get plugin key EXPR plugin contexts by key get plugin key CALL plugin contexts by key get plugin key NAME plugin contexts by key get NAME plugin contexts by key NAME get ARGUMENT LIST ARGUMENT EXPR plugin key NAME plugin key IF if plugin context null plugin context new concurrent hash map plugin contexts by key put plugin key plugin context CONDITION plugin context null EXPR plugin context null NAME plugin context THEN plugin context new concurrent hash map plugin contexts by key put plugin key plugin context BLOCK EXPR plugin context new concurrent hash map NAME plugin context CALL concurrent hash map NAME concurrent hash map NAME concurrent hash map ARGUMENT LIST ARGUMENT LIST EXPR plugin contexts by key put plugin key plugin context CALL plugin contexts by key put plugin key plugin context NAME plugin contexts by key put NAME plugin contexts by key NAME put ARGUMENT LIST ARGUMENT EXPR plugin key NAME plugin key ARGUMENT EXPR plugin context NAME plugin context RETURN return plugin context EXPR plugin context NAME plugin context backward compat root ROOT compat advmod compat backward public NN map NN string NN object NN get VB plugin JJ context NN root ROOT get amod context plugin dobj get context plugin NN descriptor NN root ROOT descriptor compound descriptor plugin plugin NN maven NN project NN root ROOT project compound project maven project NN string NN project NN key NN root ROOT key compound key project project NN get VB id NN root ROOT get nsubj get project dobj get id map NN string NN map NN string NN object NN plugin NN contexts NNS by IN key NN root ROOT contexts compound contexts plugin case key by nmod by contexts key plugin NN contexts NNS by IN project NN and CC plugin NN key NN get VB root ROOT get compound contexts plugin nsubj get contexts case project by nmod by contexts project cc project and compound key plugin nmod by contexts key conj and project key project NN key NN root ROOT key compound key project if IN plugin NN contexts NNS by IN key NN root ROOT contexts compound contexts plugin case key by nmod by contexts key null JJ plugin NN contexts NNS by IN key NN root ROOT contexts compound contexts plugin case key by nmod by contexts key new JJ concurrent JJ hash NN map NN root ROOT map amod map concurrent compound map hash plugin NN contexts NNS by IN project NN and CC plugin NN key NN put VBD root ROOT put compound contexts plugin nsubj put contexts case project by nmod by contexts project cc project and compound key plugin nmod by contexts key conj and project key project NN key NN root ROOT key compound key project plugin NN contexts NNS by IN key NN root ROOT contexts compound contexts plugin case key by nmod by contexts key string NN plugin NN key NN root ROOT key compound key plugin plugin NN get VB plugin JJ lookup NN key NN root ROOT get nsubj get plugin amod key plugin compound key lookup dobj get key map NN string NN object NN plugin NN context NN root ROOT context compound context plugin plugin NN contexts NNS by IN key JJ get VB root ROOT get compound contexts plugin nsubj get contexts case key by nmod by contexts key plugin NN key NN root ROOT key compound key plugin if IN plugin NN context NN root ROOT context compound context plugin null JJ plugin NN context NN root ROOT context compound context plugin new JJ concurrent JJ hash NN map NN root ROOT map amod map concurrent compound map hash plugin NN contexts NNS by IN key NN put VBD root ROOT put compound contexts plugin nsubj put contexts case key by nmod by contexts key plugin NN key NN root ROOT key compound key plugin plugin NN context NN root ROOT context compound context plugin return NN plugin NN context NN root ROOT context compound context plugin,0,N/A,maven/maven-core/src/main/java/org/apache/maven/execution/MavenSession.java,193
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set pom PARAMETER LIST file pom PARAMETER file pom TYPE file NAME file NAME pom BLOCK EXPR this pom pom NAME this pom NAME this NAME pom NAME pom RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN pom NN root ROOT set dobj set pom file NN pom NN this DT pom NN pom NN return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,686
DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME default vertices INIT EXPR public NN static JJ final JJ int NN default NN vertices NNS root ROOT vertices compound vertices default,1,E1,maven/maven-compat/src/main/java/org/apache/maven/repository/metadata/MetadataGraph.java,38
FUNCTION ANNOTATION override NAME override SPECIFIER public SPECIFIER synchronized TYPE model source NAME model source NAME get model source PARAMETER LIST BLOCK IF if model source null pom file null model source new file model source pom file CONDITION model source null pom file null EXPR model source null pom file null NAME model source NAME pom file THEN model source new file model source pom file BLOCK EXPR model source new file model source pom file NAME model source CALL file model source pom file NAME file model source ARGUMENT LIST ARGUMENT EXPR pom file NAME pom file RETURN return model source EXPR model source NAME model source override NN public NN synchronized VBN model NN source NN root ROOT source compound source model get VB model NN source NN root ROOT get compound source model dobj get source if IN model NN source NN root ROOT source compound source model null JJ pom NN file NN root ROOT file compound file pom null JJ model NN source NN root ROOT source compound source model new JJ file NN model NN source NN root ROOT source compound source file compound source model pom NN file NN root ROOT file compound file pom return NN model NN source NN root ROOT source compound source model,1,A1,maven/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuildingRequest.java,120
FUNCTION SPECIFIER public TYPE maven metadata NAME maven metadata NAME set file PARAMETER LIST file file PARAMETER file file TYPE file NAME file NAME file BLOCK RETURN return new remote snapshot metadata metadata file legacy format EXPR new remote snapshot metadata metadata file legacy format CALL remote snapshot metadata metadata file legacy format NAME remote snapshot metadata ARGUMENT LIST ARGUMENT EXPR metadata NAME metadata ARGUMENT EXPR file NAME file ARGUMENT EXPR legacy format NAME legacy format public NN maven NN metadata NN root ROOT metadata compound metadata maven set VBN file NN root ROOT set dobj set file file NN file NN return NN new JJ remote JJ snapshot NN metadata NN root ROOT metadata amod metadata remote compound metadata snapshot metadata NN file NN legacy NN format NN root ROOT format compound format legacy,1,A3,maven/maven-aether-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadata.java,56
FUNCTION SPECIFIER public TYPE void NAME void NAME get PARAMETER LIST collection extends artifact download artifact downloads collection extends metadata download metadata downloads PARAMETER collection extends artifact download artifact downloads collection extends metadata download metadata downloads TYPE collection extends artifact download artifact downloads collection extends metadata download NAME collection extends artifact download NAME collection ARGUMENT LIST ARGUMENT NAME EXTENDS extends artifact download NAME artifact download NAME artifact downloads NAME collection extends metadata download NAME collection ARGUMENT LIST ARGUMENT NAME EXTENDS extends metadata download NAME metadata download NAME metadata downloads BLOCK IF if artifact downloads null for artifact download download artifact downloads file remote file new file basedir path download get artifact try file utils copy file remote file download get file catch io exception e if remote file exists download set exception new artifact not found exception download get artifact repository else download set exception new artifact transfer exception download get artifact repository e CONDITION artifact downloads null EXPR artifact downloads null NAME artifact downloads THEN for artifact download download artifact downloads file remote file new file basedir path download get artifact try file utils copy file remote file download get file catch io exception e if remote file exists download set exception new artifact not found exception download get artifact repository else download set exception new artifact transfer exception download get artifact repository e BLOCK FOR for artifact download download artifact downloads file remote file new file basedir path download get artifact try file utils copy file remote file download get file catch io exception e if remote file exists download set exception new artifact not found exception download get artifact repository else download set exception new artifact transfer exception download get artifact repository e CONTROL artifact download download artifact downloads INIT artifact download download artifact downloads TYPE artifact download NAME artifact download NAME download RANGE artifact downloads EXPR artifact downloads NAME artifact downloads BLOCK DECL STMT TYPE file NAME file NAME remote file INIT new file basedir path download get artifact EXPR new file basedir path download get artifact CALL file basedir path download get artifact NAME file ARGUMENT LIST ARGUMENT EXPR basedir NAME basedir ARGUMENT EXPR path download get artifact CALL path download get artifact NAME path ARGUMENT LIST ARGUMENT EXPR download get artifact CALL download get artifact NAME download get artifact NAME download NAME get artifact ARGUMENT LIST TRY try file utils copy file remote file download get file catch io exception e if remote file exists download set exception new artifact not found exception download get artifact repository else download set exception new artifact transfer exception download get artifact repository e BLOCK EXPR file utils copy file remote file download get file CALL file utils copy file remote file download get file NAME file utils copy file NAME file utils NAME copy file ARGUMENT LIST ARGUMENT EXPR remote file NAME remote file ARGUMENT EXPR download get file CALL download get file NAME download get file NAME download NAME get file ARGUMENT LIST CATCH catch io exception e if remote file exists download set exception new artifact not found exception download get artifact repository else download set exception new artifact transfer exception download get artifact repository e PARAMETER LIST io exception e PARAMETER io exception e TYPE io exception NAME io exception NAME e BLOCK IF if remote file exists download set exception new artifact not found exception download get artifact repository else download set exception new artifact transfer exception download get artifact repository e CONDITION remote file exists EXPR remote file exists CALL remote file exists NAME remote file exists NAME remote file NAME exists ARGUMENT LIST THEN download set exception new artifact not found exception download get artifact repository BLOCK EXPR download set exception new artifact not found exception download get artifact repository CALL download set exception new artifact not found exception download get artifact repository NAME download set exception NAME download NAME set exception ARGUMENT LIST ARGUMENT EXPR new artifact not found exception download get artifact repository CALL artifact not found exception download get artifact repository NAME artifact not found exception ARGUMENT LIST ARGUMENT EXPR download get artifact CALL download get artifact NAME download get artifact NAME download NAME get artifact ARGUMENT LIST ARGUMENT EXPR repository NAME repository ELSE else download set exception new artifact transfer exception download get artifact repository e BLOCK EXPR download set exception new artifact transfer exception download get artifact repository e CALL download set exception new artifact transfer exception download get artifact repository e NAME download set exception NAME download NAME set exception ARGUMENT LIST ARGUMENT EXPR new artifact transfer exception download get artifact repository e CALL artifact transfer exception download get artifact repository e NAME artifact transfer exception ARGUMENT LIST ARGUMENT EXPR download get artifact CALL download get artifact NAME download get artifact NAME download NAME get artifact ARGUMENT LIST ARGUMENT EXPR repository NAME repository ARGUMENT EXPR e NAME e public NN void NN get VB collection NN extends VBZ artifact NN download NN root ROOT download compound download artifact artifact NN downloads NNS root ROOT downloads compound downloads artifact collection NN extends VBZ metadata NN download NN root ROOT download compound download metadata metadata NN downloads NNS root ROOT downloads compound downloads metadata if IN artifact NN downloads NNS root ROOT downloads compound downloads artifact null JJ for IN artifact NN download NN root ROOT download compound download artifact download NN artifact NN downloads NNS root ROOT downloads compound downloads artifact file NN remote JJ file NN root ROOT file amod file remote new JJ file NN basedir NN path NN download VB get VB artifact NN root ROOT download ccomp download get dobj get artifact try VB file NN utils VBZ copy NN file NN root ROOT utils nsubj utils file compound file copy dobj utils file remote JJ file NN root ROOT file amod file remote download VB get VB file NN root ROOT download ccomp download get dobj get file catch NN io NN exception NN root ROOT exception compound exception io e SYM if IN remote JJ file NN exists VBZ root ROOT exists amod file remote nsubj exists file download NN set VBD exception NN root ROOT set nsubj set download dobj set exception new JJ artifact NN not RB found VBN exception NN root ROOT found nsubj found artifact neg found not dobj found exception download VB get VB artifact NN root ROOT download ccomp download get dobj get artifact repository NN else RB download NN set VBD exception NN root ROOT set nsubj set download dobj set exception new JJ artifact NN transfer NN exception NN root ROOT exception compound exception artifact compound exception transfer download VB get VB artifact NN root ROOT download ccomp download get dobj get artifact repository NN e SYM get extends ANTONYM ANTONYM,1,B3,maven/maven-core/src/test/java/org/apache/maven/repository/TestRepositoryConnector.java,67
DECL STMT SPECIFIER private TYPE void NAME void NAME validate repositories ARGUMENT LIST ARGUMENT EXPR settings problem collector problems set string repo ids new hash set for repository repository repositories validate string not empty problems prefix id repository get id repository get url validate banned characters problems prefix id severity warning repository get id null illegal repo id chars if local equals repository get id add violation problems severity warning prefix id null must not be local this identifier is reserved for the local repository using it for other repositories will corrupt your repository metadata if repo ids add repository get id add violation problems severity warning prefix id null must be unique but found duplicate repository with id repository get id validate string not empty problems prefix url repository get url repository get id if legacy equals repository get layout add violation problems severity warning prefix layout repository get id uses the unsupported value legacy artifact resolution might fail public project building request set plugin artifact repositories list artifact repository plugin artifact repositories if plugin artifact repositories null this plugin artifact repositories new array list plugin artifact repositories else this plugin artifact repositories clear return this NAME settings problem collector NAME problems BLOCK EXPR set string repo ids new hash set NAME set string NAME set ARGUMENT LIST ARGUMENT NAME string NAME repo ids CALL hash set NAME hash set NAME hash set ARGUMENT LIST ARGUMENT LIST FOR for repository repository repositories validate string not empty problems prefix id repository get id repository get url validate banned characters problems prefix id severity warning repository get id null illegal repo id chars if local equals repository get id add violation problems severity warning prefix id null must not be local this identifier is reserved for the local repository using it for other repositories will corrupt your repository metadata if repo ids add repository get id add violation problems severity warning prefix id null must be unique but found duplicate repository with id repository get id validate string not empty problems prefix url repository get url repository get id if legacy equals repository get layout add violation problems severity warning prefix layout repository get id uses the unsupported value legacy artifact resolution might fail CONTROL repository repository repositories INIT repository repository repositories TYPE repository NAME repository NAME repository RANGE repositories EXPR repositories NAME repositories BLOCK EXPR validate string not empty problems prefix id repository get id repository get url CALL validate string not empty problems prefix id repository get id repository get url NAME validate string not empty ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR prefix id NAME prefix ARGUMENT EXPR repository get id CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST ARGUMENT EXPR repository get url CALL repository get url NAME repository get url NAME repository NAME get url ARGUMENT LIST EXPR validate banned characters problems prefix id severity warning repository get id null illegal repo id chars CALL validate banned characters problems prefix id severity warning repository get id null illegal repo id chars NAME validate banned characters ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR prefix id NAME prefix ARGUMENT EXPR severity warning NAME severity warning NAME severity NAME warning ARGUMENT EXPR repository get id CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST ARGUMENT EXPR null ARGUMENT EXPR illegal repo id chars NAME illegal repo id chars IF if local equals repository get id add violation problems severity warning prefix id null must not be local this identifier is reserved for the local repository using it for other repositories will corrupt your repository metadata if repo ids add repository get id add violation problems severity warning prefix id null must be unique but found duplicate repository with id repository get id validate string not empty problems prefix url repository get url repository get id CONDITION local equals repository get id EXPR local equals repository get id CALL equals repository get id NAME equals ARGUMENT LIST ARGUMENT EXPR repository get id CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST THEN add violation problems severity warning prefix id null must not be local this identifier is reserved for the local repository using it for other repositories will corrupt your repository metadata if repo ids add repository get id add violation problems severity warning prefix id null must be unique but found duplicate repository with id repository get id validate string not empty problems prefix url repository get url repository get id BLOCK EXPR add violation problems severity warning prefix id null must not be local this identifier is reserved for the local repository using it for other repositories will corrupt your repository metadata CALL add violation problems severity warning prefix id null must not be local this identifier is reserved for the local repository using it for other repositories will corrupt your repository metadata NAME add violation ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity warning NAME severity warning NAME severity NAME warning ARGUMENT EXPR prefix id NAME prefix ARGUMENT EXPR null ARGUMENT EXPR must not be local this identifier is reserved for the local repository using it for other repositories will corrupt your repository metadata IF if repo ids add repository get id add violation problems severity warning prefix id null must be unique but found duplicate repository with id repository get id validate string not empty problems prefix url repository get url repository get id CONDITION repo ids add repository get id EXPR repo ids add repository get id CALL repo ids add repository get id NAME repo ids add NAME repo ids NAME add ARGUMENT LIST ARGUMENT EXPR repository get id CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST THEN add violation problems severity warning prefix id null must be unique but found duplicate repository with id repository get id validate string not empty problems prefix url repository get url repository get id BLOCK EXPR add violation problems severity warning prefix id null must be unique but found duplicate repository with id repository get id CALL add violation problems severity warning prefix id null must be unique but found duplicate repository with id repository get id NAME add violation ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity warning NAME severity warning NAME severity NAME warning ARGUMENT EXPR prefix id NAME prefix ARGUMENT EXPR null ARGUMENT EXPR must be unique but found duplicate repository with id repository get id CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST EXPR validate string not empty problems prefix url repository get url repository get id CALL validate string not empty problems prefix url repository get url repository get id NAME validate string not empty ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR prefix url NAME prefix ARGUMENT EXPR repository get url CALL repository get url NAME repository get url NAME repository NAME get url ARGUMENT LIST ARGUMENT EXPR repository get id CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST IF if legacy equals repository get layout add violation problems severity warning prefix layout repository get id uses the unsupported value legacy artifact resolution might fail CONDITION legacy equals repository get layout EXPR legacy equals repository get layout CALL equals repository get layout NAME equals ARGUMENT LIST ARGUMENT EXPR repository get layout CALL repository get layout NAME repository get layout NAME repository NAME get layout ARGUMENT LIST THEN add violation problems severity warning prefix layout repository get id uses the unsupported value legacy artifact resolution might fail BLOCK EXPR add violation problems severity warning prefix layout repository get id uses the unsupported value legacy artifact resolution might fail CALL add violation problems severity warning prefix layout repository get id uses the unsupported value legacy artifact resolution might fail NAME add violation ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity warning NAME severity warning NAME severity NAME warning ARGUMENT EXPR prefix layout NAME prefix ARGUMENT EXPR repository get id CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST ARGUMENT EXPR uses the unsupported value legacy artifact resolution might fail private JJ void NN validate VB repositories NNS root ROOT validate dobj validate repositories settings NNS problem NN collector NN root ROOT collector compound collector settings compound collector problem problems NNS set NN string NN repo NN ids NNS root ROOT ids compound ids repo new JJ hash JJ set NN root ROOT set amod set hash for IN repository NN repository NN repositories NNS validate VB string NN not RB empty JJ root ROOT validate dobj validate string neg empty not dep string empty problems NNS prefix NN id NN repository JJ get VB id NN root ROOT repository dep repository get dobj get id repository NN get VB url NN root ROOT get nsubj get repository dobj get url validate VB banned VBN characters NNS root ROOT validate amod characters banned dobj validate characters problems NNS prefix NN id NN severity NN warning NN root ROOT warning compound warning severity repository JJ get VB id NN root ROOT repository dep repository get dobj get id null JJ illegal JJ repo NN id NN chars VBZ root ROOT chars amod id illegal compound id repo nsubj chars id if IN local JJ equals VBZ repository JJ get VB id NN root ROOT repository dep repository get dobj get id add VB violation NN root ROOT add dobj add violation problems NNS severity NN warning NN root ROOT warning compound warning severity prefix NN id NN null JJ must MD not RB be VB local JJ this DT identifier NN is VBZ reserved VBN for IN the DT local JJ repository NN using VBG it PRP for IN other JJ repositories NNS will MD corrupt JJ your PRP$ repository NN metadata NN if IN repo NN ids NNS add VBP root ROOT add compound ids repo nsubj add ids repository JJ get VB id NN root ROOT repository dep repository get dobj get id add VB violation NN root ROOT add dobj add violation problems NNS severity NN warning NN root ROOT warning compound warning severity prefix NN id NN null JJ must MD be VB unique JJ but CC found VBN duplicate VB repository NN with IN id NN repository JJ get VB id NN root ROOT repository dep repository get dobj get id validate VB string NN not RB empty JJ root ROOT validate dobj validate string neg empty not dep string empty problems NNS prefix NN url NN repository NN get VB url NN root ROOT get nsubj get repository dobj get url repository JJ get VB id NN root ROOT repository dep repository get dobj get id if IN legacy NN equals VBZ repository NN get VB layout NN root ROOT get nsubj get repository dobj get layout add VB violation NN root ROOT add dobj add violation problems NNS severity NN warning NN root ROOT warning compound warning severity prefix NN layout NN repository JJ get VB id NN root ROOT repository dep repository get dobj get id uses NNS the DT unsupported JJ value NN legacy NN artifact NN resolution NN might MD fail VB,1,B2,maven/maven-settings-builder/src/main/java/org/apache/maven/settings/validation/DefaultSettingsValidator.java,164
SPECIFIER public NAME project building request CALL set plugin artifact repositories list artifact repository plugin artifact repositories NAME set plugin artifact repositories ARGUMENT LIST ARGUMENT EXPR list artifact repository plugin artifact repositories NAME list artifact repository NAME list ARGUMENT LIST ARGUMENT NAME artifact repository NAME plugin artifact repositories BLOCK IF if plugin artifact repositories null this plugin artifact repositories new array list plugin artifact repositories else this plugin artifact repositories clear return this CONDITION plugin artifact repositories null EXPR plugin artifact repositories null NAME plugin artifact repositories THEN this plugin artifact repositories new array list plugin artifact repositories else this plugin artifact repositories clear return this BLOCK EXPR this plugin artifact repositories new array list plugin artifact repositories NAME this plugin artifact repositories NAME this NAME plugin artifact repositories CALL array list plugin artifact repositories NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR plugin artifact repositories NAME plugin artifact repositories ELSE else this plugin artifact repositories clear return this BLOCK EXPR this plugin artifact repositories clear CALL this plugin artifact repositories clear NAME this plugin artifact repositories clear NAME this NAME plugin artifact repositories NAME clear ARGUMENT LIST RETURN return this EXPR this NAME this public NN project NN building NN request NN root ROOT request compound request project compound request building set VBN plugin JJ artifact NN repositories NNS root ROOT set amod repositories plugin compound repositories artifact dobj set repositories list NN artifact NN repository NN root ROOT repository compound repository artifact plugin NN artifact NN repositories NNS root ROOT repositories compound repositories plugin compound repositories artifact if IN plugin NN artifact NN repositories NNS root ROOT repositories compound repositories plugin compound repositories artifact null JJ this DT plugin NN artifact NN repositories NNS new JJ array NN list NN root ROOT list compound list array plugin NN artifact NN repositories NNS root ROOT repositories compound repositories plugin compound repositories artifact else RB this DT plugin NN artifact NN repositories NNS clear JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuildingRequest.java,144
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set local repository PARAMETER LIST artifact repository local repository PARAMETER artifact repository local repository TYPE artifact repository NAME artifact repository NAME local repository BLOCK EXPR this local repository local repository NAME this local repository NAME this NAME local repository NAME local repository IF if local repository null set local repository path new file local repository get basedir get absolute file CONDITION local repository null EXPR local repository null NAME local repository THEN set local repository path new file local repository get basedir get absolute file BLOCK EXPR set local repository path new file local repository get basedir get absolute file CALL set local repository path new file local repository get basedir get absolute file NAME set local repository path ARGUMENT LIST ARGUMENT EXPR new file local repository get basedir get absolute file CALL file local repository get basedir NAME file ARGUMENT LIST ARGUMENT EXPR local repository get basedir CALL local repository get basedir NAME local repository get basedir NAME local repository NAME get basedir ARGUMENT LIST CALL get absolute file NAME get absolute file ARGUMENT LIST RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN local JJ repository NN root ROOT set amod repository local dobj set repository artifact NN repository NN root ROOT repository compound repository artifact local JJ repository NN root ROOT repository amod repository local this DT local JJ repository NN local JJ repository NN root ROOT repository amod repository local if IN local JJ repository NN root ROOT repository amod repository local null JJ set VBN local JJ repository JJ path NN root ROOT set amod path local amod path repository dobj set path new JJ file NN local JJ repository JJ get VB basedir NN root ROOT get amod repository local nsubj get repository dobj get basedir get VB absolute JJ file NN root ROOT get amod file absolute dobj get file return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,503
FUNCTION SPECIFIER private TYPE void NAME void NAME validate raw plugins PARAMETER LIST model problem collector problems model building request request PARAMETER model problem collector problems model building request request TYPE model problem collector problems model building request NAME model problem collector NAME problems NAME model building request NAME request BLOCK DECL STMT TYPE severity NAME severity NAME err on INIT get severity request model building request validation level maven EXPR get severity request model building request validation level maven CALL get severity request model building request validation level maven NAME get severity ARGUMENT LIST ARGUMENT EXPR request NAME request ARGUMENT EXPR model building request validation level maven NAME model building request validation level maven NAME model building request NAME validation level maven DECL STMT TYPE map string plugin NAME map string plugin NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME plugin NAME index INIT new hash map EXPR new hash map CALL hash map NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST FOR for plugin plugin plugins string key plugin get key plugin existing index get key if existing null add violation problems err on version v prefix group id artifact id null must be unique but found duplicate declaration of plugin key plugin else index put key plugin set string execution ids new hash set for plugin execution exec plugin get executions if execution ids add exec get id add violation problems severity error version v prefix plugin get key executions execution id null must be unique but found duplicate execution with id exec get id exec CONTROL plugin plugin plugins INIT plugin plugin plugins TYPE plugin NAME plugin NAME plugin RANGE plugins EXPR plugins NAME plugins BLOCK DECL STMT TYPE string NAME string NAME key INIT plugin get key EXPR plugin get key CALL plugin get key NAME plugin get key NAME plugin NAME get key ARGUMENT LIST DECL STMT TYPE plugin NAME plugin NAME existing INIT index get key EXPR index get key CALL index get key NAME index get NAME index NAME get ARGUMENT LIST ARGUMENT EXPR key NAME key IF if existing null add violation problems err on version v prefix group id artifact id null must be unique but found duplicate declaration of plugin key plugin else index put key plugin CONDITION existing null EXPR existing null NAME existing THEN add violation problems err on version v prefix group id artifact id null must be unique but found duplicate declaration of plugin key plugin BLOCK EXPR add violation problems err on version v prefix group id artifact id null must be unique but found duplicate declaration of plugin key plugin CALL add violation problems err on version v prefix group id artifact id null must be unique but found duplicate declaration of plugin key plugin NAME add violation ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR err on NAME err on ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR prefix group id artifact id NAME prefix ARGUMENT EXPR null ARGUMENT EXPR must be unique but found duplicate declaration of plugin key NAME key ARGUMENT EXPR plugin NAME plugin ELSE else index put key plugin BLOCK EXPR index put key plugin CALL index put key plugin NAME index put NAME index NAME put ARGUMENT LIST ARGUMENT EXPR key NAME key ARGUMENT EXPR plugin NAME plugin DECL STMT TYPE set string NAME set string NAME set ARGUMENT LIST ARGUMENT NAME string NAME execution ids INIT new hash set EXPR new hash set CALL hash set NAME hash set NAME hash set ARGUMENT LIST ARGUMENT LIST FOR for plugin execution exec plugin get executions if execution ids add exec get id add violation problems severity error version v prefix plugin get key executions execution id null must be unique but found duplicate execution with id exec get id exec CONTROL plugin execution exec plugin get executions INIT plugin execution exec plugin get executions TYPE plugin execution NAME plugin execution NAME exec RANGE plugin get executions EXPR plugin get executions CALL plugin get executions NAME plugin get executions NAME plugin NAME get executions ARGUMENT LIST BLOCK IF if execution ids add exec get id add violation problems severity error version v prefix plugin get key executions execution id null must be unique but found duplicate execution with id exec get id exec CONDITION execution ids add exec get id EXPR execution ids add exec get id CALL execution ids add exec get id NAME execution ids add NAME execution ids NAME add ARGUMENT LIST ARGUMENT EXPR exec get id CALL exec get id NAME exec get id NAME exec NAME get id ARGUMENT LIST THEN add violation problems severity error version v prefix plugin get key executions execution id null must be unique but found duplicate execution with id exec get id exec BLOCK EXPR add violation problems severity error version v prefix plugin get key executions execution id null must be unique but found duplicate execution with id exec get id exec CALL add violation problems severity error version v prefix plugin get key executions execution id null must be unique but found duplicate execution with id exec get id exec NAME add violation ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity error NAME severity error NAME severity NAME error ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR prefix plugin get key executions execution id NAME prefix CALL plugin get key NAME plugin get key NAME plugin NAME get key ARGUMENT LIST ARGUMENT EXPR null ARGUMENT EXPR must be unique but found duplicate execution with id exec get id CALL exec get id NAME exec get id NAME exec NAME get id ARGUMENT LIST ARGUMENT EXPR exec NAME exec private JJ void NN validate VB raw JJ plugins NNS root ROOT validate amod plugins raw dobj validate plugins model NN problem NN collector NN root ROOT collector compound collector model compound collector problem problems NNS model NN building NN request NN root ROOT request compound request model compound request building request NN severity NN err VB on IN root ROOT err compound prt err on get VB severity NN root ROOT get dobj get severity request NN model NN building NN request NN validation NN root ROOT validation compound validation model compound validation building compound validation request level NN maven NN root ROOT maven compound maven level map NN string NN plugin NN index NN new JJ hash VB map NN root ROOT hash dobj hash map for IN plugin NN plugin NN plugins NNS string NN key NN plugin NN get VB key JJ root ROOT get nsubj get plugin xcomp get key plugin NN existing VBG index NN get VB root ROOT get nsubj get index key NN if IN existing VBG null JJ add VB violation NN root ROOT add dobj add violation problems NNS err VB on IN root ROOT err compound prt err on version NN v LS root ROOT v nsubj v version prefix NN group NN id NN root ROOT id compound id group artifact NN id NN root ROOT id compound id artifact null JJ must MD be VB unique JJ but CC found VBN duplicate VB declaration NN of IN plugin NN key NN plugin NN else RB index NN put VBD root ROOT put nsubj put index key NN plugin NN set NN string NN execution NN ids NNS root ROOT ids compound ids execution new JJ hash JJ set NN root ROOT set amod set hash for IN plugin JJ execution NN root ROOT execution amod execution plugin exec NN plugin NN get VB executions NNS root ROOT get nsubj get plugin dobj get executions if IN execution NN ids NNS add VBP root ROOT add compound ids execution nsubj add ids exec NN get VB id NN root ROOT get nsubj get exec dobj get id add VB violation NN root ROOT add dobj add violation problems NNS severity NN error NN root ROOT error compound error severity version NN v LS root ROOT v nsubj v version prefix NN plugin NN get VB key JJ root ROOT get nsubj get plugin xcomp get key executions NNS execution NN id NN root ROOT id compound id executions compound id execution null JJ must MD be VB unique JJ but CC found VBN duplicate VB execution NN with IN id NN exec NN get VB id NN root ROOT get nsubj get exec dobj get id exec NN void validate ANTONYM ANTONYM,1,B2,maven/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java,253
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set global settings file PARAMETER LIST file global settings file PARAMETER file global settings file TYPE file NAME file NAME global settings file BLOCK EXPR this global settings file global settings file NAME this global settings file NAME this NAME global settings file NAME global settings file RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN global JJ settings NNS file NN root ROOT file dep file set amod settings global nsubj file settings file NN global JJ settings NNS file NN root ROOT file amod settings global nsubj file settings this DT global JJ settings NNS file NN global JJ settings NNS file NN root ROOT file amod settings global nsubj file settings return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,1012
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set make behavior PARAMETER LIST string make behavior PARAMETER string make behavior TYPE string NAME string NAME make behavior BLOCK EXPR this make behavior make behavior NAME this make behavior NAME this NAME make behavior NAME make behavior RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN make VBP behavior NN root ROOT make nsubj make set dobj make behavior string NN make VB behavior NN root ROOT make dobj make behavior this DT make VBP behavior NN make VB behavior NN root ROOT make dobj make behavior return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,610
DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME default edges INIT EXPR public NN static JJ final JJ int NN default NN edges NNS root ROOT edges compound edges default,1,E1,maven/maven-compat/src/main/java/org/apache/maven/repository/metadata/MetadataGraph.java,39
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME get artifact PARAMETER LIST artifact artifact list artifact repository remote repositories transfer listener download monitor boolean force PARAMETER artifact artifact TYPE artifact NAME artifact NAME artifact PARAMETER list artifact repository remote repositories TYPE list artifact repository NAME list artifact repository NAME list ARGUMENT LIST ARGUMENT NAME artifact repository NAME remote repositories PARAMETER transfer listener download monitor TYPE transfer listener NAME transfer listener NAME download monitor PARAMETER boolean force TYPE boolean NAME boolean NAME force THROWS throws transfer failed exception resource does not exist exception ARGUMENT EXPR transfer failed exception NAME transfer failed exception ARGUMENT EXPR resource does not exist exception NAME resource does not exist exception BLOCK DECL STMT TYPE transfer failed exception NAME transfer failed exception NAME tfe INIT null EXPR null FOR for artifact repository repository remote repositories try get artifact artifact repository download monitor force if artifact is resolved artifact set repository repository break catch resource does not exist exception e this one we will eat when looking through remote repositories because we want to cycle through them all before squawking logger debug unable to find artifact artifact get id in repository repository get id repository get url e catch transfer failed exception e tfe e string msg unable to get artifact artifact get id from repository repository get id repository get url e get message if logger is debug enabled logger warn msg e else logger warn msg CONTROL artifact repository repository remote repositories INIT artifact repository repository remote repositories TYPE artifact repository NAME artifact repository NAME repository RANGE remote repositories EXPR remote repositories NAME remote repositories BLOCK TRY try get artifact artifact repository download monitor force if artifact is resolved artifact set repository repository break catch resource does not exist exception e this one we will eat when looking through remote repositories because we want to cycle through them all before squawking logger debug unable to find artifact artifact get id in repository repository get id repository get url e catch transfer failed exception e tfe e string msg unable to get artifact artifact get id from repository repository get id repository get url e get message if logger is debug enabled logger warn msg e else logger warn msg BLOCK EXPR get artifact artifact repository download monitor force CALL get artifact artifact repository download monitor force NAME get artifact ARGUMENT LIST ARGUMENT EXPR artifact NAME artifact ARGUMENT EXPR repository NAME repository ARGUMENT EXPR download monitor NAME download monitor ARGUMENT EXPR force NAME force IF if artifact is resolved artifact set repository repository break CONDITION artifact is resolved EXPR artifact is resolved CALL artifact is resolved NAME artifact is resolved NAME artifact NAME is resolved ARGUMENT LIST THEN artifact set repository repository break BLOCK EXPR artifact set repository repository CALL artifact set repository repository NAME artifact set repository NAME artifact NAME set repository ARGUMENT LIST ARGUMENT EXPR repository NAME repository BREAK break CATCH catch resource does not exist exception e this one we will eat when looking through remote repositories because we want to cycle through them all before squawking logger debug unable to find artifact artifact get id in repository repository get id repository get url e PARAMETER LIST resource does not exist exception e PARAMETER resource does not exist exception e TYPE resource does not exist exception NAME resource does not exist exception NAME e BLOCK COMMENT this one we will eat when looking through remote repositories COMMENT because we want to cycle through them all before squawking EXPR logger debug unable to find artifact artifact get id in repository repository get id repository get url e CALL logger debug unable to find artifact artifact get id in repository repository get id repository get url e NAME logger debug NAME logger NAME debug ARGUMENT LIST ARGUMENT EXPR unable to find artifact artifact get id in repository repository get id repository get url CALL artifact get id NAME artifact get id NAME artifact NAME get id ARGUMENT LIST CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST CALL repository get url NAME repository get url NAME repository NAME get url ARGUMENT LIST ARGUMENT EXPR e NAME e CATCH catch transfer failed exception e tfe e string msg unable to get artifact artifact get id from repository repository get id repository get url e get message if logger is debug enabled logger warn msg e else logger warn msg PARAMETER LIST transfer failed exception e PARAMETER transfer failed exception e TYPE transfer failed exception NAME transfer failed exception NAME e BLOCK EXPR tfe e NAME tfe NAME e DECL STMT TYPE string NAME string NAME msg INIT unable to get artifact artifact get id from repository repository get id repository get url e get message EXPR unable to get artifact artifact get id from repository repository get id repository get url e get message CALL artifact get id NAME artifact get id NAME artifact NAME get id ARGUMENT LIST CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST CALL repository get url NAME repository get url NAME repository NAME get url ARGUMENT LIST CALL e get message NAME e get message NAME e NAME get message ARGUMENT LIST IF if logger is debug enabled logger warn msg e else logger warn msg CONDITION logger is debug enabled EXPR logger is debug enabled CALL logger is debug enabled NAME logger is debug enabled NAME logger NAME is debug enabled ARGUMENT LIST THEN logger warn msg e BLOCK EXPR logger warn msg e CALL logger warn msg e NAME logger warn NAME logger NAME warn ARGUMENT LIST ARGUMENT EXPR msg NAME msg ARGUMENT EXPR e NAME e ELSE else logger warn msg BLOCK EXPR logger warn msg CALL logger warn msg NAME logger warn NAME logger NAME warn ARGUMENT LIST ARGUMENT EXPR msg NAME msg COMMENT if it already exists locally we were just trying to force it ignore the update IF if artifact get file exists if tfe null throw tfe else throw new resource does not exist exception unable to download the artifact from any repository CONDITION artifact get file exists EXPR artifact get file exists CALL artifact get file NAME artifact get file NAME artifact NAME get file ARGUMENT LIST CALL exists NAME exists ARGUMENT LIST THEN if tfe null throw tfe else throw new resource does not exist exception unable to download the artifact from any repository BLOCK IF if tfe null throw tfe else throw new resource does not exist exception unable to download the artifact from any repository CONDITION tfe null EXPR tfe null NAME tfe THEN throw tfe BLOCK THROW throw tfe EXPR tfe NAME tfe ELSE else throw new resource does not exist exception unable to download the artifact from any repository BLOCK THROW throw new resource does not exist exception unable to download the artifact from any repository EXPR new resource does not exist exception unable to download the artifact from any repository CALL resource does not exist exception unable to download the artifact from any repository NAME resource does not exist exception ARGUMENT LIST ARGUMENT EXPR unable to download the artifact from any repository override NN public NN void NN get VB artifact NN root ROOT get dobj get artifact artifact NN artifact NN list NN artifact NN repository NN root ROOT repository compound repository artifact remote JJ repositories NNS root ROOT repositories amod repositories remote transfer NN listener NN root ROOT listener compound listener transfer download VB monitor NN root ROOT download dobj download monitor boolean NN force NN throws VBZ transfer NN failed VBD exception NN root ROOT failed nsubj failed transfer dobj failed exception resource NN does VBZ not RB exist VB exception NN root ROOT exist nsubj exist resource aux exist does neg exist not dobj exist exception transfer NN failed VBD exception NN root ROOT failed nsubj failed transfer dobj failed exception tfe NN null JJ for IN artifact NN repository NN root ROOT repository compound repository artifact repository NN remote JJ repositories NNS root ROOT repositories amod repositories remote try VB get VB artifact NN root ROOT get dobj get artifact artifact NN repository NN download VB monitor NN root ROOT download dobj download monitor force NN if IN artifact NN is VBZ resolved VBN root ROOT resolved nsubjpass resolved artifact auxpass resolved is artifact NN set VBD repository JJ root ROOT set nsubj set artifact xcomp set repository repository NN break NN catch NN resource NN does VBZ not RB exist VB exception NN root ROOT exist nsubj exist resource aux exist does neg exist not dobj exist exception e SYM this one we will eat when looking through remote repositories root ROOT one det one this nsubj eat we aux eat will acl relcl one eat advmod looking when advcl eat looking case repositories through amod repositories remote nmod through looking repositories because we want to cycle through them all before squawking root ROOT want mark want because nsubj want we case cycle to nmod to want cycle case them through nmod through want them dep squawking all mark squawking before advcl before want squawking logger NN debug VBP root ROOT debug nsubj debug logger unable JJ to TO find VB artifact NN artifact NN get VB id NN root ROOT get nsubj get artifact dobj get id in IN repository NN repository JJ get VB id NN root ROOT repository dep repository get dobj get id repository NN get VB url NN root ROOT get nsubj get repository dobj get url e SYM catch NN transfer NN failed VBD exception NN root ROOT failed nsubj failed transfer dobj failed exception e SYM tfe NN e SYM string NN msg NN unable JJ to TO get VB artifact NN artifact NN get VB id NN root ROOT get nsubj get artifact dobj get id from IN repository NN repository JJ get VB id NN root ROOT repository dep repository get dobj get id repository NN get VB url NN root ROOT get nsubj get repository dobj get url e LS get VB message NN root ROOT e root e get dobj get message if IN logger NN is VBZ debug NN enabled VBD root ROOT debug nsubj debug logger cop debug is dep debug enabled logger NN warn VBP root ROOT warn nsubj warn logger msg NN e SYM else RB logger NN warn VBP root ROOT warn nsubj warn logger msg NN if it already exists locally we were just trying to force it ignore the update root ROOT update mark exists if nsubj exists it advmod exists already csubj update exists advmod exists locally nsubj trying we nsubj xsubj force we aux trying were advmod trying just ccomp exists trying mark force to xcomp trying force nsubj ignore it ccomp force ignore dobj ignore the if IN artifact NN get VB file NN root ROOT get nsubj get artifact dobj get file exists VBZ if IN tfe NN null JJ throw VB tfe NN else RB throw VB new JJ resource NN does VBZ not RB exist VB exception NN root ROOT exist nsubj exist resource aux exist does neg exist not dobj exist exception unable JJ to TO download NN the DT artifact NN from IN any DT repository NN force throws ANTONYM ANTONYM,1,B3,maven/maven-compat/src/main/java/org/apache/maven/repository/legacy/DefaultWagonManager.java,152
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set execution listener PARAMETER LIST execution listener execution listener PARAMETER execution listener execution listener TYPE execution listener NAME execution listener NAME execution listener BLOCK EXPR this execution listener execution listener NAME this execution listener NAME this NAME execution listener NAME execution listener RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN execution NN listener NN root ROOT set compound listener execution dobj set listener execution NN listener NN root ROOT listener compound listener execution execution NN listener NN root ROOT listener compound listener execution this DT execution NN listener NN execution NN listener NN root ROOT listener compound listener execution return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,1162
FUNCTION SPECIFIER public TYPE string NAME string NAME get version PARAMETER LIST BLOCK IF if version null return version else return artifact get version CONDITION version null EXPR version null NAME version THEN return version BLOCK RETURN return version EXPR version NAME version ELSE else return artifact get version BLOCK RETURN return artifact get version EXPR artifact get version CALL artifact get version NAME artifact get version NAME artifact NAME get version ARGUMENT LIST public NN string NN get VB version NN root ROOT get dobj get version if IN version NN null JJ return NN version NN else RB return NN artifact NN get VB version NN root ROOT get nsubj get artifact dobj get version,0,N/A,maven/maven-aether-provider/src/main/java/org/apache/maven/repository/internal/RelocatedArtifact.java,79
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME get artifact metadata PARAMETER LIST artifact metadata metadata artifact repository repository file destination string checksum policy PARAMETER artifact metadata metadata TYPE artifact metadata NAME artifact metadata NAME metadata PARAMETER artifact repository repository TYPE artifact repository NAME artifact repository NAME repository PARAMETER file destination TYPE file NAME file NAME destination PARAMETER string checksum policy TYPE string NAME string NAME checksum policy THROWS throws transfer failed exception resource does not exist exception ARGUMENT EXPR transfer failed exception NAME transfer failed exception ARGUMENT EXPR resource does not exist exception NAME resource does not exist exception BLOCK DECL STMT TYPE string NAME string NAME remote path INIT repository path of remote repository metadata metadata EXPR repository path of remote repository metadata metadata CALL repository path of remote repository metadata metadata NAME repository path of remote repository metadata NAME repository NAME path of remote repository metadata ARGUMENT LIST ARGUMENT EXPR metadata NAME metadata EXPR get remote file repository destination remote path null checksum policy true CALL get remote file repository destination remote path null checksum policy true NAME get remote file ARGUMENT LIST ARGUMENT EXPR repository NAME repository ARGUMENT EXPR destination NAME destination ARGUMENT EXPR remote path NAME remote path ARGUMENT EXPR null ARGUMENT EXPR checksum policy NAME checksum policy ARGUMENT EXPR true override NN public NN void NN get VB artifact NN metadata NN root ROOT get compound metadata artifact dobj get metadata artifact NN metadata NN root ROOT metadata compound metadata artifact metadata NN artifact NN repository NN root ROOT repository compound repository artifact repository NN file NN destination NN string NN checksum NN policy NN root ROOT policy compound policy checksum throws VBZ transfer NN failed VBD exception NN root ROOT failed nsubj failed transfer dobj failed exception resource NN does VBZ not RB exist VB exception NN root ROOT exist nsubj exist resource aux exist does neg exist not dobj exist exception string NN remote JJ path NN root ROOT path amod path remote repository JJ path NN of IN remote JJ repository JJ metadata NN root ROOT path amod path repository case metadata of amod metadata remote amod metadata repository nmod of path metadata metadata NN get VB remote JJ file NN root ROOT get amod file remote dobj get file repository NN destination NN remote JJ path NN root ROOT path amod path remote null JJ checksum NN policy NN root ROOT policy compound policy checksum true JJ,1,B3,maven/maven-compat/src/main/java/org/apache/maven/repository/legacy/DefaultWagonManager.java,211
FUNCTION SPECIFIER public TYPE maven execution result NAME maven execution result NAME set dependency resolution result PARAMETER LIST dependency resolution result dependency resolution result PARAMETER dependency resolution result dependency resolution result TYPE dependency resolution result NAME dependency resolution result NAME dependency resolution result BLOCK EXPR this dependency resolution result dependency resolution result NAME this dependency resolution result NAME this NAME dependency resolution result NAME dependency resolution result RETURN return this EXPR this NAME this public NN maven NN execution NN result VBP root ROOT result compound execution maven nsubj result execution set VBN dependency NN resolution NN result VBP root ROOT result amod resolution set compound resolution dependency nsubj result resolution dependency NN resolution NN result VBP root ROOT result compound resolution dependency nsubj result resolution dependency NN resolution NN result VBP root ROOT result compound resolution dependency nsubj result resolution this DT dependency NN resolution NN result VBP dependency NN resolution NN result VBP root ROOT result compound resolution dependency nsubj result resolution return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionResult.java,76
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set toolchains PARAMETER LIST map string list toolchain model toolchains PARAMETER map string list toolchain model toolchains TYPE map string list toolchain model NAME map string list toolchain model NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME list toolchain model NAME list ARGUMENT LIST ARGUMENT NAME toolchain model NAME toolchains BLOCK EXPR this toolchains toolchains NAME this toolchains NAME this NAME toolchains NAME toolchains RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN toolchains NNS root ROOT set dobj set toolchains map NN string NN list NN toolchain NN model NN root ROOT model compound model toolchain toolchains NNS this DT toolchains NNS toolchains NNS return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,1257
COMMENT sets the base directory of the current project param project directory the base directory of the current project may be code null if profile activation happens in the context of metadata retrieval rather than project building return this context never code null FUNCTION SPECIFIER public TYPE default profile activation context NAME default profile activation context NAME set project directory PARAMETER LIST file project directory PARAMETER file project directory TYPE file NAME file NAME project directory BLOCK EXPR this project directory project directory NAME this project directory NAME this NAME project directory NAME project directory RETURN return this EXPR this NAME this sets the base directory of the current project root ROOT sets det directory the compound directory base dobj sets directory case project of det project the amod project current nmod of directory project param project directory the base directory of the current project may be code null if profile activation root ROOT directory compound directory param compound directory project det directory the compound directory base nsubj null directory case project of det project the amod project current nmod of directory project aux null may cop null be compound null code acl relcl directory null case activation if compound activation profile nmod if null activation happens in the context of metadata retrieval rather than project building root ROOT happens case context in det context the nmod in happens context case retrieval of compound retrieval metadata nmod of context retrieval cc retrieval rather mwe rather than compound building project nmod of context building conj negcc retrieval building return this context never code null root ROOT return det context this nsubj code context neg code never acl relcl return code xcomp code null public NN default NN profile NN activation NN context NN root ROOT context compound context default compound context profile compound context activation set VBN project NN directory NN root ROOT set compound directory project dobj set directory file NN project NN directory NN root ROOT directory compound directory project this DT project NN directory NN project NN directory NN root ROOT directory compound directory project return NN this DT sets base ANTONYM ANTONYM,1,A3,maven/maven-model-builder/src/main/java/org/apache/maven/model/profile/DefaultProfileActivationContext.java,216
FUNCTION SPECIFIER public TYPE set artifact NAME set artifact NAME set ARGUMENT LIST ARGUMENT NAME artifact NAME get introduced dependency artifacts PARAMETER LIST BLOCK RETURN return introduced dependency artifacts null introduced dependency artifacts collections artifact empty set EXPR introduced dependency artifacts null introduced dependency artifacts collections artifact empty set TERNARY introduced dependency artifacts null introduced dependency artifacts collections artifact empty set CONDITION introduced dependency artifacts null EXPR introduced dependency artifacts null NAME introduced dependency artifacts THEN introduced dependency artifacts EXPR introduced dependency artifacts NAME introduced dependency artifacts ELSE collections artifact empty set EXPR collections artifact empty set NAME collections NAME collections NAME artifact CALL empty set NAME empty set ARGUMENT LIST public NN set NN artifact NN get VB introduced VBN dependency NN artifacts NNS root ROOT introduced auxpass introduced get compound artifacts dependency dobj introduced artifacts return NN introduced VBN dependency NN artifacts NNS root ROOT artifacts amod artifacts introduced compound artifacts dependency null JJ introduced VBN dependency NN artifacts NNS root ROOT artifacts amod artifacts introduced compound artifacts dependency collections NNS artifact NN empty JJ set NN root ROOT set amod set empty,0,N/A,maven/maven-plugin-api/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptor.java,317
FUNCTION SPECIFIER public TYPE dependency resolution request NAME dependency resolution request NAME set maven project PARAMETER LIST maven project project PARAMETER maven project project TYPE maven project NAME maven project NAME project BLOCK EXPR this project project NAME this project NAME this NAME project NAME project RETURN return this EXPR this NAME this public NN dependency NN resolution NN request NN root ROOT request compound request dependency compound request resolution set VBN maven NN project NN root ROOT set compound project maven dobj set project maven NN project NN root ROOT project compound project maven project NN this DT project NN project NN return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/project/DefaultDependencyResolutionRequest.java,70
FUNCTION SPECIFIER private TYPE void NAME void NAME validate activated profiles PARAMETER LIST list maven project projects PARAMETER list maven project projects TYPE list maven project NAME list maven project NAME list ARGUMENT LIST ARGUMENT NAME maven project NAME projects BLOCK DECL STMT TYPE collection string NAME collection string NAME collection ARGUMENT LIST ARGUMENT NAME string NAME not activated profile ids INIT new linked hash set active profile ids EXPR new linked hash set active profile ids CALL linked hash set active profile ids NAME linked hash set NAME linked hash set ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR active profile ids NAME active profile ids FOR for maven project project projects for list string profile ids project get injected profile ids values not activated profile ids remove all profile ids CONTROL maven project project projects INIT maven project project projects TYPE maven project NAME maven project NAME project RANGE projects EXPR projects NAME projects BLOCK FOR for list string profile ids project get injected profile ids values not activated profile ids remove all profile ids CONTROL list string profile ids project get injected profile ids values INIT list string profile ids project get injected profile ids values TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME profile ids RANGE project get injected profile ids values EXPR project get injected profile ids values CALL project get injected profile ids NAME project get injected profile ids NAME project NAME get injected profile ids ARGUMENT LIST CALL values NAME values ARGUMENT LIST BLOCK EXPR not activated profile ids remove all profile ids CALL not activated profile ids remove all profile ids NAME not activated profile ids remove all NAME not activated profile ids NAME remove all ARGUMENT LIST ARGUMENT EXPR profile ids NAME profile ids FOR for string not activated profile id not activated profile ids logger warn the requested profile not activated profile id could not be activated because it does not exist CONTROL string not activated profile id not activated profile ids INIT string not activated profile id not activated profile ids TYPE string NAME string NAME not activated profile id RANGE not activated profile ids EXPR not activated profile ids NAME not activated profile ids BLOCK EXPR logger warn the requested profile not activated profile id could not be activated because it does not exist CALL logger warn the requested profile not activated profile id could not be activated because it does not exist NAME logger warn NAME logger NAME warn ARGUMENT LIST ARGUMENT EXPR the requested profile not activated profile id could not be activated because it does not exist NAME not activated profile id private JJ void NN validate VB activated VBN profiles NNS root ROOT validate amod profiles activated dobj validate profiles list NN maven NN project NN root ROOT project compound project maven projects NNS collection NN string NN not RB activated VBN profile NN ids NNS root ROOT activated neg activated not compound ids profile dobj activated ids new JJ linked VBN hash JJ set NN root ROOT set amod set linked amod set hash active JJ profile NN ids NNS root ROOT ids amod ids active compound ids profile for IN maven NN project NN root ROOT project compound project maven project NN projects NNS for IN list NN string NN profile NN ids NNS root ROOT ids compound ids profile project NN get VB injected VBN profile NN ids NNS root ROOT project acl project get amod ids injected compound ids profile dobj get ids values NNS not RB activated VBN profile NN ids NNS remove VB all DT root ROOT remove neg activated not amod ids activated compound ids profile nsubj remove ids dobj remove all profile NN ids NNS root ROOT ids compound ids profile for IN string NN not RB activated VBN profile NN id NN root ROOT activated neg activated not compound id profile dobj activated id not RB activated VBN profile NN ids NNS root ROOT activated neg activated not compound ids profile dobj activated ids logger NN warn VBP root ROOT warn nsubj warn logger the DT requested VBN profile NN not RB activated VBN profile NN id NN root ROOT activated neg activated not compound id profile dobj activated id could MD not RB be VB activated VBN because IN it PRP does VBZ not RB exist VB,1,B2,maven/maven-core/src/main/java/org/apache/maven/DefaultMaven.java,428
FUNCTION SPECIFIER private TYPE list artifact NAME list artifact NAME list ARGUMENT LIST ARGUMENT NAME artifact NAME get trail PARAMETER LIST THROWS throws over constrained version exception ARGUMENT EXPR over constrained version exception NAME over constrained version exception BLOCK IF if trail null list artifact ids new linked list resolution node node this while node null artifact artifact node get artifact if artifact get version null set the recommended version artifact version selected artifact get selected version mng null is a valid response to get selected version don t assume it won t ever be if selected null artifact select version selected to string else throw new over constrained version exception unable to get a selected version for artifact get artifact id artifact ids add artifact node node parent trail ids CONDITION trail null EXPR trail null NAME trail THEN list artifact ids new linked list resolution node node this while node null artifact artifact node get artifact if artifact get version null set the recommended version artifact version selected artifact get selected version mng null is a valid response to get selected version don t assume it won t ever be if selected null artifact select version selected to string else throw new over constrained version exception unable to get a selected version for artifact get artifact id artifact ids add artifact node node parent trail ids BLOCK DECL STMT TYPE list artifact NAME list artifact NAME list ARGUMENT LIST ARGUMENT NAME artifact NAME ids INIT new linked list EXPR new linked list CALL linked list NAME linked list NAME linked list ARGUMENT LIST ARGUMENT LIST DECL STMT TYPE resolution node NAME resolution node NAME node INIT this EXPR this NAME this WHILE while node null artifact artifact node get artifact if artifact get version null set the recommended version artifact version selected artifact get selected version mng null is a valid response to get selected version don t assume it won t ever be if selected null artifact select version selected to string else throw new over constrained version exception unable to get a selected version for artifact get artifact id artifact ids add artifact node node parent CONDITION node null EXPR node null NAME node BLOCK DECL STMT TYPE artifact NAME artifact NAME artifact INIT node get artifact EXPR node get artifact CALL node get artifact NAME node get artifact NAME node NAME get artifact ARGUMENT LIST IF if artifact get version null set the recommended version artifact version selected artifact get selected version mng null is a valid response to get selected version don t assume it won t ever be if selected null artifact select version selected to string else throw new over constrained version exception unable to get a selected version for artifact get artifact id artifact CONDITION artifact get version null EXPR artifact get version null CALL artifact get version NAME artifact get version NAME artifact NAME get version ARGUMENT LIST THEN set the recommended version artifact version selected artifact get selected version mng null is a valid response to get selected version don t assume it won t ever be if selected null artifact select version selected to string else throw new over constrained version exception unable to get a selected version for artifact get artifact id artifact BLOCK COMMENT set the recommended version DECL STMT TYPE artifact version NAME artifact version NAME selected INIT artifact get selected version EXPR artifact get selected version CALL artifact get selected version NAME artifact get selected version NAME artifact NAME get selected version ARGUMENT LIST COMMENT mng null is a valid response to get selected version don t COMMENT assume it won t ever be IF if selected null artifact select version selected to string else throw new over constrained version exception unable to get a selected version for artifact get artifact id artifact CONDITION selected null EXPR selected null NAME selected THEN artifact select version selected to string BLOCK EXPR artifact select version selected to string CALL artifact select version selected to string NAME artifact select version NAME artifact NAME select version ARGUMENT LIST ARGUMENT EXPR selected to string CALL selected to string NAME selected to string NAME selected NAME to string ARGUMENT LIST ELSE else throw new over constrained version exception unable to get a selected version for artifact get artifact id artifact BLOCK THROW throw new over constrained version exception unable to get a selected version for artifact get artifact id artifact EXPR new over constrained version exception unable to get a selected version for artifact get artifact id artifact CALL over constrained version exception unable to get a selected version for artifact get artifact id artifact NAME over constrained version exception ARGUMENT LIST ARGUMENT EXPR unable to get a selected version for artifact get artifact id CALL artifact get artifact id NAME artifact get artifact id NAME artifact NAME get artifact id ARGUMENT LIST ARGUMENT EXPR artifact NAME artifact EXPR ids add artifact CALL ids add artifact NAME ids add NAME ids NAME add ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR artifact NAME artifact EXPR node node parent NAME node NAME node parent NAME node NAME parent EXPR trail ids NAME trail NAME ids RETURN return trail EXPR trail NAME trail private JJ list NN artifact NN get VB trail NN root ROOT get dobj get trail throws VBZ over IN constrained VBN version NN exception NN root ROOT exception case exception over amod exception constrained compound exception version if IN trail NN null JJ list NN artifact NN ids NNS new JJ linked VBN list NN root ROOT list amod list linked resolution NN node NN root ROOT node compound node resolution node NN this DT while IN node NN null JJ artifact NN artifact NN node NN get VB artifact NN root ROOT get nsubj get node dobj get artifact if IN artifact NN get VB version NN root ROOT get nsubj get artifact dobj get version null JJ set the recommended version root ROOT set det version the amod version recommended dobj set version artifact NN version NN root ROOT version compound version artifact selected VBN artifact NN get VB selected VBN version NN root ROOT artifact acl artifact get amod version selected dobj get version mng null is a valid response to get selected version don t root ROOT response compound null mng nsubj response null cop response is det response a amod response valid case version to auxpass selected get amod version selected nmod to response version acl response don dobj don t assume it won t ever be root ROOT assume nsubj won it ccomp assume won dobj won t advmod be ever advmod won be if IN selected VBN null JJ artifact NN select JJ version NN root ROOT version compound version artifact amod version select selected VBN to TO string VB root ROOT selected mark string to xcomp selected string else RB throw VB new JJ over IN constrained VBN version NN exception NN root ROOT exception case exception over amod exception constrained compound exception version unable JJ to TO get VB a DT selected VBN version NN for IN artifact NN get VB artifact NN id NN root ROOT get nsubj get artifact compound id artifact dobj get id artifact NN ids NNS add VBP root ROOT add nsubj add ids artifact NN node NN node NN parent NN root ROOT parent compound parent node trail NN ids NNS return NN trail NN,1,A1,maven/maven-core/src/main/java/org/apache/maven/artifact/resolver/ResolutionNode.java,129
FUNCTION SPECIFIER public TYPE maven execution result NAME maven execution result NAME set topologically sorted projects PARAMETER LIST list maven project topologically sorted projects PARAMETER list maven project topologically sorted projects TYPE list maven project NAME list maven project NAME list ARGUMENT LIST ARGUMENT NAME maven project NAME topologically sorted projects BLOCK EXPR this topologically sorted projects topologically sorted projects NAME this topologically sorted projects NAME this NAME topologically sorted projects NAME topologically sorted projects RETURN return this EXPR this NAME this public NN maven NN execution NN result VBP root ROOT result compound execution maven nsubj result execution set VBN topologically RB sorted VBN projects NNS root ROOT set advmod sorted topologically amod projects sorted dobj set projects list NN maven NN project NN root ROOT project compound project maven topologically RB sorted VBN projects NNS root ROOT projects advmod sorted topologically amod projects sorted this DT topologically RB sorted VBN projects NNS topologically RB sorted VBN projects NNS root ROOT projects advmod sorted topologically amod projects sorted return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionResult.java,58
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set offline PARAMETER LIST boolean offline PARAMETER boolean offline TYPE boolean NAME boolean NAME offline BLOCK EXPR this offline offline NAME this offline NAME this NAME offline NAME offline RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN offline JJ root ROOT set xcomp set offline boolean NN offline NN this DT offline NN offline NN return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,718
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set builder id PARAMETER LIST string builder id PARAMETER string builder id TYPE string NAME string NAME builder id BLOCK EXPR this builder id builder id NAME this builder id NAME this NAME builder id NAME builder id RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN builder NN id NN root ROOT set compound id builder dobj set id string NN builder NN id NN root ROOT id compound id builder this DT builder NN id NN builder NN id NN root ROOT id compound id builder return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,1234
FUNCTION SPECIFIER private TYPE void NAME void NAME validate raw profile activation PARAMETER LIST model problem collector problems string source hint string prefix model building request request PARAMETER model problem collector problems string source hint TYPE model problem collector problems string NAME model problem collector NAME problems NAME string NAME source hint PARAMETER string prefix TYPE string NAME string NAME prefix PARAMETER model building request request TYPE model building request NAME model building request NAME request BLOCK IF if activation null return CONDITION activation null EXPR activation null NAME activation THEN return BLOCK RETURN return DECL STMT TYPE activation file NAME activation file NAME file INIT activation get file EXPR activation get file CALL activation get file NAME activation get file NAME activation NAME get file ARGUMENT LIST IF if file null string path boolean missing if string utils is not empty file get exists path file get exists missing false else if string utils is not empty file get missing path file get missing missing true else return if path contains project basedir add violation problems severity warning version v prefix missing file missing file exists null failed to interpolate file location path for profile source hint project basedir expression not supported during profile activation use basedir instead file get location missing missing exists else if has project expression path add violation problems severity warning version v prefix missing file missing file exists null failed to interpolate file location path for profile source hint project expressions are not supported during profile activation file get location missing missing exists CONDITION file null EXPR file null NAME file THEN string path boolean missing if string utils is not empty file get exists path file get exists missing false else if string utils is not empty file get missing path file get missing missing true else return if path contains project basedir add violation problems severity warning version v prefix missing file missing file exists null failed to interpolate file location path for profile source hint project basedir expression not supported during profile activation use basedir instead file get location missing missing exists else if has project expression path add violation problems severity warning version v prefix missing file missing file exists null failed to interpolate file location path for profile source hint project expressions are not supported during profile activation file get location missing missing exists BLOCK DECL STMT TYPE string NAME string NAME path DECL STMT TYPE boolean NAME boolean NAME missing IF if string utils is not empty file get exists path file get exists missing false else if string utils is not empty file get missing path file get missing missing true else return CONDITION string utils is not empty file get exists EXPR string utils is not empty file get exists CALL string utils is not empty file get exists NAME string utils is not empty NAME string utils NAME is not empty ARGUMENT LIST ARGUMENT EXPR file get exists CALL file get exists NAME file get exists NAME file NAME get exists ARGUMENT LIST THEN path file get exists missing false BLOCK EXPR path file get exists NAME path CALL file get exists NAME file get exists NAME file NAME get exists ARGUMENT LIST EXPR missing false NAME missing ELSEIF else if string utils is not empty file get missing path file get missing missing true IF if string utils is not empty file get missing path file get missing missing true CONDITION string utils is not empty file get missing EXPR string utils is not empty file get missing CALL string utils is not empty file get missing NAME string utils is not empty NAME string utils NAME is not empty ARGUMENT LIST ARGUMENT EXPR file get missing CALL file get missing NAME file get missing NAME file NAME get missing ARGUMENT LIST THEN path file get missing missing true BLOCK EXPR path file get missing NAME path CALL file get missing NAME file get missing NAME file NAME get missing ARGUMENT LIST EXPR missing true NAME missing ELSE else return BLOCK RETURN return IF if path contains project basedir add violation problems severity warning version v prefix missing file missing file exists null failed to interpolate file location path for profile source hint project basedir expression not supported during profile activation use basedir instead file get location missing missing exists else if has project expression path add violation problems severity warning version v prefix missing file missing file exists null failed to interpolate file location path for profile source hint project expressions are not supported during profile activation file get location missing missing exists CONDITION path contains project basedir EXPR path contains project basedir CALL path contains project basedir NAME path contains NAME path NAME contains ARGUMENT LIST ARGUMENT EXPR project basedir THEN add violation problems severity warning version v prefix missing file missing file exists null failed to interpolate file location path for profile source hint project basedir expression not supported during profile activation use basedir instead file get location missing missing exists BLOCK EXPR add violation problems severity warning version v prefix missing file missing file exists null failed to interpolate file location path for profile source hint project basedir expression not supported during profile activation use basedir instead file get location missing missing exists CALL add violation problems severity warning version v prefix missing file missing file exists null failed to interpolate file location path for profile source hint project basedir expression not supported during profile activation use basedir instead file get location missing missing exists NAME add violation ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity warning NAME severity warning NAME severity NAME warning ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR prefix missing file missing file exists NAME prefix TERNARY missing file missing file exists CONDITION missing EXPR missing NAME missing THEN file missing EXPR file missing ELSE file exists EXPR file exists ARGUMENT EXPR null ARGUMENT EXPR failed to interpolate file location path for profile source hint project basedir expression not supported during profile activation use basedir instead NAME path NAME source hint ARGUMENT EXPR file get location missing missing exists CALL file get location missing missing exists NAME file get location NAME file NAME get location ARGUMENT LIST ARGUMENT EXPR missing missing exists TERNARY missing missing exists CONDITION missing EXPR missing NAME missing THEN missing EXPR missing ELSE exists EXPR exists ELSEIF else if has project expression path add violation problems severity warning version v prefix missing file missing file exists null failed to interpolate file location path for profile source hint project expressions are not supported during profile activation file get location missing missing exists IF if has project expression path add violation problems severity warning version v prefix missing file missing file exists null failed to interpolate file location path for profile source hint project expressions are not supported during profile activation file get location missing missing exists CONDITION has project expression path EXPR has project expression path CALL has project expression path NAME has project expression ARGUMENT LIST ARGUMENT EXPR path NAME path THEN add violation problems severity warning version v prefix missing file missing file exists null failed to interpolate file location path for profile source hint project expressions are not supported during profile activation file get location missing missing exists BLOCK EXPR add violation problems severity warning version v prefix missing file missing file exists null failed to interpolate file location path for profile source hint project expressions are not supported during profile activation file get location missing missing exists CALL add violation problems severity warning version v prefix missing file missing file exists null failed to interpolate file location path for profile source hint project expressions are not supported during profile activation file get location missing missing exists NAME add violation ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity warning NAME severity warning NAME severity NAME warning ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR prefix missing file missing file exists NAME prefix TERNARY missing file missing file exists CONDITION missing EXPR missing NAME missing THEN file missing EXPR file missing ELSE file exists EXPR file exists ARGUMENT EXPR null ARGUMENT EXPR failed to interpolate file location path for profile source hint project expressions are not supported during profile activation NAME path NAME source hint ARGUMENT EXPR file get location missing missing exists CALL file get location missing missing exists NAME file get location NAME file NAME get location ARGUMENT LIST ARGUMENT EXPR missing missing exists TERNARY missing missing exists CONDITION missing EXPR missing NAME missing THEN missing EXPR missing ELSE exists EXPR exists private JJ void NN validate VB raw JJ profile NN activation NN root ROOT validate amod activation raw compound activation profile dobj validate activation model NN problem NN collector NN root ROOT collector compound collector model compound collector problem problems NNS string NN source NN hint NN root ROOT hint compound hint source string NN prefix NN model NN building NN request NN root ROOT request compound request model compound request building request NN if IN activation NN null JJ return NN activation NN file NN root ROOT file compound file activation file NN activation NN get VB file NN root ROOT get nsubj get activation dobj get file if IN file NN null JJ string NN path NN boolean NN missing VBG if IN string NN utils NNS is VBZ not RB empty JJ root ROOT empty compound utils string nsubj empty utils cop empty is neg empty not file NN get VB exists VBZ root ROOT get nsubj get file dobj get exists path NN file NN get VB exists VBZ root ROOT get nsubj get file dobj get exists missing VBG false JJ else RB if IN string NN utils NNS is VBZ not RB empty JJ root ROOT empty compound utils string nsubj empty utils cop empty is neg empty not file NN get VB missing VBG root ROOT get nsubj get file xcomp get missing path NN file NN get VB missing VBG root ROOT get nsubj get file xcomp get missing missing VBG true JJ else RB return NN if IN path NN contains VBZ root ROOT contains nsubj contains path project NN basedir NN root ROOT basedir compound basedir project add VB violation NN root ROOT add dobj add violation problems NNS severity NN warning NN root ROOT warning compound warning severity version NN v LS root ROOT v nsubj v version prefix NN missing VBG file NN missing VBG root ROOT file acl file missing file NN exists VBZ root ROOT exists nsubj exists file null JJ failed VBD to TO interpolate VB file NN location NN path NN for IN profile NN source NN hint NN root ROOT hint compound hint source project NN basedir NN root ROOT basedir compound basedir project expression NN not RB supported VBN during IN profile NN activation NN use NN basedir NN instead RB file NN get VB location NN root ROOT get nsubj get file dobj get location missing VBG missing VBG exists VBZ else RB if IN has VBZ project NN expression NN root ROOT has compound expression project dobj has expression path NN add VB violation NN root ROOT add dobj add violation problems NNS severity NN warning NN root ROOT warning compound warning severity version NN v LS root ROOT v nsubj v version prefix NN missing VBG file NN missing VBG root ROOT file acl file missing file NN exists VBZ root ROOT exists nsubj exists file null JJ failed VBD to TO interpolate VB file NN location NN path NN for IN profile NN source NN hint NN root ROOT hint compound hint source project NN expressions NNS are VBP not RB supported VBN during IN profile NN activation NN file NN get VB location NN root ROOT get nsubj get file dobj get location missing VBG missing VBG exists VBZ void validate ANTONYM ANTONYM,1,B2,maven/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java,194
DECL STMT SPECIFIER public SPECIFIER static TYPE final char SPECIFIER final NAME char NAME activate profiles INIT p EXPR p public NN static JJ final JJ char NN activate VB profiles NNS root ROOT activate dobj activate profiles p NN,1,E1,maven/maven-embedder/src/main/java/org/apache/maven/cli/CLIManager.java,64
FUNCTION SPECIFIER public TYPE project building request NAME project building request NAME set process plugins PARAMETER LIST boolean process plugins PARAMETER boolean process plugins TYPE boolean NAME boolean NAME process plugins BLOCK EXPR this process plugins process plugins NAME this process plugins NAME this NAME process plugins NAME process plugins RETURN return this EXPR this NAME this public NN project NN building NN request NN root ROOT request compound request project compound request building set VBN process NN plugins NNS root ROOT set compound plugins process dobj set plugins boolean NN process NN plugins NNS root ROOT plugins compound plugins process this DT process NN plugins NNS process NN plugins NNS root ROOT plugins compound plugins process return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuildingRequest.java,206
DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME process plugins private JJ boolean NN process NN plugins NNS root ROOT plugins compound plugins process,1,E1,maven/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuildingRequest.java,50
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set event spy dispatcher PARAMETER LIST event spy dispatcher event spy dispatcher PARAMETER event spy dispatcher event spy dispatcher TYPE event spy dispatcher NAME event spy dispatcher NAME event spy dispatcher BLOCK EXPR this event spy dispatcher event spy dispatcher NAME this event spy dispatcher NAME this NAME event spy dispatcher NAME event spy dispatcher RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN event NN spy NN dispatcher NN root ROOT set compound dispatcher event compound dispatcher spy dobj set dispatcher event NN spy NN dispatcher NN root ROOT dispatcher compound dispatcher event compound dispatcher spy event NN spy NN dispatcher NN root ROOT dispatcher compound dispatcher event compound dispatcher spy this DT event NN spy NN dispatcher NN event NN spy NN dispatcher NN root ROOT dispatcher compound dispatcher event compound dispatcher spy return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,1276
COMMENT gets the effective version of the model return the effective version of the model or an empty string if unknown never code null FUNCTION SPECIFIER public TYPE string NAME string NAME get version PARAMETER LIST BLOCK RETURN return version null version EXPR version null version TERNARY version null version CONDITION version null EXPR version null NAME version THEN version EXPR version NAME version ELSE EXPR gets the effective version of the model root ROOT gets det version the amod version effective dobj gets version case model of det model the nmod of version model return the effective version of the model or an empty string if unknown never code null root ROOT return det version the amod version effective dobj return version case model of det model the nmod of version model cc model or det string an amod string empty nmod of version string conj or model string mark code if nsubj code unknown neg code never advcl if return code dobj code null public NN string NN get VB version NN root ROOT get dobj get version return NN version NN null JJ version NN gets model ANTONYM ANTONYM gets return ANTONYM ANTONYM gets string ANTONYM ANTONYM,0,N/A,maven/maven-model-builder/src/main/java/org/apache/maven/model/building/ModelData.java,187
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set inactive profiles PARAMETER LIST list string inactive profiles PARAMETER list string inactive profiles TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME inactive profiles BLOCK IF if inactive profiles null this inactive profiles new array list inactive profiles else this inactive profiles null CONDITION inactive profiles null EXPR inactive profiles null NAME inactive profiles THEN this inactive profiles new array list inactive profiles BLOCK EXPR this inactive profiles new array list inactive profiles NAME this inactive profiles NAME this NAME inactive profiles CALL array list inactive profiles NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR inactive profiles NAME inactive profiles ELSE else this inactive profiles null BLOCK EXPR this inactive profiles null NAME this inactive profiles NAME this NAME inactive profiles RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN inactive JJ profiles NNS root ROOT set amod profiles inactive dobj set profiles list NN string NN inactive JJ profiles NNS root ROOT profiles amod profiles inactive if IN inactive JJ profiles NNS root ROOT profiles amod profiles inactive null JJ this DT inactive JJ profiles NNS new JJ array NN list NN root ROOT list compound list array inactive JJ profiles NNS root ROOT profiles amod profiles inactive else RB this DT inactive JJ profiles NNS null JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,348
FUNCTION SPECIFIER private TYPE void NAME void NAME get upstream projects PARAMETER LIST string project id PARAMETER string project id TYPE string NAME string NAME project id BLOCK FOR for string id sorter get dependencies project id if project ids add id transitive get upstream projects id project ids transitive CONTROL string id sorter get dependencies project id INIT string id sorter get dependencies project id TYPE string NAME string NAME id RANGE sorter get dependencies project id EXPR sorter get dependencies project id CALL sorter get dependencies project id NAME sorter get dependencies NAME sorter NAME get dependencies ARGUMENT LIST ARGUMENT EXPR project id NAME project id BLOCK IF if project ids add id transitive get upstream projects id project ids transitive CONDITION project ids add id transitive EXPR project ids add id transitive CALL project ids add id NAME project ids add NAME project ids NAME add ARGUMENT LIST ARGUMENT EXPR id NAME id NAME transitive THEN get upstream projects id project ids transitive BLOCK EXPR get upstream projects id project ids transitive CALL get upstream projects id project ids transitive NAME get upstream projects ARGUMENT LIST ARGUMENT EXPR id NAME id ARGUMENT EXPR project ids NAME project ids ARGUMENT EXPR transitive NAME transitive private JJ void NN get VB upstream JJ projects NNS root ROOT get amod projects upstream dobj get projects string NN project NN id SYM root ROOT id compound id project for IN string NN id NN sorter NN get VB dependencies NNS root ROOT get nsubj get sorter dobj get dependencies project NN id SYM root ROOT id compound id project if IN project NN ids NNS add VBP root ROOT add compound ids project nsubj add ids id NN transitive JJ get VB upstream JJ projects NNS root ROOT get amod projects upstream dobj get projects id NN project NN ids NNS root ROOT ids compound ids project transitive JJ,1,B3,maven/maven-core/src/main/java/org/apache/maven/graph/DefaultProjectDependencyGraph.java,102
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME threads INIT t EXPR t public NN static JJ final JJ string NN threads NNS t NN,1,E1,maven/maven-embedder/src/main/java/org/apache/maven/cli/CLIManager.java,100
DECL STMT SPECIFIER private TYPE t list string ARGUMENT LIST ARGUMENT NAME t NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME get reactor order ARGUMENT LIST ARGUMENT EXPR string test project throws exception plexus container container get container NAME string NAME test project THROWS throws exception plexus container container get container ARGUMENT EXPR exception plexus container container get container NAME exception BLOCK EXPR plexus container container get container NAME plexus container NAME container CALL get container NAME get container ARGUMENT LIST ARGUMENT EXPR component descriptor t cd new component descriptor participant container get container realm NAME component descriptor t NAME component descriptor ARGUMENT LIST ARGUMENT NAME t NAME cd CALL component descriptor participant container get container realm NAME component descriptor NAME component descriptor ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR participant NAME participant ARGUMENT EXPR container get container realm CALL container get container realm NAME container get container realm NAME container NAME get container realm ARGUMENT LIST ARGUMENT EXPR cd set role class abstract maven lifecycle participant class CALL cd set role class abstract maven lifecycle participant class NAME cd set role class NAME cd NAME set role class ARGUMENT LIST ARGUMENT EXPR abstract maven lifecycle participant class NAME abstract maven lifecycle participant class NAME abstract maven lifecycle participant NAME class ARGUMENT EXPR container add component descriptor cd CALL container add component descriptor cd NAME container add component descriptor NAME container NAME add component descriptor ARGUMENT LIST ARGUMENT EXPR cd NAME cd ARGUMENT EXPR maven maven container lookup maven class NAME maven NAME maven CALL container lookup maven class NAME container lookup NAME container NAME lookup ARGUMENT LIST ARGUMENT EXPR maven class NAME maven class NAME maven NAME class ARGUMENT EXPR file pom get project test project NAME file NAME pom CALL get project test project NAME get project ARGUMENT LIST ARGUMENT EXPR test project NAME test project ARGUMENT EXPR maven execution request request create maven execution request pom NAME maven execution request NAME request CALL create maven execution request pom NAME create maven execution request ARGUMENT LIST ARGUMENT EXPR pom NAME pom ARGUMENT EXPR request set goals arrays as list validate CALL request set goals arrays as list validate NAME request set goals NAME request NAME set goals ARGUMENT LIST ARGUMENT EXPR arrays as list validate CALL arrays as list validate NAME arrays as list NAME arrays NAME as list ARGUMENT LIST ARGUMENT EXPR validate ARGUMENT EXPR maven execution result result maven execute request NAME maven execution result NAME result CALL maven execute request NAME maven execute NAME maven NAME execute ARGUMENT LIST ARGUMENT EXPR request NAME request ARGUMENT EXPR assert false result get exceptions to string result has exceptions CALL assert false result get exceptions to string result has exceptions NAME assert false ARGUMENT LIST ARGUMENT EXPR result get exceptions to string CALL result get exceptions NAME result get exceptions NAME result NAME get exceptions ARGUMENT LIST CALL to string NAME to string ARGUMENT LIST ARGUMENT EXPR result has exceptions CALL result has exceptions NAME result has exceptions NAME result NAME has exceptions ARGUMENT LIST ARGUMENT EXPR list string order new array list NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME order CALL array list NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR maven project project result get topologically sorted projects order add project get artifact id NAME maven project NAME project CALL result get topologically sorted projects NAME result get topologically sorted projects NAME result NAME get topologically sorted projects ARGUMENT LIST BLOCK EXPR order add project get artifact id CALL order add project get artifact id NAME order add NAME order NAME add ARGUMENT LIST ARGUMENT EXPR project get artifact id CALL project get artifact id NAME project get artifact id NAME project NAME get artifact id ARGUMENT LIST RETURN return order EXPR order NAME order private JJ t NN list NN string NN get VB reactor NN order NN root ROOT get compound order reactor dobj get order string NN test NN project NN root ROOT project compound project test throws VBZ exception NN plexus NN container NN root ROOT container compound container plexus container NN get VB container NN root ROOT get dobj get container component NN descriptor NN root ROOT descriptor compound descriptor component t NN cd NN new JJ component NN descriptor NN root ROOT descriptor compound descriptor component participant NN container NN get VB container NN realm NN root ROOT get nsubj get container compound realm container dobj get realm cd NN set VBD role NN class NN root ROOT set nsubj set cd compound class role dobj set class abstract JJ maven NN lifecycle NN participant NN class NN container NN add VB component NN descriptor NN root ROOT add nsubj add container compound descriptor component dobj add descriptor cd NN maven NN maven NN container NN lookup NN root ROOT lookup compound lookup container maven NN class NN file NN pom NN get VB project NN root ROOT get dobj get project test NN project NN root ROOT project compound project test maven NN execution NN request NN root ROOT request compound request maven compound request execution request NN create VB maven NN execution NN request NN root ROOT create compound request maven compound request execution dobj create request pom NN request NN set VBD goals NNS root ROOT set nsubj set request dobj set goals arrays NNS as IN list NN root ROOT arrays case list as nmod as arrays list validate VB maven NN execution NN result VBP root ROOT result compound execution maven nsubj result execution result NN maven NN execute VB root ROOT execute nsubj execute maven request NN assert VB false JJ root ROOT assert xcomp assert false result NN get VB exceptions NNS root ROOT get nsubj get result dobj get exceptions to TO string VB root ROOT string mark string to result NN has VBZ exceptions NNS root ROOT has nsubj has result dobj has exceptions list NN string NN order NN new JJ array NN list NN root ROOT list compound list array for IN maven NN project NN root ROOT project compound project maven project NN result NN get VB topologically RB sorted VBN projects NNS root ROOT result dep result get advmod sorted topologically amod projects sorted dobj get projects order NN add VB root ROOT add nsubj add order project NN get VB artifact NN id NN root ROOT get nsubj get project compound id artifact dobj get id return NN order NN,1,A4,maven/maven-core/src/test/java/org/apache/maven/MavenLifecycleParticipantTest.java,149
DECL STMT SPECIFIER static TYPE final char SPECIFIER final NAME char NAME alternate user settings INIT s EXPR s public NN static JJ final JJ char NN alternate JJ user NN settings NNS root ROOT settings amod settings alternate compound settings user s NNS,1,E1,maven/maven-embedder/src/main/java/org/apache/maven/cli/CLIManager.java,72
FUNCTION SPECIFIER public TYPE maven execution result NAME maven execution result NAME set project PARAMETER LIST maven project project PARAMETER maven project project TYPE maven project NAME maven project NAME project BLOCK EXPR this project project NAME this project NAME this NAME project NAME project RETURN return this EXPR this NAME this public NN maven NN execution NN result VBP root ROOT result compound execution maven nsubj result execution set VBN project NN root ROOT set dobj set project maven NN project NN root ROOT project compound project maven project NN this DT project NN project NN return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionResult.java,46
DECL STMT SPECIFIER private TYPE list artifact metadata NAME list artifact metadata NAME list ARGUMENT LIST ARGUMENT NAME artifact metadata NAME classpath private JJ list NN artifact NN metadata NN root ROOT metadata compound metadata artifact classpath NN,1,D1,maven/maven-compat/src/main/java/org/apache/maven/repository/metadata/ClasspathContainer.java,37
COMMENT b warning b ignored COMMENT COMMENT notice to self what was this method supposed to do COMMENT trying to give loggers back is a bad idea ceki said so COMMENT FUNCTION SPECIFIER public TYPE void NAME void NAME return component logger PARAMETER LIST string role PARAMETER string role TYPE string NAME string NAME role BLOCK b warning b ignored root ROOT ignored compound b b compound b warning nsubj ignored b notice to self what was this method supposed to do root ROOT notice dobj supposed notice nsubj xsubj do notice case self to nmod to notice self ref notice what auxpass supposed was det method this nsubjpass supposed method acl relcl notice supposed mark do to xcomp supposed do trying to give loggers back is a bad idea ceki said so root ROOT ceki csubj ceki trying mark give to xcomp trying give dobj give loggers advmod give back cop ceki is det ceki a amod ceki bad compound ceki idea acl ceki said advmod said so trying to give loggers back is a bad idea ceki said so root ROOT ceki csubj ceki trying mark give to xcomp trying give dobj give loggers advmod give back cop ceki is det ceki a amod ceki bad compound ceki idea acl ceki said advmod said so public NN void NN return NN component NN logger NN root ROOT logger compound logger return compound logger component string NN role NN do give ANTONYM ANTONYM ignored notice ANTONYM ANTONYM trying give ANTONYM ANTONYM bad void SYNONYM SYNONYM,1,B3,maven/maven-embedder/src/main/java/org/apache/maven/cli/logging/Slf4jLoggerManager.java,70
FUNCTION SPECIFIER private TYPE void NAME void NAME get downstream projects PARAMETER LIST string project id PARAMETER string project id TYPE string NAME string NAME project id BLOCK FOR for string id sorter get dependents project id if project ids add id transitive get downstream projects id project ids transitive CONTROL string id sorter get dependents project id INIT string id sorter get dependents project id TYPE string NAME string NAME id RANGE sorter get dependents project id EXPR sorter get dependents project id CALL sorter get dependents project id NAME sorter get dependents NAME sorter NAME get dependents ARGUMENT LIST ARGUMENT EXPR project id NAME project id BLOCK IF if project ids add id transitive get downstream projects id project ids transitive CONDITION project ids add id transitive EXPR project ids add id transitive CALL project ids add id NAME project ids add NAME project ids NAME add ARGUMENT LIST ARGUMENT EXPR id NAME id NAME transitive THEN get downstream projects id project ids transitive BLOCK EXPR get downstream projects id project ids transitive CALL get downstream projects id project ids transitive NAME get downstream projects ARGUMENT LIST ARGUMENT EXPR id NAME id ARGUMENT EXPR project ids NAME project ids ARGUMENT EXPR transitive NAME transitive private JJ void NN get VB downstream JJ projects NNS root ROOT get amod projects downstream dobj get projects string NN project NN id SYM root ROOT id compound id project for IN string NN id NN sorter NN get VB dependents NNS root ROOT get nsubj get sorter dobj get dependents project NN id SYM root ROOT id compound id project if IN project NN ids NNS add VBP root ROOT add compound ids project nsubj add ids id NN transitive JJ get VB downstream JJ projects NNS root ROOT get amod projects downstream dobj get projects id NN project NN ids NNS root ROOT ids compound ids project transitive JJ,1,B3,maven/maven-core/src/main/java/org/apache/maven/graph/DefaultProjectDependencyGraph.java,77
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set user toolchains file PARAMETER LIST file user toolchains file PARAMETER file user toolchains file TYPE file NAME file NAME user toolchains file BLOCK EXPR this user toolchains file user toolchains file NAME this user toolchains file NAME this NAME user toolchains file NAME user toolchains file RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN user NN toolchains NNS file NN root ROOT set compound file user compound file toolchains dobj set file file NN user NN toolchains NNS file NN root ROOT file compound file user compound file toolchains this DT user NN toolchains NNS file NN user NN toolchains NNS file NN root ROOT file compound file user compound file toolchains return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,1026
COMMENT returns a project build list that contains only items for the specified task segment param task segment the requested tasksegment return a project build list for the supplied task segment FUNCTION SPECIFIER public TYPE project build list NAME project build list NAME get by task segment PARAMETER LIST task segment task segment PARAMETER task segment task segment TYPE task segment NAME task segment NAME task segment BLOCK DECL STMT TYPE list project segment NAME list project segment NAME list ARGUMENT LIST ARGUMENT NAME project segment NAME current segment INIT new array list EXPR new array list CALL array list NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST FOR for project segment project build items if task segment project build get task segment note there s no notion of task segment equality current segment add project build CONTROL project segment project build items INIT project segment project build items TYPE project segment NAME project segment NAME project build RANGE items EXPR items NAME items BLOCK IF if task segment project build get task segment note there s no notion of task segment equality current segment add project build CONDITION task segment project build get task segment EXPR task segment project build get task segment NAME task segment CALL project build get task segment NAME project build get task segment NAME project build NAME get task segment ARGUMENT LIST THEN note there s no notion of task segment equality current segment add project build BLOCK COMMENT note there s no notion of task segment equality EXPR current segment add project build CALL current segment add project build NAME current segment add NAME current segment NAME add ARGUMENT LIST ARGUMENT EXPR project build NAME project build RETURN return new project build list current segment EXPR new project build list current segment CALL project build list current segment NAME project build list ARGUMENT LIST ARGUMENT EXPR current segment NAME current segment returns a project build list that contains only items for the specified task segment root ROOT returns det project a dobj returns project nsubj contains project compound list build dep project list ref project that acl relcl project contains amod items only dobj contains items case segment for det segment the amod segment specified compound segment task nmod for items segment param task segment the requested tasksegment root ROOT segment compound segment param compound segment task det tasksegment the amod tasksegment requested dep segment tasksegment return a project build list for the supplied task segment root ROOT return det project a dobj return project acl project build dobj build list case segment for det segment the amod segment supplied compound segment task nmod for build segment public NN project NN build VB list NN root ROOT build nsubj build project dobj build list get VB by IN task NN segment NN root ROOT get case segment by compound segment task nmod by get segment task NN segment NN root ROOT segment compound segment task task NN segment NN root ROOT segment compound segment task list NN project NN segment NN root ROOT segment compound segment project current JJ segment NN root ROOT segment amod segment current new JJ array NN list NN root ROOT list compound list array for IN project NN segment NN root ROOT segment compound segment project project NN build VB root ROOT build nsubj build project items NNS if IN task NN segment NN root ROOT segment compound segment task project NN build VB get VB task NN segment NN root ROOT build nsubj build project ccomp build get compound segment task dobj get segment note NN there RB s NNS no DT notion NN of IN task NN segment NN root ROOT segment compound segment task equality NN current JJ segment NN add VB root ROOT add amod segment current nsubj add segment project NN build VB root ROOT build nsubj build project return NN new JJ project NN build VB list NN root ROOT build nsubj build project dobj build list current JJ segment NN root ROOT segment amod segment current contains return ANTONYM ANTONYM return supplied ANTONYM ANTONYM returns contains ANTONYM ANTONYM returns supplied ANTONYM ANTONYM,1,A4,maven/maven-core/src/main/java/org/apache/maven/lifecycle/internal/ProjectBuildList.java,60
FUNCTION SPECIFIER private TYPE void NAME void NAME validate raw repositories PARAMETER LIST model problem collector problems model building request request PARAMETER model problem collector problems model building request request TYPE model problem collector problems model building request NAME model problem collector NAME problems NAME model building request NAME request BLOCK DECL STMT TYPE map string repository NAME map string repository NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME repository NAME index INIT new hash map EXPR new hash map CALL hash map NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST FOR for repository repository repositories validate string not empty prefix id problems severity error version v repository get id repository validate string not empty prefix repository get id url problems severity error version v repository get url repository string key repository get id repository existing index get key if existing null severity err on get severity request model building request validation level maven add violation problems err on version v prefix id null must be unique repository get id existing get url vs repository get url repository else index put key repository CONTROL repository repository repositories INIT repository repository repositories TYPE repository NAME repository NAME repository RANGE repositories EXPR repositories NAME repositories BLOCK EXPR validate string not empty prefix id problems severity error version v repository get id repository CALL validate string not empty prefix id problems severity error version v repository get id repository NAME validate string not empty ARGUMENT LIST ARGUMENT EXPR prefix id NAME prefix ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity error NAME severity error NAME severity NAME error ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR repository get id CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST ARGUMENT EXPR repository NAME repository EXPR validate string not empty prefix repository get id url problems severity error version v repository get url repository CALL validate string not empty prefix repository get id url problems severity error version v repository get url repository NAME validate string not empty ARGUMENT LIST ARGUMENT EXPR prefix repository get id url NAME prefix CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity error NAME severity error NAME severity NAME error ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR repository get url CALL repository get url NAME repository get url NAME repository NAME get url ARGUMENT LIST ARGUMENT EXPR repository NAME repository DECL STMT TYPE string NAME string NAME key INIT repository get id EXPR repository get id CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST DECL STMT TYPE repository NAME repository NAME existing INIT index get key EXPR index get key CALL index get key NAME index get NAME index NAME get ARGUMENT LIST ARGUMENT EXPR key NAME key IF if existing null severity err on get severity request model building request validation level maven add violation problems err on version v prefix id null must be unique repository get id existing get url vs repository get url repository else index put key repository CONDITION existing null EXPR existing null NAME existing THEN severity err on get severity request model building request validation level maven add violation problems err on version v prefix id null must be unique repository get id existing get url vs repository get url repository BLOCK DECL STMT TYPE severity NAME severity NAME err on INIT get severity request model building request validation level maven EXPR get severity request model building request validation level maven CALL get severity request model building request validation level maven NAME get severity ARGUMENT LIST ARGUMENT EXPR request NAME request ARGUMENT EXPR model building request validation level maven NAME model building request validation level maven NAME model building request NAME validation level maven EXPR add violation problems err on version v prefix id null must be unique repository get id existing get url vs repository get url repository CALL add violation problems err on version v prefix id null must be unique repository get id existing get url vs repository get url repository NAME add violation ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR err on NAME err on ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR prefix id NAME prefix ARGUMENT EXPR null ARGUMENT EXPR must be unique repository get id existing get url vs repository get url CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST CALL existing get url NAME existing get url NAME existing NAME get url ARGUMENT LIST CALL repository get url NAME repository get url NAME repository NAME get url ARGUMENT LIST ARGUMENT EXPR repository NAME repository ELSE else index put key repository BLOCK EXPR index put key repository CALL index put key repository NAME index put NAME index NAME put ARGUMENT LIST ARGUMENT EXPR key NAME key ARGUMENT EXPR repository NAME repository private JJ void NN validate VB raw JJ repositories NNS root ROOT validate amod repositories raw dobj validate repositories model NN problem NN collector NN root ROOT collector compound collector model compound collector problem problems NNS model NN building NN request NN root ROOT request compound request model compound request building request NN map NN string NN repository NN index NN new JJ hash VB map NN root ROOT hash dobj hash map for IN repository NN repository NN repositories NNS validate VB string NN not RB empty JJ root ROOT validate dobj validate string neg empty not dep string empty prefix NN id NN problems NNS severity NN error NN root ROOT error compound error severity version NN v LS root ROOT v nsubj v version repository JJ get VB id NN root ROOT repository dep repository get dobj get id repository NN validate VB string NN not RB empty JJ root ROOT validate dobj validate string neg empty not dep string empty prefix NN repository JJ get VB id NN root ROOT repository dep repository get dobj get id url NN problems NNS severity NN error NN root ROOT error compound error severity version NN v LS root ROOT v nsubj v version repository NN get VB url NN root ROOT get nsubj get repository dobj get url repository NN string NN key NN repository JJ get VB id NN root ROOT repository dep repository get dobj get id repository NN existing VBG index NN get VB root ROOT get nsubj get index key NN if IN existing VBG null JJ severity NN err VB on IN root ROOT err compound prt err on get VB severity NN root ROOT get dobj get severity request NN model NN building NN request NN validation NN root ROOT validation compound validation model compound validation building compound validation request level NN maven NN root ROOT maven compound maven level add VB violation NN root ROOT add dobj add violation problems NNS err VB on IN root ROOT err compound prt err on version NN v LS root ROOT v nsubj v version prefix NN id NN null JJ must MD be VB unique JJ repository JJ get VB id NN root ROOT repository dep repository get dobj get id existing VBG get VB url NN root ROOT existing ccomp existing get dobj get url vs CC repository NN get VB url NN root ROOT get nsubj get repository dobj get url repository NN else RB index NN put VBD root ROOT put nsubj put index key NN repository NN,1,B2,maven/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java,639
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set workspace reader PARAMETER LIST workspace reader workspace reader PARAMETER workspace reader workspace reader TYPE workspace reader NAME workspace reader NAME workspace reader BLOCK EXPR this workspace reader workspace reader NAME this workspace reader NAME this NAME workspace reader NAME workspace reader RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN workspace NN reader NN root ROOT set compound reader workspace dobj set reader workspace NN reader NN root ROOT reader compound reader workspace workspace NN reader NN root ROOT reader compound reader workspace this DT workspace NN reader NN workspace NN reader NN root ROOT reader compound reader workspace return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,1188
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE string NAME string NAME get message PARAMETER LIST BLOCK DECL STMT TYPE string NAME string NAME msg IF if message null message length msg message else msg exception get message if msg null msg CONDITION message null message length EXPR message null message length NAME message CALL message length NAME message length NAME message NAME length ARGUMENT LIST THEN msg message BLOCK EXPR msg message NAME msg NAME message ELSE else msg exception get message if msg null msg BLOCK EXPR msg exception get message NAME msg CALL exception get message NAME exception get message NAME exception NAME get message ARGUMENT LIST IF if msg null msg CONDITION msg null EXPR msg null NAME msg THEN msg BLOCK EXPR msg NAME msg RETURN return msg EXPR msg NAME msg override NN public NN string NN get VB message NN root ROOT get dobj get message string NN msg NN if IN message NN null JJ message NN length NN root ROOT length compound length message msg NN message NN else RB msg NN exception NN get VB message NN root ROOT get nsubj get exception dobj get message if IN msg NN null JJ msg NN return NN msg NN,1,A1,maven/maven-settings-builder/src/main/java/org/apache/maven/settings/building/DefaultSettingsProblem.java,126
DECL STMT SPECIFIER public SPECIFIER static TYPE final char SPECIFIER final NAME char NAME alternate user toolchains INIT t EXPR t public NN static JJ final JJ char NN alternate JJ user NN toolchains NNS root ROOT toolchains amod toolchains alternate compound toolchains user t NN,1,E1,maven/maven-embedder/src/main/java/org/apache/maven/cli/CLIManager.java,76
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set local repository path PARAMETER LIST string local repository PARAMETER string local repository TYPE string NAME string NAME local repository BLOCK EXPR local repository path local repository null new file local repository null NAME local repository path TERNARY local repository null new file local repository null CONDITION local repository null EXPR local repository null NAME local repository THEN new file local repository EXPR new file local repository CALL file local repository NAME file ARGUMENT LIST ARGUMENT EXPR local repository NAME local repository ELSE null EXPR null RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN local JJ repository JJ path NN root ROOT set amod path local amod path repository dobj set path string NN local JJ repository NN root ROOT repository amod repository local local JJ repository JJ path NN root ROOT path amod path local amod path repository local JJ repository NN root ROOT repository amod repository local null JJ new JJ file NN local JJ repository NN root ROOT repository amod repository local null JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,524
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set local repository path PARAMETER LIST file local repository PARAMETER file local repository TYPE file NAME file NAME local repository BLOCK EXPR local repository path local repository NAME local repository path NAME local repository RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN local JJ repository JJ path NN root ROOT set amod path local amod path repository dobj set path file NN local JJ repository NN root ROOT repository amod repository local local JJ repository JJ path NN root ROOT path amod path local amod path repository local JJ repository NN root ROOT repository amod repository local return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,516
FUNCTION SPECIFIER public TYPE project building request NAME project building request NAME set validation level PARAMETER LIST int validation level PARAMETER int validation level TYPE int NAME int NAME validation level BLOCK EXPR this validation level validation level NAME this validation level NAME this NAME validation level NAME validation level RETURN return this EXPR this NAME this public NN project NN building NN request NN root ROOT request compound request project compound request building set VBN validation NN level NN root ROOT set compound level validation dobj set level int NN validation NN level NN root ROOT level compound level validation this DT validation NN level NN validation NN level NN root ROOT level compound level validation return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuildingRequest.java,236
COMMENT flags to indicate the granularity of vertices DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME versioned vertices INIT false EXPR false flags to indicate the granularity of vertices root ROOT flags mark indicate to acl to flags indicate det granularity the dobj indicate granularity case vertices of nmod of granularity vertices private JJ boolean NN versioned JJ vertices NNS root ROOT vertices amod vertices versioned false JJ,1,E1,maven/maven-compat/src/main/java/org/apache/maven/repository/metadata/MetadataGraph.java,42
FUNCTION SPECIFIER public TYPE project building request NAME project building request NAME set resolve dependencies PARAMETER LIST boolean resolve dependencies PARAMETER boolean resolve dependencies TYPE boolean NAME boolean NAME resolve dependencies BLOCK EXPR this resolve dependencies resolve dependencies NAME this resolve dependencies NAME this NAME resolve dependencies NAME resolve dependencies RETURN return this EXPR this NAME this public NN project NN building NN request NN root ROOT request compound request project compound request building set VBN resolve NN dependencies NNS root ROOT set compound dependencies resolve dobj set dependencies boolean NN resolve VB dependencies NNS root ROOT resolve dobj resolve dependencies this DT resolve NN dependencies NNS resolve VB dependencies NNS root ROOT resolve dobj resolve dependencies return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuildingRequest.java,212
FUNCTION SPECIFIER public TYPE maven execution request NAME maven execution request NAME set use reactor PARAMETER LIST boolean reactor active PARAMETER boolean reactor active TYPE boolean NAME boolean NAME reactor active BLOCK EXPR use reactor reactor active NAME use reactor NAME reactor active RETURN return this EXPR this NAME this public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN use NN reactor NN root ROOT set compound reactor use dobj set reactor boolean NN reactor NN active JJ root ROOT active nmod npmod active reactor use NN reactor NN root ROOT reactor compound reactor use reactor NN active JJ root ROOT active nmod npmod active reactor return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,662
FUNCTION SPECIFIER private TYPE void NAME void NAME validate raw resources PARAMETER LIST model problem collector problems model building request request PARAMETER model problem collector problems model building request request TYPE model problem collector problems model building request NAME model problem collector NAME problems NAME model building request NAME request BLOCK DECL STMT TYPE severity NAME severity NAME err on INIT get severity request model building request validation level maven EXPR get severity request model building request validation level maven CALL get severity request model building request validation level maven NAME get severity ARGUMENT LIST ARGUMENT EXPR request NAME request ARGUMENT EXPR model building request validation level maven NAME model building request validation level maven NAME model building request NAME validation level maven FOR for resource resource resources validate string not empty prefix directory problems severity error version v resource get directory resource validate boolean prefix filtering problems err on version v resource get filtering resource get directory resource CONTROL resource resource resources INIT resource resource resources TYPE resource NAME resource NAME resource RANGE resources EXPR resources NAME resources BLOCK EXPR validate string not empty prefix directory problems severity error version v resource get directory resource CALL validate string not empty prefix directory problems severity error version v resource get directory resource NAME validate string not empty ARGUMENT LIST ARGUMENT EXPR prefix directory NAME prefix ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity error NAME severity error NAME severity NAME error ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR resource get directory CALL resource get directory NAME resource get directory NAME resource NAME get directory ARGUMENT LIST ARGUMENT EXPR resource NAME resource EXPR validate boolean prefix filtering problems err on version v resource get filtering resource get directory resource CALL validate boolean prefix filtering problems err on version v resource get filtering resource get directory resource NAME validate boolean ARGUMENT LIST ARGUMENT EXPR prefix filtering NAME prefix ARGUMENT EXPR problems NAME problems ARGUMENT EXPR err on NAME err on ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR resource get filtering CALL resource get filtering NAME resource get filtering NAME resource NAME get filtering ARGUMENT LIST ARGUMENT EXPR resource get directory CALL resource get directory NAME resource get directory NAME resource NAME get directory ARGUMENT LIST ARGUMENT EXPR resource NAME resource private JJ void NN validate VB raw JJ resources NNS root ROOT validate amod resources raw dobj validate resources model NN problem NN collector NN root ROOT collector compound collector model compound collector problem problems NNS model NN building NN request NN root ROOT request compound request model compound request building request NN severity NN err VB on IN root ROOT err compound prt err on get VB severity NN root ROOT get dobj get severity request NN model NN building NN request NN validation NN root ROOT validation compound validation model compound validation building compound validation request level NN maven NN root ROOT maven compound maven level for IN resource NN resource NN resources NNS validate VB string NN not RB empty JJ root ROOT validate dobj validate string neg empty not dep string empty prefix NN directory NN problems NNS severity NN error NN root ROOT error compound error severity version NN v LS root ROOT v nsubj v version resource NN get VB directory NN root ROOT get nsubj get resource dobj get directory resource NN validate VB boolean NN root ROOT validate dobj validate boolean prefix NN filtering VBG problems NNS err VB on IN root ROOT err compound prt err on version NN v LS root ROOT v nsubj v version resource NN get VB filtering VBG root ROOT get nsubj get resource xcomp get filtering resource NN get VB directory NN root ROOT get nsubj get resource dobj get directory resource NN void validate ANTONYM ANTONYM,1,B2,maven/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java,696
COMMENT gets the effective artifact identifier of the model return the effective artifact identifier of the model or an empty string if unknown never code null FUNCTION SPECIFIER public TYPE string NAME string NAME get artifact id PARAMETER LIST BLOCK RETURN return artifact id null artifact id EXPR artifact id null artifact id TERNARY artifact id null artifact id CONDITION artifact id null EXPR artifact id null NAME artifact id THEN artifact id EXPR artifact id NAME artifact id ELSE EXPR gets the effective artifact identifier of the model root ROOT gets det identifier the amod identifier effective compound identifier artifact dobj gets identifier case model of det model the nmod of identifier model return the effective artifact identifier of the model or an empty string if unknown never code null root ROOT return det identifier the amod identifier effective compound identifier artifact dobj return identifier case model of det model the nmod of identifier model cc model or det string an amod string empty nmod of identifier string conj or model string mark code if nsubj code unknown neg code never advcl if return code dobj code null public NN string NN get VB artifact NN id NN root ROOT get compound id artifact dobj get id return NN artifact NN id NN root ROOT id compound id artifact null JJ artifact NN id NN root ROOT id compound id artifact gets model ANTONYM ANTONYM gets return ANTONYM ANTONYM gets string ANTONYM ANTONYM,0,N/A,maven/maven-model-builder/src/main/java/org/apache/maven/model/building/ModelData.java,167
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set start time PARAMETER LIST date start time PARAMETER date start time TYPE date NAME date NAME start time BLOCK EXPR this start time start time NAME this start time NAME this NAME start time NAME start time RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN start NN time NN root ROOT set compound time start dobj set time date NN start VB time NN root ROOT start dobj start time this DT start NN time NN start VB time NN root ROOT start dobj start time return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,472
COMMENT flags to indicate the granularity of vertices DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME scoped vertices INIT false EXPR false flags to indicate the granularity of vertices root ROOT flags mark indicate to acl to flags indicate det granularity the dobj indicate granularity case vertices of nmod of granularity vertices private JJ boolean NN scoped VBD vertices NNS root ROOT scoped dobj scoped vertices false JJ,1,E1,maven/maven-compat/src/main/java/org/apache/maven/repository/metadata/MetadataGraph.java,43
FUNCTION SPECIFIER private TYPE void NAME void NAME check edges PARAMETER LIST int n edges PARAMETER int n edges TYPE int NAME int NAME n edges BLOCK IF if incident edges null incident edges new hash map n edges CONDITION incident edges null EXPR incident edges null NAME incident edges THEN incident edges new hash map n edges BLOCK EXPR incident edges new hash map n edges NAME incident edges CALL hash map n edges NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR n edges NAME n edges IF if excident edges null excident edges new hash map n edges CONDITION excident edges null EXPR excident edges null NAME excident edges THEN excident edges new hash map n edges BLOCK EXPR excident edges new hash map n edges NAME excident edges CALL hash map n edges NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR n edges NAME n edges private JJ void NN check NN edges NNS root ROOT edges compound edges check int NN n NN edges NNS root ROOT edges compound edges n if IN incident NN edges NNS root ROOT edges compound edges incident null JJ incident NN edges NNS root ROOT edges compound edges incident new JJ hash VB map NN root ROOT hash dobj hash map n NN edges NNS root ROOT edges compound edges n if IN excident JJ edges NNS root ROOT edges amod edges excident null JJ excident JJ edges NNS root ROOT edges amod edges excident new JJ hash VB map NN root ROOT hash dobj hash map n NN edges NNS root ROOT edges compound edges n,1,B2,maven/maven-compat/src/main/java/org/apache/maven/repository/metadata/MetadataGraph.java,261
FUNCTION SPECIFIER public TYPE dependency resolution request NAME dependency resolution request NAME set repository session PARAMETER LIST repository system session repository session PARAMETER repository system session repository session TYPE repository system session NAME repository system session NAME repository session BLOCK EXPR this session repository session NAME this session NAME this NAME session NAME repository session RETURN return this EXPR this NAME this public NN dependency NN resolution NN request NN root ROOT request compound request dependency compound request resolution set VBN repository JJ session NN root ROOT set amod session repository dobj set session repository JJ system NN session NN root ROOT session amod session repository compound session system repository JJ session NN root ROOT session amod session repository this DT session NN repository JJ session NN root ROOT session amod session repository return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/project/DefaultDependencyResolutionRequest.java,76
FUNCTION SPECIFIER public TYPE maven metadata NAME maven metadata NAME set file PARAMETER LIST file file PARAMETER file file TYPE file NAME file NAME file BLOCK RETURN return new local snapshot metadata metadata file legacy format EXPR new local snapshot metadata metadata file legacy format CALL local snapshot metadata metadata file legacy format NAME local snapshot metadata ARGUMENT LIST ARGUMENT EXPR metadata NAME metadata ARGUMENT EXPR file NAME file ARGUMENT EXPR legacy format NAME legacy format public NN maven NN metadata NN root ROOT metadata compound metadata maven set VBN file NN root ROOT set dobj set file file NN file NN return NN new JJ local JJ snapshot NN metadata NN root ROOT metadata amod metadata local compound metadata snapshot metadata NN file NN legacy NN format NN root ROOT format compound format legacy,1,A3,maven/maven-aether-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadata.java,83
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set interactive mode PARAMETER LIST boolean interactive PARAMETER boolean interactive TYPE boolean NAME boolean NAME interactive BLOCK EXPR interactive mode interactive NAME interactive mode NAME interactive RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN interactive JJ mode NN root ROOT set amod mode interactive dobj set mode boolean NN interactive JJ interactive JJ mode NN root ROOT mode amod mode interactive interactive JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,694
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set global toolchains file PARAMETER LIST file global toolchains file PARAMETER file global toolchains file TYPE file NAME file NAME global toolchains file BLOCK EXPR this global toolchains file global toolchains file NAME this global toolchains file NAME this NAME global toolchains file NAME global toolchains file RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN global JJ toolchains NNS file NN root ROOT set amod file global compound file toolchains dobj set file file NN global JJ toolchains NNS file NN root ROOT file amod toolchains global nsubj file toolchains this DT global JJ toolchains NNS file NN global JJ toolchains NNS file NN root ROOT file amod toolchains global nsubj file toolchains return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,1040
FUNCTION SPECIFIER private TYPE string NAME string NAME get source PARAMETER LIST BLOCK IF if source null source model null source model problem utils to path source model CONDITION source null source model null EXPR source null source model null NAME source NAME source model THEN source model problem utils to path source model BLOCK EXPR source model problem utils to path source model NAME source CALL model problem utils to path source model NAME model problem utils to path NAME model problem utils NAME to path ARGUMENT LIST ARGUMENT EXPR source model NAME source model RETURN return source EXPR source NAME source private JJ string NN get VB source NN root ROOT get dobj get source if IN source NN null JJ source NN model NN root ROOT model compound model source null JJ source NN model NN problem NN utils NNS to TO path NN root ROOT utils compound utils model compound utils problem case path to nmod to utils path source NN model NN root ROOT model compound model source return NN source NN,0,N/A,maven/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelProblemCollector.java,98
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE metadata NAME metadata NAME set properties PARAMETER LIST map string string properties PARAMETER map string string properties TYPE map string string NAME map string string NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME string NAME properties BLOCK RETURN return this EXPR this NAME this override NN public NN metadata NN set VBN properties NNS root ROOT set dobj set properties map NN string NN string NN properties NNS return NN this DT,1,A3,maven/maven-compat/src/main/java/org/apache/maven/artifact/repository/metadata/MetadataBridge.java,139
FUNCTION SPECIFIER public TYPE maven metadata NAME maven metadata NAME set file PARAMETER LIST file file PARAMETER file file TYPE file NAME file NAME file BLOCK RETURN return new versions metadata artifact file EXPR new versions metadata artifact file CALL versions metadata artifact file NAME versions metadata ARGUMENT LIST ARGUMENT EXPR artifact NAME artifact ARGUMENT EXPR file NAME file public NN maven NN metadata NN root ROOT metadata compound metadata maven set VBN file NN root ROOT set dobj set file file NN file NN return NN new JJ versions NNS metadata NNS root ROOT metadata compound metadata versions artifact NN file NN,1,A3,maven/maven-aether-provider/src/main/java/org/apache/maven/repository/internal/VersionsMetadata.java,108
DECL STMT SPECIFIER private TYPE final model problem collector SPECIFIER final NAME model problem collector NAME problems private JJ final JJ model NN problem NN collector NN root ROOT collector compound collector model compound collector problem problems NNS,0,N/A,maven/maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ProblemDetectingValueSource.java,45
FUNCTION SPECIFIER private TYPE void NAME void NAME check edges PARAMETER LIST BLOCK DECL STMT TYPE int NAME int NAME count INIT default edges EXPR default edges NAME default edges IF if vertices null count vertices size vertices size CONDITION vertices null EXPR vertices null NAME vertices THEN count vertices size vertices size BLOCK EXPR count vertices size vertices size NAME count CALL vertices size NAME vertices size NAME vertices NAME size ARGUMENT LIST CALL vertices size NAME vertices size NAME vertices NAME size ARGUMENT LIST EXPR check edges count CALL check edges count NAME check edges ARGUMENT LIST ARGUMENT EXPR count NAME count private JJ void NN check NN edges NNS root ROOT edges compound edges check int NN count NN default NN edges NNS root ROOT edges compound edges default if IN vertices NNS null JJ count NN vertices NNS size NN root ROOT size compound size vertices vertices NNS size NN root ROOT size compound size vertices check NN edges NNS root ROOT edges compound edges check count NN,1,B2,maven/maven-compat/src/main/java/org/apache/maven/repository/metadata/MetadataGraph.java,250
DECL STMT SPECIFIER private TYPE list artifact NAME list artifact NAME list ARGUMENT LIST ARGUMENT NAME artifact NAME trail private JJ list NN artifact NN trail NN,1,D1,maven/maven-core/src/main/java/org/apache/maven/artifact/resolver/ResolutionNode.java,51
COMMENT plugin id extension realm cache cache record map maven project context value key the map is used to ensure the same class realm is used to load build extensions and load mojos for extensions true plugins noreference this is part of internal implementation and may be changed or removed without notice since DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME key extensions realms INIT default maven plugin manager class get name extensions realms EXPR default maven plugin manager class get name extensions realms CALL default maven plugin manager class get name NAME default maven plugin manager class get name NAME default maven plugin manager NAME class get name NAME class NAME get name ARGUMENT LIST plugin id extension realm cache cache record map maven project context value key the map is used to ensure the same root ROOT key compound key plugin compound key id compound key extension compound key realm compound key cache compound key cache compound key record compound key map compound key maven compound key project compound key context compound key value det map the nsubjpass used map nsubj xsubj ensure map auxpass used is acl relcl key used mark ensure to xcomp used ensure det same the dobj ensure same plugin id extension realm cache cache record map maven project context value key the map is used to ensure the same root ROOT key compound key plugin compound key id compound key extension compound key realm compound key cache compound key cache compound key record compound key map compound key maven compound key project compound key context compound key value det map the nsubjpass used map nsubj xsubj ensure map auxpass used is acl relcl key used mark ensure to xcomp used ensure det same the dobj ensure same class realm is used to load build extensions and load mojos for extensions true plugins root ROOT used compound realm class nsubjpass used realm nsubj xsubj load realm auxpass used is mark load to xcomp used load xcomp load build dobj build extensions cc extensions and compound mojos load dobj build mojos conj and extensions mojos case extensions for nmod for build extensions amod plugins true dep extensions plugins noreference this is part of internal implementation and may be changed or removed without notice root ROOT noreference nsubj part this nsubjpass changed this cop part is acl relcl noreference part case implementation of amod implementation internal nmod of part implementation cc part and aux changed may auxpass changed be acl relcl noreference changed conj and part changed cc changed or conj and part removed conj or changed removed case notice without nmod without changed notice since public NN static JJ final JJ string NN key JJ extensions NNS realms NNS root ROOT realms amod realms key compound realms extensions default NN maven NN plugin NN manager NN class NN get VB name NN extensions NNS realms NNS root ROOT realms compound realms extensions changed removed ANTONYM ANTONYM class build ANTONYM ANTONYM class part ANTONYM ANTONYM class part ANTONYM ANTONYM key notice ANTONYM ANTONYM map be ANTONYM ANTONYM map is ANTONYM ANTONYM part realms ANTONYM ANTONYM public internal ANTONYM ANTONYM realm part ANTONYM ANTONYM same changed ANTONYM ANTONYM,0,N/A,maven/maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultMavenPluginManager.java,129
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE model building request NAME model building request NAME set build start time PARAMETER LIST date build start time PARAMETER date build start time TYPE date NAME date NAME build start time BLOCK EXPR request set build start time build start time CALL request set build start time build start time NAME request set build start time NAME request NAME set build start time ARGUMENT LIST ARGUMENT EXPR build start time NAME build start time RETURN return this EXPR this NAME this override NN public NN model NN building NN request NN root ROOT request compound request model compound request building set VBN build VB start VB time NN root ROOT set xcomp set build ccomp build start dobj start time date NN build VB start VB time NN root ROOT build ccomp build start dobj start time request NN set VBD build VB start NN time NN root ROOT set nsubj set request ccomp set build compound time start dobj build time build VB start VB time NN root ROOT build ccomp build start dobj start time return NN this DT,1,A3,maven/maven-model-builder/src/main/java/org/apache/maven/model/building/FilterModelBuildingRequest.java,209
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set proxies PARAMETER LIST list proxy proxies PARAMETER list proxy proxies TYPE list proxy NAME list proxy NAME list ARGUMENT LIST ARGUMENT NAME proxy NAME proxies BLOCK IF if proxies null this proxies new array list proxies else this proxies null CONDITION proxies null EXPR proxies null NAME proxies THEN this proxies new array list proxies BLOCK EXPR this proxies new array list proxies NAME this proxies NAME this NAME proxies CALL array list proxies NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR proxies NAME proxies ELSE else this proxies null BLOCK EXPR this proxies null NAME this proxies NAME this NAME proxies RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN proxies NNS root ROOT set dobj set proxies list NN proxy NN proxies NNS if IN proxies NNS null JJ this DT proxies NNS new JJ array NN list NN root ROOT list compound list array proxies NNS else RB this DT proxies NNS null JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,764
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set logging level PARAMETER LIST int logging level PARAMETER int logging level TYPE int NAME int NAME logging level BLOCK EXPR this logging level logging level NAME this logging level NAME this NAME logging level NAME logging level RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN logging VBG level NN root ROOT set xcomp set logging dobj logging level int NN logging VBG level NN root ROOT logging dobj logging level this DT logging VBG level NN logging VBG level NN root ROOT logging dobj logging level return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,710
FUNCTION SPECIFIER private TYPE void NAME void NAME check vertices PARAMETER LIST int n vertices PARAMETER int n vertices TYPE int NAME int NAME n vertices BLOCK IF if vertices null vertices new tree set CONDITION vertices null EXPR vertices null NAME vertices THEN vertices new tree set BLOCK EXPR vertices new tree set NAME vertices CALL tree set NAME tree set NAME tree set ARGUMENT LIST ARGUMENT LIST private JJ void NN check NN vertices NNS root ROOT vertices compound vertices check int NN n NN vertices NNS root ROOT vertices compound vertices n if IN vertices NNS null JJ vertices NNS new JJ tree NN set NN root ROOT set compound set tree,1,B2,maven/maven-compat/src/main/java/org/apache/maven/repository/metadata/MetadataGraph.java,243
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE model problem collector NAME model problem collector NAME get problems PARAMETER LIST BLOCK RETURN return problems EXPR problems NAME problems override NN public NN model NN problem NN collector NN root ROOT collector compound collector model compound collector problem get VB problems NNS root ROOT get dobj get problems return NN problems NNS,0,N/A,maven/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuildingEvent.java,58
DECL STMT SPECIFIER public TYPE void NAME void NAME get ARGUMENT LIST ARGUMENT EXPR string resource name throws transfer failed exception resource does not exist exception authorization exception add transfer get resource name NAME string NAME resource name THROWS throws transfer failed exception resource does not exist exception authorization exception add transfer get resource name ARGUMENT EXPR transfer failed exception NAME transfer failed exception ARGUMENT EXPR resource does not exist exception NAME resource does not exist exception ARGUMENT EXPR authorization exception add transfer get resource name NAME authorization exception BLOCK EXPR add transfer get resource name CALL add transfer get resource name NAME add transfer ARGUMENT LIST ARGUMENT EXPR get resource name NAME resource name ARGUMENT EXPR inside get true NAME inside get ARGUMENT EXPR super get resource name destination CALL super get resource name destination NAME super get NAME super NAME get ARGUMENT LIST ARGUMENT EXPR resource name NAME resource name ARGUMENT EXPR destination NAME destination ARGUMENT EXPR inside get false NAME inside get public NN void NN get VB string NN resource NN name NN root ROOT name compound name resource throws VBZ transfer NN failed VBD exception NN root ROOT failed nsubj failed transfer dobj failed exception resource NN does VBZ not RB exist VB exception NN root ROOT exist nsubj exist resource aux exist does neg exist not dobj exist exception authorization NN exception NN root ROOT exception compound exception authorization add VB transfer NN root ROOT add dobj add transfer get VB resource NN name NN root ROOT name compound name resource inside IN get VB root ROOT get mark get inside true JJ super JJ get VB resource NN name NN root ROOT name compound name resource destination NN inside IN get VB root ROOT get mark get inside false JJ get string ANTONYM ANTONYM get throws ANTONYM ANTONYM,1,B3,maven/maven-compat/src/test/java/org/apache/maven/artifact/resolver/TestFileWagon.java,52
DECL STMT SPECIFIER static TYPE final char SPECIFIER final NAME char NAME errors INIT e EXPR e public NN static JJ final JJ char NN errors NNS e SYM,1,E1,maven/maven-embedder/src/main/java/org/apache/maven/cli/CLIManager.java,52
FUNCTION SPECIFIER public TYPE project builder configuration NAME project builder configuration NAME set user properties PARAMETER LIST properties user properties PARAMETER properties user properties TYPE properties NAME properties NAME user properties BLOCK EXPR this user properties user properties NAME this user properties NAME this NAME user properties NAME user properties RETURN return this EXPR this NAME this public NN project NN builder NN configuration NN root ROOT configuration compound configuration project compound configuration builder set VBN user NN properties NNS root ROOT set compound properties user dobj set properties properties NNS user NN properties NNS root ROOT properties compound properties user this DT user NN properties NNS user NN properties NNS root ROOT properties compound properties user return NN this DT,1,A3,maven/maven-compat/src/main/java/org/apache/maven/project/DefaultProjectBuilderConfiguration.java,69
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set recursive PARAMETER LIST boolean recursive PARAMETER boolean recursive TYPE boolean NAME boolean NAME recursive BLOCK EXPR this recursive recursive NAME this recursive NAME this NAME recursive NAME recursive RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN recursive JJ root ROOT set xcomp set recursive boolean NN recursive JJ this DT recursive JJ recursive JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,965
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set active profiles PARAMETER LIST list string active profiles PARAMETER list string active profiles TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME active profiles BLOCK IF if active profiles null this active profiles new array list active profiles else this active profiles null CONDITION active profiles null EXPR active profiles null NAME active profiles THEN this active profiles new array list active profiles BLOCK EXPR this active profiles new array list active profiles NAME this active profiles NAME this NAME active profiles CALL array list active profiles NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR active profiles NAME active profiles ELSE else this active profiles null BLOCK EXPR this active profiles null NAME this active profiles NAME this NAME active profiles RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN active JJ profiles NNS root ROOT set amod profiles active dobj set profiles list NN string NN active JJ profiles NNS root ROOT profiles amod profiles active if IN active JJ profiles NNS root ROOT profiles amod profiles active null JJ this DT active JJ profiles NNS new JJ array NN list NN root ROOT list compound list array active JJ profiles NNS root ROOT profiles amod profiles active else RB this DT active JJ profiles NNS null JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,333
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE model building request NAME model building request NAME set raw model PARAMETER LIST model raw model PARAMETER model raw model TYPE model NAME model NAME raw model BLOCK EXPR this raw model raw model NAME this raw model NAME this NAME raw model NAME raw model RETURN return this EXPR this NAME this override NN public NN model NN building NN request NN root ROOT request compound request model compound request building set VBN raw JJ model NN root ROOT set amod model raw dobj set model model NN raw JJ model NN root ROOT model amod model raw this DT raw JJ model NN raw JJ model NN root ROOT model amod model raw return NN this DT,1,A3,maven/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuildingRequest.java,388
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set excluded projects PARAMETER LIST list string excluded projects PARAMETER list string excluded projects TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME excluded projects BLOCK IF if excluded projects null this excluded projects new array list excluded projects else this excluded projects null CONDITION excluded projects null EXPR excluded projects null NAME excluded projects THEN this excluded projects new array list excluded projects BLOCK EXPR this excluded projects new array list excluded projects NAME this excluded projects NAME this NAME excluded projects CALL array list excluded projects NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR excluded projects NAME excluded projects ELSE else this excluded projects null BLOCK EXPR this excluded projects null NAME this excluded projects NAME this NAME excluded projects RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN excluded VBN projects NNS root ROOT set amod projects excluded dobj set projects list NN string NN excluded VBN projects NNS root ROOT projects amod projects excluded if IN excluded VBN projects NNS root ROOT projects amod projects excluded null JJ this DT excluded VBN projects NNS new JJ array NN list NN root ROOT list compound list array excluded VBN projects NNS root ROOT projects amod projects excluded else RB this DT excluded VBN projects NNS null JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,587
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set resume from PARAMETER LIST string project PARAMETER string project TYPE string NAME string NAME project BLOCK EXPR this resume from project NAME this resume from NAME this NAME resume from NAME project RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN resume VB from IN root ROOT set xcomp set resume dep resume from string NN project NN this DT resume VB from IN project NN return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,602
FUNCTION SPECIFIER public SPECIFIER static TYPE void NAME void NAME to artifacts PARAMETER LIST collection org apache maven artifact artifact artifacts collection extends dependency node nodes list string trail dependency filter filter PARAMETER collection org apache maven artifact artifact artifacts collection extends dependency node nodes TYPE collection org apache maven artifact artifact artifacts collection extends dependency node NAME collection org apache maven artifact artifact NAME collection ARGUMENT LIST ARGUMENT NAME org apache maven artifact artifact NAME org NAME apache NAME maven NAME artifact NAME artifact NAME artifacts NAME collection extends dependency node NAME collection ARGUMENT LIST ARGUMENT NAME EXTENDS extends dependency node NAME dependency node NAME nodes PARAMETER list string trail TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME trail PARAMETER dependency filter filter TYPE dependency filter NAME dependency filter NAME filter BLOCK FOR for dependency node node nodes org apache maven artifact artifact artifact to artifact node get dependency list string node trail new array list trail size node trail add all trail node trail add artifact get id if filter null filter accept node collections dependency node empty list artifact set dependency trail node trail artifacts add artifact to artifacts artifacts node get children node trail filter CONTROL dependency node node nodes INIT dependency node node nodes TYPE dependency node NAME dependency node NAME node RANGE nodes EXPR nodes NAME nodes BLOCK DECL STMT TYPE org apache maven artifact artifact NAME org apache maven artifact artifact NAME org NAME apache NAME maven NAME artifact NAME artifact NAME artifact INIT to artifact node get dependency EXPR to artifact node get dependency CALL to artifact node get dependency NAME to artifact ARGUMENT LIST ARGUMENT EXPR node get dependency CALL node get dependency NAME node get dependency NAME node NAME get dependency ARGUMENT LIST DECL STMT TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME node trail INIT new array list trail size EXPR new array list trail size CALL array list trail size NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR trail size CALL trail size NAME trail size NAME trail NAME size ARGUMENT LIST EXPR node trail add all trail CALL node trail add all trail NAME node trail add all NAME node trail NAME add all ARGUMENT LIST ARGUMENT EXPR trail NAME trail EXPR node trail add artifact get id CALL node trail add artifact get id NAME node trail add NAME node trail NAME add ARGUMENT LIST ARGUMENT EXPR artifact get id CALL artifact get id NAME artifact get id NAME artifact NAME get id ARGUMENT LIST IF if filter null filter accept node collections dependency node empty list artifact set dependency trail node trail artifacts add artifact CONDITION filter null filter accept node collections dependency node empty list EXPR filter null filter accept node collections dependency node empty list NAME filter CALL filter accept node collections dependency node empty list NAME filter accept NAME filter NAME accept ARGUMENT LIST ARGUMENT EXPR node NAME node ARGUMENT EXPR collections dependency node empty list NAME collections NAME collections NAME dependency node CALL empty list NAME empty list ARGUMENT LIST THEN artifact set dependency trail node trail artifacts add artifact BLOCK EXPR artifact set dependency trail node trail CALL artifact set dependency trail node trail NAME artifact set dependency trail NAME artifact NAME set dependency trail ARGUMENT LIST ARGUMENT EXPR node trail NAME node trail EXPR artifacts add artifact CALL artifacts add artifact NAME artifacts add NAME artifacts NAME add ARGUMENT LIST ARGUMENT EXPR artifact NAME artifact EXPR to artifacts artifacts node get children node trail filter CALL to artifacts artifacts node get children node trail filter NAME to artifacts ARGUMENT LIST ARGUMENT EXPR artifacts NAME artifacts ARGUMENT EXPR node get children CALL node get children NAME node get children NAME node NAME get children ARGUMENT LIST ARGUMENT EXPR node trail NAME node trail ARGUMENT EXPR filter NAME filter public NN static JJ void NN to TO artifacts NNS root ROOT artifacts case artifacts to collection NN org NN apache NN maven NN artifact NN artifact NN root ROOT artifact compound artifact org compound artifact apache compound artifact maven compound artifact artifact artifacts NNS collection NN extends VBZ dependency NN node NN root ROOT node compound node dependency nodes NNS list NN string NN trail NN dependency NN filter NN root ROOT filter compound filter dependency filter NN for IN dependency NN node NN root ROOT node compound node dependency node NN nodes NNS org NN apache NN maven NN artifact NN artifact NN root ROOT artifact compound artifact org compound artifact apache compound artifact maven compound artifact artifact artifact NN to TO artifact NN root ROOT artifact case artifact to node NN get VB dependency NN root ROOT get nsubj get node dobj get dependency list NN string NN node NN trail NN root ROOT trail compound trail node new JJ array NN list NN root ROOT list compound list array trail NN size NN root ROOT size compound size trail node NN trail NN add VB all DT root ROOT add compound trail node nsubj add trail dobj add all trail NN node NN trail NN add VBP root ROOT add compound trail node nsubj add trail artifact NN get VB id NN root ROOT get nsubj get artifact dobj get id if IN filter NN null JJ filter NN accept VB root ROOT accept nsubj accept filter node NN collections NNS dependency NN node NN root ROOT node compound node dependency empty JJ list NN root ROOT list amod list empty artifact NN set VBD dependency NN trail NN root ROOT set nsubj set artifact compound trail dependency dobj set trail node NN trail NN root ROOT trail compound trail node artifacts NNS add VBP root ROOT add nsubj add artifacts artifact NN to TO artifacts NNS root ROOT artifacts case artifacts to artifacts NNS node NN get VB children NNS root ROOT get nsubj get node dobj get children node NN trail NN root ROOT trail compound trail node filter NN extends filter ANTONYM ANTONYM,1,B5,maven/maven-core/src/main/java/org/apache/maven/RepositoryUtils.java,107
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set cache transfer error PARAMETER LIST boolean cache transfer error PARAMETER boolean cache transfer error TYPE boolean NAME boolean NAME cache transfer error BLOCK EXPR this cache transfer error cache transfer error NAME this cache transfer error NAME this NAME cache transfer error NAME cache transfer error RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN cache NN transfer NN error NN root ROOT set compound error cache compound error transfer dobj set error boolean NN cache NN transfer NN error NN root ROOT error compound error cache compound error transfer this DT cache NN transfer NN error NN cache NN transfer NN error NN root ROOT error compound error cache compound error transfer return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,1201
COMMENT b warning b ignored FUNCTION SPECIFIER public TYPE void NAME void NAME return component logger PARAMETER LIST string role string hint PARAMETER string role TYPE string NAME string NAME role PARAMETER string hint TYPE string NAME string NAME hint BLOCK b warning b ignored root ROOT ignored compound b b compound b warning nsubj ignored b public NN void NN return NN component NN logger NN root ROOT logger compound logger return compound logger component string NN role NN string NN hint NN,1,B3,maven/maven-embedder/src/main/java/org/apache/maven/cli/logging/Slf4jLoggerManager.java,77
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE model building request NAME model building request NAME set workspace model resolver PARAMETER LIST workspace model resolver workspace resolver PARAMETER workspace model resolver workspace resolver TYPE workspace model resolver NAME workspace model resolver NAME workspace resolver BLOCK EXPR this workspace resolver workspace resolver NAME this workspace resolver NAME this NAME workspace resolver NAME workspace resolver RETURN return this EXPR this NAME this override NN public NN model NN building NN request NN root ROOT request compound request model compound request building set VBN workspace NN model NN resolver NN root ROOT set compound resolver workspace compound resolver model dobj set resolver workspace NN model NN resolver NN root ROOT resolver compound resolver workspace compound resolver model workspace NN resolver NN root ROOT resolver compound resolver workspace this DT workspace NN resolver NN workspace NN resolver NN root ROOT resolver compound resolver workspace return NN this DT,1,A3,maven/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuildingRequest.java,401
DECL STMT SPECIFIER private TYPE string NAME string NAME provides private JJ string NN provides VBZ,1,D2,maven/maven-core/src/main/java/org/apache/maven/toolchain/RequirementMatcherFactory.java,50
FUNCTION SPECIFIER public TYPE project builder configuration NAME project builder configuration NAME set global profile manager PARAMETER LIST profile manager global profile manager PARAMETER profile manager global profile manager TYPE profile manager NAME profile manager NAME global profile manager BLOCK EXPR this global profile manager global profile manager NAME this global profile manager NAME this NAME global profile manager NAME global profile manager RETURN return this EXPR this NAME this public NN project NN builder NN configuration NN root ROOT configuration compound configuration project compound configuration builder set VBN global JJ profile NN manager NN root ROOT set amod manager global compound manager profile dobj set manager profile NN manager NN root ROOT manager compound manager profile global JJ profile NN manager NN root ROOT manager amod manager global compound manager profile this DT global JJ profile NN manager NN global JJ profile NN manager NN root ROOT manager amod manager global compound manager profile return NN this DT,1,A3,maven/maven-compat/src/main/java/org/apache/maven/project/DefaultProjectBuilderConfiguration.java,47
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set system properties PARAMETER LIST properties properties PARAMETER properties properties TYPE properties NAME properties NAME properties BLOCK IF if properties null this system properties new properties this system properties put all properties else this system properties null CONDITION properties null EXPR properties null NAME properties THEN this system properties new properties this system properties put all properties BLOCK EXPR this system properties new properties NAME this system properties NAME this NAME system properties CALL properties NAME properties ARGUMENT LIST EXPR this system properties put all properties CALL this system properties put all properties NAME this system properties put all NAME this NAME system properties NAME put all ARGUMENT LIST ARGUMENT EXPR properties NAME properties ELSE else this system properties null BLOCK EXPR this system properties null NAME this system properties NAME this NAME system properties RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN system NN properties NNS root ROOT set compound properties system dobj set properties properties NNS properties NNS if IN properties NNS null JJ this DT system NN properties NNS new JJ properties NNS this DT system NN properties NNS put VBD all DT properties NNS else RB this DT system NN properties NNS null JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,532
COMMENT suppress snapshot updates issue mng DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME no snapshot updates suppress snapshot updates root ROOT suppress compound updates snapshot dobj suppress updates issue mng root ROOT mng compound mng issue private JJ boolean NN no DT snapshot NN updates NNS root ROOT updates neg updates no compound updates snapshot,0,N/A,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,160
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE model building request NAME model building request NAME set workspace model resolver PARAMETER LIST workspace model resolver workspace resolver PARAMETER workspace model resolver workspace resolver TYPE workspace model resolver NAME workspace model resolver NAME workspace resolver BLOCK EXPR request set workspace model resolver workspace resolver CALL request set workspace model resolver workspace resolver NAME request set workspace model resolver NAME request NAME set workspace model resolver ARGUMENT LIST ARGUMENT EXPR workspace resolver NAME workspace resolver RETURN return this EXPR this NAME this override NN public NN model NN building NN request NN root ROOT request compound request model compound request building set VBN workspace NN model NN resolver NN root ROOT set compound resolver workspace compound resolver model dobj set resolver workspace NN model NN resolver NN root ROOT resolver compound resolver workspace compound resolver model workspace NN resolver NN root ROOT resolver compound resolver workspace request NN set VBD workspace NN model NN resolver NN root ROOT set nsubj set request compound resolver workspace compound resolver model dobj set resolver workspace NN resolver NN root ROOT resolver compound resolver workspace return NN this DT,1,A3,maven/maven-model-builder/src/main/java/org/apache/maven/model/building/FilterModelBuildingRequest.java,278
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set update snapshots PARAMETER LIST boolean update snapshots PARAMETER boolean update snapshots TYPE boolean NAME boolean NAME update snapshots BLOCK EXPR this update snapshots update snapshots NAME this update snapshots NAME this NAME update snapshots NAME update snapshots RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN update VBP snapshots NNS root ROOT set dep set update dobj update snapshots boolean NN update VB snapshots NNS root ROOT update dobj update snapshots this DT update VBP snapshots NNS update VB snapshots NNS root ROOT update dobj update snapshots return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,726
FUNCTION SPECIFIER public TYPE project building request NAME project building request NAME set system properties PARAMETER LIST properties system properties PARAMETER properties system properties TYPE properties NAME properties NAME system properties BLOCK IF if system properties null this system properties new properties synchronized system properties avoid concurrentmodification if someone else sets removes an unrelated system property this system properties put all system properties else this system properties clear CONDITION system properties null EXPR system properties null NAME system properties THEN this system properties new properties synchronized system properties avoid concurrentmodification if someone else sets removes an unrelated system property this system properties put all system properties BLOCK EXPR this system properties new properties NAME this system properties NAME this NAME system properties CALL properties NAME properties ARGUMENT LIST SYNCHRONIZED synchronized system properties avoid concurrentmodification if someone else sets removes an unrelated system property this system properties put all system properties INIT system properties EXPR system properties NAME system properties BLOCK COMMENT avoid concurrentmodification if someone else sets removes an unrelated system property EXPR this system properties put all system properties CALL this system properties put all system properties NAME this system properties put all NAME this NAME system properties NAME put all ARGUMENT LIST ARGUMENT EXPR system properties NAME system properties ELSE else this system properties clear BLOCK EXPR this system properties clear CALL this system properties clear NAME this system properties clear NAME this NAME system properties NAME clear ARGUMENT LIST RETURN return this EXPR this NAME this public NN project NN building NN request NN root ROOT request compound request project compound request building set VBN system NN properties NNS root ROOT set compound properties system dobj set properties properties NNS system NN properties NNS root ROOT properties compound properties system if IN system NN properties NNS root ROOT properties compound properties system null JJ this DT system NN properties NNS new JJ properties NNS synchronized VBN system NN properties NNS root ROOT properties compound properties system avoid VB concurrentmodification NN if IN someone NN else RB sets NNS removes VBZ root ROOT removes nsubj removes sets an DT unrelated JJ system NN property NN this DT system NN properties NNS put VBD all DT system NN properties NNS root ROOT properties compound properties system else RB this DT system NN properties NNS clear JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuildingRequest.java,163
FUNCTION SPECIFIER public TYPE string NAME string NAME get artifact id PARAMETER LIST BLOCK IF if artifact id null return artifact id else return artifact get artifact id CONDITION artifact id null EXPR artifact id null NAME artifact id THEN return artifact id BLOCK RETURN return artifact id EXPR artifact id NAME artifact id ELSE else return artifact get artifact id BLOCK RETURN return artifact get artifact id EXPR artifact get artifact id CALL artifact get artifact id NAME artifact get artifact id NAME artifact NAME get artifact id ARGUMENT LIST public NN string NN get VB artifact NN id NN root ROOT get compound id artifact dobj get id if IN artifact NN id NN root ROOT id compound id artifact null JJ return NN artifact NN id NN root ROOT id compound id artifact else RB return NN artifact NN get VB artifact NN id NN root ROOT get nsubj get artifact compound id artifact dobj get id,0,N/A,maven/maven-aether-provider/src/main/java/org/apache/maven/repository/internal/RelocatedArtifact.java,67
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set reactor failure behavior PARAMETER LIST string failure behavior PARAMETER string failure behavior TYPE string NAME string NAME failure behavior BLOCK EXPR reactor failure behavior failure behavior NAME reactor failure behavior NAME failure behavior RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN reactor NN failure NN behavior NN root ROOT set compound behavior reactor compound behavior failure dobj set behavior string NN failure NN behavior NN root ROOT behavior compound behavior failure reactor NN failure NN behavior NN root ROOT behavior compound behavior reactor compound behavior failure failure NN behavior NN root ROOT behavior compound behavior failure return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,564
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set no snapshot updates PARAMETER LIST boolean no snapshot updates PARAMETER boolean no snapshot updates TYPE boolean NAME boolean NAME no snapshot updates BLOCK EXPR this no snapshot updates no snapshot updates NAME this no snapshot updates NAME this NAME no snapshot updates NAME no snapshot updates RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN no DT snapshot NN updates NNS root ROOT set neg updates no compound updates snapshot dobj set updates boolean NN no DT snapshot NN updates NNS root ROOT updates neg updates no compound updates snapshot this DT no DT snapshot NN updates NNS no DT snapshot NN updates NNS root ROOT updates neg updates no compound updates snapshot return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,734
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set selected projects PARAMETER LIST list string selected projects PARAMETER list string selected projects TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME selected projects BLOCK IF if selected projects null this selected projects new array list selected projects else this selected projects null CONDITION selected projects null EXPR selected projects null NAME selected projects THEN this selected projects new array list selected projects BLOCK EXPR this selected projects new array list selected projects NAME this selected projects NAME this NAME selected projects CALL array list selected projects NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR selected projects NAME selected projects ELSE else this selected projects null BLOCK EXPR this selected projects null NAME this selected projects NAME this NAME selected projects RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN selected VBN projects NNS root ROOT set amod projects selected dobj set projects list NN string NN selected VBN projects NNS root ROOT projects amod projects selected if IN selected VBN projects NNS root ROOT projects amod projects selected null JJ this DT selected VBN projects NNS new JJ array NN list NN root ROOT list compound list array selected VBN projects NNS root ROOT projects amod projects selected else RB this DT selected VBN projects NNS null JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,572
FUNCTION SPECIFIER public TYPE string NAME string NAME get goal PARAMETER LIST BLOCK IF if mojo descriptor null return mojo descriptor get goal CONDITION mojo descriptor null EXPR mojo descriptor null NAME mojo descriptor THEN return mojo descriptor get goal BLOCK RETURN return mojo descriptor get goal EXPR mojo descriptor get goal CALL mojo descriptor get goal NAME mojo descriptor get goal NAME mojo descriptor NAME get goal ARGUMENT LIST RETURN return goal EXPR goal NAME goal public NN string NN get VB goal NN root ROOT get dobj get goal if IN mojo NN descriptor NN root ROOT descriptor compound descriptor mojo null JJ return NN mojo NN descriptor NN get VB goal NN root ROOT get compound descriptor mojo nsubj get descriptor dobj get goal return NN goal NN,0,N/A,maven/maven-core/src/main/java/org/apache/maven/plugin/MojoExecution.java,212
DECL STMT SPECIFIER private TYPE string NAME string NAME alias private JJ string NN alias IN,0,N/A,maven/maven-plugin-api/src/main/java/org/apache/maven/plugin/descriptor/Parameter.java,28
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set profiles PARAMETER LIST list profile profiles PARAMETER list profile profiles TYPE list profile NAME list profile NAME list ARGUMENT LIST ARGUMENT NAME profile NAME profiles BLOCK IF if profiles null this profiles new array list profiles else this profiles null CONDITION profiles null EXPR profiles null NAME profiles THEN this profiles new array list profiles BLOCK EXPR this profiles new array list profiles NAME this profiles NAME this NAME profiles CALL array list profiles NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR profiles NAME profiles ELSE else this profiles null BLOCK EXPR this profiles null NAME this profiles NAME this NAME profiles RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN profiles NNS root ROOT set dobj set profiles list NN profile NN profiles NNS if IN profiles NNS null JJ this DT profiles NNS new JJ array NN list NN root ROOT list compound list array profiles NNS else RB this DT profiles NNS null JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,902
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set transfer listener PARAMETER LIST transfer listener transfer listener PARAMETER transfer listener transfer listener TYPE transfer listener NAME transfer listener NAME transfer listener BLOCK EXPR this transfer listener transfer listener NAME this transfer listener NAME this NAME transfer listener NAME transfer listener RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN transfer NN listener NN root ROOT set compound listener transfer dobj set listener transfer NN listener NN root ROOT listener compound listener transfer transfer NN listener NN root ROOT listener compound listener transfer this DT transfer NN listener NN transfer NN listener NN root ROOT listener compound listener transfer return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,702
FUNCTION SPECIFIER private SPECIFIER static TYPE list range value NAME list range value NAME list ARGUMENT LIST ARGUMENT NAME range value NAME get range PARAMETER LIST string range PARAMETER string range TYPE string NAME string NAME range BLOCK DECL STMT TYPE list range value NAME list range value NAME list ARGUMENT LIST ARGUMENT NAME range value NAME ranges INIT new array list EXPR new array list CALL array list NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST FOR for string token range split if token starts with ranges add new range value token replace true else if token starts with ranges add new range value token replace false else if token ends with ranges add new range value token replace true else if token ends with ranges add new range value token replace false else if token length ranges add new range value false CONTROL string token range split INIT string token range split TYPE string NAME string NAME token RANGE range split EXPR range split CALL range split NAME range split NAME range NAME split ARGUMENT LIST ARGUMENT EXPR BLOCK IF if token starts with ranges add new range value token replace true else if token starts with ranges add new range value token replace false else if token ends with ranges add new range value token replace true else if token ends with ranges add new range value token replace false else if token length ranges add new range value false CONDITION token starts with EXPR token starts with CALL token starts with NAME token starts with NAME token NAME starts with ARGUMENT LIST ARGUMENT EXPR THEN ranges add new range value token replace true BLOCK EXPR ranges add new range value token replace true CALL ranges add new range value token replace true NAME ranges add NAME ranges NAME add ARGUMENT LIST ARGUMENT EXPR new range value token replace true CALL range value token replace true NAME range value ARGUMENT LIST ARGUMENT EXPR token replace CALL token replace NAME token replace NAME token NAME replace ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR ARGUMENT EXPR true ELSEIF else if token starts with ranges add new range value token replace false IF if token starts with ranges add new range value token replace false CONDITION token starts with EXPR token starts with CALL token starts with NAME token starts with NAME token NAME starts with ARGUMENT LIST ARGUMENT EXPR THEN ranges add new range value token replace false BLOCK EXPR ranges add new range value token replace false CALL ranges add new range value token replace false NAME ranges add NAME ranges NAME add ARGUMENT LIST ARGUMENT EXPR new range value token replace false CALL range value token replace false NAME range value ARGUMENT LIST ARGUMENT EXPR token replace CALL token replace NAME token replace NAME token NAME replace ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR ARGUMENT EXPR false ELSEIF else if token ends with ranges add new range value token replace true IF if token ends with ranges add new range value token replace true CONDITION token ends with EXPR token ends with CALL token ends with NAME token ends with NAME token NAME ends with ARGUMENT LIST ARGUMENT EXPR THEN ranges add new range value token replace true BLOCK EXPR ranges add new range value token replace true CALL ranges add new range value token replace true NAME ranges add NAME ranges NAME add ARGUMENT LIST ARGUMENT EXPR new range value token replace true CALL range value token replace true NAME range value ARGUMENT LIST ARGUMENT EXPR token replace CALL token replace NAME token replace NAME token NAME replace ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR ARGUMENT EXPR true ELSEIF else if token ends with ranges add new range value token replace false IF if token ends with ranges add new range value token replace false CONDITION token ends with EXPR token ends with CALL token ends with NAME token ends with NAME token NAME ends with ARGUMENT LIST ARGUMENT EXPR THEN ranges add new range value token replace false BLOCK EXPR ranges add new range value token replace false CALL ranges add new range value token replace false NAME ranges add NAME ranges NAME add ARGUMENT LIST ARGUMENT EXPR new range value token replace false CALL range value token replace false NAME range value ARGUMENT LIST ARGUMENT EXPR token replace CALL token replace NAME token replace NAME token NAME replace ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR ARGUMENT EXPR false ELSEIF else if token length ranges add new range value false IF if token length ranges add new range value false CONDITION token length EXPR token length CALL token length NAME token length NAME token NAME length ARGUMENT LIST THEN ranges add new range value false BLOCK EXPR ranges add new range value false CALL ranges add new range value false NAME ranges add NAME ranges NAME add ARGUMENT LIST ARGUMENT EXPR new range value false CALL range value false NAME range value ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR false IF if ranges size ranges add new range value false CONDITION ranges size EXPR ranges size CALL ranges size NAME ranges size NAME ranges NAME size ARGUMENT LIST THEN ranges add new range value false BLOCK EXPR ranges add new range value false CALL ranges add new range value false NAME ranges add NAME ranges NAME add ARGUMENT LIST ARGUMENT EXPR new range value false CALL range value false NAME range value ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR false RETURN return ranges EXPR ranges NAME ranges private JJ static JJ list NN range NN value NN root ROOT value compound value range get VB range NN root ROOT get dobj get range string NN range NN list NN range NN value NN root ROOT value compound value range ranges NNS new JJ array NN list NN root ROOT list compound list array for IN string NN token JJ range NN split NN root ROOT split compound split range if IN token JJ starts NNS with IN root ROOT starts amod starts token dep starts with ranges NNS add VBP root ROOT add nsubj add ranges new JJ range NN value NN root ROOT value compound value range token JJ replace VB root ROOT replace nsubj replace token true JJ else RB if IN token JJ starts NNS with IN root ROOT starts amod starts token dep starts with ranges NNS add VBP root ROOT add nsubj add ranges new JJ range NN value NN root ROOT value compound value range token JJ replace VB root ROOT replace nsubj replace token false JJ else RB if IN token JJ ends NNS with IN root ROOT ends amod ends token dep ends with ranges NNS add VBP root ROOT add nsubj add ranges new JJ range NN value NN root ROOT value compound value range token JJ replace VB root ROOT replace nsubj replace token true JJ else RB if IN token JJ ends NNS with IN root ROOT ends amod ends token dep ends with ranges NNS add VBP root ROOT add nsubj add ranges new JJ range NN value NN root ROOT value compound value range token JJ replace VB root ROOT replace nsubj replace token false JJ else RB if IN token JJ length NN root ROOT length amod length token ranges NNS add VBP root ROOT add nsubj add ranges new JJ range NN value NN root ROOT value compound value range false JJ if IN ranges NNS size NN root ROOT size compound size ranges ranges NNS add VBP root ROOT add nsubj add ranges new JJ range NN value NN root ROOT value compound value range false JJ return NN ranges NNS string range ANTONYM ANTONYM,1,A1,maven/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/JdkVersionProfileActivator.java,171
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE toolchains building request NAME toolchains building request NAME set global toolchains source PARAMETER LIST source global toolchains source PARAMETER source global toolchains source TYPE source NAME source NAME global toolchains source BLOCK EXPR this global toolchains source global toolchains source NAME this global toolchains source NAME this NAME global toolchains source NAME global toolchains source RETURN return this EXPR this NAME this override NN public NN toolchains NNS building VBG request NN root ROOT toolchains acl toolchains building dobj building request set VBN global JJ toolchains NNS source NN root ROOT set amod source global compound source toolchains dobj set source source NN global JJ toolchains NNS source NN root ROOT source amod source global compound source toolchains this DT global JJ toolchains NNS source NN global JJ toolchains NNS source NN root ROOT source amod source global compound source toolchains return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/toolchain/building/DefaultToolchainsBuildingRequest.java,43
FUNCTION SPECIFIER public TYPE project builder configuration NAME project builder configuration NAME set execution properties PARAMETER LIST properties execution properties PARAMETER properties execution properties TYPE properties NAME properties NAME execution properties BLOCK EXPR this execution properties execution properties NAME this execution properties NAME this NAME execution properties NAME execution properties RETURN return this EXPR this NAME this public NN project NN builder NN configuration NN root ROOT configuration compound configuration project compound configuration builder set VBN execution NN properties NNS root ROOT set compound properties execution dobj set properties properties NNS execution NN properties NNS root ROOT properties compound properties execution this DT execution NN properties NNS execution NN properties NNS root ROOT properties compound properties execution return NN this DT,1,A3,maven/maven-compat/src/main/java/org/apache/maven/project/DefaultProjectBuilderConfiguration.java,90
FUNCTION SPECIFIER private TYPE void NAME void NAME validate effective dependency PARAMETER LIST model problem collector problems string prefix model building request request PARAMETER model problem collector problems string prefix TYPE model problem collector problems string NAME model problem collector NAME problems NAME string NAME prefix PARAMETER model building request request TYPE model building request NAME model building request NAME request BLOCK EXPR validate id prefix artifact id problems severity error version base d get artifact id d get management key d CALL validate id prefix artifact id problems severity error version base d get artifact id d get management key d NAME validate id ARGUMENT LIST ARGUMENT EXPR prefix artifact id NAME prefix ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity error NAME severity error NAME severity NAME error ARGUMENT EXPR version base NAME version base NAME version NAME base ARGUMENT EXPR d get artifact id CALL d get artifact id NAME d get artifact id NAME d NAME get artifact id ARGUMENT LIST ARGUMENT EXPR d get management key CALL d get management key NAME d get management key NAME d NAME get management key ARGUMENT LIST ARGUMENT EXPR d NAME d EXPR validate id prefix group id problems severity error version base d get group id d get management key d CALL validate id prefix group id problems severity error version base d get group id d get management key d NAME validate id ARGUMENT LIST ARGUMENT EXPR prefix group id NAME prefix ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity error NAME severity error NAME severity NAME error ARGUMENT EXPR version base NAME version base NAME version NAME base ARGUMENT EXPR d get group id CALL d get group id NAME d get group id NAME d NAME get group id ARGUMENT LIST ARGUMENT EXPR d get management key CALL d get management key NAME d get management key NAME d NAME get management key ARGUMENT LIST ARGUMENT EXPR d NAME d IF if management validate string not empty prefix type problems severity error version base d get type d get management key d validate dependency version problems d prefix CONDITION management EXPR management NAME management THEN validate string not empty prefix type problems severity error version base d get type d get management key d validate dependency version problems d prefix BLOCK EXPR validate string not empty prefix type problems severity error version base d get type d get management key d CALL validate string not empty prefix type problems severity error version base d get type d get management key d NAME validate string not empty ARGUMENT LIST ARGUMENT EXPR prefix type NAME prefix ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity error NAME severity error NAME severity NAME error ARGUMENT EXPR version base NAME version base NAME version NAME base ARGUMENT EXPR d get type CALL d get type NAME d get type NAME d NAME get type ARGUMENT LIST ARGUMENT EXPR d get management key CALL d get management key NAME d get management key NAME d NAME get management key ARGUMENT LIST ARGUMENT EXPR d NAME d EXPR validate dependency version problems d prefix CALL validate dependency version problems d prefix NAME validate dependency version ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR d NAME d ARGUMENT EXPR prefix NAME prefix IF if system equals d get scope string system path d get system path if string utils is empty system path add violation problems severity error version base prefix system path d get management key is missing d else file sys file new file system path if sys file is absolute add violation problems severity error version base prefix system path d get management key must specify an absolute path but is system path d else if sys file is file string msg refers to a non existing file sys file get absolute path system path system path replace file separator char replace file separator char string jdk home request get system properties get property java home file separator if system path starts with jdk home msg please verify that you run maven using a jdk and not just a jre add violation problems severity warning version base prefix system path d get management key msg d else if string utils is not empty d get system path add violation problems severity error version base prefix system path d get management key must be omitted this field may only be specified for a dependency with system scope d CONDITION system equals d get scope EXPR system equals d get scope CALL equals d get scope NAME equals ARGUMENT LIST ARGUMENT EXPR d get scope CALL d get scope NAME d get scope NAME d NAME get scope ARGUMENT LIST THEN string system path d get system path if string utils is empty system path add violation problems severity error version base prefix system path d get management key is missing d else file sys file new file system path if sys file is absolute add violation problems severity error version base prefix system path d get management key must specify an absolute path but is system path d else if sys file is file string msg refers to a non existing file sys file get absolute path system path system path replace file separator char replace file separator char string jdk home request get system properties get property java home file separator if system path starts with jdk home msg please verify that you run maven using a jdk and not just a jre add violation problems severity warning version base prefix system path d get management key msg d BLOCK DECL STMT TYPE string NAME string NAME system path INIT d get system path EXPR d get system path CALL d get system path NAME d get system path NAME d NAME get system path ARGUMENT LIST IF if string utils is empty system path add violation problems severity error version base prefix system path d get management key is missing d else file sys file new file system path if sys file is absolute add violation problems severity error version base prefix system path d get management key must specify an absolute path but is system path d else if sys file is file string msg refers to a non existing file sys file get absolute path system path system path replace file separator char replace file separator char string jdk home request get system properties get property java home file separator if system path starts with jdk home msg please verify that you run maven using a jdk and not just a jre add violation problems severity warning version base prefix system path d get management key msg d CONDITION string utils is empty system path EXPR string utils is empty system path CALL string utils is empty system path NAME string utils is empty NAME string utils NAME is empty ARGUMENT LIST ARGUMENT EXPR system path NAME system path THEN add violation problems severity error version base prefix system path d get management key is missing d BLOCK EXPR add violation problems severity error version base prefix system path d get management key is missing d CALL add violation problems severity error version base prefix system path d get management key is missing d NAME add violation ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity error NAME severity error NAME severity NAME error ARGUMENT EXPR version base NAME version base NAME version NAME base ARGUMENT EXPR prefix system path NAME prefix ARGUMENT EXPR d get management key CALL d get management key NAME d get management key NAME d NAME get management key ARGUMENT LIST ARGUMENT EXPR is missing ARGUMENT EXPR d NAME d ELSE else file sys file new file system path if sys file is absolute add violation problems severity error version base prefix system path d get management key must specify an absolute path but is system path d else if sys file is file string msg refers to a non existing file sys file get absolute path system path system path replace file separator char replace file separator char string jdk home request get system properties get property java home file separator if system path starts with jdk home msg please verify that you run maven using a jdk and not just a jre add violation problems severity warning version base prefix system path d get management key msg d BLOCK DECL STMT TYPE file NAME file NAME sys file INIT new file system path EXPR new file system path CALL file system path NAME file ARGUMENT LIST ARGUMENT EXPR system path NAME system path IF if sys file is absolute add violation problems severity error version base prefix system path d get management key must specify an absolute path but is system path d else if sys file is file string msg refers to a non existing file sys file get absolute path system path system path replace file separator char replace file separator char string jdk home request get system properties get property java home file separator if system path starts with jdk home msg please verify that you run maven using a jdk and not just a jre add violation problems severity warning version base prefix system path d get management key msg d CONDITION sys file is absolute EXPR sys file is absolute CALL sys file is absolute NAME sys file is absolute NAME sys file NAME is absolute ARGUMENT LIST THEN add violation problems severity error version base prefix system path d get management key must specify an absolute path but is system path d BLOCK EXPR add violation problems severity error version base prefix system path d get management key must specify an absolute path but is system path d CALL add violation problems severity error version base prefix system path d get management key must specify an absolute path but is system path d NAME add violation ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity error NAME severity error NAME severity NAME error ARGUMENT EXPR version base NAME version base NAME version NAME base ARGUMENT EXPR prefix system path NAME prefix ARGUMENT EXPR d get management key CALL d get management key NAME d get management key NAME d NAME get management key ARGUMENT LIST ARGUMENT EXPR must specify an absolute path but is system path NAME system path ARGUMENT EXPR d NAME d ELSEIF else if sys file is file string msg refers to a non existing file sys file get absolute path system path system path replace file separator char replace file separator char string jdk home request get system properties get property java home file separator if system path starts with jdk home msg please verify that you run maven using a jdk and not just a jre add violation problems severity warning version base prefix system path d get management key msg d IF if sys file is file string msg refers to a non existing file sys file get absolute path system path system path replace file separator char replace file separator char string jdk home request get system properties get property java home file separator if system path starts with jdk home msg please verify that you run maven using a jdk and not just a jre add violation problems severity warning version base prefix system path d get management key msg d CONDITION sys file is file EXPR sys file is file CALL sys file is file NAME sys file is file NAME sys file NAME is file ARGUMENT LIST THEN string msg refers to a non existing file sys file get absolute path system path system path replace file separator char replace file separator char string jdk home request get system properties get property java home file separator if system path starts with jdk home msg please verify that you run maven using a jdk and not just a jre add violation problems severity warning version base prefix system path d get management key msg d BLOCK DECL STMT TYPE string NAME string NAME msg INIT refers to a non existing file sys file get absolute path EXPR refers to a non existing file sys file get absolute path CALL sys file get absolute path NAME sys file get absolute path NAME sys file NAME get absolute path ARGUMENT LIST EXPR system path system path replace file separator char replace file separator char NAME system path CALL system path replace file separator char NAME system path replace NAME system path NAME replace ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR file separator char NAME file separator char NAME file NAME separator char CALL replace file separator char NAME replace ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR file separator char NAME file separator char NAME file NAME separator char DECL STMT TYPE string NAME string NAME jdk home INIT request get system properties get property java home file separator EXPR request get system properties get property java home file separator CALL request get system properties NAME request get system properties NAME request NAME get system properties ARGUMENT LIST CALL get property java home NAME get property ARGUMENT LIST ARGUMENT EXPR java home ARGUMENT EXPR NAME file separator NAME file NAME separator IF if system path starts with jdk home msg please verify that you run maven using a jdk and not just a jre CONDITION system path starts with jdk home EXPR system path starts with jdk home CALL system path starts with jdk home NAME system path starts with NAME system path NAME starts with ARGUMENT LIST ARGUMENT EXPR jdk home NAME jdk home THEN msg please verify that you run maven using a jdk and not just a jre BLOCK EXPR msg please verify that you run maven using a jdk and not just a jre NAME msg EXPR add violation problems severity warning version base prefix system path d get management key msg d CALL add violation problems severity warning version base prefix system path d get management key msg d NAME add violation ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity warning NAME severity warning NAME severity NAME warning ARGUMENT EXPR version base NAME version base NAME version NAME base ARGUMENT EXPR prefix system path NAME prefix ARGUMENT EXPR d get management key CALL d get management key NAME d get management key NAME d NAME get management key ARGUMENT LIST ARGUMENT EXPR msg NAME msg ARGUMENT EXPR d NAME d ELSEIF else if string utils is not empty d get system path add violation problems severity error version base prefix system path d get management key must be omitted this field may only be specified for a dependency with system scope d IF if string utils is not empty d get system path add violation problems severity error version base prefix system path d get management key must be omitted this field may only be specified for a dependency with system scope d CONDITION string utils is not empty d get system path EXPR string utils is not empty d get system path CALL string utils is not empty d get system path NAME string utils is not empty NAME string utils NAME is not empty ARGUMENT LIST ARGUMENT EXPR d get system path CALL d get system path NAME d get system path NAME d NAME get system path ARGUMENT LIST THEN add violation problems severity error version base prefix system path d get management key must be omitted this field may only be specified for a dependency with system scope d BLOCK EXPR add violation problems severity error version base prefix system path d get management key must be omitted this field may only be specified for a dependency with system scope d CALL add violation problems severity error version base prefix system path d get management key must be omitted this field may only be specified for a dependency with system scope d NAME add violation ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity error NAME severity error NAME severity NAME error ARGUMENT EXPR version base NAME version base NAME version NAME base ARGUMENT EXPR prefix system path NAME prefix ARGUMENT EXPR d get management key CALL d get management key NAME d get management key NAME d NAME get management key ARGUMENT LIST ARGUMENT EXPR must be omitted this field may only be specified for a dependency with system scope ARGUMENT EXPR d NAME d IF if request get validation level model building request validation level maven for exclusion exclusion d get exclusions if request get validation level model building request validation level maven validate id prefix exclusions exclusion group id problems severity warning version v exclusion get group id d get management key exclusion validate id prefix exclusions exclusion artifact id problems severity warning version v exclusion get artifact id d get management key exclusion else validate id with wildcards prefix exclusions exclusion group id problems severity warning version v exclusion get group id d get management key exclusion validate id with wildcards prefix exclusions exclusion artifact id problems severity warning version v exclusion get artifact id d get management key exclusion CONDITION request get validation level model building request validation level maven EXPR request get validation level model building request validation level maven CALL request get validation level NAME request get validation level NAME request NAME get validation level ARGUMENT LIST NAME model building request validation level maven NAME model building request NAME validation level maven THEN for exclusion exclusion d get exclusions if request get validation level model building request validation level maven validate id prefix exclusions exclusion group id problems severity warning version v exclusion get group id d get management key exclusion validate id prefix exclusions exclusion artifact id problems severity warning version v exclusion get artifact id d get management key exclusion else validate id with wildcards prefix exclusions exclusion group id problems severity warning version v exclusion get group id d get management key exclusion validate id with wildcards prefix exclusions exclusion artifact id problems severity warning version v exclusion get artifact id d get management key exclusion BLOCK FOR for exclusion exclusion d get exclusions if request get validation level model building request validation level maven validate id prefix exclusions exclusion group id problems severity warning version v exclusion get group id d get management key exclusion validate id prefix exclusions exclusion artifact id problems severity warning version v exclusion get artifact id d get management key exclusion else validate id with wildcards prefix exclusions exclusion group id problems severity warning version v exclusion get group id d get management key exclusion validate id with wildcards prefix exclusions exclusion artifact id problems severity warning version v exclusion get artifact id d get management key exclusion CONTROL exclusion exclusion d get exclusions INIT exclusion exclusion d get exclusions TYPE exclusion NAME exclusion NAME exclusion RANGE d get exclusions EXPR d get exclusions CALL d get exclusions NAME d get exclusions NAME d NAME get exclusions ARGUMENT LIST BLOCK IF if request get validation level model building request validation level maven validate id prefix exclusions exclusion group id problems severity warning version v exclusion get group id d get management key exclusion validate id prefix exclusions exclusion artifact id problems severity warning version v exclusion get artifact id d get management key exclusion else validate id with wildcards prefix exclusions exclusion group id problems severity warning version v exclusion get group id d get management key exclusion validate id with wildcards prefix exclusions exclusion artifact id problems severity warning version v exclusion get artifact id d get management key exclusion CONDITION request get validation level model building request validation level maven EXPR request get validation level model building request validation level maven CALL request get validation level NAME request get validation level NAME request NAME get validation level ARGUMENT LIST NAME model building request validation level maven NAME model building request NAME validation level maven THEN validate id prefix exclusions exclusion group id problems severity warning version v exclusion get group id d get management key exclusion validate id prefix exclusions exclusion artifact id problems severity warning version v exclusion get artifact id d get management key exclusion BLOCK EXPR validate id prefix exclusions exclusion group id problems severity warning version v exclusion get group id d get management key exclusion CALL validate id prefix exclusions exclusion group id problems severity warning version v exclusion get group id d get management key exclusion NAME validate id ARGUMENT LIST ARGUMENT EXPR prefix exclusions exclusion group id NAME prefix ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity warning NAME severity warning NAME severity NAME warning ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR exclusion get group id CALL exclusion get group id NAME exclusion get group id NAME exclusion NAME get group id ARGUMENT LIST ARGUMENT EXPR d get management key CALL d get management key NAME d get management key NAME d NAME get management key ARGUMENT LIST ARGUMENT EXPR exclusion NAME exclusion EXPR validate id prefix exclusions exclusion artifact id problems severity warning version v exclusion get artifact id d get management key exclusion CALL validate id prefix exclusions exclusion artifact id problems severity warning version v exclusion get artifact id d get management key exclusion NAME validate id ARGUMENT LIST ARGUMENT EXPR prefix exclusions exclusion artifact id NAME prefix ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity warning NAME severity warning NAME severity NAME warning ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR exclusion get artifact id CALL exclusion get artifact id NAME exclusion get artifact id NAME exclusion NAME get artifact id ARGUMENT LIST ARGUMENT EXPR d get management key CALL d get management key NAME d get management key NAME d NAME get management key ARGUMENT LIST ARGUMENT EXPR exclusion NAME exclusion ELSE else validate id with wildcards prefix exclusions exclusion group id problems severity warning version v exclusion get group id d get management key exclusion validate id with wildcards prefix exclusions exclusion artifact id problems severity warning version v exclusion get artifact id d get management key exclusion BLOCK EXPR validate id with wildcards prefix exclusions exclusion group id problems severity warning version v exclusion get group id d get management key exclusion CALL validate id with wildcards prefix exclusions exclusion group id problems severity warning version v exclusion get group id d get management key exclusion NAME validate id with wildcards ARGUMENT LIST ARGUMENT EXPR prefix exclusions exclusion group id NAME prefix ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity warning NAME severity warning NAME severity NAME warning ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR exclusion get group id CALL exclusion get group id NAME exclusion get group id NAME exclusion NAME get group id ARGUMENT LIST ARGUMENT EXPR d get management key CALL d get management key NAME d get management key NAME d NAME get management key ARGUMENT LIST ARGUMENT EXPR exclusion NAME exclusion EXPR validate id with wildcards prefix exclusions exclusion artifact id problems severity warning version v exclusion get artifact id d get management key exclusion CALL validate id with wildcards prefix exclusions exclusion artifact id problems severity warning version v exclusion get artifact id d get management key exclusion NAME validate id with wildcards ARGUMENT LIST ARGUMENT EXPR prefix exclusions exclusion artifact id NAME prefix ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity warning NAME severity warning NAME severity NAME warning ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR exclusion get artifact id CALL exclusion get artifact id NAME exclusion get artifact id NAME exclusion NAME get artifact id ARGUMENT LIST ARGUMENT EXPR d get management key CALL d get management key NAME d get management key NAME d NAME get management key ARGUMENT LIST ARGUMENT EXPR exclusion NAME exclusion private JJ void NN validate VB effective JJ dependency NN root ROOT validate amod dependency effective dobj validate dependency model NN problem NN collector NN root ROOT collector compound collector model compound collector problem problems NNS string NN prefix NN model NN building NN request NN root ROOT request compound request model compound request building request NN validate VB id NN root ROOT validate dobj validate id prefix NN artifact NN id NN root ROOT id compound id artifact problems NNS severity NN error NN root ROOT error compound error severity version NN base NN root ROOT base compound base version d NN get VB artifact NN id NN root ROOT get nsubj get d compound id artifact dobj get id d NN get VB management NN key NN root ROOT get nsubj get d compound key management dobj get key d NN validate VB id NN root ROOT validate dobj validate id prefix NN group NN id NN root ROOT id compound id group problems NNS severity NN error NN root ROOT error compound error severity version NN base NN root ROOT base compound base version d NN get VB group NN id NN root ROOT get nsubj get d compound id group dobj get id d NN get VB management NN key NN root ROOT get nsubj get d compound key management dobj get key d NN if IN management NN validate VB string NN not RB empty JJ root ROOT validate dobj validate string neg empty not dep string empty prefix NN type NN problems NNS severity NN error NN root ROOT error compound error severity version NN base NN root ROOT base compound base version d NN get VB type NN root ROOT get nsubj get d dobj get type d NN get VB management NN key NN root ROOT get nsubj get d compound key management dobj get key d NN validate VB dependency NN version NN root ROOT validate compound version dependency dobj validate version problems NNS d NN prefix NN if IN system NN equals VBZ d NN get VB scope NN root ROOT get nsubj get d dobj get scope string NN system NN path NN root ROOT path compound path system d NN get VB system NN path NN root ROOT get nsubj get d compound path system dobj get path if IN string NN utils NNS is VBZ empty JJ root ROOT empty compound utils string nsubj empty utils cop empty is system NN path NN root ROOT path compound path system add VB violation NN root ROOT add dobj add violation problems NNS severity NN error NN root ROOT error compound error severity version NN base NN root ROOT base compound base version prefix NN system NN path NN root ROOT path compound path system d NN get VB management NN key NN root ROOT get nsubj get d compound key management dobj get key is VBZ missing VBG d NN else RB file NN sys NNS file VBP root ROOT file nsubj file sys new JJ file NN system NN path NN root ROOT path compound path system if IN sys NNS file NN is VBZ absolute JJ root ROOT absolute compound file sys nsubj absolute file cop absolute is add VB violation NN root ROOT add dobj add violation problems NNS severity NN error NN root ROOT error compound error severity version NN base NN root ROOT base compound base version prefix NN system NN path NN root ROOT path compound path system d NN get VB management NN key NN root ROOT get nsubj get d compound key management dobj get key must MD specify VB an DT absolute JJ path NN but CC is VBZ system NN path NN root ROOT path compound path system d NN else RB if IN sys NNS file NN is VBZ file NN root ROOT file compound file sys nsubj file file cop file is string NN msg NN refers VBZ to TO a DT non JJ existing VBG root ROOT existing amod existing non file NN sys NNS file VBP get VB absolute JJ path NN root ROOT file nsubj file sys ccomp file get amod path absolute dobj get path system NN path NN root ROOT path compound path system system NN path NN replace VB root ROOT replace compound path system nsubj replace path file NN separator NN char NN root ROOT char compound char file compound char separator replace VB file NN separator NN char NN root ROOT char compound char file compound char separator string NN jdk NN home NN root ROOT home compound home jdk request NN get VB system NN properties NNS root ROOT get nsubj get request compound properties system dobj get properties get VB property NN root ROOT get dobj get property java NN home NN root ROOT home compound home java file NN separator NN root ROOT separator compound separator file if IN system NN path NN starts VBZ with IN root ROOT starts compound path system nsubj starts path dep starts with jdk NN home NN root ROOT home compound home jdk msg NN please VB verify VB that IN you PRP run NN maven NN using VBG a DT jdk NN and CC not RB just RB a DT jre NN add VB violation NN root ROOT add dobj add violation problems NNS severity NN warning NN root ROOT warning compound warning severity version NN base NN root ROOT base compound base version prefix NN system NN path NN root ROOT path compound path system d NN get VB management NN key NN root ROOT get nsubj get d compound key management dobj get key msg NN d NN else RB if IN string NN utils NNS is VBZ not RB empty JJ root ROOT empty compound utils string nsubj empty utils cop empty is neg empty not d NN get VB system NN path NN root ROOT get nsubj get d compound path system dobj get path add VB violation NN root ROOT add dobj add violation problems NNS severity NN error NN root ROOT error compound error severity version NN base NN root ROOT base compound base version prefix NN system NN path NN root ROOT path compound path system d NN get VB management NN key NN root ROOT get nsubj get d compound key management dobj get key must MD be VB omitted VBN this DT field NN may MD only RB be VB specified VBN for IN a DT dependency NN with IN system NN scope NN d NN if IN request NN get VB validation NN level NN root ROOT get nsubj get request compound level validation dobj get level model NN building NN request NN validation NN root ROOT validation compound validation model compound validation building compound validation request level NN maven NN root ROOT maven compound maven level for IN exclusion NN exclusion NN d NN get VB exclusions NNS root ROOT get nsubj get d dobj get exclusions if IN request NN get VB validation NN level NN root ROOT get nsubj get request compound level validation dobj get level model NN building NN request NN validation NN root ROOT validation compound validation model compound validation building compound validation request level NN maven NN root ROOT maven compound maven level validate VB id NN root ROOT validate dobj validate id prefix NN exclusions NNS exclusion NN group NN id NN root ROOT id compound id exclusions compound id exclusion compound id group problems NNS severity NN warning NN root ROOT warning compound warning severity version NN v LS root ROOT v nsubj v version exclusion NN get VB group NN id NN root ROOT get nsubj get exclusion compound id group dobj get id d NN get VB management NN key NN root ROOT get nsubj get d compound key management dobj get key exclusion NN validate VB id NN root ROOT validate dobj validate id prefix NN exclusions NNS exclusion NN artifact NN id NN root ROOT id compound id exclusions compound id exclusion compound id artifact problems NNS severity NN warning NN root ROOT warning compound warning severity version NN v LS root ROOT v nsubj v version exclusion NN get VB artifact NN id NN root ROOT get nsubj get exclusion compound id artifact dobj get id d NN get VB management NN key NN root ROOT get nsubj get d compound key management dobj get key exclusion NN else RB validate VB id NN with IN wildcards NNS root ROOT validate dobj validate id case wildcards with nmod with validate wildcards prefix NN exclusions NNS exclusion NN group NN id NN root ROOT id compound id exclusions compound id exclusion compound id group problems NNS severity NN warning NN root ROOT warning compound warning severity version NN v LS root ROOT v nsubj v version exclusion NN get VB group NN id NN root ROOT get nsubj get exclusion compound id group dobj get id d NN get VB management NN key NN root ROOT get nsubj get d compound key management dobj get key exclusion NN validate VB id NN with IN wildcards NNS root ROOT validate dobj validate id case wildcards with nmod with validate wildcards prefix NN exclusions NNS exclusion NN artifact NN id NN root ROOT id compound id exclusions compound id exclusion compound id artifact problems NNS severity NN warning NN root ROOT warning compound warning severity version NN v LS root ROOT v nsubj v version exclusion NN get VB artifact NN id NN root ROOT get nsubj get exclusion compound id artifact dobj get id d NN get VB management NN key NN root ROOT get nsubj get d compound key management dobj get key exclusion NN,1,B2,maven/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java,550
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set plugin artifact repositories PARAMETER LIST list artifact repository plugin artifact repositories PARAMETER list artifact repository plugin artifact repositories TYPE list artifact repository NAME list artifact repository NAME list ARGUMENT LIST ARGUMENT NAME artifact repository NAME plugin artifact repositories BLOCK IF if plugin artifact repositories null this plugin artifact repositories new array list plugin artifact repositories else this plugin artifact repositories null CONDITION plugin artifact repositories null EXPR plugin artifact repositories null NAME plugin artifact repositories THEN this plugin artifact repositories new array list plugin artifact repositories BLOCK EXPR this plugin artifact repositories new array list plugin artifact repositories NAME this plugin artifact repositories NAME this NAME plugin artifact repositories CALL array list plugin artifact repositories NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR plugin artifact repositories NAME plugin artifact repositories ELSE else this plugin artifact repositories null BLOCK EXPR this plugin artifact repositories null NAME this plugin artifact repositories NAME this NAME plugin artifact repositories RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN plugin JJ artifact NN repositories NNS root ROOT set amod repositories plugin compound repositories artifact dobj set repositories list NN artifact NN repository NN root ROOT repository compound repository artifact plugin NN artifact NN repositories NNS root ROOT repositories compound repositories plugin compound repositories artifact if IN plugin NN artifact NN repositories NNS root ROOT repositories compound repositories plugin compound repositories artifact null JJ this DT plugin NN artifact NN repositories NNS new JJ array NN list NN root ROOT list compound list array plugin NN artifact NN repositories NNS root ROOT repositories compound repositories plugin compound repositories artifact else RB this DT plugin NN artifact NN repositories NNS null JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,378
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE model building request NAME model building request NAME set raw model PARAMETER LIST model raw model PARAMETER model raw model TYPE model NAME model NAME raw model BLOCK EXPR request set raw model raw model CALL request set raw model raw model NAME request set raw model NAME request NAME set raw model ARGUMENT LIST ARGUMENT EXPR raw model NAME raw model RETURN return this EXPR this NAME this override NN public NN model NN building NN request NN root ROOT request compound request model compound request building set VBN raw JJ model NN root ROOT set amod model raw dobj set model model NN raw JJ model NN root ROOT model amod model raw request NN set VBD raw JJ model NN root ROOT set nsubj set request amod model raw dobj set model raw JJ model NN root ROOT model amod model raw return NN this DT,1,A3,maven/maven-model-builder/src/main/java/org/apache/maven/model/building/FilterModelBuildingRequest.java,265
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set use legacy local repository PARAMETER LIST boolean use legacy local repository manager PARAMETER boolean use legacy local repository manager TYPE boolean NAME boolean NAME use legacy local repository manager BLOCK EXPR this use legacy local repository manager use legacy local repository manager NAME this use legacy local repository manager NAME this NAME use legacy local repository manager NAME use legacy local repository manager RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN use NN legacy NN local JJ repository NN root ROOT set compound repository use compound repository legacy amod repository local dobj set repository boolean NN use NN legacy NN local JJ repository JJ manager NN root ROOT manager compound manager use compound manager legacy amod manager local amod manager repository this DT use NN legacy NN local JJ repository JJ manager NN use NN legacy NN local JJ repository JJ manager NN root ROOT manager compound manager use compound manager legacy amod manager local amod manager repository return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,1227
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set repository cache PARAMETER LIST repository cache repository cache PARAMETER repository cache repository cache TYPE repository cache NAME repository cache NAME repository cache BLOCK EXPR this repository cache repository cache NAME this repository cache NAME this NAME repository cache NAME repository cache RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN repository JJ cache NN root ROOT set amod cache repository dobj set cache repository JJ cache NN root ROOT cache amod cache repository repository JJ cache NN root ROOT cache amod cache repository this DT repository JJ cache NN repository JJ cache NN root ROOT cache amod cache repository return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,1148
FUNCTION SPECIFIER public TYPE project builder configuration NAME project builder configuration NAME set build start time PARAMETER LIST date build start time PARAMETER date build start time TYPE date NAME date NAME build start time BLOCK EXPR this build start time build start time NAME this build start time NAME this NAME build start time NAME build start time RETURN return this EXPR this NAME this public NN project NN builder NN configuration NN root ROOT configuration compound configuration project compound configuration builder set VBN build VB start VB time NN root ROOT set xcomp set build ccomp build start dobj start time date NN build VB start VB time NN root ROOT build ccomp build start dobj start time this DT build VB start VB time NN build VB start VB time NN root ROOT build ccomp build start dobj start time return NN this DT,1,A3,maven/maven-compat/src/main/java/org/apache/maven/project/DefaultProjectBuilderConfiguration.java,101
DECL STMT SPECIFIER private TYPE final collection string SPECIFIER final NAME collection string NAME collection ARGUMENT LIST ARGUMENT NAME string NAME scopes to collect for current project private JJ final JJ collection NN string NN scopes NNS to TO collect VB for IN current JJ project NN root ROOT scopes mark collect to acl to scopes collect case project for amod project current nmod for collect project,0,N/A,maven/maven-core/src/main/java/org/apache/maven/lifecycle/internal/DependencyContext.java,46
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set goals PARAMETER LIST list string goals PARAMETER list string goals TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME goals BLOCK IF if goals null this goals new array list goals else this goals null CONDITION goals null EXPR goals null NAME goals THEN this goals new array list goals BLOCK EXPR this goals new array list goals NAME this goals NAME this NAME goals CALL array list goals NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR goals NAME goals ELSE else this goals null BLOCK EXPR this goals null NAME this goals NAME this NAME goals RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN goals NNS root ROOT set dobj set goals list NN string NN goals NNS if IN goals NNS null JJ this DT goals NNS new JJ array NN list NN root ROOT list compound list array goals NNS else RB this DT goals NNS null JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,488
FUNCTION SPECIFIER public TYPE string NAME string NAME get base version PARAMETER LIST BLOCK IF if base version null version null set base version internal version CONDITION base version null version null EXPR base version null version null NAME base version NAME version THEN set base version internal version BLOCK EXPR set base version internal version CALL set base version internal version NAME set base version internal ARGUMENT LIST ARGUMENT EXPR version NAME version RETURN return base version EXPR base version NAME base version public NN string NN get VB base NN version NN root ROOT get compound version base dobj get version if IN base NN version NN root ROOT version compound version base null JJ version NN null JJ set VBN base NN version NN internal JJ root ROOT internal amod version set compound version base nsubj internal version version NN return NN base NN version NN root ROOT version compound version base,1,A1,maven/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java,362
FUNCTION SPECIFIER private TYPE void NAME void NAME validate effective repository PARAMETER LIST model problem collector problems model building request request PARAMETER model problem collector problems model building request request TYPE model problem collector problems model building request NAME model problem collector NAME problems NAME model building request NAME request BLOCK IF if repository null severity err on get severity request model building request validation level maven validate banned characters prefix id problems err on version v repository get id null repository illegal repo id chars if local equals repository get id add violation problems err on version v prefix id null must not be local this identifier is reserved for the local repository using it for other repositories will corrupt your repository metadata repository if legacy equals repository get layout add violation problems severity warning version v prefix layout repository get id uses the unsupported value legacy artifact resolution might fail repository CONDITION repository null EXPR repository null NAME repository THEN severity err on get severity request model building request validation level maven validate banned characters prefix id problems err on version v repository get id null repository illegal repo id chars if local equals repository get id add violation problems err on version v prefix id null must not be local this identifier is reserved for the local repository using it for other repositories will corrupt your repository metadata repository if legacy equals repository get layout add violation problems severity warning version v prefix layout repository get id uses the unsupported value legacy artifact resolution might fail repository BLOCK DECL STMT TYPE severity NAME severity NAME err on INIT get severity request model building request validation level maven EXPR get severity request model building request validation level maven CALL get severity request model building request validation level maven NAME get severity ARGUMENT LIST ARGUMENT EXPR request NAME request ARGUMENT EXPR model building request validation level maven NAME model building request validation level maven NAME model building request NAME validation level maven EXPR validate banned characters prefix id problems err on version v repository get id null repository illegal repo id chars CALL validate banned characters prefix id problems err on version v repository get id null repository illegal repo id chars NAME validate banned characters ARGUMENT LIST ARGUMENT EXPR prefix id NAME prefix ARGUMENT EXPR problems NAME problems ARGUMENT EXPR err on NAME err on ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR repository get id CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST ARGUMENT EXPR null ARGUMENT EXPR repository NAME repository ARGUMENT EXPR illegal repo id chars NAME illegal repo id chars IF if local equals repository get id add violation problems err on version v prefix id null must not be local this identifier is reserved for the local repository using it for other repositories will corrupt your repository metadata repository CONDITION local equals repository get id EXPR local equals repository get id CALL equals repository get id NAME equals ARGUMENT LIST ARGUMENT EXPR repository get id CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST THEN add violation problems err on version v prefix id null must not be local this identifier is reserved for the local repository using it for other repositories will corrupt your repository metadata repository BLOCK EXPR add violation problems err on version v prefix id null must not be local this identifier is reserved for the local repository using it for other repositories will corrupt your repository metadata repository CALL add violation problems err on version v prefix id null must not be local this identifier is reserved for the local repository using it for other repositories will corrupt your repository metadata repository NAME add violation ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR err on NAME err on ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR prefix id NAME prefix ARGUMENT EXPR null ARGUMENT EXPR must not be local this identifier is reserved for the local repository using it for other repositories will corrupt your repository metadata ARGUMENT EXPR repository NAME repository IF if legacy equals repository get layout add violation problems severity warning version v prefix layout repository get id uses the unsupported value legacy artifact resolution might fail repository CONDITION legacy equals repository get layout EXPR legacy equals repository get layout CALL equals repository get layout NAME equals ARGUMENT LIST ARGUMENT EXPR repository get layout CALL repository get layout NAME repository get layout NAME repository NAME get layout ARGUMENT LIST THEN add violation problems severity warning version v prefix layout repository get id uses the unsupported value legacy artifact resolution might fail repository BLOCK EXPR add violation problems severity warning version v prefix layout repository get id uses the unsupported value legacy artifact resolution might fail repository CALL add violation problems severity warning version v prefix layout repository get id uses the unsupported value legacy artifact resolution might fail repository NAME add violation ARGUMENT LIST ARGUMENT EXPR problems NAME problems ARGUMENT EXPR severity warning NAME severity warning NAME severity NAME warning ARGUMENT EXPR version v NAME version v NAME version NAME v ARGUMENT EXPR prefix layout NAME prefix ARGUMENT EXPR repository get id CALL repository get id NAME repository get id NAME repository NAME get id ARGUMENT LIST ARGUMENT EXPR uses the unsupported value legacy artifact resolution might fail ARGUMENT EXPR repository NAME repository private JJ void NN validate VB effective JJ repository NN root ROOT validate amod repository effective dobj validate repository model NN problem NN collector NN root ROOT collector compound collector model compound collector problem problems NNS model NN building NN request NN root ROOT request compound request model compound request building request NN if IN repository NN null JJ severity NN err VB on IN root ROOT err compound prt err on get VB severity NN root ROOT get dobj get severity request NN model NN building NN request NN validation NN root ROOT validation compound validation model compound validation building compound validation request level NN maven NN root ROOT maven compound maven level validate VB banned VBN characters NNS root ROOT validate amod characters banned dobj validate characters prefix NN id NN problems NNS err VB on IN root ROOT err compound prt err on version NN v LS root ROOT v nsubj v version repository JJ get VB id NN root ROOT repository dep repository get dobj get id null JJ repository NN illegal JJ repo NN id NN chars VBZ root ROOT chars amod id illegal compound id repo nsubj chars id if IN local JJ equals VBZ repository JJ get VB id NN root ROOT repository dep repository get dobj get id add VB violation NN root ROOT add dobj add violation problems NNS err VB on IN root ROOT err compound prt err on version NN v LS root ROOT v nsubj v version prefix NN id NN null JJ must MD not RB be VB local JJ this DT identifier NN is VBZ reserved VBN for IN the DT local JJ repository NN using VBG it PRP for IN other JJ repositories NNS will MD corrupt JJ your PRP$ repository NN metadata NN repository NN if IN legacy NN equals VBZ repository NN get VB layout NN root ROOT get nsubj get repository dobj get layout add VB violation NN root ROOT add dobj add violation problems NNS severity NN warning NN root ROOT warning compound warning severity version NN v LS root ROOT v nsubj v version prefix NN layout NN repository JJ get VB id NN root ROOT repository dep repository get dobj get id uses NNS the DT unsupported JJ value NN legacy NN artifact NN resolution NN might MD fail VB repository NN void validate ANTONYM ANTONYM,1,B2,maven/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java,671
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME illegal repo id chars INIT illegal fs chars EXPR illegal fs chars NAME illegal fs chars private JJ static JJ final JJ string NN illegal JJ repo NN id NN chars VBZ root ROOT chars amod id illegal compound id repo nsubj chars id illegal JJ fs NN chars VBZ root ROOT chars amod fs illegal nsubj chars fs,1,E1,maven/maven-settings-builder/src/main/java/org/apache/maven/settings/validation/DefaultSettingsValidator.java,49
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE org eclipse aether metadata metadata NAME org eclipse aether metadata metadata NAME org NAME eclipse NAME aether NAME metadata NAME metadata NAME set properties PARAMETER LIST map string string properties PARAMETER map string string properties TYPE map string string NAME map string string NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME string NAME properties BLOCK RETURN return this EXPR this NAME this override NN public NN org NN eclipse NN aether NN metadata NN metadata NN root ROOT metadata compound metadata org compound metadata eclipse compound metadata aether compound metadata metadata set VBN properties NNS root ROOT set dobj set properties map NN string NN string NN properties NNS return NN this DT,1,A3,maven/maven-aether-provider/src/main/java/org/apache/maven/repository/internal/MavenMetadata.java,131
FUNCTION SPECIFIER private TYPE project builder NAME project builder NAME get project builder PARAMETER LIST BLOCK IF if project builder null return project builder CONDITION project builder null EXPR project builder null NAME project builder THEN return project builder BLOCK RETURN return project builder EXPR project builder NAME project builder TRY try project builder container lookup project builder class catch component lookup exception e won t happen BLOCK EXPR project builder container lookup project builder class NAME project builder CALL container lookup project builder class NAME container lookup NAME container NAME lookup ARGUMENT LIST ARGUMENT EXPR project builder class NAME project builder class NAME project builder NAME class CATCH catch component lookup exception e won t happen PARAMETER LIST component lookup exception e PARAMETER component lookup exception e TYPE component lookup exception NAME component lookup exception NAME e BLOCK COMMENT won t happen RETURN return project builder EXPR project builder NAME project builder private JJ project NN builder NN root ROOT builder compound builder project get VB project NN builder NN root ROOT get compound builder project dobj get builder if IN project NN builder NN root ROOT builder compound builder project null JJ return NN project NN builder NN root ROOT builder compound builder project try VB project NN builder NN root ROOT builder compound builder project container NN lookup NN root ROOT lookup compound lookup container project NN builder NN class NN catch NN component NN lookup NN exception NN root ROOT exception compound exception component compound exception lookup e SYM won t happen root ROOT happen aux happen won nsubj happen t return NN project NN builder NN root ROOT builder compound builder project,0,N/A,maven/maven-core/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java,519
FUNCTION SPECIFIER private TYPE file NAME file NAME get settings PARAMETER LIST string name PARAMETER string name TYPE string NAME string NAME name BLOCK RETURN return new file src test resources settings factory name xml get absolute file EXPR new file src test resources settings factory name xml get absolute file CALL file src test resources settings factory name xml NAME file ARGUMENT LIST ARGUMENT EXPR src test resources settings factory name xml NAME name CALL get absolute file NAME get absolute file ARGUMENT LIST private JJ file NN get VB settings NNS root ROOT get dobj get settings string NN name NN return NN new JJ file NN src NN test NN resources NNS root ROOT resources compound resources src compound resources test settings NNS factory NN root ROOT factory compound factory settings name NN xml NN get VB absolute JJ file NN root ROOT get amod file absolute dobj get file,1,B6,maven/maven-settings-builder/src/test/java/org/apache/maven/settings/building/DefaultSettingsBuilderFactoryTest.java,33
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE maven execution request NAME maven execution request NAME set user properties PARAMETER LIST properties user properties PARAMETER properties user properties TYPE properties NAME properties NAME user properties BLOCK IF if user properties null this user properties new properties this user properties put all user properties else this user properties null CONDITION user properties null EXPR user properties null NAME user properties THEN this user properties new properties this user properties put all user properties BLOCK EXPR this user properties new properties NAME this user properties NAME this NAME user properties CALL properties NAME properties ARGUMENT LIST EXPR this user properties put all user properties CALL this user properties put all user properties NAME this user properties put all NAME this NAME user properties NAME put all ARGUMENT LIST ARGUMENT EXPR user properties NAME user properties ELSE else this user properties null BLOCK EXPR this user properties null NAME this user properties NAME this NAME user properties RETURN return this EXPR this NAME this override NN public NN maven NN execution NN request NN root ROOT request compound request maven compound request execution set VBN user NN properties NNS root ROOT set compound properties user dobj set properties properties NNS user NN properties NNS root ROOT properties compound properties user if IN user NN properties NNS root ROOT properties compound properties user null JJ this DT user NN properties NNS new JJ properties NNS this DT user NN properties NNS put VBD all DT user NN properties NNS root ROOT properties compound properties user else RB this DT user NN properties NNS null JJ return NN this DT,1,A3,maven/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java,548
COMMENT FUNCTION SPECIFIER public TYPE list artifact metadata NAME list artifact metadata NAME list ARGUMENT LIST ARGUMENT NAME artifact metadata NAME get classpath PARAMETER LIST BLOCK RETURN return classpath EXPR classpath NAME classpath public NN list NN artifact NN metadata NN root ROOT metadata compound metadata artifact get VB classpath NN root ROOT get dobj get classpath return NN classpath NN,1,A4,maven/maven-compat/src/main/java/org/apache/maven/repository/metadata/ClasspathContainer.java,74
DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME initialize INIT x EXPR x public NN static JJ final JJ int NN initialize VB x NN,1,D2,javacv/src/main/java/org/bytedeco/javacv/FlyCapture2FrameGrabber.java,166
COMMENT information associated with the link samples field DECL STMT SPECIFIER public TYPE int NAME int NAME sample rate information associated with the link samples field root ROOT information acl information associated case field with det field the compound field link compound field samples nmod with associated field information associated with the link samples field root ROOT information acl information associated case field with det field the compound field link compound field samples nmod with associated field public NN int NN sample NN rate NN root ROOT rate compound rate sample,0,N/A,javacv/src/main/java/org/bytedeco/javacv/Frame.java,84
FUNCTION SPECIFIER public TYPE double NAME double NAME get constraint error PARAMETER LIST BLOCK EXPR update CALL update NAME update ARGUMENT LIST RETURN return constraint error EXPR constraint error NAME constraint error public NN double RB get VB constraint NN error NN root ROOT get compound error constraint dobj get error update VB return NN constraint NN error NN root ROOT error compound error constraint,1,A1,javacv/src/main/java/org/bytedeco/javacv/ProjectiveTransformer.java,345
FUNCTION SPECIFIER public TYPE cl image d NAME cl image d NAME cl image d INDEX NAME get images cl PARAMETER LIST BLOCK EXPR images cl template cl pyramid level NAME images cl NAME images cl INDEX EXPR NAME template cl pyramid level NAME template cl INDEX pyramid level EXPR pyramid level NAME pyramid level EXPR images cl target cl pyramid level NAME images cl NAME images cl INDEX EXPR NAME target cl pyramid level NAME target cl INDEX pyramid level EXPR pyramid level NAME pyramid level EXPR images cl transformed cl pyramid level NAME images cl NAME images cl INDEX EXPR NAME transformed cl pyramid level NAME transformed cl INDEX pyramid level EXPR pyramid level NAME pyramid level EXPR images cl residual cl pyramid level NAME images cl NAME images cl INDEX EXPR NAME residual cl pyramid level NAME residual cl INDEX pyramid level EXPR pyramid level NAME pyramid level EXPR images cl mask cl pyramid level NAME images cl NAME images cl INDEX EXPR NAME mask cl pyramid level NAME mask cl INDEX pyramid level EXPR pyramid level NAME pyramid level RETURN return images cl EXPR images cl NAME images cl public NN cl NN image NN d NN root ROOT d compound d cl compound d image get VB images NNS cl NN root ROOT get compound cl images dobj get cl images NNS cl VBP root ROOT cl nsubj cl images template NN cl NN root ROOT cl compound cl template pyramid NN level NN root ROOT level compound level pyramid images NNS cl VBP root ROOT cl nsubj cl images target NN cl NN root ROOT cl compound cl target pyramid NN level NN root ROOT level compound level pyramid images NNS cl VBP root ROOT cl nsubj cl images transformed VBN cl NN root ROOT cl amod cl transformed pyramid NN level NN root ROOT level compound level pyramid images NNS cl VBP root ROOT cl nsubj cl images residual JJ cl NN root ROOT cl amod cl residual pyramid NN level NN root ROOT level compound level pyramid images NNS cl VBP root ROOT cl nsubj cl images mask NN cl NN root ROOT cl compound cl mask pyramid NN level NN root ROOT level compound level pyramid return NN images NNS cl VBP root ROOT cl nsubj cl images,1,A1,javacv/src/main/java/org/bytedeco/javacv/GNImageAlignerCL.java,313
DECL STMT SPECIFIER protected TYPE int NAME int NAME image width protected VBN int NN image NN width NN root ROOT width compound width image,0,N/A,javacv/src/main/java/org/bytedeco/javacv/FrameRecorder.java,105
DECL STMT SPECIFIER protected TYPE int NAME int NAME num gains INIT EXPR protected VBN int NN num NN gains NNS root ROOT gains compound gains num,0,N/A,javacv/src/main/java/org/bytedeco/javacv/ProjectiveColorTransformer.java,51
COMMENT DECL STMT SPECIFIER private TYPE thread local cv mat NAME thread local cv mat NAME thread local ARGUMENT LIST ARGUMENT NAME cv mat NAME local src pts private JJ thread NN local JJ root ROOT local nmod npmod local thread cv NN mat NN root ROOT mat compound mat cv local JJ src NN pts NNS root ROOT pts amod pts local compound pts src,1,E1,javacv/src/main/java/org/bytedeco/javacv/MarkedPlane.java,107
DECL STMT SPECIFIER protected TYPE cv mat NAME cv mat NAME cv mat INDEX NAME h INIT null EXPR null protected VBN cv NN mat NN root ROOT mat compound mat cv h NN null JJ,1,D1,javacv/src/main/java/org/bytedeco/javacv/ProCamTransformer.java,82
DECL STMT SPECIFIER private SPECIFIER static TYPE final boolean SPECIFIER final NAME boolean NAME windows INIT loader get platform starts with windows EXPR loader get platform starts with windows CALL loader get platform NAME loader get platform NAME loader NAME get platform ARGUMENT LIST CALL starts with windows NAME starts with ARGUMENT LIST ARGUMENT EXPR windows private JJ static JJ final JJ boolean NN windows NNS loader NN get VB platform NN root ROOT get nsubj get loader dobj get platform starts NNS with IN root ROOT starts dep starts with windows NNS,1,E1,javacv/src/main/java/org/bytedeco/javacv/OpenCVFrameRecorder.java,75
DECL STMT SPECIFIER private TYPE int NAME int NAME samples channels private JJ int NN samples NNS channels NNS root ROOT channels compound channels samples,1,E1,javacv/src/main/java/org/bytedeco/javacv/FFmpegFrameRecorder.java,267
FUNCTION TYPE cl buffer byte buffer NAME cl buffer byte buffer NAME cl buffer ARGUMENT LIST ARGUMENT NAME byte buffer NAME get buffer PARAMETER LIST java cvcl context PARAMETER java cvcl context TYPE java cvcl NAME java cvcl NAME context BLOCK DECL STMT TYPE int NAME int NAME struct size INIT dot size dot size dot size EXPR dot size dot size dot size NAME dot size NAME dot size NAME dot size IF if buffer null buffer get cl size struct size reduce size if buffer null buffer release buffer context get cl context create byte buffer struct size reduce size byte buffer byte buffer buffer get buffer byte buffer position src dst dot byte buffer as float buffer byte buffer position dot size dst dst dot byte buffer as float buffer byte buffer rewind CONDITION buffer null buffer get cl size struct size reduce size EXPR buffer null buffer get cl size struct size reduce size NAME buffer CALL buffer get cl size NAME buffer get cl size NAME buffer NAME get cl size ARGUMENT LIST NAME struct size NAME reduce size THEN if buffer null buffer release buffer context get cl context create byte buffer struct size reduce size byte buffer byte buffer buffer get buffer byte buffer position src dst dot byte buffer as float buffer byte buffer position dot size dst dst dot byte buffer as float buffer byte buffer rewind BLOCK IF if buffer null buffer release CONDITION buffer null EXPR buffer null NAME buffer THEN buffer release BLOCK EXPR buffer release CALL buffer release NAME buffer release NAME buffer NAME release ARGUMENT LIST EXPR buffer context get cl context create byte buffer struct size reduce size NAME buffer CALL context get cl context NAME context get cl context NAME context NAME get cl context ARGUMENT LIST CALL create byte buffer struct size reduce size NAME create byte buffer ARGUMENT LIST ARGUMENT EXPR struct size reduce size NAME struct size NAME reduce size DECL STMT TYPE byte buffer NAME byte buffer NAME byte buffer INIT buffer get buffer EXPR buffer get buffer CALL buffer get buffer NAME buffer get buffer NAME buffer NAME get buffer ARGUMENT LIST EXPR byte buffer position CALL byte buffer position NAME byte buffer position NAME byte buffer NAME position ARGUMENT LIST ARGUMENT EXPR EXPR src dst dot byte buffer as float buffer NAME src dst dot CALL byte buffer as float buffer NAME byte buffer as float buffer NAME byte buffer NAME as float buffer ARGUMENT LIST EXPR byte buffer position dot size CALL byte buffer position dot size NAME byte buffer position NAME byte buffer NAME position ARGUMENT LIST ARGUMENT EXPR dot size NAME dot size EXPR dst dst dot byte buffer as float buffer NAME dst dst dot CALL byte buffer as float buffer NAME byte buffer as float buffer NAME byte buffer NAME as float buffer ARGUMENT LIST EXPR byte buffer rewind CALL byte buffer rewind NAME byte buffer rewind NAME byte buffer NAME rewind ARGUMENT LIST RETURN return buffer EXPR buffer NAME buffer cl NN buffer NN root ROOT buffer compound buffer cl byte NN buffer NN root ROOT buffer compound buffer byte get VB buffer NN root ROOT get dobj get buffer java NN cvcl NN root ROOT cvcl compound cvcl java context NN int NN struct NN size NN root ROOT size compound size struct dot NN size NN root ROOT size compound size dot dot NN size NN root ROOT size compound size dot dot NN size NN root ROOT size compound size dot if IN buffer NN null JJ buffer NN get VB cl NN size NN root ROOT get nsubj get buffer compound size cl dobj get size struct NN size NN root ROOT size compound size struct reduce VB size NN root ROOT reduce dobj reduce size if IN buffer NN null JJ buffer NN release NN root ROOT release compound release buffer buffer NN context NN get VB cl NN context NN root ROOT get nsubj get context compound context cl dobj get context create VB byte NN buffer NN root ROOT create compound buffer byte dobj create buffer struct NN size NN root ROOT size compound size struct reduce VB size NN root ROOT reduce dobj reduce size byte NN buffer NN root ROOT buffer compound buffer byte byte NN buffer NN root ROOT buffer compound buffer byte buffer NN get VB buffer NN root ROOT get nsubj get buffer dobj get buffer byte NN buffer NN position NN root ROOT position compound position byte compound position buffer src NN dst NN dot NN root ROOT dot compound dot src compound dot dst byte NN buffer NN as IN float NN buffer NN root ROOT buffer compound buffer byte case buffer as compound buffer float nmod as buffer buffer byte NN buffer NN position NN root ROOT position compound position byte compound position buffer dot NN size NN root ROOT size compound size dot dst NN dst NN dot NN root ROOT dot compound dot dst compound dot dst byte NN buffer NN as IN float NN buffer NN root ROOT buffer compound buffer byte case buffer as compound buffer float nmod as buffer buffer byte NN buffer NN rewind NN root ROOT rewind compound rewind byte compound rewind buffer return NN buffer NN,1,A1,javacv/src/main/java/org/bytedeco/javacv/ImageTransformerCL.java,76
FUNCTION SPECIFIER public TYPE int NAME int NAME int INDEX NAME get rgb color order PARAMETER LIST BLOCK DECL STMT TYPE int NAME int NAME int INDEX NAME order INIT new int EXPR new int NAME int NAME int INDEX EXPR FOR for int i i i switch character to upper case color order char at i case b order i break case g order i break case r order i break default assert false CONTROL int i i i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i EXPR i NAME i INCR i EXPR i NAME i BLOCK SWITCH switch character to upper case color order char at i case b order i break case g order i break case r order i break default assert false CONDITION character to upper case color order char at i EXPR character to upper case color order char at i CALL character to upper case color order char at i NAME character to upper case NAME character NAME to upper case ARGUMENT LIST ARGUMENT EXPR color order char at i CALL color order char at i NAME color order char at NAME color order NAME char at ARGUMENT LIST ARGUMENT EXPR i NAME i BLOCK CASE case b EXPR b EXPR order i NAME order i NAME order INDEX i EXPR i NAME i BREAK break CASE case g EXPR g EXPR order i NAME order i NAME order INDEX i EXPR i NAME i BREAK break CASE case r EXPR r EXPR order i NAME order i NAME order INDEX i EXPR i NAME i BREAK break DEFAULT default ASSERT assert false EXPR false RETURN return order EXPR order NAME order public NN int NN get VB rgb NN color NN order NN root ROOT get compound order rgb compound order color dobj get order int NN order NN new JJ int NN for IN int NN i LS i LS i LS switch NN character NN to TO upper JJ case NN root ROOT character case case to amod case upper nmod to character case color NN order NN char NN at IN root ROOT char compound char color compound char order dep char at i LS case NN b NN order NN i LS break NN case NN g NN order NN i LS break NN case NN r NN order NN i LS break NN default NN assert VB false JJ return NN order NN,1,A1,javacv/src/main/java/org/bytedeco/javacv/ProjectiveDevice.java,333
DECL STMT SPECIFIER private TYPE int NAME int NAME int INDEX NAME got frame private JJ int NN got VBD frame NN root ROOT got dobj got frame,1,D1,javacv/src/main/java/org/bytedeco/javacv/FFmpegFrameGrabber.java,206
DECL STMT SPECIFIER private TYPE byte pointer NAME byte pointer NAME byte pointer INDEX NAME image ptr private JJ byte NN pointer NN root ROOT pointer compound pointer byte image NN ptr NN root ROOT ptr compound ptr image,1,D1,javacv/src/main/java/org/bytedeco/javacv/FFmpegFrameGrabber.java,199
FUNCTION SPECIFIER private TYPE double NAME double NAME double INDEX NAME set subspace internal PARAMETER LIST double p PARAMETER double p TYPE double NAME double MODIFIER NAME p BLOCK IF if inv fronto parallel h null return null CONDITION inv fronto parallel h null EXPR inv fronto parallel h null NAME inv fronto parallel h THEN return null BLOCK RETURN return null EXPR null DECL STMT TYPE double NAME double NAME double INDEX NAME dst INIT new double EXPR new double NAME double NAME double INDEX EXPR EXPR t put p p p CALL t put p p p NAME t put NAME t NAME put ARGUMENT LIST ARGUMENT EXPR p NAME p NAME p INDEX EXPR ARGUMENT EXPR p NAME p NAME p INDEX EXPR ARGUMENT EXPR p NAME p NAME p INDEX EXPR EXPR cv rodrigues t r null CALL cv rodrigues t r null NAME cv rodrigues ARGUMENT LIST ARGUMENT EXPR t NAME t ARGUMENT EXPR r NAME r ARGUMENT EXPR null EXPR t put p p p CALL t put p p p NAME t put NAME t NAME put ARGUMENT LIST ARGUMENT EXPR p NAME p NAME p INDEX EXPR ARGUMENT EXPR p NAME p NAME p INDEX EXPR ARGUMENT EXPR p NAME p NAME p INDEX EXPR COMMENT compute new h EXPR h put r get r get t get r get r get t get r get r get t get CALL h put r get r get t get r get r get t get r get r get t get NAME h put NAME h NAME put ARGUMENT LIST ARGUMENT EXPR r get CALL r get NAME r get NAME r NAME get ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR r get CALL r get NAME r get NAME r NAME get ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR t get CALL t get NAME t get NAME t NAME get ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR r get CALL r get NAME r get NAME r NAME get ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR r get CALL r get NAME r get NAME r NAME get ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR t get CALL t get NAME t get NAME t NAME get ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR r get CALL r get NAME r get NAME r NAME get ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR r get CALL r get NAME r get NAME r NAME get ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR t get CALL t get NAME t get NAME t NAME get ARGUMENT LIST ARGUMENT EXPR EXPR cv mat mul h inv fronto parallel h h CALL cv mat mul h inv fronto parallel h h NAME cv mat mul ARGUMENT LIST ARGUMENT EXPR h NAME h ARGUMENT EXPR inv fronto parallel h NAME inv fronto parallel h ARGUMENT EXPR h NAME h EXPR cv mat mul surface transformer get k h h CALL cv mat mul surface transformer get k h h NAME cv mat mul ARGUMENT LIST ARGUMENT EXPR surface transformer get k CALL surface transformer get k NAME surface transformer get k NAME surface transformer NAME get k ARGUMENT LIST ARGUMENT EXPR h NAME h ARGUMENT EXPR h NAME h EXPR cv mat mul h surface transformer get inv k h CALL cv mat mul h surface transformer get inv k h NAME cv mat mul ARGUMENT LIST ARGUMENT EXPR h NAME h ARGUMENT EXPR surface transformer get inv k CALL surface transformer get inv k NAME surface transformer get inv k NAME surface transformer NAME get inv k ARGUMENT LIST ARGUMENT EXPR h NAME h COMMENT compute new n rotation from the z axis EXPR cv gemm r t null t cv gemm a t CALL cv gemm r t null t cv gemm a t NAME cv gemm ARGUMENT LIST ARGUMENT EXPR r NAME r ARGUMENT EXPR t NAME t ARGUMENT EXPR ARGUMENT EXPR null ARGUMENT EXPR ARGUMENT EXPR t NAME t ARGUMENT EXPR cv gemm a t NAME cv gemm a t DECL STMT TYPE double NAME double NAME scale INIT t get EXPR t get CALL t get NAME t get NAME t NAME get ARGUMENT LIST ARGUMENT EXPR EXPR n put CALL n put NAME n put NAME n NAME put ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR ARGUMENT EXPR EXPR cv gemm r n scale null n CALL cv gemm r n scale null n NAME cv gemm ARGUMENT LIST ARGUMENT EXPR r NAME r ARGUMENT EXPR n NAME n ARGUMENT EXPR scale NAME scale ARGUMENT EXPR null ARGUMENT EXPR ARGUMENT EXPR n NAME n ARGUMENT EXPR COMMENT compute and set new three points DECL STMT TYPE double NAME double NAME double INDEX NAME src INIT projector transformer get reference points EXPR projector transformer get reference points CALL projector transformer get reference points NAME projector transformer get reference points NAME projector transformer NAME get reference points ARGUMENT LIST EXPR java cv perspective transform src dst projector transformer get inv k projector transformer get k projector transformer get r projector transformer get t n true CALL java cv perspective transform src dst projector transformer get inv k projector transformer get k projector transformer get r projector transformer get t n true NAME java cv perspective transform NAME java cv NAME perspective transform ARGUMENT LIST ARGUMENT EXPR src NAME src ARGUMENT EXPR dst NAME dst ARGUMENT EXPR projector transformer get inv k CALL projector transformer get inv k NAME projector transformer get inv k NAME projector transformer NAME get inv k ARGUMENT LIST ARGUMENT EXPR projector transformer get k CALL projector transformer get k NAME projector transformer get k NAME projector transformer NAME get k ARGUMENT LIST ARGUMENT EXPR projector transformer get r CALL projector transformer get r NAME projector transformer get r NAME projector transformer NAME get r ARGUMENT LIST ARGUMENT EXPR projector transformer get t CALL projector transformer get t NAME projector transformer get t NAME projector transformer NAME get t ARGUMENT LIST ARGUMENT EXPR n NAME n ARGUMENT EXPR true EXPR dst dst NAME dst NAME dst INDEX EXPR NAME dst NAME dst INDEX EXPR EXPR dst dst NAME dst NAME dst INDEX EXPR NAME dst NAME dst INDEX EXPR EXPR dst dst NAME dst NAME dst INDEX EXPR NAME dst NAME dst INDEX EXPR COMMENT compute and set new four points EXPR java cv perspective transform surface transformer get reference points dst h CALL java cv perspective transform surface transformer get reference points dst h NAME java cv perspective transform NAME java cv NAME perspective transform ARGUMENT LIST ARGUMENT EXPR surface transformer get reference points CALL surface transformer get reference points NAME surface transformer get reference points NAME surface transformer NAME get reference points ARGUMENT LIST ARGUMENT EXPR dst NAME dst ARGUMENT EXPR h NAME h RETURN return dst EXPR dst NAME dst private JJ double RB set VBN subspace NN internal JJ root ROOT set nmod npmod internal subspace xcomp set internal double RB p NN if IN inv NN fronto NN parallel NN h NN root ROOT h compound h inv compound h fronto compound h parallel null JJ return NN null JJ double RB dst IN new JJ double RB t NN put VBD root ROOT put nsubj put t p NN p NN p NN cv NN rodrigues NNS root ROOT rodrigues compound rodrigues cv t NN r NN null JJ t NN put VBD root ROOT put nsubj put t p NN p NN p NN compute new h root ROOT compute amod h new dobj compute h h NN put VBD root ROOT put nsubj put h r NN get VB root ROOT get nsubj get r r NN get VB root ROOT get nsubj get r t NN get VB root ROOT get nsubj get t r NN get VB root ROOT get nsubj get r r NN get VB root ROOT get nsubj get r t NN get VB root ROOT get nsubj get t r NN get VB root ROOT get nsubj get r r NN get VB root ROOT get nsubj get r t NN get VB root ROOT get nsubj get t cv NN mat NN mul NN root ROOT mul compound mul cv compound mul mat h NN inv NN fronto NN parallel NN h NN root ROOT h compound h inv compound h fronto compound h parallel h NN cv NN mat NN mul NN root ROOT mul compound mul cv compound mul mat surface NN transformer NN get VB k NN root ROOT get compound transformer surface nsubj get transformer dobj get k h NN h NN cv NN mat NN mul NN root ROOT mul compound mul cv compound mul mat h NN surface NN transformer NN get VBP inv NN k NN root ROOT get compound transformer surface nsubj get transformer compound k inv dobj get k h NN compute new n rotation from the z axis root ROOT compute amod rotation new compound rotation n dobj compute rotation case axis from det axis the compound axis z nmod from compute axis cv NN gemm NN root ROOT gemm compound gemm cv r NN t NN null JJ t NN cv NN gemm VBD a DT t NN root ROOT gemm nsubj gemm cv det t a dobj gemm t double RB scale NN t NN get VB n NN put VBD root ROOT put nsubj put n cv NN gemm NN root ROOT gemm compound gemm cv r NN n NN scale NN null JJ n NN compute and set new three points root ROOT compute cc compute and conj and compute set amod points new nummod points three dobj compute points double RB src NN projector NN transformer NN get VB reference NN points NNS root ROOT get compound transformer projector nsubj get transformer compound points reference dobj get points java NN cv NN perspective NN transform VB root ROOT transform compound perspective java compound perspective cv nsubj transform perspective src NN dst IN projector NN transformer NN get VBP inv NN k NN root ROOT get compound transformer projector nsubj get transformer compound k inv dobj get k projector NN transformer NN get VB k NN root ROOT get compound transformer projector nsubj get transformer dobj get k projector NN transformer NN get VB r NN root ROOT get compound transformer projector nsubj get transformer dobj get r projector NN transformer NN get VB t NN root ROOT get compound transformer projector nsubj get transformer dobj get t n NN true JJ dst IN dst IN dst IN dst IN dst IN dst IN compute and set new four points root ROOT compute cc compute and conj and compute set amod points new nummod points four dobj compute points java NN cv NN perspective NN transform VB root ROOT transform compound perspective java compound perspective cv nsubj transform perspective surface NN transformer NN get VB reference NN points NNS root ROOT get compound transformer surface nsubj get transformer compound points reference dobj get points dst IN h NN return NN dst IN,1,A3,javacv/src/main/java/org/bytedeco/javacv/ProCamTransformer.java,470
DECL STMT SPECIFIER protected TYPE cl image d NAME cl image d NAME cl image d INDEX NAME projector image cl INIT null EXPR null protected VBN cl NN image NN d NN root ROOT d compound d cl compound d image projector NN image NN cl NN root ROOT cl compound cl projector compound cl image null JJ,1,D1,javacv/src/main/java/org/bytedeco/javacv/ProCamTransformerCL.java,76
FUNCTION SPECIFIER public TYPE ipl image NAME ipl image NAME ipl image INDEX NAME get images PARAMETER LIST BLOCK EXPR images get template image NAME images NAME images INDEX EXPR CALL get template image NAME get template image ARGUMENT LIST EXPR images get target image NAME images NAME images INDEX EXPR CALL get target image NAME get target image ARGUMENT LIST EXPR images get transformed image NAME images NAME images INDEX EXPR CALL get transformed image NAME get transformed image ARGUMENT LIST EXPR images get residual image NAME images NAME images INDEX EXPR CALL get residual image NAME get residual image ARGUMENT LIST EXPR images get mask image NAME images NAME images INDEX EXPR CALL get mask image NAME get mask image ARGUMENT LIST RETURN return images EXPR images NAME images public NN ipl NN image NN root ROOT image compound image ipl get VB images NNS root ROOT get dobj get images images NNS get VB template NN image NN root ROOT get compound image template dobj get image images NNS get VB target NN image NN root ROOT get compound image target dobj get image images NNS get VB transformed VBN image NN root ROOT get amod image transformed dobj get image images NNS get VB residual JJ image NN root ROOT get amod image residual dobj get image images NNS get VB mask NN image NN root ROOT get compound image mask dobj get image return NN images NNS,0,N/A,javacv/src/main/java/org/bytedeco/javacv/GNImageAligner.java,445
FUNCTION SPECIFIER public TYPE cv rect NAME cv rect NAME get roi PARAMETER LIST BLOCK IF if residual update needed do roi CONDITION residual update needed EXPR residual update needed NAME residual update needed THEN do roi BLOCK EXPR do roi CALL do roi NAME do roi ARGUMENT LIST RETURN return roi EXPR roi NAME roi public NN cv NN rect NN root ROOT rect compound rect cv get VB roi NN root ROOT get dobj get roi if IN residual JJ update VBP needed VBN root ROOT needed amod update residual nsubj needed update do VB roi NN root ROOT do dobj do roi return NN roi NN,1,A1,javacv/src/main/java/org/bytedeco/javacv/GNImageAligner.java,435
DECL STMT SPECIFIER private TYPE int NAME int NAME int INDEX NAME maskrb private JJ int NN maskrb NN,1,D1,javacv/src/main/java/org/bytedeco/javacv/GNImageAlignerCL.java,139
COMMENT buffers to hold image pixels from multiple channels for a video frame most of the software supports packed data only but an array is provided to allow users to store images in a planar format as well DECL STMT SPECIFIER public TYPE buffer NAME buffer NAME buffer INDEX NAME image buffers to hold image pixels from multiple channels for a video frame root ROOT buffers mark hold to acl to buffers hold compound pixels image dobj hold pixels case channels from amod channels multiple nmod from hold channels case frame for det frame a compound frame video nmod for hold frame most of the software supports packed data only but an array is provided root ROOT supports nsubj supports most case software of det software the nmod of most software amod data packed dobj supports data advmod provided only cc only but det array an nsubjpass provided array auxpass provided is dep supports provided to allow users to store images in a planar format as well root ROOT allow mark allow to dobj allow users nsubj xsubj store users mark store to xcomp allow store dobj store images case format in det format a amod format planar nmod in store format advmod store as mwe as well public NN buffer NN image NN channels packed ANTONYM ANTONYM frame images ANTONYM ANTONYM hold allow ANTONYM ANTONYM hold channels ANTONYM ANTONYM hold packed ANTONYM ANTONYM hold supports ANTONYM ANTONYM image frame ANTONYM ANTONYM image video ANTONYM ANTONYM multiple only ANTONYM ANTONYM supports allow ANTONYM ANTONYM supports provided ANTONYM ANTONYM video images ANTONYM ANTONYM,0,N/A,javacv/src/main/java/org/bytedeco/javacv/Frame.java,81
FUNCTION SPECIFIER public TYPE int NAME int NAME get rows PARAMETER LIST BLOCK RETURN return rows EXPR rows NAME rows public NN int NN get VB rows NNS root ROOT get dobj get rows return NN rows NNS,1,B6,javacv/src/main/java/org/bytedeco/javacv/Marker.java,167
FUNCTION SPECIFIER public TYPE string NAME string NAME get filters PARAMETER LIST BLOCK RETURN return filters EXPR filters NAME filters public NN string NN get VB filters NNS root ROOT get dobj get filters return NN filters NNS,1,B6,javacv/src/main/java/org/bytedeco/javacv/FrameFilter.java,43
COMMENT do not change anything below this line DECL STMT SPECIFIER public SPECIFIER static TYPE int NAME int NAME int INDEX INDEX NAME label mat INIT new int blobrowcount blobcolcount EXPR new int blobrowcount blobcolcount NAME int blobrowcount blobcolcount NAME int INDEX blobrowcount EXPR blobrowcount NAME blobrowcount INDEX blobcolcount EXPR blobcolcount NAME blobcolcount do not change anything below this line root ROOT change aux change do neg change not dobj change anything case line below det line this nmod below change line public NN static JJ int NN label NN mat NN root ROOT mat compound mat label new JJ int NN blobrowcount NN blobcolcount NN,0,N/A,javacv/src/main/java/org/bytedeco/javacv/Blobs.java,91
DECL STMT TYPE byte pointer NAME byte pointer NAME byte pointer INDEX NAME image ptr byte NN pointer NN root ROOT pointer compound pointer byte image NN ptr NN root ROOT ptr compound ptr image,1,D1,javacv/src/main/java/org/bytedeco/javacv/FFmpegFrameFilter.java,148
COMMENT thresholding while we actually have three levels DECL STMT SPECIFIER private TYPE int NAME int NAME width INIT EXPR thresholding while we actually have three levels root ROOT thresholding mark have while nsubj have we advmod have actually advcl while thresholding have nummod levels three dobj have levels thresholding while we actually have three levels root ROOT thresholding mark have while nsubj have we advmod have actually advcl while thresholding have nummod levels three dobj have levels private JJ int NN width NN,0,N/A,javacv/src/main/java/org/bytedeco/javacv/MarkerDetector.java,112
COMMENT color radius for range checking in hsv color space DECL STMT SPECIFIER private TYPE scalar NAME scalar NAME m color radius INIT new scalar EXPR new scalar CALL scalar NAME scalar ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR ARGUMENT EXPR ARGUMENT EXPR color radius for range checking in hsv color space root ROOT radius compound radius color case checking for compound checking range nmod for radius checking case space in compound space hsv compound space color nmod in checking space private JJ scalar NN m NN color NN radius NN root ROOT radius compound radius m compound radius color new JJ scalar NN,0,N/A,opencv/samples/android/color-blob-detection/src/org/opencv/samples/colorblobdetect/ColorBlobDetector.java,21
DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME arch mips INIT x EXPR x public NN static JJ final JJ int NN arch JJ mips NNS root ROOT mips amod mips arch x NN,0,N/A,opencv/platforms/android/service/engine/src/org/opencv/engine/HardwareDetector.java,25
DECL STMT SPECIFIER private SPECIFIER static TYPE final byte buffer SPECIFIER final NAME byte buffer NAME empty binary INIT byte buffer allocate EXPR byte buffer allocate CALL byte buffer allocate NAME byte buffer allocate NAME byte buffer NAME allocate ARGUMENT LIST ARGUMENT EXPR private JJ static JJ final JJ byte NN buffer NN root ROOT buffer compound buffer byte empty JJ binary JJ root ROOT binary amod binary empty byte NN buffer NN allocate VBP root ROOT allocate compound buffer byte nsubj allocate buffer,1,D1,spark/sql/hive-thriftserver/src/main/java/org/apache/hive/service/cli/Column.java,325
DECL STMT SPECIFIER static TYPE final int SPECIFIER final NAME int NAME maximum page size bytes INIT EXPR static JJ final JJ int NN maximum NN page NN size NN bytes NNS root ROOT bytes amod bytes maximum compound bytes page compound bytes size,0,N/A,spark/core/src/main/java/org/apache/spark/shuffle/sort/PackedRecordPointer.java,38
COMMENT properties files multiple times DECL STMT SPECIFIER private TYPE map string string NAME map string string NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME string NAME effective config properties files multiple times root ROOT files nsubj files properties amod times multiple dobj files times private JJ map NN string NN string NN effective JJ config NN root ROOT config amod config effective,1,D1,spark/launcher/src/main/java/org/apache/spark/launcher/AbstractCommandBuilder.java,58
COMMENT temp storage for merges DECL STMT SPECIFIER private TYPE buffer NAME buffer NAME tmp temp storage for merges root ROOT storage compound storage temp case merges for nmod for storage merges private JJ buffer NN tmp NN,0,N/A,spark/core/src/main/java/org/apache/spark/util/collection/TimSort.java,367
COMMENT sets the value of the nested ints column field FUNCTION SPECIFIER public TYPE org apache spark sql execution datasources parquet test avro nested builder NAME org apache spark sql execution datasources parquet test avro nested builder NAME org NAME apache NAME spark NAME sql NAME execution NAME datasources NAME parquet NAME test NAME avro NAME nested NAME builder NAME set nested ints column PARAMETER LIST java util list java lang integer value PARAMETER java util list java lang integer value TYPE java util list java lang integer NAME java util list java lang integer NAME java NAME util NAME list java lang integer NAME list ARGUMENT LIST ARGUMENT NAME java lang integer NAME java NAME lang NAME integer NAME value BLOCK EXPR validate fields value CALL validate fields value NAME validate ARGUMENT LIST ARGUMENT EXPR fields CALL fields NAME fields ARGUMENT LIST INDEX EXPR ARGUMENT EXPR value NAME value EXPR this nested ints column value NAME this nested ints column NAME this NAME nested ints column NAME value EXPR field set flags true CALL field set flags NAME field set flags ARGUMENT LIST INDEX EXPR RETURN return this EXPR this NAME this sets the value of the nested ints column field root ROOT sets det value the dobj sets value case field of det field the amod field nested compound field ints compound field column nmod of value field public NN org NN apache NN spark VB sql JJ execution NN datasources NNS parquet JJ test NN avro NN nested JJ builder NN root ROOT spark compound apache org nsubj spark apache amod datasources sql compound datasources execution dobj spark datasources amod builder parquet compound builder test compound builder avro amod builder nested dep datasources builder set VBN nested JJ ints NNS column NN root ROOT set amod ints nested nsubj column ints dep set column java NN util NN list NN root ROOT list compound list java compound list util java NN lang NN integer NN root ROOT integer compound integer java compound integer lang value NN validate VB fields NNS value NN this DT nested JJ ints NNS column NN root ROOT column compound column ints value NN field NN set VBD flags NNS root ROOT set nsubj set field dobj set flags true JJ return NN this DT,1,A3,spark/sql/core/src/test/gen-java/org/apache/spark/sql/execution/datasources/parquet/test/avro/Nested.java,140
COMMENT bit mask for the lower bits of a long DECL STMT SPECIFIER private SPECIFIER static TYPE final long SPECIFIER final NAME long NAME mask long lower bits INIT l EXPR l bit mask for the lower bits of a long root ROOT mask advmod mask bit case bits for det bits the amod bits lower nmod for mask bits case long of det long a nmod of bits long bit mask for the lower bits of a long root ROOT mask advmod mask bit case bits for det bits the amod bits lower nmod for mask bits case long of det long a nmod of bits long private JJ static JJ final JJ long RB mask NN long RB lower JJR bits NNS root ROOT mask advmod lower long amod bits lower dobj mask bits l NN lower final ANTONYM ANTONYM,0,N/A,spark/core/src/main/java/org/apache/spark/shuffle/sort/PackedRecordPointer.java,56
DECL STMT SPECIFIER static TYPE final int SPECIFIER final NAME int NAME num partititons INIT EXPR static JJ final JJ int NN num NN partititons NNS root ROOT partititons compound partititons num,0,N/A,spark/core/src/test/java/org/apache/spark/shuffle/sort/UnsafeShuffleWriterSuite.java,70
COMMENT these are only updated by read external or read DECL STMT SPECIFIER private TYPE int NAME int NAME num bytes these are only updated by read external or read root ROOT updated nsubjpass updated these nsubj read these auxpass updated are advmod updated only case read by nmod agent updated read amod read external cc updated or conj or updated read private JJ int NN num NN bytes NNS root ROOT bytes compound bytes num,0,N/A,spark/common/unsafe/src/main/java/org/apache/spark/unsafe/types/UTF8String.java,55
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE hive conf NAME hive conf NAME get hive conf PARAMETER LIST BLOCK EXPR hive conf set var hive conf conf vars hivefetchoutputserde fetch work serde class CALL hive conf set var hive conf conf vars hivefetchoutputserde fetch work serde class NAME hive conf set var NAME hive conf NAME set var ARGUMENT LIST ARGUMENT EXPR hive conf conf vars hivefetchoutputserde NAME hive conf conf vars hivefetchoutputserde NAME hive conf NAME conf vars NAME hivefetchoutputserde ARGUMENT EXPR fetch work serde class NAME fetch work serde class RETURN return hive conf EXPR hive conf NAME hive conf override NN public NN hive VB conf NN root ROOT hive dobj hive conf get VB hive VB conf NN root ROOT get xcomp get hive dobj hive conf hive VB conf NN set VBN var NN root ROOT hive dobj hive conf acl conf set dobj set var hive VB conf FW conf FW vars FW hivefetchoutputserde NN root ROOT hive compound hivefetchoutputserde conf compound hivefetchoutputserde conf compound hivefetchoutputserde vars dobj hive hivefetchoutputserde fetch VB work NN serde NN class NN root ROOT fetch compound class work compound class serde dobj fetch class return NN hive VB conf NN root ROOT hive dobj hive conf,1,A1,spark/sql/hive-thriftserver/src/main/java/org/apache/hive/service/cli/session/HiveSessionImpl.java,322
COMMENT sets the value of the strings column field FUNCTION SPECIFIER public TYPE org apache spark sql execution datasources parquet test avro parquet avro compat builder NAME org apache spark sql execution datasources parquet test avro parquet avro compat builder NAME org NAME apache NAME spark NAME sql NAME execution NAME datasources NAME parquet NAME test NAME avro NAME parquet avro compat NAME builder NAME set strings column PARAMETER LIST java util list java lang string value PARAMETER java util list java lang string value TYPE java util list java lang string NAME java util list java lang string NAME java NAME util NAME list java lang string NAME list ARGUMENT LIST ARGUMENT NAME java lang string NAME java NAME lang NAME string NAME value BLOCK EXPR validate fields value CALL validate fields value NAME validate ARGUMENT LIST ARGUMENT EXPR fields CALL fields NAME fields ARGUMENT LIST INDEX EXPR ARGUMENT EXPR value NAME value EXPR this strings column value NAME this strings column NAME this NAME strings column NAME value EXPR field set flags true CALL field set flags NAME field set flags ARGUMENT LIST INDEX EXPR RETURN return this EXPR this NAME this sets the value of the strings column field root ROOT sets det value the dobj sets value case field of det field the compound field strings compound field column nmod of value field public NN org NN apache NN spark VB sql JJ execution NN datasources NNS parquet JJ test NN avro NN parquet NN avro NN compat NN builder NN root ROOT spark compound apache org nsubj spark apache amod datasources sql compound datasources execution dobj spark datasources amod builder parquet compound builder test compound builder avro compound builder parquet compound builder avro compound builder compat dep datasources builder set VBN strings NNS column NN root ROOT set compound column strings dobj set column java NN util NN list NN root ROOT list compound list java compound list util java NN lang NN string NN root ROOT string compound string java compound string lang value NN validate VB fields NNS value NN this DT strings NNS column NN value NN field NN set VBD flags NNS root ROOT set nsubj set field dobj set flags true JJ return NN this DT,1,A3,spark/sql/core/src/test/gen-java/org/apache/spark/sql/execution/datasources/parquet/test/avro/ParquetAvroCompat.java,168
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME get current key PARAMETER LIST THROWS throws io exception interrupted exception ARGUMENT EXPR io exception NAME io exception ARGUMENT EXPR interrupted exception NAME interrupted exception BLOCK RETURN return null EXPR null override NN public NN void NN get VB current JJ key NN root ROOT get amod key current dobj get key throws VBZ io NN exception NN root ROOT exception compound exception io interrupted JJ exception NN root ROOT exception amod exception interrupted return NN null JJ,1,B3,spark/sql/core/src/main/java/org/apache/spark/sql/execution/datasources/parquet/SpecificParquetRecordReaderBase.java,206
COMMENT a channel used to buffer input data for encryption the channel has an upper size bound so that if the input is larger than the allowed buffer it will be broken into multiple chunks DECL STMT SPECIFIER private TYPE byte buffer NAME byte buffer NAME current chunk a channel used to buffer input data for encryption the channel has an upper size bound root ROOT bound det channel a nsubj bound channel acl channel used mark buffer to xcomp used buffer compound data input nsubj has data case encryption for nmod for has encryption det channel the nsubj has channel ccomp buffer has det size an amod size upper dobj has size a channel used to buffer input data for encryption the channel has an upper size bound root ROOT bound det channel a nsubj bound channel acl channel used mark buffer to xcomp used buffer compound data input nsubj has data case encryption for nmod for has encryption det channel the nsubj has channel ccomp buffer has det size an amod size upper dobj has size so that if the input is larger than the allowed buffer it will be broken into multiple root ROOT so mwe so that mark larger if det input the nsubj larger input cop larger is dep so larger case buffer than det buffer the amod buffer allowed nmod than larger buffer nsubjpass broken it aux broken will auxpass broken be acl relcl buffer broken case multiple into nmod into broken multiple chunks private JJ byte NN buffer NN root ROOT buffer compound buffer byte current JJ chunk NN root ROOT chunk amod chunk current allowed will ANTONYM ANTONYM buffer broken ANTONYM ANTONYM has allowed ANTONYM ANTONYM has broken ANTONYM ANTONYM upper broken ANTONYM ANTONYM,0,N/A,spark/common/network-common/src/main/java/org/apache/spark/network/sasl/SaslEncryption.java,147
DECL STMT SPECIFIER private TYPE int NAME int NAME num records INIT EXPR private JJ int NN num NN records NNS root ROOT records compound records num,0,N/A,spark/core/src/main/java/org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillMerger.java,26
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE string NAME string NAME get secret key PARAMETER LIST string app id PARAMETER string app id TYPE string NAME string NAME app id BLOCK IF if app id equals this app id throw new illegal argument exception wrong app id CONDITION app id equals this app id EXPR app id equals this app id CALL app id equals this app id NAME app id equals NAME app id NAME equals ARGUMENT LIST ARGUMENT EXPR this app id NAME this app id NAME this NAME app id THEN throw new illegal argument exception wrong app id BLOCK THROW throw new illegal argument exception wrong app id EXPR new illegal argument exception wrong app id CALL illegal argument exception wrong app id NAME illegal argument exception ARGUMENT LIST ARGUMENT EXPR wrong app id RETURN return secret key EXPR secret key NAME secret key override NN public NN string NN get VB secret JJ key NN root ROOT get amod key secret dobj get key string NN app NN id NN root ROOT id compound id app if IN app NN id NN equals VBZ root ROOT equals compound id app nsubj equals id this DT app NN id NN throw VB new JJ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument wrong JJ app NN id NN root ROOT id compound id app return NN secret JJ key NN root ROOT key amod key secret,0,N/A,spark/common/network-shuffle/src/test/java/org/apache/spark/network/shuffle/ExternalShuffleSecuritySuite.java,116
DECL STMT SPECIFIER private TYPE int NAME int NAME num buckets private JJ int NN num NN buckets NNS root ROOT buckets compound buckets num,0,N/A,spark/sql/core/src/main/java/org/apache/spark/sql/execution/vectorized/AggregateHashMap.java,46
DECL STMT SPECIFIER private TYPE int NAME int NAME num rows INIT EXPR private JJ int NN num NN rows NNS root ROOT rows compound rows num,0,N/A,spark/sql/core/src/main/java/org/apache/spark/sql/execution/vectorized/AggregateHashMap.java,47
COMMENT number of keys defined in the map DECL STMT SPECIFIER private TYPE int NAME int NAME num keys number of keys defined in the map root ROOT number case keys of nmod of number keys acl keys defined case map in det map the nmod in defined map private JJ int NN num NN keys NNS root ROOT keys compound keys num,0,N/A,spark/core/src/main/java/org/apache/spark/unsafe/map/BytesToBytesMap.java,136
COMMENT a linked list for tracking all allocated data pages so that we can free all of our memory DECL STMT SPECIFIER private TYPE final linked list memory block SPECIFIER final NAME linked list memory block NAME linked list ARGUMENT LIST ARGUMENT NAME memory block NAME data pages INIT new linked list EXPR new linked list CALL linked list NAME linked list NAME linked list ARGUMENT LIST ARGUMENT LIST a linked list for tracking all allocated data pages so that we can free all of our memory root ROOT list det list a amod list linked mark tracking for acl for list tracking det pages all amod pages allocated compound pages data dobj tracking pages mark free so mwe so that nsubj free we aux free can advcl so that tracking free dobj free all case memory of nmod poss memory our nmod of all memory private JJ final JJ linked VBN list NN root ROOT list amod list linked memory NN block NN root ROOT block compound block memory data NNS pages NNS root ROOT pages compound pages data new JJ linked VBN list NN root ROOT list amod list linked,0,N/A,spark/core/src/main/java/org/apache/spark/unsafe/map/BytesToBytesMap.java,76
FUNCTION SPECIFIER public TYPE long NAME long NAME get num hash collisions PARAMETER LIST BLOCK IF if enable perf metrics throw new illegal state exception CONDITION enable perf metrics EXPR enable perf metrics NAME enable perf metrics THEN throw new illegal state exception BLOCK THROW throw new illegal state exception EXPR new illegal state exception CALL illegal state exception NAME illegal state exception ARGUMENT LIST RETURN return num hash collisions EXPR num hash collisions NAME num hash collisions public NN long RB get VB num NN hash NN collisions NNS root ROOT get compound collisions num compound collisions hash dobj get collisions if IN enable VB perf NN metrics NNS root ROOT enable compound metrics perf dobj enable metrics throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state return NN num NN hash NN collisions NNS root ROOT collisions compound collisions num compound collisions hash,0,N/A,spark/core/src/main/java/org/apache/spark/unsafe/map/BytesToBytesMap.java,874
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE operation handle NAME operation handle NAME get schemas PARAMETER LIST string catalog name string schema name PARAMETER string catalog name TYPE string NAME string NAME catalog name PARAMETER string schema name TYPE string NAME string NAME schema name THROWS throws hive sql exception ARGUMENT EXPR hive sql exception NAME hive sql exception BLOCK EXPR acquire true CALL acquire true NAME acquire ARGUMENT LIST ARGUMENT EXPR true DECL STMT TYPE operation manager NAME operation manager NAME operation manager INIT get operation manager EXPR get operation manager CALL get operation manager NAME get operation manager ARGUMENT LIST DECL STMT TYPE get schemas operation NAME get schemas operation NAME operation INIT operation manager new get schemas operation get session catalog name schema name EXPR operation manager new get schemas operation get session catalog name schema name CALL operation manager new get schemas operation get session catalog name schema name NAME operation manager new get schemas operation NAME operation manager NAME new get schemas operation ARGUMENT LIST ARGUMENT EXPR get session CALL get session NAME get session ARGUMENT LIST ARGUMENT EXPR catalog name NAME catalog name ARGUMENT EXPR schema name NAME schema name DECL STMT TYPE operation handle NAME operation handle NAME op handle INIT operation get handle EXPR operation get handle CALL operation get handle NAME operation get handle NAME operation NAME get handle ARGUMENT LIST TRY try operation run op handle set add op handle return op handle catch hive sql exception e operation manager close operation op handle throw e finally release true BLOCK EXPR operation run CALL operation run NAME operation run NAME operation NAME run ARGUMENT LIST EXPR op handle set add op handle CALL op handle set add op handle NAME op handle set add NAME op handle set NAME add ARGUMENT LIST ARGUMENT EXPR op handle NAME op handle RETURN return op handle EXPR op handle NAME op handle CATCH catch hive sql exception e operation manager close operation op handle throw e PARAMETER LIST hive sql exception e PARAMETER hive sql exception e TYPE hive sql exception NAME hive sql exception NAME e BLOCK EXPR operation manager close operation op handle CALL operation manager close operation op handle NAME operation manager close operation NAME operation manager NAME close operation ARGUMENT LIST ARGUMENT EXPR op handle NAME op handle THROW throw e EXPR e NAME e FINALLY finally release true BLOCK EXPR release true CALL release true NAME release ARGUMENT LIST ARGUMENT EXPR true override NN public NN operation NN handle VB root ROOT handle nsubj handle operation get VB schemas NNS root ROOT get dobj get schemas string NN catalog NN name NN root ROOT name compound name catalog string NN schema NN name NN root ROOT name compound name schema throws VBZ hive VB sql NN exception NN root ROOT hive compound exception sql dobj hive exception acquire NN true JJ operation NN manager NN root ROOT manager compound manager operation operation NN manager NN root ROOT manager compound manager operation get VB operation NN manager NN root ROOT get compound manager operation dobj get manager get VB schemas NNS operation NN root ROOT get compound operation schemas dobj get operation operation NN operation NN manager NN new JJ get VB schemas NNS operation NN root ROOT manager compound manager operation amod manager new ccomp new get compound operation schemas dobj get operation get VB session NN root ROOT get dobj get session catalog NN name NN root ROOT name compound name catalog schema NN name NN root ROOT name compound name schema operation NN handle VB root ROOT handle nsubj handle operation op NN handle VB root ROOT handle nsubj handle op operation NN get VB handle VB root ROOT handle nsubj handle operation aux handle get try VB operation NN run NN root ROOT run compound run operation op NN handle VB set VBN add VBP root ROOT add nsubj add op dep op handle acl handle set op NN handle VB root ROOT handle nsubj handle op return NN op NN handle VB root ROOT handle nsubj handle op catch NN hive VB sql NN exception NN root ROOT hive compound exception sql dobj hive exception e SYM operation NN manager NN close JJ operation NN root ROOT manager compound manager operation amod operation close dep manager operation op NN handle VB root ROOT handle nsubj handle op throw VB e SYM finally RB release NN true JJ,1,B6,spark/sql/hive-thriftserver/src/main/java/org/apache/hive/service/cli/session/HiveSessionImpl.java,442
COMMENT returns the memory page that contains the current record this is only valid if this is returned by link bytes to bytes map iterator FUNCTION SPECIFIER public TYPE memory block NAME memory block NAME get memory page PARAMETER LIST BLOCK RETURN return this memory page EXPR this memory page NAME this memory page NAME this NAME memory page returns the memory page that contains the current record root ROOT returns det page the compound page memory dobj returns page nsubj contains page ref page that acl relcl page contains det record the amod record current dobj contains record this is only valid if this is returned by link bytes to bytes map iterator root ROOT valid nsubj valid this cop valid is advmod valid only mark returned if nsubjpass returned this auxpass returned is advcl if valid returned case bytes by compound bytes link nmod agent returned bytes case bytes to nmod to returned bytes dep returned map dobj map iterator public NN memory NN block NN root ROOT block compound block memory get VB memory NN page NN root ROOT get compound page memory dobj get page return NN this DT memory NN page NN contains is ANTONYM ANTONYM contains returned ANTONYM ANTONYM returns contains ANTONYM ANTONYM,0,N/A,spark/core/src/main/java/org/apache/spark/unsafe/map/BytesToBytesMap.java,593
COMMENT returns a destructive iterator for iterating over the entries of this map it frees each page as it moves onto next one notice it is illegal to call any method on the map after destructive iterator has been called for efficiency all calls to next will return the same link location object if any other lookups or operations are performed on this map while iterating over it including lookup the behavior of the returned iterator is undefined FUNCTION SPECIFIER public TYPE map iterator NAME map iterator NAME destructive iterator PARAMETER LIST BLOCK RETURN return new map iterator num values loc true EXPR new map iterator num values loc true CALL map iterator num values loc true NAME map iterator ARGUMENT LIST ARGUMENT EXPR num values NAME num values ARGUMENT EXPR loc NAME loc ARGUMENT EXPR true returns a destructive iterator for iterating over the entries of this map it frees each page root ROOT returns det iterator a amod iterator destructive dobj returns iterator mark iterating for acl for iterator iterating case entries over det entries the nmod over iterating entries case map of det map this nmod of entries map nsubj frees it acl relcl map frees det page each dobj frees page returns a destructive iterator for iterating over the entries of this map it frees each page root ROOT returns det iterator a amod iterator destructive dobj returns iterator mark iterating for acl for iterator iterating case entries over det entries the nmod over iterating entries case map of det map this nmod of entries map nsubj frees it acl relcl map frees det page each dobj frees page as it moves onto next one notice it is illegal to call any method on the map after root ROOT moves mark moves as nsubj moves it case notice onto amod notice next nummod notice one nmod onto moves notice nsubj illegal it nsubj xsubj call it cop illegal is acl relcl notice illegal mark call to xcomp illegal call det method any dobj call method case map on det map the nmod on method map advcl moves after as it moves onto next one notice it is illegal to call any method on the map after root ROOT moves mark moves as nsubj moves it case notice onto amod notice next nummod notice one nmod onto moves notice nsubj illegal it nsubj xsubj call it cop illegal is acl relcl notice illegal mark call to xcomp illegal call det method any dobj call method case map on det map the nmod on method map advcl moves after destructive iterator has been called root ROOT called amod iterator destructive nsubjpass called iterator aux called has auxpass called been for efficiency all calls to next will return the same link location object root ROOT return case efficiency for nmod for return efficiency det calls all nsubj return calls case next to nmod to calls next aux return will det object the amod object same compound object link compound object location dobj return object if any other lookups or operations are performed on this map while iterating over it including root ROOT performed mark performed if det lookups any amod lookups other nsubjpass performed lookups cc lookups or conj or lookups operations nsubjpass performed operations auxpass performed are case map on det map this nmod on performed map mark iterating while advcl while performed iterating case it over nmod over iterating it dep iterating including lookup the behavior of the returned iterator is undefined root ROOT undefined csubj undefined lookup det behavior the dobj lookup behavior case iterator of det iterator the amod iterator returned nmod of behavior iterator cop undefined is public NN map NN iterator NN root ROOT iterator compound iterator map destructive JJ iterator NN root ROOT iterator amod iterator destructive return NN new JJ map NN iterator NN root ROOT iterator compound iterator map num NN values NNS root ROOT values compound values num loc NN true JJ all over ANTONYM ANTONYM any all ANTONYM ANTONYM has return ANTONYM ANTONYM map been ANTONYM ANTONYM map is ANTONYM ANTONYM returns has ANTONYM ANTONYM,0,N/A,spark/core/src/main/java/org/apache/spark/unsafe/map/BytesToBytesMap.java,424
COMMENT a simple data structure to track the pool of clients between two peer nodes DECL STMT SPECIFIER private TYPE final concurrent hash map socket address client pool SPECIFIER final NAME concurrent hash map socket address client pool NAME concurrent hash map ARGUMENT LIST ARGUMENT NAME socket address ARGUMENT NAME client pool NAME connection pool a simple data structure to track the pool of clients between two peer nodes root ROOT structure det structure a amod structure simple compound structure data mark track to acl to structure track det pool the dobj track pool case clients of nmod of pool clients case nodes between nummod nodes two compound nodes peer nmod between track nodes a simple data structure to track the pool of clients between two peer nodes root ROOT structure det structure a amod structure simple compound structure data mark track to acl to structure track det pool the dobj track pool case clients of nmod of pool clients case nodes between nummod nodes two compound nodes peer nmod between track nodes private JJ final JJ concurrent JJ hash NN map NN root ROOT map amod map concurrent compound map hash socket NN address NN root ROOT address compound address socket client NN pool NN root ROOT pool compound pool client connection NN pool NN root ROOT pool compound pool connection,0,N/A,spark/common/network-common/src/main/java/org/apache/spark/network/client/TransportClientFactory.java,81
DECL STMT SPECIFIER private SPECIFIER static TYPE void NAME void NAME check answer ARGUMENT LIST ARGUMENT EXPR dataset row actual string error message query test module check answer actual expected NAME dataset row NAME dataset ARGUMENT LIST ARGUMENT NAME row NAME actual NAME string NAME error message CALL query test module check answer actual expected NAME query test module check answer NAME query test NAME module NAME check answer ARGUMENT LIST ARGUMENT EXPR actual NAME actual ARGUMENT EXPR expected NAME expected ARGUMENT EXPR error message null assert fail error message NAME error message BLOCK EXPR assert fail error message CALL assert fail error message NAME assert fail NAME assert NAME fail ARGUMENT LIST ARGUMENT EXPR error message NAME error message private JJ static JJ void NN check NN answer NN root ROOT answer compound answer check dataset NN row NN actual JJ string NN error NN message NN root ROOT message compound message error query NN test NN root ROOT test compound test query module NN check NN answer NN root ROOT answer compound answer check actual JJ expected VBN if IN error NN message NN root ROOT message compound message error null JJ assert VB fail VBP error NN message NN root ROOT message compound message error actual expected ANTONYM ANTONYM,1,B2,spark/sql/hive/src/test/java/org/apache/spark/sql/hive/JavaDataFrameSuite.java,43
DECL STMT TYPE int NAME int NAME num hash functions private JJ int NN num NN hash NN functions NNS root ROOT functions compound functions num compound functions hash,0,N/A,spark/common/sketch/src/main/java/org/apache/spark/util/sketch/BloomFilterImpl.java,24
COMMENT return the peak memory used so far in bytes FUNCTION SPECIFIER public TYPE long NAME long NAME get peak memory used bytes PARAMETER LIST BLOCK EXPR update peak memory used CALL update peak memory used NAME update peak memory used ARGUMENT LIST RETURN return peak memory used bytes EXPR peak memory used bytes NAME peak memory used bytes return the peak memory used so far in bytes root ROOT return det memory the compound memory peak dobj return memory acl memory used advmod far so advmod used far case bytes in nmod in used bytes public NN long RB get VB peak JJ memory NN used VBN bytes NNS root ROOT used dep used get amod memory peak nsubj used memory dobj used bytes update VB peak NN memory NN used VBN root ROOT update compound memory peak dobj update memory acl memory used return NN peak JJ memory NN used VBN bytes NNS root ROOT used amod memory peak nsubj used memory dobj used bytes,1,A1,spark/core/src/main/java/org/apache/spark/unsafe/map/BytesToBytesMap.java,849
DECL STMT SPECIFIER private TYPE final string SPECIFIER final NAME string NAME pam service names private JJ final JJ string NN pam NN service NN names NNS root ROOT names compound names pam compound names service,1,E1,spark/sql/hive-thriftserver/src/main/java/org/apache/hive/service/auth/PamAuthenticationProviderImpl.java,27
DECL STMT SPECIFIER private TYPE java util list java lang string NAME java util list java lang string NAME java NAME util NAME list java lang string NAME list ARGUMENT LIST ARGUMENT NAME java lang string NAME java NAME lang NAME string NAME strings column private JJ java NN util NN list NN root ROOT list compound list java compound list util java NN lang NN string NN root ROOT string compound string java compound string lang strings NNS column NN root ROOT column compound column strings,0,N/A,spark/sql/core/src/test/gen-java/org/apache/spark/sql/execution/datasources/parquet/test/avro/ParquetAvroCompat.java,119
FUNCTION SPECIFIER public TYPE int NAME int NAME get port PARAMETER LIST BLOCK IF if port throw new illegal state exception server not initialized CONDITION port EXPR port NAME port THEN throw new illegal state exception server not initialized BLOCK THROW throw new illegal state exception server not initialized EXPR new illegal state exception server not initialized CALL illegal state exception server not initialized NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR server not initialized RETURN return port EXPR port NAME port public NN int NN get VB port NN root ROOT get dobj get port if IN port NN throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state server NN not RB initialized VBN return NN port NN,0,N/A,spark/common/network-common/src/main/java/org/apache/spark/network/server/TransportServer.java,81
DECL STMT SPECIFIER public SPECIFIER static TYPE final long SPECIFIER final NAME long NAME default fetch max rows INIT EXPR public NN static JJ final JJ long RB default NN fetch VB max NN rows NNS root ROOT fetch nsubj fetch default compound rows max dobj fetch rows,0,N/A,spark/sql/hive-thriftserver/src/main/java/org/apache/hive/service/cli/operation/Operation.java,49
COMMENT bit mask for the lower bits of a long DECL STMT SPECIFIER private SPECIFIER static TYPE final long SPECIFIER final NAME long NAME mask long lower bits INIT x ffffffffffffl EXPR x ffffffffffffl bit mask for the lower bits of a long root ROOT mask advmod mask bit case bits for det bits the amod bits lower nmod for mask bits case long of det long a nmod of bits long bit mask for the lower bits of a long root ROOT mask advmod mask bit case bits for det bits the amod bits lower nmod for mask bits case long of det long a nmod of bits long private JJ static JJ final JJ long RB mask NN long RB lower JJR bits NNS root ROOT mask advmod lower long amod bits lower dobj mask bits x CC ffffffffffffl NN root ROOT ffffffffffffl compound ffffffffffffl x lower final ANTONYM ANTONYM,0,N/A,spark/core/src/main/java/org/apache/spark/memory/TaskMemoryManager.java,77
DECL STMT SPECIFIER public TYPE final int SPECIFIER final NAME int NAME num chunks public NN final JJ int NN num NN chunks NNS root ROOT chunks compound chunks num,0,N/A,spark/common/network-shuffle/src/main/java/org/apache/spark/network/shuffle/protocol/StreamHandle.java,32
COMMENT return value of link bytes to bytes map lookup object long int DECL STMT SPECIFIER private TYPE long NAME long NAME num hash collisions INIT EXPR return value of link bytes to bytes map lookup object long int root ROOT map compound value return nsubj map value case bytes of compound bytes link nmod of value bytes case bytes to nmod to value bytes compound int lookup compound int object amod int long dobj map int private JJ long RB num NN hash NN collisions NNS root ROOT collisions compound collisions num compound collisions hash,0,N/A,spark/core/src/main/java/org/apache/spark/unsafe/map/BytesToBytesMap.java,168
COMMENT return the peak memory used so far in bytes FUNCTION SPECIFIER public TYPE long NAME long NAME get peak memory used bytes PARAMETER LIST BLOCK EXPR update peak memory used CALL update peak memory used NAME update peak memory used ARGUMENT LIST RETURN return peak memory used bytes EXPR peak memory used bytes NAME peak memory used bytes return the peak memory used so far in bytes root ROOT return det memory the compound memory peak dobj return memory acl memory used advmod far so advmod used far case bytes in nmod in used bytes public NN long RB get VB peak JJ memory NN used VBN bytes NNS root ROOT used dep used get amod memory peak nsubj used memory dobj used bytes update VB peak NN memory NN used VBN root ROOT update compound memory peak dobj update memory acl memory used return NN peak JJ memory NN used VBN bytes NNS root ROOT used amod memory peak nsubj used memory dobj used bytes,1,A1,spark/core/src/main/java/org/apache/spark/unsafe/map/BytesToBytesMap.java,849
COMMENT returns the total amount of time spent resizing this map in nanoseconds FUNCTION SPECIFIER public TYPE long NAME long NAME get time spent resizing ns PARAMETER LIST BLOCK IF if enable perf metrics throw new illegal state exception CONDITION enable perf metrics EXPR enable perf metrics NAME enable perf metrics THEN throw new illegal state exception BLOCK THROW throw new illegal state exception EXPR new illegal state exception CALL illegal state exception NAME illegal state exception ARGUMENT LIST RETURN return time spent resizing ns EXPR time spent resizing ns NAME time spent resizing ns returns the total amount of time spent resizing this map in nanoseconds root ROOT returns det amount the amod amount total nsubj spent amount case time of nmod of amount time acl relcl returns spent xcomp spent resizing det map this dobj resizing map case nanoseconds in nmod in resizing nanoseconds public NN long RB get VB time NN spent VBN resizing VBG ns NNS root ROOT get dobj get time acl time spent xcomp spent resizing dobj resizing ns if IN enable VB perf NN metrics NNS root ROOT enable compound metrics perf dobj enable metrics throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state return NN time NN spent VBD resizing VBG ns NNS root ROOT spent nsubj spent time xcomp spent resizing dobj resizing ns returns spent ANTONYM ANTONYM,0,N/A,spark/core/src/main/java/org/apache/spark/unsafe/map/BytesToBytesMap.java,857
FUNCTION ANNOTATION test NAME test SPECIFIER public TYPE void NAME void NAME return different clients for different servers PARAMETER LIST THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK DECL STMT TYPE transport client factory NAME transport client factory NAME factory INIT context create client factory EXPR context create client factory CALL context create client factory NAME context create client factory NAME context NAME create client factory ARGUMENT LIST DECL STMT TYPE transport client NAME transport client NAME c INIT factory create client test utils get local host server get port EXPR factory create client test utils get local host server get port CALL factory create client test utils get local host server get port NAME factory create client NAME factory NAME create client ARGUMENT LIST ARGUMENT EXPR test utils get local host CALL test utils get local host NAME test utils get local host NAME test utils NAME get local host ARGUMENT LIST ARGUMENT EXPR server get port CALL server get port NAME server get port NAME server NAME get port ARGUMENT LIST DECL STMT TYPE transport client NAME transport client NAME c INIT factory create client test utils get local host server get port EXPR factory create client test utils get local host server get port CALL factory create client test utils get local host server get port NAME factory create client NAME factory NAME create client ARGUMENT LIST ARGUMENT EXPR test utils get local host CALL test utils get local host NAME test utils get local host NAME test utils NAME get local host ARGUMENT LIST ARGUMENT EXPR server get port CALL server get port NAME server get port NAME server NAME get port ARGUMENT LIST EXPR assert true c is active CALL assert true c is active NAME assert true ARGUMENT LIST ARGUMENT EXPR c is active CALL c is active NAME c is active NAME c NAME is active ARGUMENT LIST EXPR assert true c is active CALL assert true c is active NAME assert true ARGUMENT LIST ARGUMENT EXPR c is active CALL c is active NAME c is active NAME c NAME is active ARGUMENT LIST EXPR assert true c c CALL assert true c c NAME assert true ARGUMENT LIST ARGUMENT EXPR c c NAME c NAME c EXPR factory close CALL factory close NAME factory close NAME factory NAME close ARGUMENT LIST test NN public NN void NN return VB different JJ clients NNS for IN different JJ servers NNS root ROOT return amod clients different dobj return clients case servers for amod servers different nmod for return servers throws VBZ io NN exception NN root ROOT exception compound exception io transport NN client NN factory NN root ROOT factory compound factory transport compound factory client factory NN context NN create VB client NN factory NN root ROOT create nsubj create context compound factory client dobj create factory transport NN client NN root ROOT client compound client transport c NN factory NN create VB client NN root ROOT create nsubj create factory dobj create client test NN utils NNS get VBP local JJ host NN root ROOT get compound utils test nsubj get utils amod host local dobj get host server NN get VB port NN root ROOT get nsubj get server dobj get port transport NN client NN root ROOT client compound client transport c NN factory NN create VB client NN root ROOT create nsubj create factory dobj create client test NN utils NNS get VBP local JJ host NN root ROOT get compound utils test nsubj get utils amod host local dobj get host server NN get VB port NN root ROOT get nsubj get server dobj get port assert VB true JJ root ROOT assert xcomp assert true c NN is VBZ active JJ root ROOT active nsubj active c cop active is assert VB true JJ root ROOT assert xcomp assert true c NN is VBZ active JJ root ROOT active nsubj active c cop active is assert VB true JJ root ROOT assert xcomp assert true c NN c NN factory NN close NN root ROOT close compound close factory,1,B3,spark/common/network-common/src/test/java/org/apache/spark/network/TransportClientFactorySuite.java,145
DECL STMT SPECIFIER private TYPE int NAME int NAME num records private JJ int NN num NN records NNS root ROOT records compound records num,0,N/A,spark/core/src/main/java/org/apache/spark/unsafe/map/BytesToBytesMap.java,242
FUNCTION ANNOTATION test NAME test SPECIFIER public TYPE void NAME void NAME return error rpc PARAMETER LIST THROWS throws exception ARGUMENT EXPR exception NAME exception BLOCK DECL STMT TYPE rpc result NAME rpc result NAME res INIT send rpc return error ok EXPR send rpc return error ok CALL send rpc return error ok NAME send rpc ARGUMENT LIST ARGUMENT EXPR return error ok EXPR assert true res success messages is empty CALL assert true res success messages is empty NAME assert true ARGUMENT LIST ARGUMENT EXPR res success messages is empty CALL res success messages is empty NAME res success messages is empty NAME res NAME success messages NAME is empty ARGUMENT LIST EXPR assert errors contain res error messages sets new hash set returned ok CALL assert errors contain res error messages sets new hash set returned ok NAME assert errors contain ARGUMENT LIST ARGUMENT EXPR res error messages NAME res error messages NAME res NAME error messages ARGUMENT EXPR sets new hash set returned ok CALL sets new hash set returned ok NAME sets new hash set NAME sets NAME new hash set ARGUMENT LIST ARGUMENT EXPR returned ok test NN public NN void NN return NN error NN rpc NN root ROOT rpc compound rpc return compound rpc error throws VBZ exception NN rpc NN result NN root ROOT result compound result rpc res NNS send VB rpc NN root ROOT send dobj send rpc return NN error NN ok NN root ROOT ok compound ok error assert VB true JJ root ROOT assert xcomp assert true res NNS success NN messages NNS is VBZ empty JJ root ROOT empty compound messages res compound messages success nsubj empty messages cop empty is assert VB errors NNS contain VBP root ROOT contain csubj contain assert dobj assert errors res NNS error NN messages NNS root ROOT messages compound messages res compound messages error sets NNS new JJ hash JJ set NN root ROOT sets amod set new amod set hash dobj sets set returned VBN ok NN,1,B3,spark/common/network-common/src/test/java/org/apache/spark/network/RpcIntegrationSuite.java,147
COMMENT number of values defined in the map a key could have multiple values DECL STMT SPECIFIER private TYPE int NAME int NAME num values number of values defined in the map a key could have multiple values root ROOT number case values of nmod of number values acl values defined case map in det map the nmod in have map det key a nsubj have key aux have could ccomp defined have amod values multiple dobj have values number of values defined in the map a key could have multiple values root ROOT number case values of nmod of number values acl values defined case map in det map the nmod in have map det key a nsubj have key aux have could ccomp defined have amod values multiple dobj have values private JJ int NN num NN values NNS root ROOT values compound values num,0,N/A,spark/core/src/main/java/org/apache/spark/unsafe/map/BytesToBytesMap.java,141
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME num vertices INIT EXPR private JJ static JJ final JJ int NN num NN vertices NNS root ROOT vertices compound vertices num,0,N/A,spark/examples/src/main/java/org/apache/spark/examples/JavaTC.java,40
FUNCTION SPECIFIER public TYPE string NAME string NAME get type name PARAMETER LIST BLOCK IF if type name null return type name else return type get name CONDITION type name null EXPR type name null NAME type name THEN return type name BLOCK RETURN return type name EXPR type name NAME type name ELSE else return type get name BLOCK RETURN return type get name EXPR type get name CALL type get name NAME type get name NAME type NAME get name ARGUMENT LIST public NN string NN get VB type NN name NN root ROOT get compound name type dobj get name if IN type NN name NN root ROOT name compound name type null JJ return NN type NN name NN root ROOT name compound name type else RB return NN type NN get VB name NN root ROOT type acl type get dobj get name,0,N/A,spark/sql/hive-thriftserver/src/main/java/org/apache/hive/service/cli/TypeDescriptor.java,78
FUNCTION SPECIFIER public SPECIFIER static TYPE char block array NAME char block array NAME open PARAMETER LIST input stream in PARAMETER input stream in TYPE input stream NAME input stream NAME in THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK DECL STMT TYPE object input stream NAME object input stream NAME ois INIT null EXPR null TRY try ois new object input stream in char block array a char block array ois read object return a finally if ois null ois close BLOCK EXPR ois new object input stream in NAME ois CALL object input stream in NAME object input stream ARGUMENT LIST ARGUMENT EXPR in NAME in DECL STMT TYPE char block array NAME char block array NAME a INIT char block array ois read object EXPR char block array ois read object NAME char block array CALL ois read object NAME ois read object NAME ois NAME read object ARGUMENT LIST RETURN return a EXPR a NAME a FINALLY finally if ois null ois close BLOCK IF if ois null ois close CONDITION ois null EXPR ois null NAME ois THEN ois close BLOCK EXPR ois close CALL ois close NAME ois close NAME ois NAME close ARGUMENT LIST public NN static JJ char NN block NN array NN root ROOT array compound array char compound array block open JJ input NN stream NN root ROOT stream compound stream input in IN throws VBZ io NN exception NN root ROOT exception compound exception io object NN input NN stream NN root ROOT stream compound stream object compound stream input ois NN null JJ try VB ois NN new JJ object NN input NN stream NN root ROOT stream compound stream object compound stream input in IN char NN block NN array NN root ROOT array compound array char compound array block a DT char NN block NN array NN root ROOT array compound array char compound array block ois NN read VBD object NN root ROOT read nsubj read ois dobj read object return NN a DT finally RB if IN ois NN null JJ ois NN close NN root ROOT close compound close ois open static ANTONYM ANTONYM open throws ANTONYM ANTONYM,0,N/A,Lucene/lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/CharBlockArray.java,198
COMMENT decrease to a low number like for testing DECL STMT SPECIFIER private TYPE int NAME int NAME index interval bits decrease to a low number like for testing root ROOT decrease case number to det number a amod number low nmod to decrease number case testing like case testing for nmod for number testing private JJ int NN index NN interval NN bits NNS root ROOT bits compound bits index compound bits interval,0,N/A,Lucene/lucene/misc/src/java/org/apache/lucene/uninverting/DocTermOrds.java,121
FUNCTION ANNOTATION override NAME override SPECIFIER public SPECIFIER final TYPE char term attribute NAME char term attribute NAME set length PARAMETER LIST int length PARAMETER int length TYPE int NAME int NAME length BLOCK IF if length term buffer length throw new illegal argument exception length length exceeds the size of the term buffer term buffer length CONDITION length term buffer length EXPR length term buffer length NAME length NAME term buffer length NAME term buffer NAME length THEN throw new illegal argument exception length length exceeds the size of the term buffer term buffer length BLOCK THROW throw new illegal argument exception length length exceeds the size of the term buffer term buffer length EXPR new illegal argument exception length length exceeds the size of the term buffer term buffer length CALL illegal argument exception length length exceeds the size of the term buffer term buffer length NAME illegal argument exception ARGUMENT LIST ARGUMENT EXPR length length exceeds the size of the term buffer term buffer length NAME length NAME term buffer length NAME term buffer NAME length EXPR term length length NAME term length NAME length RETURN return this EXPR this NAME this override NN public NN final JJ char NN term NN attribute NN root ROOT attribute compound attribute char compound attribute term set VBN length NN root ROOT set dobj set length int NN length NN if IN length NN term NN buffer NN length NN root ROOT length compound length term compound length buffer throw VB new JJ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument length NN length NN exceeds VBZ the DT size NN of IN the DT term NN buffer NN root ROOT buffer compound buffer term term NN buffer NN length NN root ROOT length compound length term compound length buffer term NN length NN root ROOT length compound length term length NN return NN this DT,1,A3,Lucene/lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl.java,72
COMMENT the top results DECL STMT SPECIFIER public TYPE final list result t SPECIFIER final NAME list result t NAME list ARGUMENT LIST ARGUMENT NAME result t NAME result ARGUMENT LIST ARGUMENT NAME t NAME top n the top results root ROOT results det results the amod results top public NN final JJ list NN result NN t NN top JJ n NN root ROOT n amod n top top result ANTONYM ANTONYM top results ANTONYM ANTONYM,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/util/fst/Util.java,576
COMMENT with repeats not so simple FUNCTION SPECIFIER private TYPE boolean NAME boolean NAME init complex PARAMETER LIST THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK COMMENT system err println init complex doc min doc EXPR place first positions CALL place first positions NAME place first positions ARGUMENT LIST IF if advance repeat groups return false p ps exhausted CONDITION advance repeat groups EXPR advance repeat groups CALL advance repeat groups NAME advance repeat groups ARGUMENT LIST THEN return false p ps exhausted BLOCK RETURN return false EXPR false COMMENT p ps exhausted EXPR fill queue CALL fill queue NAME fill queue ARGUMENT LIST RETURN return true EXPR true COMMENT p ps available with repeats not so simple root ROOT repeats case repeats with neg simple not advmod simple so dep repeats simple with repeats not so simple root ROOT repeats case repeats with neg simple not advmod simple so dep repeats simple private JJ boolean NN init NN complex NN root ROOT complex compound complex init throws VBZ io NN exception NN root ROOT exception compound exception io system err println init complex doc min doc root ROOT err nsubj err system compound doc println compound doc init compound doc complex compound doc doc compound doc min dobj err doc place NN first RB positions NNS root ROOT positions compound positions place advmod positions first if IN advance NN repeat NN groups NNS root ROOT groups compound groups advance compound groups repeat return NN false JJ p NN ps NNS root ROOT ps compound ps p exhausted VBN fill NN queue NN root ROOT queue compound queue fill return NN true JJ p NN ps NNS root ROOT ps compound ps p available JJ,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer.java,251
COMMENT extension of stored fields index file DECL STMT SPECIFIER static TYPE final int SPECIFIER final NAME int NAME version chunk stats INIT EXPR extension of stored fields index file root ROOT extension case file of amod file stored compound file fields compound file index nmod of extension file static JJ final JJ int NN version NN chunk NN stats NNS root ROOT stats compound stats version compound stats chunk,1,E1,Lucene/lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter.java,77
COMMENT true if max x plane intersects globe DECL STMT SPECIFIER protected TYPE final boolean SPECIFIER final NAME boolean NAME max x plane intersects true if max x plane intersects globe root ROOT true mark intersects if nsubj intersects max cc max x conj x max plane nsubj intersects plane advcl if true intersects dobj intersects globe protected VBN final JJ boolean NN max NN x CC plane NN intersects NNS root ROOT intersects compound intersects max cc max x conj x max plane compound intersects plane,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/StandardXYZSolid.java,44
COMMENT text that will appear between two unconnected passages DECL STMT SPECIFIER protected TYPE final string SPECIFIER final NAME string NAME ellipsis text that will appear between two unconnected passages root ROOT text nsubj appear text ref text that aux appear will acl relcl text appear case passages between nummod passages two amod passages unconnected nmod between appear passages protected VBN final JJ string NN ellipsis NN,0,N/A,Lucene/lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/DefaultPassageFormatter.java,31
COMMENT various query sanity checks on a searcher some checks are only done for instanceof index searcher see check query see check first skip to see check skip to see check explanations see check equal FUNCTION SPECIFIER public SPECIFIER static TYPE void NAME void NAME check PARAMETER LIST random random query q index searcher s PARAMETER random random TYPE random NAME random NAME random PARAMETER query q TYPE query NAME query NAME q PARAMETER index searcher s TYPE index searcher NAME index searcher NAME s BLOCK EXPR check random q s true CALL check random q s true NAME check ARGUMENT LIST ARGUMENT EXPR random NAME random ARGUMENT EXPR q NAME q ARGUMENT EXPR s NAME s ARGUMENT EXPR true various query sanity checks on a searcher some checks are only done for root ROOT checks amod checks various compound checks query compound checks sanity case searcher on det searcher a nmod on checks searcher det checks some nsubjpass done checks auxpass done are advmod done only acl relcl searcher done nmod done for instanceof index searcher root ROOT searcher amod searcher instanceof compound searcher index see check query root ROOT see compound query check dobj see query see check first skip to root ROOT see nsubj skip check advmod skip first ccomp see skip dep skip to see check skip to root ROOT see xcomp see check dobj check skip dep check to see check explanations root ROOT see compound explanations check dobj see explanations see check equal root ROOT see nsubj equal check xcomp see equal public NN static JJ void NN check NN random JJ random JJ query NN q SYM index NN searcher NN root ROOT searcher compound searcher index s NNS check NN random JJ q SYM s NNS true JJ some various ANTONYM ANTONYM,1,B2,Lucene/lucene/test-framework/src/java/org/apache/lucene/search/QueryUtils.java,113
COMMENT compressed giving i ds to unique sets of values code doc id set id ords DECL STMT SPECIFIER static TYPE final int SPECIFIER final NAME int NAME sorted set table INIT EXPR compressed giving i ds to unique sets of values root ROOT compressed xcomp compressed giving compound ds i dobj giving ds case sets to amod sets unique nmod to giving sets case values of nmod of sets values code doc id set id ords root ROOT set compound id code compound id doc nsubj set id compound ords id dobj set ords static JJ final JJ int NN sorted VBN set NN table NN root ROOT table amod table sorted compound table set,1,D2,Lucene/lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene50/Lucene50DocValuesFormat.java,106
COMMENT total number of references to term numbers DECL STMT SPECIFIER private TYPE long NAME long NAME memsz total number of references to term numbers root ROOT number amod number total case references of nmod of number references mark term to acl to references term dobj term numbers total number of references to term numbers root ROOT number amod number total case references of nmod of number references mark term to acl to references term dobj term numbers private JJ long RB memsz NN,0,N/A,Lucene/solr/core/src/java/org/apache/solr/uninverting/DocTermOrds.java,135
COMMENT maybe we should add a fst enum that supports this operation DECL STMT TYPE final ints ref builder SPECIFIER final NAME ints ref builder NAME scratch ints INIT new ints ref builder EXPR new ints ref builder CALL ints ref builder NAME ints ref builder ARGUMENT LIST maybe we should add a fst enum that supports this operation root ROOT add advmod add maybe nsubj add we aux add should det enum a compound enum fst dobj add enum nsubj supports enum ref enum that acl relcl enum supports det operation this dobj supports operation final JJ ints NNS ref NN builder NN root ROOT builder compound builder ints compound builder ref scratch NN ints NNS root ROOT ints compound ints scratch new JJ ints NNS ref NN builder NN root ROOT builder compound builder ints compound builder ref,0,N/A,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,827
COMMENT for asserts DECL STMT TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME last packed value for asserts root ROOT asserts case asserts for final JJ byte NN last JJ packed JJ value NN root ROOT value amod value last amod value packed,1,D1,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter.java,606
COMMENT number of docs to generate for testing DECL STMT SPECIFIER private SPECIFIER static TYPE int NAME int NAME no docs number of docs to generate for testing root ROOT number case docs of nmod of number docs mark generate to acl to number generate case testing for nmod for generate testing private JJ static JJ int NN no DT docs NNS root ROOT docs neg docs no,0,N/A,Lucene/lucene/misc/src/test/org/apache/lucene/uninverting/TestNumericTerms32.java,49
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME get bounds PARAMETER LIST bounds bounds PARAMETER bounds bounds TYPE bounds NAME bounds NAME bounds BLOCK EXPR super get bounds bounds CALL super get bounds bounds NAME super get bounds NAME super NAME get bounds ARGUMENT LIST ARGUMENT EXPR bounds NAME bounds COMMENT for building bounds order matters we want to traverse COMMENT never more than degrees longitude at a pop or we risk having the COMMENT bounds object get itself inverted so do the edges first FOR for path segment path segment segments path segment get bounds planet model bounds CONTROL path segment path segment segments INIT path segment path segment segments TYPE path segment NAME path segment NAME path segment RANGE segments EXPR segments NAME segments BLOCK EXPR path segment get bounds planet model bounds CALL path segment get bounds planet model bounds NAME path segment get bounds NAME path segment NAME get bounds ARGUMENT LIST ARGUMENT EXPR planet model NAME planet model ARGUMENT EXPR bounds NAME bounds FOR for segment endpoint path point end points path point get bounds planet model bounds CONTROL segment endpoint path point end points INIT segment endpoint path point end points TYPE segment endpoint NAME segment endpoint NAME path point RANGE end points EXPR end points NAME end points BLOCK EXPR path point get bounds planet model bounds CALL path point get bounds planet model bounds NAME path point get bounds NAME path point NAME get bounds ARGUMENT LIST ARGUMENT EXPR planet model NAME planet model ARGUMENT EXPR bounds NAME bounds override NN public NN void NN get VB bounds NNS root ROOT get dobj get bounds bounds NNS bounds NNS super JJ get VB bounds NNS bounds NNS for building bounds order matters we want to traverse root ROOT matters mark building for csubj matters building compound order bounds dobj building order nsubj want we nsubj xsubj traverse we ccomp matters want mark traverse to xcomp want traverse for building bounds order matters we want to traverse root ROOT matters mark building for csubj matters building compound order bounds dobj building order nsubj want we nsubj xsubj traverse we ccomp matters want mark traverse to xcomp want traverse never more than degrees longitude at a pop or we risk having the root ROOT longitude neg longitude never advmod degrees more mwe more than nummod longitude degrees case pop at det pop a nmod at longitude pop cc longitude or nsubj risk we conj or longitude risk xcomp risk having dobj having the bounds object get itself inverted so do the edges first root ROOT object nsubj object bounds ccomp object get nsubj inverted itself ccomp get inverted advmod do so xcomp inverted do det edges the dobj do edges advmod do first bounds object get itself inverted so do the edges first root ROOT object nsubj object bounds ccomp object get nsubj inverted itself ccomp get inverted advmod do so xcomp inverted do det edges the dobj do edges advmod do first for IN path NN segment NN root ROOT segment compound segment path path NN segment NN root ROOT segment compound segment path segments NNS path NN segment NN get VB bounds NNS root ROOT get compound segment path nsubj get segment dobj get bounds planet NN model NN root ROOT model compound model planet bounds NNS for IN segment NN endpoint NN root ROOT endpoint compound endpoint segment path NN point NN root ROOT point compound point path end NN points NNS root ROOT points compound points end path NN point NN get VB bounds NNS root ROOT get compound point path nsubj get point dobj get bounds planet NN model NN root ROOT model compound model planet bounds NNS,1,B6,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoStandardPath.java,291
DECL STMT SPECIFIER private TYPE final string SPECIFIER final NAME string NAME docs private JJ final JJ string NN docs NNS,1,E1,Lucene/lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSourceTest.java,36
DECL STMT TYPE int NAME int NAME num dirs int NN num NN dirs NNS root ROOT dirs compound dirs num,0,N/A,Lucene/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.java,410
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE int NAME int NAME set PARAMETER LIST int index long arr int off int len PARAMETER int index TYPE int NAME int NAME index PARAMETER long arr TYPE long NAME long NAME long INDEX NAME arr PARAMETER int off TYPE int NAME int NAME off PARAMETER int len TYPE int NAME int NAME len BLOCK ASSERT assert len len must be got len EXPR len len must be got len NAME len NAME len ASSERT assert index index value count EXPR index index value count NAME index NAME index NAME value count ASSERT assert off len arr length EXPR off len arr length NAME off NAME len NAME arr length NAME arr NAME length DECL STMT TYPE final int SPECIFIER final NAME int NAME sets INIT math min value count index len EXPR math min value count index len CALL math min value count index len NAME math min NAME math NAME min ARGUMENT LIST ARGUMENT EXPR value count index NAME value count NAME index ARGUMENT EXPR len NAME len FOR for int i index o off end index sets i end i o values i short arr o CONTROL int i index o off end index sets i end i o INIT int i index o off end index sets TYPE int NAME int NAME i INIT index EXPR index NAME index TYPE NAME o INIT off EXPR off NAME off TYPE NAME end INIT index sets EXPR index sets NAME index NAME sets CONDITION i end EXPR i end NAME i NAME end INCR i o EXPR i NAME i EXPR o NAME o BLOCK EXPR values i short arr o NAME values i NAME values INDEX i EXPR i NAME i NAME short NAME arr o NAME arr INDEX o EXPR o NAME o RETURN return sets EXPR sets NAME sets override NN public NN int NN set NN int NN index NN long RB arr IN int NN off IN int NN len NN assert VB len NN len NN must MD be VB got VBD len NN assert VB index NN index NN value NN count NN root ROOT count compound count value assert VB off IN len NN arr NN length NN root ROOT length compound length arr final JJ int NN sets NNS math NN min NN root ROOT min compound min math value NN count NN root ROOT count compound count value index NN len NN for IN int NN i LS index NN o NN off IN end NN index NN sets NNS i LS end NN i LS o NN values NNS i LS short RB arr IN o NN return NN sets NNS,1,A3,Lucene/lucene/core/src/java/org/apache/lucene/util/packed/Direct16.java,88
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE int NAME int NAME int INDEX NAME get int block PARAMETER LIST BLOCK DECL STMT TYPE int NAME int NAME int INDEX NAME b INIT new int int block pool int block size EXPR new int int block pool int block size NAME int int block pool int block size NAME int INDEX int block pool int block size EXPR int block pool int block size NAME int block pool int block size NAME int block pool NAME int block size EXPR bytes used add and get int block pool int block size integer bytes CALL bytes used add and get int block pool int block size integer bytes NAME bytes used add and get NAME bytes used NAME add and get ARGUMENT LIST ARGUMENT EXPR int block pool int block size integer bytes NAME int block pool int block size NAME int block pool NAME int block size NAME integer bytes NAME integer NAME bytes RETURN return b EXPR b NAME b override NN public NN int NN get VB int NN block NN root ROOT get compound block int dobj get block int NN b NN new JJ int NN int NN block NN pool NN int NN block NN size NN root ROOT size compound size block bytes NNS used VBD add VB and CC get VB root ROOT used nsubj used bytes nsubj get bytes dobj used add cc used and conj and used get int NN block NN pool NN int NN block NN size NN root ROOT size compound size block integer NN bytes NNS root ROOT bytes compound bytes integer return NN b NN,1,A1,Lucene/lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread.java,613
DECL STMT SPECIFIER private TYPE final string SPECIFIER final NAME string NAME delimiters private JJ final JJ string NN delimiters NNS,1,E1,Lucene/lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase.java,200
COMMENT if non null the segments file will be printed to this FUNCTION SPECIFIER public SPECIFIER static TYPE void NAME void NAME set info stream PARAMETER LIST print stream info stream PARAMETER print stream info stream TYPE print stream NAME print stream NAME info stream BLOCK EXPR segment infos info stream info stream NAME segment infos info stream NAME segment infos NAME info stream NAME info stream if non null root ROOT null mark null if amod null non the segments file will be printed to this root ROOT printed det file the compound file segments nsubjpass printed file aux printed will auxpass printed be case this to nmod to printed this public NN static JJ void NN set VBN info NN stream NN root ROOT set compound stream info dobj set stream print NN stream NN root ROOT stream compound stream print info NN stream NN root ROOT stream compound stream info segment NN infos NNS info NN stream NN root ROOT stream compound stream segment compound stream infos compound stream info info NN stream NN root ROOT stream compound stream info,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java,600
FUNCTION TYPE void NAME void NAME to string builder PARAMETER LIST string builder b PARAMETER string builder b TYPE string builder NAME string builder NAME b BLOCK SWITCH switch kind case regexp union b append exp to string builder b b append exp to string builder b b append break case regexp concatenation exp to string builder b exp to string builder b break case regexp intersection b append exp to string builder b b append exp to string builder b b append break case regexp optional b append exp to string builder b b append break case regexp repeat b append exp to string builder b b append break case regexp repeat min b append exp to string builder b b append append min append break case regexp repeat minmax b append exp to string builder b b append append min append append max append break case regexp complement b append exp to string builder b b append break case regexp char b append append code point c break case regexp char range b append append code point from append append code point to append break case regexp anychar b append break case regexp empty b append break case regexp string b append append s append break case regexp anystring b append break case regexp automaton b append append s append break case regexp interval string s integer to string min string s integer to string max b append if digits for int i s length i digits i b append b append s append if digits for int i s length i digits i b append b append s append break CONDITION kind EXPR kind NAME kind BLOCK CASE case regexp union EXPR regexp union NAME regexp union EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR EXPR exp to string builder b CALL exp to string builder b NAME exp to string builder NAME exp NAME to string builder ARGUMENT LIST ARGUMENT EXPR b NAME b EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR EXPR exp to string builder b CALL exp to string builder b NAME exp to string builder NAME exp NAME to string builder ARGUMENT LIST ARGUMENT EXPR b NAME b EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case regexp concatenation EXPR regexp concatenation NAME regexp concatenation EXPR exp to string builder b CALL exp to string builder b NAME exp to string builder NAME exp NAME to string builder ARGUMENT LIST ARGUMENT EXPR b NAME b EXPR exp to string builder b CALL exp to string builder b NAME exp to string builder NAME exp NAME to string builder ARGUMENT LIST ARGUMENT EXPR b NAME b BREAK break CASE case regexp intersection EXPR regexp intersection NAME regexp intersection EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR EXPR exp to string builder b CALL exp to string builder b NAME exp to string builder NAME exp NAME to string builder ARGUMENT LIST ARGUMENT EXPR b NAME b EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR EXPR exp to string builder b CALL exp to string builder b NAME exp to string builder NAME exp NAME to string builder ARGUMENT LIST ARGUMENT EXPR b NAME b EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case regexp optional EXPR regexp optional NAME regexp optional EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR EXPR exp to string builder b CALL exp to string builder b NAME exp to string builder NAME exp NAME to string builder ARGUMENT LIST ARGUMENT EXPR b NAME b EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case regexp repeat EXPR regexp repeat NAME regexp repeat EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR EXPR exp to string builder b CALL exp to string builder b NAME exp to string builder NAME exp NAME to string builder ARGUMENT LIST ARGUMENT EXPR b NAME b EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case regexp repeat min EXPR regexp repeat min NAME regexp repeat min EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR EXPR exp to string builder b CALL exp to string builder b NAME exp to string builder NAME exp NAME to string builder ARGUMENT LIST ARGUMENT EXPR b NAME b EXPR b append append min append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR CALL append min NAME append ARGUMENT LIST ARGUMENT EXPR min NAME min CALL append NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case regexp repeat minmax EXPR regexp repeat minmax NAME regexp repeat minmax EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR EXPR exp to string builder b CALL exp to string builder b NAME exp to string builder NAME exp NAME to string builder ARGUMENT LIST ARGUMENT EXPR b NAME b EXPR b append append min append append max append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR CALL append min NAME append ARGUMENT LIST ARGUMENT EXPR min NAME min CALL append NAME append ARGUMENT LIST ARGUMENT EXPR CALL append max NAME append ARGUMENT LIST ARGUMENT EXPR max NAME max CALL append NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case regexp complement EXPR regexp complement NAME regexp complement EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR EXPR exp to string builder b CALL exp to string builder b NAME exp to string builder NAME exp NAME to string builder ARGUMENT LIST ARGUMENT EXPR b NAME b EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case regexp char EXPR regexp char NAME regexp char EXPR b append append code point c CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR CALL append code point c NAME append code point ARGUMENT LIST ARGUMENT EXPR c NAME c BREAK break CASE case regexp char range EXPR regexp char range NAME regexp char range EXPR b append append code point from append append code point to append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR CALL append code point from NAME append code point ARGUMENT LIST ARGUMENT EXPR from NAME from CALL append NAME append ARGUMENT LIST ARGUMENT EXPR CALL append code point to NAME append code point ARGUMENT LIST ARGUMENT EXPR to NAME to CALL append NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case regexp anychar EXPR regexp anychar NAME regexp anychar EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case regexp empty EXPR regexp empty NAME regexp empty EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case regexp string EXPR regexp string NAME regexp string EXPR b append append s append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR CALL append s NAME append ARGUMENT LIST ARGUMENT EXPR s NAME s CALL append NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case regexp anystring EXPR regexp anystring NAME regexp anystring EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case regexp automaton EXPR regexp automaton NAME regexp automaton EXPR b append append s append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR CALL append s NAME append ARGUMENT LIST ARGUMENT EXPR s NAME s CALL append NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break CASE case regexp interval EXPR regexp interval NAME regexp interval DECL STMT TYPE string NAME string NAME s INIT integer to string min EXPR integer to string min CALL integer to string min NAME integer to string NAME integer NAME to string ARGUMENT LIST ARGUMENT EXPR min NAME min DECL STMT TYPE string NAME string NAME s INIT integer to string max EXPR integer to string max CALL integer to string max NAME integer to string NAME integer NAME to string ARGUMENT LIST ARGUMENT EXPR max NAME max EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR IF if digits for int i s length i digits i b append CONDITION digits EXPR digits NAME digits THEN for int i s length i digits i b append BLOCK FOR for int i s length i digits i b append CONTROL int i s length i digits i INIT int i s length TYPE int NAME int NAME i INIT s length EXPR s length CALL s length NAME s length NAME s NAME length ARGUMENT LIST CONDITION i digits EXPR i digits NAME i NAME digits INCR i EXPR i NAME i BLOCK EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR EXPR b append s append CALL b append s NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR s NAME s CALL append NAME append ARGUMENT LIST ARGUMENT EXPR IF if digits for int i s length i digits i b append CONDITION digits EXPR digits NAME digits THEN for int i s length i digits i b append BLOCK FOR for int i s length i digits i b append CONTROL int i s length i digits i INIT int i s length TYPE int NAME int NAME i INIT s length EXPR s length CALL s length NAME s length NAME s NAME length ARGUMENT LIST CONDITION i digits EXPR i digits NAME i NAME digits INCR i EXPR i NAME i BLOCK EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR EXPR b append s append CALL b append s NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR s NAME s CALL append NAME append ARGUMENT LIST ARGUMENT EXPR BREAK break void NN to TO string VB builder NN root ROOT string mark string to dobj string builder string NN builder NN root ROOT builder compound builder string b NN switch NN kind NN case NN regexp NN union NN root ROOT union compound union regexp b NN append IN root ROOT b dep b append exp NN to TO string VB builder NN root ROOT exp mark string to acl to exp string dobj string builder b NN b NN append IN root ROOT b dep b append exp NN to TO string VB builder NN root ROOT exp mark string to acl to exp string dobj string builder b NN b NN append IN root ROOT b dep b append break NN case NN regexp NN concatenation NN root ROOT concatenation compound concatenation regexp exp NN to TO string VB builder NN root ROOT exp mark string to acl to exp string dobj string builder b NN exp NN to TO string VB builder NN root ROOT exp mark string to acl to exp string dobj string builder b NN break NN case NN regexp NN intersection NN root ROOT intersection compound intersection regexp b NN append IN root ROOT b dep b append exp NN to TO string VB builder NN root ROOT exp mark string to acl to exp string dobj string builder b NN b NN append IN root ROOT b dep b append exp NN to TO string VB builder NN root ROOT exp mark string to acl to exp string dobj string builder b NN b NN append IN root ROOT b dep b append break NN case NN regexp NN optional JJ root ROOT optional nmod npmod optional regexp b NN append IN root ROOT b dep b append exp NN to TO string VB builder NN root ROOT exp mark string to acl to exp string dobj string builder b NN b NN append IN root ROOT b dep b append break NN case NN regexp NN repeat NN root ROOT repeat compound repeat regexp b NN append IN root ROOT b dep b append exp NN to TO string VB builder NN root ROOT exp mark string to acl to exp string dobj string builder b NN b NN append IN root ROOT b dep b append break NN case NN regexp NN repeat NN min NN root ROOT min compound min regexp compound min repeat b NN append IN root ROOT b dep b append exp NN to TO string VB builder NN root ROOT exp mark string to acl to exp string dobj string builder b NN b NN append IN root ROOT b dep b append append IN min NN append IN break NN case NN regexp NN repeat NN minmax NN root ROOT minmax compound minmax regexp compound minmax repeat b NN append IN root ROOT b dep b append exp NN to TO string VB builder NN root ROOT exp mark string to acl to exp string dobj string builder b NN b NN append IN root ROOT b dep b append append IN min NN append IN append IN max NN append IN break NN case NN regexp NN complement NN root ROOT complement compound complement regexp b NN append IN root ROOT b dep b append exp NN to TO string VB builder NN root ROOT exp mark string to acl to exp string dobj string builder b NN b NN append IN root ROOT b dep b append break NN case NN regexp NN char NN root ROOT char compound char regexp b NN append IN root ROOT b dep b append append NN code NN point NN root ROOT point compound point append compound point code c NN break NN case NN regexp NN char NN range NN root ROOT range compound range regexp compound range char b NN append IN root ROOT b dep b append append NN code NN point NN root ROOT point compound point append compound point code from IN append IN append NN code NN point NN root ROOT point compound point append compound point code to TO append IN break NN case NN regexp NN anychar NN root ROOT anychar compound anychar regexp b NN append IN root ROOT b dep b append break NN case NN regexp NN empty JJ root ROOT empty nmod npmod empty regexp b NN append IN root ROOT b dep b append break NN case NN regexp NN string NN root ROOT string compound string regexp b NN append IN root ROOT b dep b append append IN s NNS append IN break NN case NN regexp NN anystring NN root ROOT anystring compound anystring regexp b NN append IN root ROOT b dep b append break NN case NN regexp JJ automaton NN root ROOT automaton amod automaton regexp b NN append IN root ROOT b dep b append append IN s NNS append IN break NN case NN regexp NN interval NN root ROOT interval compound interval regexp string NN s NNS integer NN to TO string NN root ROOT integer case string to nmod to integer string min NN string NN s NNS integer NN to TO string NN root ROOT integer case string to nmod to integer string max NN b NN append IN root ROOT b dep b append if IN digits NNS for IN int NN i LS s NNS length NN root ROOT length compound length s i LS digits NNS i LS b NN append IN root ROOT b dep b append b NN append IN root ROOT b dep b append s NNS append IN if IN digits NNS for IN int NN i LS s NNS length NN root ROOT length compound length s i LS digits NNS i LS b NN append IN root ROOT b dep b append b NN append IN root ROOT b dep b append s NNS append IN break NN,1,B5,Lucene/lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java,639
COMMENT tests consistency of geo area get relationship vs geo shape is within DECL STMT SPECIFIER private SPECIFIER static TYPE final double SPECIFIER final NAME double NAME mean earth radius meters INIT planet model wgs mean EXPR planet model wgs mean NAME planet model wgs mean NAME planet model NAME wgs mean tests consistency of geo area get relationship vs geo shape is within root ROOT get compound consistency tests nsubj get consistency case area of compound area geo nmod of consistency area compound shape relationship cc relationship vs conj vs relationship geo compound shape geo nsubj within shape cop within is ccomp get within private JJ static JJ final JJ double RB mean VB earth NN radius NN meters NNS root ROOT mean compound meters earth compound meters radius dobj mean meters planet NN model NN wgs NNS root ROOT wgs compound wgs planet compound wgs model mean VB,0,N/A,Lucene/lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint.java,561
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE list query node NAME list query node NAME list ARGUMENT LIST ARGUMENT NAME query node NAME set children order PARAMETER LIST list query node children PARAMETER list query node children TYPE list query node NAME list query node NAME list ARGUMENT LIST ARGUMENT NAME query node NAME children THROWS throws query node exception ARGUMENT EXPR query node exception NAME query node exception BLOCK RETURN return children EXPR children NAME children override NN protected VBN list NN query NN node NN root ROOT node compound node query set VBN children NNS order NN root ROOT set compound order children dobj set order list NN query NN node NN root ROOT node compound node query children NNS throws VBZ query NN node NN exception NN root ROOT exception compound exception query compound exception node return NN children NNS,1,A3,Lucene/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/AllowLeadingWildcardProcessor.java,96
COMMENT translates characters to character classes DECL STMT SPECIFIER private SPECIFIER static TYPE final char SPECIFIER final NAME char NAME char INDEX NAME zz cmap INIT zz unpack c map zz cmap packed EXPR zz unpack c map zz cmap packed CALL zz unpack c map zz cmap packed NAME zz unpack c map ARGUMENT LIST ARGUMENT EXPR zz cmap packed NAME zz cmap packed translates characters to character classes root ROOT characters compound characters translates case classes to compound classes character nmod to characters classes private JJ static JJ final JJ char NN zz NN cmap NN root ROOT cmap compound cmap zz zz NN unpack NN c NN map NN root ROOT map compound map zz compound map unpack compound map c zz NN cmap NN packed VBD root ROOT packed compound cmap zz nsubj packed cmap,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,212
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE list query node NAME list query node NAME list ARGUMENT LIST ARGUMENT NAME query node NAME set children order PARAMETER LIST list query node children PARAMETER list query node children TYPE list query node NAME list query node NAME list ARGUMENT LIST ARGUMENT NAME query node NAME children THROWS throws query node exception ARGUMENT EXPR query node exception NAME query node exception BLOCK RETURN return children EXPR children NAME children override NN protected VBN list NN query NN node NN root ROOT node compound node query set VBN children NNS order NN root ROOT set compound order children dobj set order list NN query NN node NN root ROOT node compound node query children NNS throws VBZ query NN node NN exception NN root ROOT exception compound exception query compound exception node return NN children NNS,1,A3,Lucene/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/AllowLeadingWildcardProcessor.java,96
COMMENT call this before committing if changes have been made to the segments FUNCTION SPECIFIER public TYPE void NAME void NAME changed PARAMETER LIST BLOCK EXPR version NAME version COMMENT system out println thread current thread get name sis change to version version COMMENT new throwable print stack trace system out call this before committing if changes have been made to the root ROOT call dobj call this mark committing before advcl before call committing mark made if nsubjpass made changes aux made have auxpass made been advcl if committing made case the to nmod to made the segments segments public NN void NN changed VBN version NN system out println thread current thread get name sis change to version version root ROOT get nsubj get system case thread out compound thread println compound thread thread amod thread current nmod out system thread compound change name compound change sis dobj get change case version to compound version version nmod to get version system out println thread current thread get name sis change to version version root ROOT get nsubj get system case thread out compound thread println compound thread thread amod thread current nmod out system thread compound change name compound change sis dobj get change case version to compound version version nmod to get version new throwable print stack trace system out root ROOT stack amod print new amod print throwable nsubj stack print compound system trace dobj stack system advmod stack out new throwable print stack trace system out root ROOT stack amod print new amod print throwable nsubj stack print compound system trace dobj stack system advmod stack out been made ANTONYM ANTONYM call made ANTONYM ANTONYM committing have ANTONYM ANTONYM committing made ANTONYM ANTONYM,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java,894
COMMENT st docno for each reader DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME num docs st docno for each reader root ROOT docno compound docno st case reader for det reader each nmod for docno reader private JJ final JJ int NN num NN docs NNS root ROOT docs compound docs num,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader.java,53
COMMENT starting from node completions to a final node FUNCTION SPECIFIER public SPECIFIER static PARAMETER LIST t PARAMETER t NAME t TYPE top results t NAME top results t NAME top results ARGUMENT LIST ARGUMENT NAME t NAME shortest paths PARAMETER LIST fst t fst fst arc t from node t start output comparator t comparator int top n boolean allow empty string PARAMETER fst t fst TYPE fst t NAME fst t NAME fst ARGUMENT LIST ARGUMENT NAME t NAME fst PARAMETER fst arc t from node TYPE fst arc t NAME fst arc t NAME fst NAME arc t NAME arc ARGUMENT LIST ARGUMENT NAME t NAME from node PARAMETER t start output TYPE t NAME t NAME start output PARAMETER comparator t comparator TYPE comparator t NAME comparator t NAME comparator ARGUMENT LIST ARGUMENT NAME t NAME comparator PARAMETER int top n TYPE int NAME int NAME top n PARAMETER boolean allow empty string TYPE boolean NAME boolean NAME allow empty string THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK COMMENT all paths are kept so we can pass top n for COMMENT max queue depth and the pruning is admissible DECL STMT TYPE top n searcher t NAME top n searcher t NAME top n searcher ARGUMENT LIST ARGUMENT NAME t NAME searcher INIT new top n searcher fst top n top n comparator EXPR new top n searcher fst top n top n comparator CALL top n searcher fst top n top n comparator NAME top n searcher NAME top n searcher ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR fst NAME fst ARGUMENT EXPR top n NAME top n ARGUMENT EXPR top n NAME top n ARGUMENT EXPR comparator NAME comparator COMMENT since this search is initialized with a single start node COMMENT it is okay to start with an empty input path here EXPR searcher add start paths from node start output allow empty string new ints ref builder CALL searcher add start paths from node start output allow empty string new ints ref builder NAME searcher add start paths NAME searcher NAME add start paths ARGUMENT LIST ARGUMENT EXPR from node NAME from node ARGUMENT EXPR start output NAME start output ARGUMENT EXPR allow empty string NAME allow empty string ARGUMENT EXPR new ints ref builder CALL ints ref builder NAME ints ref builder ARGUMENT LIST RETURN return searcher search EXPR searcher search CALL searcher search NAME searcher search NAME searcher NAME search ARGUMENT LIST starting from node root ROOT starting case node from nmod from starting node completions to a final node root ROOT completions case node to det node a amod node final nmod to completions node completions to a final node root ROOT completions case node to det node a amod node final nmod to completions node public NN static JJ t NN top JJ results NNS root ROOT results amod results top t NN shortest JJS paths NNS root ROOT paths amod paths shortest fst IN t NN fst IN fst NN arc NN root ROOT arc compound arc fst t NN from IN node NN root ROOT node case node from t NN start VB output NN root ROOT start dobj start output comparator NN t NN comparator NN int NN top JJ n NN root ROOT n amod n top boolean NN allow VB empty JJ string NN root ROOT allow amod string empty dobj allow string throws VBZ io NN exception NN root ROOT exception compound exception io all paths are kept so we can pass top n for root ROOT kept det paths all nsubjpass kept paths auxpass kept are mark pass so nsubj pass we aux pass can advcl so kept pass amod n top dobj pass n dep pass for max queue depth and the pruning is admissible root ROOT admissible compound depth max compound depth queue nsubj admissible depth cc depth and det pruning the conj and depth pruning nsubj admissible pruning cop admissible is top JJ n NN searcher NN root ROOT searcher amod searcher top compound searcher n t NN searcher NN new JJ top JJ n NN searcher NN root ROOT searcher amod searcher top compound searcher n fst IN top JJ n NN root ROOT n amod n top top JJ n NN root ROOT n amod n top comparator NN since this search is initialized with a single start node root ROOT initialized mark initialized since det search this nsubjpass initialized search auxpass initialized is case node with det node a amod node single compound node start nmod with initialized node it is okay to start with an empty input path here root ROOT okay nsubj okay it nsubj xsubj start it cop okay is mark start to xcomp okay start case path with det path an amod path empty compound path input nmod with start path advmod start here searcher NN add VBP start NN paths NNS root ROOT add nsubj add searcher compound paths start dobj add paths from IN node NN root ROOT node case node from start VB output NN root ROOT start dobj start output allow VB empty JJ string NN root ROOT allow amod string empty dobj allow string new JJ ints NNS ref NN builder NN root ROOT builder compound builder ints compound builder ref return NN searcher NN search NN root ROOT search compound search searcher,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/util/fst/Util.java,592
DECL STMT SPECIFIER private SPECIFIER static TYPE int NAME int NAME num ords private JJ static JJ int NN num NN ords NNS root ROOT ords compound ords num,0,N/A,Lucene/lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCache.java,64
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE double NAME double NAME get radius PARAMETER LIST BLOCK COMMENT here we compute the distance from the middle point to one of the corners however we need to be careful COMMENT to use the longest of three distances the distance to a corner on the top the distnace to a corner on the bottom and COMMENT the distance to the right or left edge from the center DECL STMT TYPE final double SPECIFIER final NAME double NAME center angle INIT right lon right lon left lon cos middle lat EXPR right lon right lon left lon cos middle lat NAME right lon NAME right lon NAME left lon NAME cos middle lat DECL STMT TYPE final double SPECIFIER final NAME double NAME top angle INIT center point arc distance urhc EXPR center point arc distance urhc CALL center point arc distance urhc NAME center point arc distance NAME center point NAME arc distance ARGUMENT LIST ARGUMENT EXPR urhc NAME urhc RETURN return math max center angle top angle EXPR math max center angle top angle CALL math max center angle top angle NAME math max NAME math NAME max ARGUMENT LIST ARGUMENT EXPR center angle NAME center angle ARGUMENT EXPR top angle NAME top angle override NN public NN double RB get VB radius NNS root ROOT get dobj get radius here we compute the distance from the middle point to one of the corners however we need to be careful root ROOT compute advmod compute here nsubj compute we det distance the dobj compute distance case point from det point the amod point middle nmod from compute point case one to det qmod corners one mwe one of det corners the nmod compute corners advmod need however nsubj need we nsubj xsubj careful we ccomp compute need mark careful to cop careful be xcomp need careful here we compute the distance from the middle point to one of the corners however we need to be careful root ROOT compute advmod compute here nsubj compute we det distance the dobj compute distance case point from det point the amod point middle nmod from compute point case one to det qmod corners one mwe one of det corners the nmod compute corners advmod need however nsubj need we nsubj xsubj careful we ccomp compute need mark careful to cop careful be xcomp need careful to use the longest of three distances the distance to a corner on the top the distnace to a corner on the bottom and root ROOT use mark use to det longest the dobj use longest case distances of nummod distances three nmod of longest distances det distance the nsubj distnace distance case corner to det corner a nmod to distance corner case top on det top the nmod on corner top det distnace the acl relcl distances distnace case corner to det corner a nmod to distnace corner case bottom on det bottom the nmod on corner bottom cc use and the distance to the right or left edge from the center root ROOT distance det distance the case edge to det edge the amod edge right cc right or conj or right left amod edge left nmod to distance edge case center from det center the nmod from edge center final JJ double RB center NN angle NN root ROOT angle compound angle center right JJ lon NN root ROOT lon amod lon right right JJ lon NN root ROOT lon amod lon right left RB lon NN root ROOT lon advmod lon left cos NNS middle JJ lat NN root ROOT lat compound lat cos amod lat middle final JJ double RB top JJ angle NN root ROOT angle amod angle top center NN point NN arc NN distance NN root ROOT distance compound distance center compound distance point compound distance arc urhc NN return NN math NN max NN root ROOT max compound max math center NN angle NN root ROOT angle compound angle center top JJ angle NN root ROOT angle amod angle top,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoSouthRectangle.java,148
COMMENT returns the field infos file names FUNCTION SPECIFIER public TYPE set string NAME set string NAME set ARGUMENT LIST ARGUMENT NAME string NAME get field infos files PARAMETER LIST BLOCK RETURN return collections unmodifiable set field infos files EXPR collections unmodifiable set field infos files CALL collections unmodifiable set field infos files NAME collections unmodifiable set NAME collections NAME unmodifiable set ARGUMENT LIST ARGUMENT EXPR field infos files NAME field infos files returns the field infos file names root ROOT returns det field the nsubj file field dep field infos acl relcl returns file dobj file names returns the field infos file names root ROOT returns det field the nsubj file field dep field infos acl relcl returns file dobj file names public NN set NN string NN get VB field NN infos NNS files NNS root ROOT get compound files field compound files infos dobj get files return NN collections NNS unmodifiable JJ set NN root ROOT set compound set collections amod set unmodifiable field NN infos NNS files NNS root ROOT files compound files field compound files infos,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo.java,117
COMMENT subclass and override if you change the encoding FUNCTION SPECIFIER protected TYPE void NAME void NAME decode PARAMETER LIST bytes ref buf ints ref ordinals PARAMETER bytes ref buf TYPE bytes ref NAME bytes ref NAME buf PARAMETER ints ref ordinals TYPE ints ref NAME ints ref NAME ordinals BLOCK COMMENT grow the buffer up front even if by a large number of values buf length COMMENT that saves the need to check inside the loop for every decoded value if COMMENT the buffer needs to grow IF if ordinals ints length buf length ordinals ints array util grow ordinals ints buf length CONDITION ordinals ints length buf length EXPR ordinals ints length buf length NAME ordinals ints length NAME ordinals NAME ints NAME length NAME buf length NAME buf NAME length THEN ordinals ints array util grow ordinals ints buf length BLOCK EXPR ordinals ints array util grow ordinals ints buf length NAME ordinals ints NAME ordinals NAME ints CALL array util grow ordinals ints buf length NAME array util grow NAME array util NAME grow ARGUMENT LIST ARGUMENT EXPR ordinals ints NAME ordinals ints NAME ordinals NAME ints ARGUMENT EXPR buf length NAME buf length NAME buf NAME length EXPR ordinals offset NAME ordinals offset NAME ordinals NAME offset EXPR ordinals length NAME ordinals length NAME ordinals NAME length COMMENT it is better if the decoding is inlined like so and not e g COMMENT in a utility method DECL STMT TYPE int NAME int NAME upto INIT buf offset buf length EXPR buf offset buf length NAME buf offset NAME buf NAME offset NAME buf length NAME buf NAME length DECL STMT TYPE int NAME int NAME value INIT EXPR DECL STMT TYPE int NAME int NAME offset INIT buf offset EXPR buf offset NAME buf offset NAME buf NAME offset DECL STMT TYPE int NAME int NAME prev INIT EXPR WHILE while offset upto byte b buf bytes offset if b ordinals ints ordinals length value b prev value prev ordinals ints ordinals length ordinals length else value value b x f CONDITION offset upto EXPR offset upto NAME offset NAME upto BLOCK DECL STMT TYPE byte NAME byte NAME b INIT buf bytes offset EXPR buf bytes offset NAME buf bytes offset NAME buf NAME bytes INDEX offset EXPR offset NAME offset IF if b ordinals ints ordinals length value b prev value prev ordinals ints ordinals length ordinals length else value value b x f CONDITION b EXPR b NAME b THEN ordinals ints ordinals length value b prev value prev ordinals ints ordinals length ordinals length BLOCK EXPR ordinals ints ordinals length value b prev NAME ordinals ints ordinals length NAME ordinals NAME ints INDEX ordinals length EXPR ordinals length NAME ordinals length NAME ordinals NAME length NAME value NAME b NAME prev EXPR value NAME value EXPR prev ordinals ints ordinals length NAME prev NAME ordinals ints ordinals length NAME ordinals NAME ints INDEX ordinals length EXPR ordinals length NAME ordinals length NAME ordinals NAME length EXPR ordinals length NAME ordinals length NAME ordinals NAME length ELSE else value value b x f BLOCK EXPR value value b x f NAME value NAME value NAME b subclass and override if you change the encoding root ROOT subclass cc subclass and conj and subclass override mark change if nsubj change you advcl if subclass change det encoding the dobj change encoding subclass and override if you change the encoding root ROOT subclass cc subclass and conj and subclass override mark change if nsubj change you advcl if subclass change det encoding the dobj change encoding protected VBN void NN decode VB bytes NNS ref VBP root ROOT ref nsubj ref bytes buf NN ints NNS ref VBP root ROOT ref nsubj ref ints ordinals NNS grow the buffer up front even if by a large number of values buf length root ROOT grow det buffer the dobj grow buffer case front up nmod up grow front advmod grow even dep even if case number by det number a amod number large nmod by if number case values of nmod of number values acl number buf dobj buf length that saves the need to check inside the loop for every decoded value if root ROOT saves nsubj saves that det need the dobj saves need mark check to acl to need check case loop inside det loop the nmod inside check loop case value for det value every amod value decoded nmod for check value dep saves if the buffer needs to grow root ROOT needs det buffer the nsubj needs buffer nsubj xsubj grow buffer mark grow to xcomp needs grow if IN ordinals NNS ints NNS length NN root ROOT length compound length ordinals compound length ints buf NN length NN root ROOT length compound length buf ordinals NNS ints NNS root ROOT ints compound ints ordinals array NN util NN grow VB root ROOT grow compound util array nsubj grow util ordinals NNS ints NNS root ROOT ints compound ints ordinals buf NN length NN root ROOT length compound length buf ordinals NNS offset VBP root ROOT offset nsubj offset ordinals ordinals NNS length NN root ROOT length compound length ordinals it is better if the decoding is inlined like so and not e g root ROOT better nsubj better it cop better is mark inlined if det decoding the nsubjpass inlined decoding auxpass inlined is advcl if better inlined nmod g like advmod and so cc g and neg g not dep g e nmod inlined g in a utility method root ROOT method case method in det method a compound method utility int NN upto NN buf NN offset VBD root ROOT offset nsubj offset buf buf NN length NN root ROOT length compound length buf int NN value NN int NN offset VBN buf NN offset VBD root ROOT offset nsubj offset buf int NN prev NN while IN offset VBN upto NN byte NN b NN buf NN bytes NNS root ROOT bytes compound bytes buf offset VBN if IN b NN ordinals NNS ints NNS root ROOT ints compound ints ordinals ordinals NNS length NN root ROOT length compound length ordinals value NN b NN prev NN value NN prev NN ordinals NNS ints NNS root ROOT ints compound ints ordinals ordinals NNS length NN root ROOT length compound length ordinals ordinals NNS length NN root ROOT length compound length ordinals else RB value NN value NN b NN x NN f SYM root ROOT f compound f x encoding decode ANTONYM ANTONYM,0,N/A,Lucene/lucene/facet/src/java/org/apache/lucene/facet/taxonomy/DocValuesOrdinalsReader.java,67
DECL STMT SPECIFIER private TYPE final static int SPECIFIER final SPECIFIER static NAME int NAME num fields INIT EXPR private JJ final JJ static JJ int NN num NN fields NNS root ROOT fields compound fields num,0,N/A,Lucene/lucene/core/src/test/org/apache/lucene/index/TestCodecs.java,68
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE object NAME object NAME get stats PARAMETER LIST THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK RETURN return in get stats EXPR in get stats CALL in get stats NAME in get stats NAME in NAME get stats ARGUMENT LIST override NN public NN object NN get VB stats NNS root ROOT get dobj get stats throws VBZ io NN exception NN root ROOT exception compound exception io return NN in IN get VB stats NNS root ROOT get mark get in dobj get stats,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/FilterLeafReader.java,157
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME default max num terms INIT EXPR private JJ static JJ final JJ int NN default NN max NN num NN terms NNS root ROOT terms compound terms default compound terms max compound terms num,0,N/A,Lucene/lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/FuzzyLikeThisQueryBuilder.java,35
COMMENT ram instances we have already loaded DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME num entries ram instances we have already loaded root ROOT instances compound instances ram nsubj loaded we aux loaded have advmod loaded already acl relcl instances loaded private JJ final JJ int NN num NN entries NNS root ROOT entries compound entries num,0,N/A,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,91
DECL STMT SPECIFIER private TYPE final list compiled automaton SPECIFIER final NAME list compiled automaton NAME list ARGUMENT LIST ARGUMENT NAME compiled automaton NAME automata INIT new array list EXPR new array list CALL array list NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST private JJ final JJ list NN compiled VBN automaton NN root ROOT compiled dobj compiled automaton automata NN new JJ array NN list NN root ROOT list compound list array,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum.java,391
COMMENT we try to avoid building the list of this nodes deep dependencies by storing them in this cache by depth level DECL STMT SPECIFIER private TYPE ivy node element NAME ivy node element NAME ivy node element INDEX NAME deep dependency cache we try to avoid building the list of this nodes deep dependencies by storing them in this cache by depth level root ROOT try nsubj try we nsubj xsubj avoid we mark avoid to xcomp try avoid xcomp avoid building det list the dobj building list case nodes of det nodes this nmod of list nodes amod dependencies deep dep nodes dependencies mark storing by acl by dependencies storing dobj storing them case cache in det cache this nmod in storing cache case level by compound level depth nmod by storing level private JJ ivy NN node NN element NN root ROOT element compound element ivy compound element node deep JJ dependency NN cache NN root ROOT cache amod cache deep compound cache dependency,0,N/A,Lucene/lucene/tools/src/java/org/apache/lucene/validation/ivyde/IvyNodeElement.java,53
COMMENT pending reader not actually assigned to input until reset DECL STMT SPECIFIER private TYPE reader NAME reader NAME input pending INIT illegal state reader EXPR illegal state reader NAME illegal state reader pending reader not actually assigned to input until reset root ROOT assigned amod reader pending nsubjpass assigned reader neg assigned not advmod assigned actually case input to nmod to assigned input case reset until nmod until assigned reset private JJ reader NN input NN pending VBG root ROOT input acl input pending illegal JJ state NN reader NN root ROOT reader amod reader illegal compound reader state,1,D2,Lucene/lucene/core/src/java/org/apache/lucene/analysis/Tokenizer.java,39
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE list query node NAME list query node NAME list ARGUMENT LIST ARGUMENT NAME query node NAME set children order PARAMETER LIST list query node children PARAMETER list query node children TYPE list query node NAME list query node NAME list ARGUMENT LIST ARGUMENT NAME query node NAME children THROWS throws query node exception ARGUMENT EXPR query node exception NAME query node exception BLOCK RETURN return children EXPR children NAME children override NN protected VBN list NN query NN node NN root ROOT node compound node query set VBN children NNS order NN root ROOT set compound order children dobj set order list NN query NN node NN root ROOT node compound node query children NNS throws VBZ query NN node NN exception NN root ROOT exception compound exception query compound exception node return NN children NNS,1,A3,Lucene/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/AllowLeadingWildcardProcessor.java,96
COMMENT check the types of things query objects should be able to do FUNCTION SPECIFIER public SPECIFIER static TYPE void NAME void NAME check PARAMETER LIST query q PARAMETER query q TYPE query NAME query NAME q BLOCK EXPR check hash equals q CALL check hash equals q NAME check hash equals ARGUMENT LIST ARGUMENT EXPR q NAME q check the types of things query objects should be able to do root ROOT check det types the dobj check types case things of nmod of types things amod objects query nsubj able objects nsubj xsubj do objects aux able should cop able be acl relcl things able mark do to xcomp able do check the types of things query objects should be able to do root ROOT check det types the dobj check types case things of nmod of types things amod objects query nsubj able objects nsubj xsubj do objects aux able should cop able be acl relcl things able mark do to xcomp able do public NN static JJ void NN check NN query NN q SYM check NN hash NN equals VBZ root ROOT equals compound hash check nsubj equals hash q SYM,1,B2,Lucene/lucene/test-framework/src/java/org/apache/lucene/search/QueryUtils.java,55
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE bytes ref NAME bytes ref NAME get payload PARAMETER LIST BLOCK RETURN return payload length payload null EXPR payload length payload null TERNARY payload length payload null CONDITION payload length EXPR payload length NAME payload length NAME payload NAME length THEN payload EXPR payload NAME payload ELSE null EXPR null override NN public NN bytes NNS ref VBP root ROOT ref nsubj ref bytes get VB payload NN root ROOT get dobj get payload return NN payload NN length NN root ROOT length compound length payload payload NN null JJ,0,N/A,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.java,692
COMMENT private final boolean debug block tree terms writer debug DECL STMT TYPE final long SPECIFIER final NAME long NAME num terms private final boolean debug block tree terms writer debug root ROOT terms amod terms private amod terms final amod terms boolean compound terms debug compound terms block compound terms tree compound debug writer dep terms debug final JJ long RB num NN terms NNS root ROOT terms compound terms num,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/codecs/blocktree/FieldReader.java,50
COMMENT kb block sizes for paged bytes storage DECL STMT SPECIFIER private TYPE int NAME int NAME added values kb block sizes for paged bytes storage root ROOT sizes compound sizes kb compound sizes block case storage for amod storage paged compound storage bytes nmod for sizes storage private JJ int NN added VBN values NNS root ROOT values amod values added,1,E1,Lucene/lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.java,54
DECL STMT TYPE long NAME long NAME num bytes long RB num NN bytes NNS root ROOT bytes compound bytes num,0,N/A,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,769
COMMENT auto prefix terms DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME version auto prefix terms INIT EXPR auto prefix terms root ROOT terms compound terms auto compound terms prefix auto prefix terms root ROOT terms compound terms auto compound terms prefix public NN static JJ final JJ int NN version NN auto NN prefix NN terms NNS root ROOT terms compound terms version compound terms auto compound terms prefix,1,E1,Lucene/lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader.java,104
COMMENT minimum per dim values DECL STMT SPECIFIER protected TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME min packed value minimum per dim values root ROOT minimum case values per compound values dim nmod per minimum values protected VBN final JJ byte NN min NN packed VBD value NN root ROOT packed nsubj packed min dobj packed value,1,D1,Lucene/lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.java,134
FUNCTION SPECIFIER private TYPE index searcher NAME index searcher NAME get searcher PARAMETER LIST THROWS throws exception ARGUMENT EXPR exception NAME exception BLOCK EXPR directory new directory NAME directory CALL new directory NAME new directory ARGUMENT LIST DECL STMT TYPE string NAME string NAME string INDEX NAME docs INIT new string xx rr yy mm pp xx yy mm rr pp nopayload qq ss pp np one two three four five six seven eight nine ten eleven nine one two three four five six seven eight eleven ten EXPR new string xx rr yy mm pp xx yy mm rr pp nopayload qq ss pp np one two three four five six seven eight nine ten eleven nine one two three four five six seven eight eleven ten NAME string NAME string INDEX BLOCK EXPR xx rr yy mm pp EXPR xx yy mm rr pp EXPR nopayload qq ss pp np EXPR one two three four five six seven eight nine ten eleven EXPR nine one two three four five six seven eight eleven ten DECL STMT TYPE random index writer NAME random index writer NAME writer INIT new random index writer random directory new index writer config new payload analyzer set similarity similarity EXPR new random index writer random directory new index writer config new payload analyzer set similarity similarity CALL random index writer random directory new index writer config new payload analyzer set similarity similarity NAME random index writer ARGUMENT LIST ARGUMENT EXPR random CALL random NAME random ARGUMENT LIST ARGUMENT EXPR directory NAME directory ARGUMENT EXPR new index writer config new payload analyzer set similarity similarity CALL new index writer config new payload analyzer NAME new index writer config ARGUMENT LIST ARGUMENT EXPR new payload analyzer CALL payload analyzer NAME payload analyzer ARGUMENT LIST CALL set similarity similarity NAME set similarity ARGUMENT LIST ARGUMENT EXPR similarity NAME similarity DECL STMT TYPE document NAME document NAME doc INIT null EXPR null FOR for int i i docs length i doc new document string doc text docs i doc add new text field payload helper field doc text field store yes writer add document doc CONTROL int i i docs length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i docs length EXPR i docs length NAME i NAME docs length NAME docs NAME length INCR i EXPR i NAME i BLOCK EXPR doc new document NAME doc CALL document NAME document ARGUMENT LIST DECL STMT TYPE string NAME string NAME doc text INIT docs i EXPR docs i NAME docs i NAME docs INDEX i EXPR i NAME i EXPR doc add new text field payload helper field doc text field store yes CALL doc add new text field payload helper field doc text field store yes NAME doc add NAME doc NAME add ARGUMENT LIST ARGUMENT EXPR new text field payload helper field doc text field store yes CALL new text field payload helper field doc text field store yes NAME new text field ARGUMENT LIST ARGUMENT EXPR payload helper field NAME payload helper field NAME payload helper NAME field ARGUMENT EXPR doc text NAME doc text ARGUMENT EXPR field store yes NAME field store yes NAME field NAME store NAME yes EXPR writer add document doc CALL writer add document doc NAME writer add document NAME writer NAME add document ARGUMENT LIST ARGUMENT EXPR doc NAME doc EXPR writer force merge CALL writer force merge NAME writer force merge NAME writer NAME force merge ARGUMENT LIST ARGUMENT EXPR EXPR close index reader writer get reader NAME close index reader CALL writer get reader NAME writer get reader NAME writer NAME get reader ARGUMENT LIST EXPR writer close CALL writer close NAME writer close NAME writer NAME close ARGUMENT LIST DECL STMT TYPE index searcher NAME index searcher NAME searcher INIT new searcher close index reader false EXPR new searcher close index reader false CALL new searcher close index reader false NAME new searcher ARGUMENT LIST ARGUMENT EXPR close index reader NAME close index reader ARGUMENT EXPR false RETURN return searcher EXPR searcher NAME searcher private JJ index NN searcher NN root ROOT searcher compound searcher index get VB searcher NN root ROOT get dobj get searcher throws VBZ exception NN directory NN new JJ directory NN root ROOT directory amod directory new string NN docs NNS new JJ string NN xx NN rr NN yy NN mm NN pp NN xx NN yy NN mm NN rr NN pp NN nopayload NN qq NN ss NN pp NN np NN one CD two CD three CD four CD five CD six CD seven CD eight CD nine CD ten CD eleven NNS nine CD one CD two CD three CD four CD five CD six CD seven CD eight CD eleven NNS ten CD random JJ index NN writer NN root ROOT writer amod writer random compound writer index writer NN new JJ random JJ index NN writer NN root ROOT writer amod writer random compound writer index random JJ directory NN new JJ index NN writer NN config NN root ROOT config amod config new compound config index compound config writer new JJ payload NN analyzer NN root ROOT analyzer compound analyzer payload set VBN similarity NN root ROOT set dobj set similarity similarity NN document NN doc NN null JJ for IN int NN i LS i LS docs NNS length NN root ROOT length compound length docs i LS doc NN new JJ document NN string NN doc NN text NN root ROOT text compound text doc docs NNS i LS doc NN add VB root ROOT add nsubj add doc new JJ text NN field NN root ROOT field amod field new compound field text payload NN helper NN field NN root ROOT field compound field payload compound field helper doc NN text NN root ROOT text compound text doc field NN store NN yes RB root ROOT store compound store field advmod store yes writer NN add VB document NN root ROOT add nsubj add writer dobj add document doc NN writer NN force NN merge VBP root ROOT merge compound force writer nsubj merge force close RB index NN reader NN root ROOT reader amod reader close compound reader index writer NN get VB reader NN root ROOT get nsubj get writer dobj get reader writer NN close NN root ROOT close compound close writer index NN searcher NN root ROOT searcher compound searcher index searcher NN new JJ searcher NN root ROOT searcher amod searcher new close RB index NN reader NN root ROOT reader amod reader close compound reader index false JJ return NN searcher NN,1,A1,Lucene/lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadSpans.java,424
COMMENT true if overlap tokens tokens with a position of increment of zero are discounted from the document s length DECL STMT SPECIFIER protected TYPE boolean NAME boolean NAME discount overlaps INIT true EXPR true true if overlap tokens tokens with a position of increment of zero are root ROOT true mark overlap if dep true overlap compound tokens tokens dobj overlap tokens case position with det position a nmod with overlap position case increment of nmod of position increment case zero of nmod of increment zero dep true are discounted from the document s length root ROOT length dep length discounted case document from det document the nmod from discounted document compound length s protected VBN boolean NN discount NN overlaps VBZ root ROOT overlaps nsubj overlaps discount true JJ,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/search/similarities/ClassicSimilarity.java,159
DECL STMT SPECIFIER protected TYPE iterator cell NAME iterator cell NAME iterator ARGUMENT LIST ARGUMENT NAME cell NAME cell iter protected VBN iterator NN cell NN cell NN iter NN root ROOT iter compound iter cell,0,N/A,Lucene/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/CellToBytesRefIterator.java,35
COMMENT num of empty docs injected between every doc in the main index DECL STMT SPECIFIER private SPECIFIER static TYPE int NAME int NAME num filler docs num of empty docs injected between every doc in the main index root ROOT injected nsubj injected num case docs of amod docs empty nmod of num docs case doc between det doc every nmod between injected doc case index in det index the amod index main nmod in injected index private JJ static JJ int NN num NN filler NN docs NNS root ROOT docs compound docs num compound docs filler,0,N/A,Lucene/lucene/core/src/test/org/apache/lucene/search/TestBoolean2.java,59
DECL STMT SPECIFIER private TYPE final boolean SPECIFIER final NAME boolean NAME store payloads private JJ final JJ boolean NN store NN payloads NNS root ROOT payloads compound payloads store,0,N/A,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.java,425
DECL STMT SPECIFIER private TYPE int NAME int NAME original max clauses private JJ int NN original JJ max NN clauses NNS root ROOT clauses amod clauses original compound clauses max,1,E1,Lucene/lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase.java,126
COMMENT removes the given number of int blocks from the buffer if possible param num the number of int blocks to remove return the number of actually removed buffers FUNCTION SPECIFIER public TYPE int NAME int NAME free blocks PARAMETER LIST int num PARAMETER int num TYPE int NAME int NAME num BLOCK ASSERT assert num free blocks must be but was num EXPR num free blocks must be but was num NAME num NAME num DECL STMT TYPE final int SPECIFIER final NAME int NAME stop DECL STMT TYPE final int SPECIFIER final NAME int NAME count IF if num free blocks stop count free blocks else stop free blocks num count num CONDITION num free blocks EXPR num free blocks NAME num NAME free blocks THEN stop count free blocks BLOCK EXPR stop NAME stop EXPR count free blocks NAME count NAME free blocks ELSE else stop free blocks num count num BLOCK EXPR stop free blocks num NAME stop NAME free blocks NAME num EXPR count num NAME count NAME num WHILE while free blocks stop free byte blocks free blocks null CONDITION free blocks stop EXPR free blocks stop NAME free blocks NAME stop BLOCK EXPR free byte blocks free blocks null NAME free byte blocks free blocks NAME free byte blocks INDEX free blocks EXPR free blocks NAME free blocks EXPR bytes used add and get count block size integer bytes CALL bytes used add and get count block size integer bytes NAME bytes used add and get NAME bytes used NAME add and get ARGUMENT LIST ARGUMENT EXPR count block size integer bytes NAME count NAME block size NAME integer bytes NAME integer NAME bytes ASSERT assert bytes used get EXPR bytes used get CALL bytes used get NAME bytes used get NAME bytes used NAME get ARGUMENT LIST RETURN return count EXPR count NAME count removes the given number of int blocks from the buffer if possible root ROOT removes det number the amod number given nsubj blocks number case int of nmod of number int ccomp removes blocks case buffer from det buffer the nmod from blocks buffer mark possible if advcl if blocks possible param num root ROOT num compound num param the number of int blocks to remove root ROOT blocks det number the nsubj blocks number nsubj xsubj remove number case int of nmod of number int mark remove to xcomp blocks remove return the number of actually removed buffers root ROOT return det number the dobj return number case buffers of advmod removed actually amod buffers removed nmod of number buffers public NN int NN free JJ blocks NNS root ROOT blocks amod blocks free int NN num NN assert VB num NN free JJ blocks NNS must MD be VB but CC was VBD num NN final JJ int NN stop VB final JJ int NN count NN if IN num NN free JJ blocks NNS root ROOT blocks amod blocks free stop VB count NN free JJ blocks NNS root ROOT blocks amod blocks free else RB stop VB free JJ blocks NNS root ROOT blocks amod blocks free num NN count NN num NN while IN free JJ blocks NNS root ROOT blocks amod blocks free stop VB free JJ byte NN blocks NNS root ROOT blocks amod blocks free compound blocks byte free JJ blocks NNS root ROOT blocks amod blocks free null JJ bytes NNS used VBD add VB and CC get VB root ROOT used nsubj used bytes nsubj get bytes dobj used add cc used and conj and used get count NN block NN size NN root ROOT size compound size block integer NN bytes NNS root ROOT bytes compound bytes integer assert VB bytes NNS used VBD get VB root ROOT used nsubj used bytes ccomp used get return NN count NN blocks return ANTONYM ANTONYM given remove ANTONYM ANTONYM given removed ANTONYM ANTONYM given removes ANTONYM ANTONYM number return ANTONYM ANTONYM,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/util/RecyclingIntBlockAllocator.java,139
COMMENT true if max z plane intersects globe DECL STMT SPECIFIER protected TYPE final boolean SPECIFIER final NAME boolean NAME max z plane intersects true if max z plane intersects globe root ROOT globe dep globe true dep globe if compound globe max dep globe z compound globe plane compound globe intersects protected VBN final JJ boolean NN max NN z SYM plane NN intersects NNS root ROOT intersects compound intersects max dep intersects z compound intersects plane,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/StandardXYZSolid.java,52
FUNCTION SPECIFIER public TYPE byte NAME byte NAME byte INDEX NAME get lower point PARAMETER LIST BLOCK RETURN return lower point clone EXPR lower point clone CALL lower point clone NAME lower point clone NAME lower point NAME clone ARGUMENT LIST public NN byte NN get VB lower JJR point NN root ROOT get amod point lower dobj get point return NN lower JJR point NN clone NN root ROOT clone amod clone lower compound clone point,1,A4,Lucene/lucene/core/src/java/org/apache/lucene/search/PointRangeQuery.java,343
COMMENT current subs that have at least one term for this field DECL STMT SPECIFIER private TYPE final terms enum with slice SPECIFIER final NAME terms enum with slice NAME terms enum with slice INDEX NAME top current subs that have at least one term for this field root ROOT subs amod subs current nsubj have subs ref subs that acl relcl subs have case least at nmod npmod one least nummod term one dobj have term case field for det field this nmod for have field private JJ final JJ terms NNS enum VBP with IN slice NN root ROOT enum nsubj enum terms case slice with nmod with enum slice top NN,1,D1,Lucene/lucene/core/src/java/org/apache/lucene/index/MultiTermsEnum.java,47
DECL STMT SPECIFIER private TYPE paged growable writer NAME paged growable writer NAME offsets private JJ paged VBN growable JJ writer NN root ROOT writer amod writer paged amod writer growable offsets NNS,1,E1,Lucene/lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesFieldUpdates.java,98
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME get bounds PARAMETER LIST bounds bounds PARAMETER bounds bounds TYPE bounds NAME bounds NAME bounds BLOCK COMMENT because of holes we don t want to use superclass method IF if local is within planet model north pole bounds no top latitude bound no longitude bound add point planet model north pole CONDITION local is within planet model north pole EXPR local is within planet model north pole CALL local is within planet model north pole NAME local is within ARGUMENT LIST ARGUMENT EXPR planet model north pole NAME planet model north pole NAME planet model NAME north pole THEN bounds no top latitude bound no longitude bound add point planet model north pole BLOCK EXPR bounds no top latitude bound no longitude bound add point planet model north pole CALL bounds no top latitude bound NAME bounds no top latitude bound NAME bounds NAME no top latitude bound ARGUMENT LIST CALL no longitude bound NAME no longitude bound ARGUMENT LIST CALL add point planet model north pole NAME add point ARGUMENT LIST ARGUMENT EXPR planet model north pole NAME planet model north pole NAME planet model NAME north pole IF if local is within planet model south pole bounds no bottom latitude bound no longitude bound add point planet model south pole CONDITION local is within planet model south pole EXPR local is within planet model south pole CALL local is within planet model south pole NAME local is within ARGUMENT LIST ARGUMENT EXPR planet model south pole NAME planet model south pole NAME planet model NAME south pole THEN bounds no bottom latitude bound no longitude bound add point planet model south pole BLOCK EXPR bounds no bottom latitude bound no longitude bound add point planet model south pole CALL bounds no bottom latitude bound NAME bounds no bottom latitude bound NAME bounds NAME no bottom latitude bound ARGUMENT LIST CALL no longitude bound NAME no longitude bound ARGUMENT LIST CALL add point planet model south pole NAME add point ARGUMENT LIST ARGUMENT EXPR planet model south pole NAME planet model south pole NAME planet model NAME south pole IF if local is within planet model min x pole bounds add point planet model min x pole CONDITION local is within planet model min x pole EXPR local is within planet model min x pole CALL local is within planet model min x pole NAME local is within ARGUMENT LIST ARGUMENT EXPR planet model min x pole NAME planet model min x pole NAME planet model NAME min x pole THEN bounds add point planet model min x pole BLOCK EXPR bounds add point planet model min x pole CALL bounds add point planet model min x pole NAME bounds add point NAME bounds NAME add point ARGUMENT LIST ARGUMENT EXPR planet model min x pole NAME planet model min x pole NAME planet model NAME min x pole IF if local is within planet model max x pole bounds add point planet model max x pole CONDITION local is within planet model max x pole EXPR local is within planet model max x pole CALL local is within planet model max x pole NAME local is within ARGUMENT LIST ARGUMENT EXPR planet model max x pole NAME planet model max x pole NAME planet model NAME max x pole THEN bounds add point planet model max x pole BLOCK EXPR bounds add point planet model max x pole CALL bounds add point planet model max x pole NAME bounds add point NAME bounds NAME add point ARGUMENT LIST ARGUMENT EXPR planet model max x pole NAME planet model max x pole NAME planet model NAME max x pole IF if local is within planet model min y pole bounds add point planet model min y pole CONDITION local is within planet model min y pole EXPR local is within planet model min y pole CALL local is within planet model min y pole NAME local is within ARGUMENT LIST ARGUMENT EXPR planet model min y pole NAME planet model min y pole NAME planet model NAME min y pole THEN bounds add point planet model min y pole BLOCK EXPR bounds add point planet model min y pole CALL bounds add point planet model min y pole NAME bounds add point NAME bounds NAME add point ARGUMENT LIST ARGUMENT EXPR planet model min y pole NAME planet model min y pole NAME planet model NAME min y pole IF if local is within planet model max y pole bounds add point planet model max y pole CONDITION local is within planet model max y pole EXPR local is within planet model max y pole CALL local is within planet model max y pole NAME local is within ARGUMENT LIST ARGUMENT EXPR planet model max y pole NAME planet model max y pole NAME planet model NAME max y pole THEN bounds add point planet model max y pole BLOCK EXPR bounds add point planet model max y pole CALL bounds add point planet model max y pole NAME bounds add point NAME bounds NAME add point ARGUMENT LIST ARGUMENT EXPR planet model max y pole NAME planet model max y pole NAME planet model NAME max y pole EXPR bounds is wide CALL bounds is wide NAME bounds is wide NAME bounds NAME is wide ARGUMENT LIST COMMENT add all the points FOR for final geo point point points bounds add point point CONTROL final geo point point points INIT final geo point point points TYPE final geo point SPECIFIER final NAME geo point NAME point RANGE points EXPR points NAME points BLOCK EXPR bounds add point point CALL bounds add point point NAME bounds add point NAME bounds NAME add point ARGUMENT LIST ARGUMENT EXPR point NAME point COMMENT add planes with membership FOR for final sided plane edge edges bounds add plane planet model edge either bounds get edge CONTROL final sided plane edge edges INIT final sided plane edge edges TYPE final sided plane SPECIFIER final NAME sided plane NAME edge RANGE edges EXPR edges NAME edges BLOCK EXPR bounds add plane planet model edge either bounds get edge CALL bounds add plane planet model edge either bounds get edge NAME bounds add plane NAME bounds NAME add plane ARGUMENT LIST ARGUMENT EXPR planet model NAME planet model ARGUMENT EXPR edge NAME edge ARGUMENT EXPR either bounds get edge CALL either bounds get edge NAME either bounds get NAME either bounds NAME get ARGUMENT LIST ARGUMENT EXPR edge NAME edge FOR for final sided plane inverted edge inverted edges final sided plane next edge next brother map get inverted edge bounds add intersection planet model inverted edge next edge prev brother map get inverted edge next brother map get next edge CONTROL final sided plane inverted edge inverted edges INIT final sided plane inverted edge inverted edges TYPE final sided plane SPECIFIER final NAME sided plane NAME inverted edge RANGE inverted edges EXPR inverted edges NAME inverted edges BLOCK DECL STMT TYPE final sided plane SPECIFIER final NAME sided plane NAME next edge INIT next brother map get inverted edge EXPR next brother map get inverted edge CALL next brother map get inverted edge NAME next brother map get NAME next brother map NAME get ARGUMENT LIST ARGUMENT EXPR inverted edge NAME inverted edge EXPR bounds add intersection planet model inverted edge next edge prev brother map get inverted edge next brother map get next edge CALL bounds add intersection planet model inverted edge next edge prev brother map get inverted edge next brother map get next edge NAME bounds add intersection NAME bounds NAME add intersection ARGUMENT LIST ARGUMENT EXPR planet model NAME planet model ARGUMENT EXPR inverted edge NAME inverted edge ARGUMENT EXPR next edge NAME next edge ARGUMENT EXPR prev brother map get inverted edge CALL prev brother map get inverted edge NAME prev brother map get NAME prev brother map NAME get ARGUMENT LIST ARGUMENT EXPR inverted edge NAME inverted edge ARGUMENT EXPR next brother map get next edge CALL next brother map get next edge NAME next brother map get NAME next brother map NAME get ARGUMENT LIST ARGUMENT EXPR next edge NAME next edge override NN public NN void NN get VB bounds NNS root ROOT get dobj get bounds bounds NNS bounds NNS because of holes we don t want to use superclass method root ROOT don case holes because mwe because of nmod because of don holes nsubj don we nsubj want t nsubj xsubj use t ccomp don want mark use to xcomp want use amod method superclass dobj use method if IN local JJ is VBZ within IN root ROOT within nsubj within local cop within is planet NN model NN north NN root ROOT north compound north planet compound north model pole NN bounds NNS no DT top JJ latitude NN bound VBD root ROOT bound dobj bound bounds neg latitude no amod latitude top nsubj bound latitude no DT longitude NN bound VBD root ROOT bound neg longitude no nsubj bound longitude add VB point NN root ROOT add dobj add point planet NN model NN north NN root ROOT north compound north planet compound north model pole NN if IN local JJ is VBZ within IN root ROOT within nsubj within local cop within is planet NN model NN south RB root ROOT model compound model planet advmod model south pole NN bounds NNS no DT bottom JJ latitude NN bound VBD root ROOT bound compound latitude bounds neg latitude no amod latitude bottom nsubj bound latitude no DT longitude NN bound VBD root ROOT bound neg longitude no nsubj bound longitude add VB point NN root ROOT add dobj add point planet NN model NN south RB root ROOT model compound model planet advmod model south pole NN if IN local JJ is VBZ within IN root ROOT within nsubj within local cop within is planet NN model NN min NN root ROOT min compound min planet compound min model x CC pole NN root ROOT pole compound pole x bounds NNS add VBP point NN root ROOT add nsubj add bounds dobj add point planet NN model NN min NN root ROOT min compound min planet compound min model x CC pole NN root ROOT pole compound pole x if IN local JJ is VBZ within IN root ROOT within nsubj within local cop within is planet NN model NN max NN root ROOT max compound max planet compound max model x CC pole NN root ROOT pole compound pole x bounds NNS add VBP point NN root ROOT add nsubj add bounds dobj add point planet NN model NN max NN root ROOT max compound max planet compound max model x CC pole NN root ROOT pole compound pole x if IN local JJ is VBZ within IN root ROOT within nsubj within local cop within is planet NN model NN min NN root ROOT min compound min planet compound min model y RB pole NN root ROOT pole advmod pole y bounds NNS add VBP point NN root ROOT add nsubj add bounds dobj add point planet NN model NN min NN root ROOT min compound min planet compound min model y RB pole NN root ROOT pole advmod pole y if IN local JJ is VBZ within IN root ROOT within nsubj within local cop within is planet NN model NN max NN root ROOT max compound max planet compound max model y RB pole NN root ROOT pole advmod pole y bounds NNS add VBP point NN root ROOT add nsubj add bounds dobj add point planet NN model NN max NN root ROOT max compound max planet compound max model y RB pole NN root ROOT pole advmod pole y bounds NNS is VBZ wide JJ root ROOT wide nsubj wide bounds cop wide is add all the points root ROOT add det predet points all det points the dobj add points for IN final JJ geo NN point NN root ROOT point compound point geo point NN points NNS bounds NNS add VBP point NN root ROOT add nsubj add bounds dobj add point point NN add planes with membership root ROOT add dobj add planes case membership with nmod with add membership for IN final JJ sided VBD plane NN root ROOT sided dobj sided plane edge NN edges NNS bounds NNS add VBP plane NN root ROOT add nsubj add bounds dobj add plane planet NN model NN root ROOT model compound model planet edge NN either DT bounds NNS get VBP root ROOT get det bounds either nsubj get bounds edge NN for IN final JJ sided VBD plane NN root ROOT sided dobj sided plane inverted JJ edge NN root ROOT edge amod edge inverted inverted JJ edges NNS root ROOT edges amod edges inverted final JJ sided VBD plane NN root ROOT sided dobj sided plane next JJ edge NN root ROOT edge amod edge next next JJ brother NN map NN get VB root ROOT get amod map next compound map brother nsubj get map inverted JJ edge NN root ROOT edge amod edge inverted bounds NNS add VBP intersection NN root ROOT add nsubj add bounds dobj add intersection planet NN model NN root ROOT model compound model planet inverted JJ edge NN root ROOT edge amod edge inverted next JJ edge NN root ROOT edge amod edge next prev NN brother NN map NN get VB root ROOT get compound map prev compound map brother nsubj get map inverted JJ edge NN root ROOT edge amod edge inverted next JJ brother NN map NN get VB root ROOT get amod map next compound map brother nsubj get map next JJ edge NN root ROOT edge amod edge next,1,B6,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoConcavePolygon.java,402
DECL STMT SPECIFIER private TYPE int NAME int NAME num docs private JJ int NN num NN docs NNS root ROOT docs compound docs num,0,N/A,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.java,434
COMMENT max latitude value in radians DECL STMT SPECIFIER public SPECIFIER static TYPE final double SPECIFIER final NAME double NAME max lat radians INIT to radians max lat incl EXPR to radians max lat incl NAME to radians NAME max lat incl max latitude value in radians root ROOT value compound value max compound value latitude case radians in nmod in value radians public NN static JJ final JJ double RB max NN lat NN radians NNS root ROOT radians compound radians max compound radians lat to TO radians NNS root ROOT radians case radians to max NN lat NN incl NN root ROOT incl compound incl max compound incl lat,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/geo/GeoUtils.java,53
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME get bounds PARAMETER LIST bounds bounds PARAMETER bounds bounds TYPE bounds NAME bounds NAME bounds BLOCK EXPR super get bounds bounds CALL super get bounds bounds NAME super get bounds NAME super NAME get bounds ARGUMENT LIST ARGUMENT EXPR bounds NAME bounds EXPR bounds add horizontal plane planet model bottom lat bottom plane CALL bounds add horizontal plane planet model bottom lat bottom plane NAME bounds add horizontal plane NAME bounds NAME add horizontal plane ARGUMENT LIST ARGUMENT EXPR planet model NAME planet model ARGUMENT EXPR bottom lat NAME bottom lat ARGUMENT EXPR bottom plane NAME bottom plane override NN public NN void NN get VB bounds NNS root ROOT get dobj get bounds bounds NNS bounds NNS super JJ get VB bounds NNS bounds NNS bounds NNS add VB horizontal JJ plane NN root ROOT add amod plane horizontal dobj add plane planet NN model NN root ROOT model compound model planet bottom JJ lat NN root ROOT lat amod lat bottom bottom JJ plane NN root ROOT plane amod plane bottom,1,B6,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoNorthLatitudeZone.java,101
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME get bounds PARAMETER LIST bounds bounds PARAMETER bounds bounds TYPE bounds NAME bounds NAME bounds BLOCK EXPR bounds add point this CALL bounds add point this NAME bounds add point NAME bounds NAME add point ARGUMENT LIST ARGUMENT EXPR this NAME this override NN public NN void NN get VB bounds NNS root ROOT get dobj get bounds bounds NNS bounds NNS bounds NNS add VBP point NN root ROOT add nsubj add bounds dobj add point this DT,1,B6,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegeneratePoint.java,69
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME get bounds PARAMETER LIST bounds bounds PARAMETER bounds bounds TYPE bounds NAME bounds NAME bounds BLOCK EXPR super get bounds bounds CALL super get bounds bounds NAME super get bounds NAME super NAME get bounds ARGUMENT LIST ARGUMENT EXPR bounds NAME bounds EXPR bounds add horizontal plane planet model top lat top plane CALL bounds add horizontal plane planet model top lat top plane NAME bounds add horizontal plane NAME bounds NAME add horizontal plane ARGUMENT LIST ARGUMENT EXPR planet model NAME planet model ARGUMENT EXPR top lat NAME top lat ARGUMENT EXPR top plane NAME top plane override NN public NN void NN get VB bounds NNS root ROOT get dobj get bounds bounds NNS bounds NNS super JJ get VB bounds NNS bounds NNS bounds NNS add VB horizontal JJ plane NN root ROOT add amod plane horizontal dobj add plane planet NN model NN root ROOT model compound model planet top JJ lat NN root ROOT lat amod lat top top JJ plane NN root ROOT plane amod plane top,1,B6,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoSouthLatitudeZone.java,104
COMMENT ram instances we have already loaded DECL STMT SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME sorted set singleton INIT EXPR ram instances we have already loaded root ROOT instances compound instances ram nsubj loaded we aux loaded have advmod loaded already acl relcl instances loaded static JJ final JJ byte NN sorted VBN set NN singleton NN root ROOT singleton amod singleton sorted compound singleton set static set SYNONYM SYNONYM,1,D2,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,102
COMMENT set the max allowed token length tokens larger than this will be chopped up at this token length and emitted as multiple tokens if you need to skip such large tokens you could increase this max length and then use code length filter to remove long tokens the default is link standard analyzer default max token length FUNCTION SPECIFIER public TYPE void NAME void NAME set max token length PARAMETER LIST int length PARAMETER int length TYPE int NAME int NAME length BLOCK EXPR max token length length NAME max token length NAME length set the max allowed token length tokens larger than this will be chopped root ROOT set det max the nsubj allowed max ccomp set allowed amod tokens token compound tokens length dobj allowed tokens amod tokens larger mark chopped than nsubjpass chopped this aux chopped will auxpass chopped be ccomp larger chopped set the max allowed token length tokens larger than this will be chopped root ROOT set det max the nsubj allowed max ccomp set allowed amod tokens token compound tokens length dobj allowed tokens amod tokens larger mark chopped than nsubjpass chopped this aux chopped will auxpass chopped be ccomp larger chopped up at this token length and emitted as multiple tokens if you need to root ROOT need dep need up case length at det length this amod length token nmod at up length cc up and conj and up emitted dep need emitted case tokens as amod tokens multiple nmod as emitted tokens mark need if nsubj need you dep need to up at this token length and emitted as multiple tokens if you need to root ROOT need dep need up case length at det length this amod length token nmod at up length cc up and conj and up emitted dep need emitted case tokens as amod tokens multiple nmod as emitted tokens mark need if nsubj need you dep need to skip such large tokens you could increase this max length and then root ROOT skip amod tokens such amod tokens large dobj skip tokens nsubj increase you aux increase could acl relcl tokens increase det length this compound length max dobj increase length cc skip and advmod skip then use code length filter to remove long tokens the default is root ROOT filter compound filter use compound filter code compound filter length mark remove to acl to filter remove amod tokens long dobj remove tokens det default the nsubj is default acl relcl tokens is use code length filter to remove long tokens the default is root ROOT filter compound filter use compound filter code compound filter length mark remove to acl to filter remove amod tokens long dobj remove tokens det default the nsubj is default acl relcl tokens is link standard analyzer default max token length root ROOT length compound length link amod length standard compound length analyzer compound length default compound length max amod length token public NN void NN set VBN max NN token JJ length NN root ROOT set compound length max amod length token dobj set length int NN length NN max NN token JJ length NN root ROOT length compound length max amod length token length NN allowed will ANTONYM ANTONYM set up ANTONYM ANTONYM,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer.java,90
DECL STMT SPECIFIER private TYPE final list leaf reader context SPECIFIER final NAME list leaf reader context NAME list ARGUMENT LIST ARGUMENT NAME leaf reader context NAME ctx private JJ final JJ list NN leaf NN reader NN context NN root ROOT context compound context leaf compound context reader ctx NN,1,D1,Lucene/lucene/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping.java,1303
COMMENT set of common english stopwords DECL STMT SPECIFIER private TYPE int NAME int NAME skipped positions set of common english stopwords root ROOT set case stopwords of amod stopwords common amod stopwords english nmod of set stopwords private JJ int NN skipped VBD positions NNS root ROOT skipped dobj skipped positions,1,E1,Lucene/lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenFilter.java,60
DECL STMT TYPE final int SPECIFIER final NAME int NAME num dims final JJ int NN num NN dims VBZ root ROOT dims nsubj dims num,0,N/A,Lucene/lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint.java,1300
COMMENT true if overlap tokens tokens with a position of increment of zero are discounted from the document s length DECL STMT SPECIFIER protected TYPE boolean NAME boolean NAME discount overlaps INIT true EXPR true true if overlap tokens tokens with a position of increment of zero are root ROOT true mark overlap if dep true overlap compound tokens tokens dobj overlap tokens case position with det position a nmod with overlap position case increment of nmod of position increment case zero of nmod of increment zero dep true are discounted from the document s length root ROOT length dep length discounted case document from det document the nmod from discounted document compound length s protected VBN boolean NN discount NN overlaps VBZ root ROOT overlaps nsubj overlaps discount true JJ,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/search/similarities/ClassicSimilarity.java,159
COMMENT true for an nrt sync DECL STMT SPECIFIER protected TYPE long NAME long NAME tot bytes true for an nrt sync root ROOT true case sync for det sync an compound sync nrt nmod for true sync protected VBN long RB tot NN bytes NNS root ROOT bytes compound bytes tot,1,E1,Lucene/lucene/replicator/src/java/org/apache/lucene/replicator/nrt/CopyJob.java,55
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME num threads INIT test nightly EXPR test nightly TERNARY test nightly CONDITION test nightly EXPR test nightly NAME test nightly THEN EXPR ELSE EXPR private JJ final JJ int NN num NN threads NNS root ROOT threads compound threads num test NN nightly JJ root ROOT nightly nmod npmod nightly test,0,N/A,Lucene/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.java,53
DECL STMT TYPE final int SPECIFIER final NAME int NAME bytes final JJ int NN bytes NNS,1,E1,Lucene/lucene/core/src/java/org/apache/lucene/util/OfflineSorter.java,91
COMMENT returns the link leaf reader s that were passed on init FUNCTION SPECIFIER public TYPE leaf reader NAME leaf reader NAME leaf reader INDEX NAME get parallel readers PARAMETER LIST BLOCK EXPR ensure open CALL ensure open NAME ensure open ARGUMENT LIST RETURN return parallel readers EXPR parallel readers NAME parallel readers returns the link leaf reader s that were passed on init root ROOT returns det s the compound s link compound s leaf compound s reader dobj returns s nsubjpass passed s ref s that auxpass passed were acl relcl s passed case init on nmod on passed init returns the link leaf reader s that were passed on init root ROOT returns det s the compound s link compound s leaf compound s reader dobj returns s nsubjpass passed s ref s that auxpass passed were acl relcl s passed case init on nmod on passed init public NN leaf NN reader NN root ROOT reader compound reader leaf get VB parallel JJ readers NNS root ROOT get amod readers parallel dobj get readers ensure VB open JJ root ROOT ensure xcomp ensure open return NN parallel JJ readers NNS root ROOT readers amod readers parallel,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/ParallelLeafReader.java,448
COMMENT max longitude value in radians DECL STMT SPECIFIER public SPECIFIER static TYPE final double SPECIFIER final NAME double NAME max lon radians INIT to radians max lon incl EXPR to radians max lon incl NAME to radians NAME max lon incl max longitude value in radians root ROOT value compound value max compound value longitude case radians in nmod in value radians public NN static JJ final JJ double RB max NN lon NN radians NNS root ROOT radians compound radians max compound radians lon to TO radians NNS root ROOT radians case radians to max NN lon NN incl NN root ROOT incl compound incl max compound incl lon,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/geo/GeoUtils.java,51
FUNCTION SPECIFIER public TYPE byte NAME byte NAME byte INDEX NAME get upper point PARAMETER LIST BLOCK RETURN return upper point clone EXPR upper point clone CALL upper point clone NAME upper point clone NAME upper point NAME clone ARGUMENT LIST public NN byte NN get VB upper JJ point NN root ROOT get amod point upper dobj get point return NN upper JJ point NN clone NN root ROOT clone amod clone upper compound clone point,1,A4,Lucene/lucene/core/src/java/org/apache/lucene/search/PointRangeQuery.java,347
COMMENT the number of stored fields DECL STMT TYPE final int SPECIFIER final NAME int NAME num stored fields the number of stored fields root ROOT number det number the case fields of amod fields stored nmod of number fields final JJ int NN num NN stored VBD fields NNS root ROOT stored nsubj stored num dobj stored fields,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader.java,354
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE double NAME double NAME get radius PARAMETER LIST BLOCK COMMENT here we compute the distance from the middle point to one of the corners however we need to be careful COMMENT to use the longest of three distances the distance to a corner on the top the distnace to a corner on the bottom and COMMENT the distance to the right or left edge from the center DECL STMT TYPE final double SPECIFIER final NAME double NAME center angle INIT right lon right lon left lon cos middle lat EXPR right lon right lon left lon cos middle lat NAME right lon NAME right lon NAME left lon NAME cos middle lat DECL STMT TYPE final double SPECIFIER final NAME double NAME bottom angle INIT center point arc distance llhc EXPR center point arc distance llhc CALL center point arc distance llhc NAME center point arc distance NAME center point NAME arc distance ARGUMENT LIST ARGUMENT EXPR llhc NAME llhc RETURN return math max center angle bottom angle EXPR math max center angle bottom angle CALL math max center angle bottom angle NAME math max NAME math NAME max ARGUMENT LIST ARGUMENT EXPR center angle NAME center angle ARGUMENT EXPR bottom angle NAME bottom angle override NN public NN double RB get VB radius NNS root ROOT get dobj get radius here we compute the distance from the middle point to one of the corners however we need to be careful root ROOT compute advmod compute here nsubj compute we det distance the dobj compute distance case point from det point the amod point middle nmod from compute point case one to det qmod corners one mwe one of det corners the nmod compute corners advmod need however nsubj need we nsubj xsubj careful we ccomp compute need mark careful to cop careful be xcomp need careful here we compute the distance from the middle point to one of the corners however we need to be careful root ROOT compute advmod compute here nsubj compute we det distance the dobj compute distance case point from det point the amod point middle nmod from compute point case one to det qmod corners one mwe one of det corners the nmod compute corners advmod need however nsubj need we nsubj xsubj careful we ccomp compute need mark careful to cop careful be xcomp need careful to use the longest of three distances the distance to a corner on the top the distnace to a corner on the bottom and root ROOT use mark use to det longest the dobj use longest case distances of nummod distances three nmod of longest distances det distance the nsubj distnace distance case corner to det corner a nmod to distance corner case top on det top the nmod on corner top det distnace the acl relcl distances distnace case corner to det corner a nmod to distnace corner case bottom on det bottom the nmod on corner bottom cc use and the distance to the right or left edge from the center root ROOT distance det distance the case edge to det edge the amod edge right cc right or conj or right left amod edge left nmod to distance edge case center from det center the nmod from edge center final JJ double RB center NN angle NN root ROOT angle compound angle center right JJ lon NN root ROOT lon amod lon right right JJ lon NN root ROOT lon amod lon right left RB lon NN root ROOT lon advmod lon left cos NNS middle JJ lat NN root ROOT lat compound lat cos amod lat middle final JJ double RB bottom JJ angle NN root ROOT angle amod angle bottom center NN point NN arc NN distance NN root ROOT distance compound distance center compound distance point compound distance arc llhc NN return NN math NN max NN root ROOT max compound max math center NN angle NN root ROOT angle compound angle center bottom JJ angle NN root ROOT angle amod angle bottom,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoWideNorthRectangle.java,149
DECL STMT TYPE final int SPECIFIER final NAME int NAME n terms final JJ int NN n NN terms NNS root ROOT terms compound terms n,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/search/PhraseQuery.java,292
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME get bounds PARAMETER LIST bounds bounds PARAMETER bounds bounds TYPE bounds NAME bounds NAME bounds BLOCK FOR for geo membership shape shape shapes shape get bounds bounds CONTROL geo membership shape shape shapes INIT geo membership shape shape shapes TYPE geo membership shape NAME geo membership shape NAME shape RANGE shapes EXPR shapes NAME shapes BLOCK EXPR shape get bounds bounds CALL shape get bounds bounds NAME shape get bounds NAME shape NAME get bounds ARGUMENT LIST ARGUMENT EXPR bounds NAME bounds override NN public NN void NN get VB bounds NNS root ROOT get dobj get bounds bounds NNS bounds NNS for IN geo NN membership NN shape NN root ROOT shape compound shape geo compound shape membership shape NN shapes NNS shape NN get VB bounds NNS root ROOT get nsubj get shape dobj get bounds bounds NNS,1,B6,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoCompositeMembershipShape.java,72
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME get bounds PARAMETER LIST bounds bounds PARAMETER bounds bounds TYPE bounds NAME bounds NAME bounds BLOCK COMMENT because of holes we don t want to use superclass method IF if local is within planet model north pole bounds no top latitude bound no longitude bound add point planet model north pole CONDITION local is within planet model north pole EXPR local is within planet model north pole CALL local is within planet model north pole NAME local is within ARGUMENT LIST ARGUMENT EXPR planet model north pole NAME planet model north pole NAME planet model NAME north pole THEN bounds no top latitude bound no longitude bound add point planet model north pole BLOCK EXPR bounds no top latitude bound no longitude bound add point planet model north pole CALL bounds no top latitude bound NAME bounds no top latitude bound NAME bounds NAME no top latitude bound ARGUMENT LIST CALL no longitude bound NAME no longitude bound ARGUMENT LIST CALL add point planet model north pole NAME add point ARGUMENT LIST ARGUMENT EXPR planet model north pole NAME planet model north pole NAME planet model NAME north pole IF if local is within planet model south pole bounds no bottom latitude bound no longitude bound add point planet model south pole CONDITION local is within planet model south pole EXPR local is within planet model south pole CALL local is within planet model south pole NAME local is within ARGUMENT LIST ARGUMENT EXPR planet model south pole NAME planet model south pole NAME planet model NAME south pole THEN bounds no bottom latitude bound no longitude bound add point planet model south pole BLOCK EXPR bounds no bottom latitude bound no longitude bound add point planet model south pole CALL bounds no bottom latitude bound NAME bounds no bottom latitude bound NAME bounds NAME no bottom latitude bound ARGUMENT LIST CALL no longitude bound NAME no longitude bound ARGUMENT LIST CALL add point planet model south pole NAME add point ARGUMENT LIST ARGUMENT EXPR planet model south pole NAME planet model south pole NAME planet model NAME south pole IF if local is within planet model min x pole bounds add point planet model min x pole CONDITION local is within planet model min x pole EXPR local is within planet model min x pole CALL local is within planet model min x pole NAME local is within ARGUMENT LIST ARGUMENT EXPR planet model min x pole NAME planet model min x pole NAME planet model NAME min x pole THEN bounds add point planet model min x pole BLOCK EXPR bounds add point planet model min x pole CALL bounds add point planet model min x pole NAME bounds add point NAME bounds NAME add point ARGUMENT LIST ARGUMENT EXPR planet model min x pole NAME planet model min x pole NAME planet model NAME min x pole IF if local is within planet model max x pole bounds add point planet model max x pole CONDITION local is within planet model max x pole EXPR local is within planet model max x pole CALL local is within planet model max x pole NAME local is within ARGUMENT LIST ARGUMENT EXPR planet model max x pole NAME planet model max x pole NAME planet model NAME max x pole THEN bounds add point planet model max x pole BLOCK EXPR bounds add point planet model max x pole CALL bounds add point planet model max x pole NAME bounds add point NAME bounds NAME add point ARGUMENT LIST ARGUMENT EXPR planet model max x pole NAME planet model max x pole NAME planet model NAME max x pole IF if local is within planet model min y pole bounds add point planet model min y pole CONDITION local is within planet model min y pole EXPR local is within planet model min y pole CALL local is within planet model min y pole NAME local is within ARGUMENT LIST ARGUMENT EXPR planet model min y pole NAME planet model min y pole NAME planet model NAME min y pole THEN bounds add point planet model min y pole BLOCK EXPR bounds add point planet model min y pole CALL bounds add point planet model min y pole NAME bounds add point NAME bounds NAME add point ARGUMENT LIST ARGUMENT EXPR planet model min y pole NAME planet model min y pole NAME planet model NAME min y pole IF if local is within planet model max y pole bounds add point planet model max y pole CONDITION local is within planet model max y pole EXPR local is within planet model max y pole CALL local is within planet model max y pole NAME local is within ARGUMENT LIST ARGUMENT EXPR planet model max y pole NAME planet model max y pole NAME planet model NAME max y pole THEN bounds add point planet model max y pole BLOCK EXPR bounds add point planet model max y pole CALL bounds add point planet model max y pole NAME bounds add point NAME bounds NAME add point ARGUMENT LIST ARGUMENT EXPR planet model max y pole NAME planet model max y pole NAME planet model NAME max y pole COMMENT add all the points and the intersections FOR for final geo point point points bounds add point point CONTROL final geo point point points INIT final geo point point points TYPE final geo point SPECIFIER final NAME geo point NAME point RANGE points EXPR points NAME points BLOCK EXPR bounds add point point CALL bounds add point point NAME bounds add point NAME bounds NAME add point ARGUMENT LIST ARGUMENT EXPR point NAME point COMMENT add planes with membership FOR for final sided plane edge edges bounds add plane planet model edge either bounds get edge final sided plane next edge next brother map get edge bounds add intersection planet model edge next edge prev brother map get edge next brother map get next edge CONTROL final sided plane edge edges INIT final sided plane edge edges TYPE final sided plane SPECIFIER final NAME sided plane NAME edge RANGE edges EXPR edges NAME edges BLOCK EXPR bounds add plane planet model edge either bounds get edge CALL bounds add plane planet model edge either bounds get edge NAME bounds add plane NAME bounds NAME add plane ARGUMENT LIST ARGUMENT EXPR planet model NAME planet model ARGUMENT EXPR edge NAME edge ARGUMENT EXPR either bounds get edge CALL either bounds get edge NAME either bounds get NAME either bounds NAME get ARGUMENT LIST ARGUMENT EXPR edge NAME edge DECL STMT TYPE final sided plane SPECIFIER final NAME sided plane NAME next edge INIT next brother map get edge EXPR next brother map get edge CALL next brother map get edge NAME next brother map get NAME next brother map NAME get ARGUMENT LIST ARGUMENT EXPR edge NAME edge EXPR bounds add intersection planet model edge next edge prev brother map get edge next brother map get next edge CALL bounds add intersection planet model edge next edge prev brother map get edge next brother map get next edge NAME bounds add intersection NAME bounds NAME add intersection ARGUMENT LIST ARGUMENT EXPR planet model NAME planet model ARGUMENT EXPR edge NAME edge ARGUMENT EXPR next edge NAME next edge ARGUMENT EXPR prev brother map get edge CALL prev brother map get edge NAME prev brother map get NAME prev brother map NAME get ARGUMENT LIST ARGUMENT EXPR edge NAME edge ARGUMENT EXPR next brother map get next edge CALL next brother map get next edge NAME next brother map get NAME next brother map NAME get ARGUMENT LIST ARGUMENT EXPR next edge NAME next edge override NN public NN void NN get VB bounds NNS root ROOT get dobj get bounds bounds NNS bounds NNS because of holes we don t want to use superclass method root ROOT don case holes because mwe because of nmod because of don holes nsubj don we nsubj want t nsubj xsubj use t ccomp don want mark use to xcomp want use amod method superclass dobj use method if IN local JJ is VBZ within IN root ROOT within nsubj within local cop within is planet NN model NN north NN root ROOT north compound north planet compound north model pole NN bounds NNS no DT top JJ latitude NN bound VBD root ROOT bound dobj bound bounds neg latitude no amod latitude top nsubj bound latitude no DT longitude NN bound VBD root ROOT bound neg longitude no nsubj bound longitude add VB point NN root ROOT add dobj add point planet NN model NN north NN root ROOT north compound north planet compound north model pole NN if IN local JJ is VBZ within IN root ROOT within nsubj within local cop within is planet NN model NN south RB root ROOT model compound model planet advmod model south pole NN bounds NNS no DT bottom JJ latitude NN bound VBD root ROOT bound compound latitude bounds neg latitude no amod latitude bottom nsubj bound latitude no DT longitude NN bound VBD root ROOT bound neg longitude no nsubj bound longitude add VB point NN root ROOT add dobj add point planet NN model NN south RB root ROOT model compound model planet advmod model south pole NN if IN local JJ is VBZ within IN root ROOT within nsubj within local cop within is planet NN model NN min NN root ROOT min compound min planet compound min model x CC pole NN root ROOT pole compound pole x bounds NNS add VBP point NN root ROOT add nsubj add bounds dobj add point planet NN model NN min NN root ROOT min compound min planet compound min model x CC pole NN root ROOT pole compound pole x if IN local JJ is VBZ within IN root ROOT within nsubj within local cop within is planet NN model NN max NN root ROOT max compound max planet compound max model x CC pole NN root ROOT pole compound pole x bounds NNS add VBP point NN root ROOT add nsubj add bounds dobj add point planet NN model NN max NN root ROOT max compound max planet compound max model x CC pole NN root ROOT pole compound pole x if IN local JJ is VBZ within IN root ROOT within nsubj within local cop within is planet NN model NN min NN root ROOT min compound min planet compound min model y RB pole NN root ROOT pole advmod pole y bounds NNS add VBP point NN root ROOT add nsubj add bounds dobj add point planet NN model NN min NN root ROOT min compound min planet compound min model y RB pole NN root ROOT pole advmod pole y if IN local JJ is VBZ within IN root ROOT within nsubj within local cop within is planet NN model NN max NN root ROOT max compound max planet compound max model y RB pole NN root ROOT pole advmod pole y bounds NNS add VBP point NN root ROOT add nsubj add bounds dobj add point planet NN model NN max NN root ROOT max compound max planet compound max model y RB pole NN root ROOT pole advmod pole y add all the points and the intersections root ROOT add det predet points all det points the dobj add points cc points and det intersections the dobj add intersections conj and points intersections for IN final JJ geo NN point NN root ROOT point compound point geo point NN points NNS bounds NNS add VBP point NN root ROOT add nsubj add bounds dobj add point point NN add planes with membership root ROOT add dobj add planes case membership with nmod with add membership for IN final JJ sided VBD plane NN root ROOT sided dobj sided plane edge NN edges NNS bounds NNS add VBP plane NN root ROOT add nsubj add bounds dobj add plane planet NN model NN root ROOT model compound model planet edge NN either DT bounds NNS get VBP root ROOT get det bounds either nsubj get bounds edge NN final JJ sided VBD plane NN root ROOT sided dobj sided plane next JJ edge NN root ROOT edge amod edge next next JJ brother NN map NN get VB root ROOT get amod map next compound map brother nsubj get map edge NN bounds NNS add VBP intersection NN root ROOT add nsubj add bounds dobj add intersection planet NN model NN root ROOT model compound model planet edge NN next JJ edge NN root ROOT edge amod edge next prev NN brother NN map NN get VB root ROOT get compound map prev compound map brother nsubj get map edge NN next JJ brother NN map NN get VB root ROOT get amod map next compound map brother nsubj get map next JJ edge NN root ROOT edge amod edge next,1,B6,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoConvexPolygon.java,392
DECL STMT SPECIFIER public TYPE monotonic block packed reader NAME monotonic block packed reader NAME term addresses public NN monotonic JJ block NN packed VBD reader NN root ROOT packed amod block monotonic nsubj packed block dobj packed reader term NN addresses NNS root ROOT addresses compound addresses term,1,E1,Lucene/lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene50/Lucene50DocValuesProducer.java,1016
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE list query node NAME list query node NAME list ARGUMENT LIST ARGUMENT NAME query node NAME set children order PARAMETER LIST list query node children PARAMETER list query node children TYPE list query node NAME list query node NAME list ARGUMENT LIST ARGUMENT NAME query node NAME children THROWS throws query node exception ARGUMENT EXPR query node exception NAME query node exception BLOCK RETURN return children EXPR children NAME children override NN protected VBN list NN query NN node NN root ROOT node compound node query set VBN children NNS order NN root ROOT set compound order children dobj set order list NN query NN node NN root ROOT node compound node query children NNS throws VBZ query NN node NN exception NN root ROOT exception compound exception query compound exception node return NN children NNS,1,A3,Lucene/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/AllowLeadingWildcardProcessor.java,96
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE list query node NAME list query node NAME list ARGUMENT LIST ARGUMENT NAME query node NAME set children order PARAMETER LIST list query node children PARAMETER list query node children TYPE list query node NAME list query node NAME list ARGUMENT LIST ARGUMENT NAME query node NAME children THROWS throws query node exception ARGUMENT EXPR query node exception NAME query node exception BLOCK RETURN return children EXPR children NAME children override NN protected VBN list NN query NN node NN root ROOT node compound node query set VBN children NNS order NN root ROOT set compound order children dobj set order list NN query NN node NN root ROOT node compound node query children NNS throws VBZ query NN node NN exception NN root ROOT exception compound exception query compound exception node return NN children NNS,1,A3,Lucene/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/AllowLeadingWildcardProcessor.java,96
COMMENT currently we read at a time using the logic of the old iterator DECL STMT SPECIFIER private TYPE byte NAME byte NAME byte INDEX NAME arr currently we read at a time using the logic of the old iterator root ROOT read advmod read currently nsubj read we case time at det time a nmod at read time xcomp read using det logic the dobj using logic case iterator of det iterator the amod iterator old nmod of logic iterator private JJ byte NN arr IN,0,N/A,Lucene/lucene/misc/src/java/org/apache/lucene/uninverting/DocTermOrds.java,763
COMMENT number of docs to generate for testing DECL STMT SPECIFIER private SPECIFIER static TYPE int NAME int NAME no docs number of docs to generate for testing root ROOT number case docs of nmod of number docs mark generate to acl to number generate case testing for nmod for generate testing private JJ static JJ int NN no DT docs NNS root ROOT docs neg docs no,0,N/A,Lucene/lucene/misc/src/test/org/apache/lucene/uninverting/TestNumericTerms32.java,49
DECL STMT SPECIFIER private SPECIFIER static TYPE final break iterator SPECIFIER final NAME break iterator NAME line bi INIT break iterator get line instance locale root EXPR break iterator get line instance locale root CALL break iterator get line instance locale root NAME break iterator get line instance NAME break iterator NAME get line instance ARGUMENT LIST ARGUMENT EXPR locale root NAME locale root NAME locale NAME root private JJ static JJ final JJ break NN iterator NN root ROOT iterator compound iterator break line NN bi NN root ROOT bi compound bi line break NN iterator NN get VB line NN instance NN root ROOT get compound iterator break nsubj get iterator compound instance line dobj get instance locale NN root NN root ROOT root compound root locale line root ANTONYM ANTONYM,0,N/A,Lucene/lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestSplittingBreakIterator.java,31
DECL STMT SPECIFIER private TYPE int NAME int NAME num tokens INIT EXPR private JJ int NN num NN tokens NNS root ROOT tokens compound tokens num,0,N/A,Lucene/lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup.java,34
COMMENT true if min x plane intersects globe DECL STMT SPECIFIER protected TYPE final boolean SPECIFIER final NAME boolean NAME min x plane intersects true if min x plane intersects globe root ROOT true mark intersects if nsubj intersects min cc min x conj x min plane nsubj intersects plane advcl if true intersects dobj intersects globe protected VBN final JJ boolean NN min NN x CC plane NN intersects NNS root ROOT intersects compound intersects min cc min x conj x min plane compound intersects plane,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/StandardXYZSolid.java,42
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME flags private JJ final JJ int NN flags NNS,1,E1,Lucene/lucene/suggest/src/java/org/apache/lucene/search/suggest/document/RegexCompletionQuery.java,48
COMMENT this controls how individual test rules are nested it is important that all rules declared in link lucene test case are executed in proper order if they depend on each other DECL STMT SPECIFIER private SPECIFIER static TYPE final map string field type SPECIFIER final NAME map string field type NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME field type NAME field to type INIT new hash map string field type EXPR new hash map string field type CALL hash map string field type NAME hash map string field type NAME hash map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME field type ARGUMENT LIST this controls how individual test rules are nested it is important that root ROOT controls nsubj controls this advmod nested how amod rules individual compound rules test nsubj nested rules cop nested are dep important nested nsubj important it cop important is ccomp controls important dep important that this controls how individual test rules are nested it is important that root ROOT controls nsubj controls this advmod nested how amod rules individual compound rules test nsubj nested rules cop nested are dep important nested nsubj important it cop important is ccomp controls important dep important that all rules declared in link lucene test case are executed in proper order root ROOT declared det rules all nsubj declared rules case case in compound case link compound case lucene compound case test nmod in declared case auxpass executed are ccomp declared executed case order in amod order proper nmod in executed order if they depend on each other root ROOT depend mark depend if nsubj depend they case other on det other each nmod on depend other private JJ static JJ final JJ map NN string NN field NN type NN root ROOT type compound type field field NN to TO type NN root ROOT field case type to nmod to field type new JJ hash VB map NN root ROOT hash dobj hash map string NN field NN type NN root ROOT type compound type field controls declared ANTONYM ANTONYM,0,N/A,Lucene/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java,676
DECL STMT SPECIFIER public SPECIFIER static TYPE field type NAME field type NAME offsets INIT new field type text field type stored EXPR new field type text field type stored CALL field type text field type stored NAME field type ARGUMENT LIST ARGUMENT EXPR text field type stored NAME text field type stored NAME text field NAME type stored public NN static JJ field NN type NN root ROOT type compound type field offsets NNS new JJ field NN type NN root ROOT type compound type field text NN field NN type NN root ROOT type compound type text compound type field stored VBN,1,E1,Lucene/lucene/core/src/test/org/apache/lucene/search/spans/TestSpanCollection.java,46
DECL STMT SPECIFIER private TYPE prefix aware token filter NAME prefix aware token filter NAME suffix private JJ prefix NN aware JJ token JJ filter NN root ROOT filter compound filter prefix amod filter aware amod filter token suffix NN,1,F1,Lucene/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/PrefixAndSuffixAwareTokenFilter.java,33
FUNCTION SPECIFIER private TYPE b box strategy NAME b box strategy NAME setup needs doc values only PARAMETER LIST THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK EXPR this ctx spatial context geo NAME this ctx NAME this NAME ctx NAME spatial context geo NAME spatial context NAME geo DECL STMT TYPE field type NAME field type NAME field type COMMENT random legacy or not legacy DECL STMT TYPE string NAME string NAME field prefix INIT bbox EXPR bbox IF if random next boolean field type new field type b box strategy default fieldtype if random next boolean field type set dimensions else field type new field type b box strategy legacy fieldtype if random next boolean field type set index options index options none CONDITION random next boolean EXPR random next boolean CALL random NAME random ARGUMENT LIST CALL next boolean NAME next boolean ARGUMENT LIST THEN field type new field type b box strategy default fieldtype if random next boolean field type set dimensions BLOCK EXPR field type new field type b box strategy default fieldtype NAME field type CALL field type b box strategy default fieldtype NAME field type ARGUMENT LIST ARGUMENT EXPR b box strategy default fieldtype NAME b box strategy default fieldtype NAME b box strategy NAME default fieldtype IF if random next boolean field type set dimensions CONDITION random next boolean EXPR random next boolean CALL random NAME random ARGUMENT LIST CALL next boolean NAME next boolean ARGUMENT LIST THEN field type set dimensions BLOCK EXPR field type set dimensions CALL field type set dimensions NAME field type set dimensions NAME field type NAME set dimensions ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR ELSE else field type new field type b box strategy legacy fieldtype if random next boolean field type set index options index options none BLOCK EXPR field type new field type b box strategy legacy fieldtype NAME field type CALL field type b box strategy legacy fieldtype NAME field type ARGUMENT LIST ARGUMENT EXPR b box strategy legacy fieldtype NAME b box strategy legacy fieldtype NAME b box strategy NAME legacy fieldtype IF if random next boolean field type set index options index options none CONDITION random next boolean EXPR random next boolean CALL random NAME random ARGUMENT LIST CALL next boolean NAME next boolean ARGUMENT LIST THEN field type set index options index options none BLOCK EXPR field type set index options index options none CALL field type set index options index options none NAME field type set index options NAME field type NAME set index options ARGUMENT LIST ARGUMENT EXPR index options none NAME index options none NAME index options NAME none EXPR strategy new b box strategy ctx field prefix field type NAME strategy CALL b box strategy ctx field prefix field type NAME b box strategy ARGUMENT LIST ARGUMENT EXPR ctx NAME ctx ARGUMENT EXPR field prefix NAME field prefix ARGUMENT EXPR field type NAME field type RETURN return b box strategy strategy EXPR b box strategy strategy NAME b box strategy NAME strategy private JJ b NN box NN strategy NN root ROOT strategy compound strategy b compound strategy box setup NN needs VBZ doc NN values NNS only RB root ROOT needs nsubj needs setup compound values doc dobj needs values advmod needs only throws VBZ io NN exception NN root ROOT exception compound exception io this DT ctx NN spatial JJ context NN geo NN root ROOT geo amod geo spatial compound geo context field NN type NN root ROOT type compound type field field NN type NN root ROOT type compound type field random legacy or not legacy root ROOT legacy amod legacy random cc legacy or neg legacy not conj or legacy legacy string NN field NN prefix NN root ROOT prefix compound prefix field bbox NN if IN random JJ next JJ boolean NN root ROOT boolean amod boolean next field NN type NN root ROOT type compound type field new JJ field NN type NN root ROOT type compound type field b NN box NN strategy NN default NN fieldtype NN if IN random JJ next JJ boolean NN root ROOT boolean amod boolean next field NN type NN set VBN dimensions NNS root ROOT set compound type field nsubj set type dobj set dimensions else RB field NN type NN root ROOT type compound type field new JJ field NN type NN root ROOT type compound type field b NN box NN strategy NN legacy NN root ROOT legacy compound strategy b compound strategy box nsubj legacy strategy fieldtype NN if IN random JJ next JJ boolean NN root ROOT boolean amod boolean next field NN type NN set VBN index NN options NNS root ROOT set compound type field nsubj set type compound options index dobj set options index NN options NNS none NN root ROOT options compound options index dep options none strategy NN new JJ b NN box NN strategy NN root ROOT strategy compound strategy b compound strategy box ctx NN field NN prefix NN root ROOT prefix compound prefix field field NN type NN root ROOT type compound type field return NN b NN box NN strategy NN root ROOT strategy compound strategy b compound strategy box strategy NN,0,N/A,Lucene/lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy.java,231
COMMENT doc base num buffered docs current doc id DECL STMT SPECIFIER private TYPE long NAME long NAME num chunks doc base num buffered docs current doc id root ROOT buffered compound num doc compound num base nsubj buffered num compound id docs amod id current compound id doc dobj buffered id private JJ long RB num NN chunks NNS root ROOT chunks compound chunks num,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter.java,95
DECL STMT TYPE final boolean SPECIFIER final NAME boolean NAME points final JJ boolean NN points NNS,1,E1,Lucene/lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl.java,263
COMMENT return the latest end offset in the original text of a matching token in this group score gt or if there are none then link get end offset FUNCTION SPECIFIER public TYPE int NAME int NAME get end offset PARAMETER LIST BLOCK RETURN return match end offset EXPR match end offset NAME match end offset return the latest end offset in the original text of a matching token in this group score gt or root ROOT return det end the amod end latest dobj return end acl end offset case text in det text the amod text original nmod in offset text case token of det token a amod token matching nmod of text token case gt in det gt this compound gt group compound gt score nmod in token gt cc return or if there are none then link get end offset root ROOT offset mark are if expl are there advcl if offset are nsubjpass offset none advmod link then dep offset link aux offset get auxpass offset end public NN int NN get VB end VB offset VBN root ROOT offset aux offset get auxpass offset end return NN match NN end NN offset VBP root ROOT offset compound end match nsubj offset end end offset ANTONYM ANTONYM matching are ANTONYM ANTONYM matching score ANTONYM ANTONYM latest in SYNONYM SYNONYM,0,N/A,Lucene/lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup.java,118
COMMENT enables caching for the second pass search the cache will not contain more than the maximum specified documents the cache is filled during the first pass searched and then replayed during the second pass searched if the cache grows beyond the specified limit then the cache is purged and not used in the second pass search param max docs to cache the maximum number of documents the cache is allowed to hold param cache scores whether to cache the scores return code this code FUNCTION SPECIFIER public TYPE grouping search NAME grouping search NAME set caching PARAMETER LIST int max docs to cache boolean cache scores PARAMETER int max docs to cache TYPE int NAME int NAME max docs to cache PARAMETER boolean cache scores TYPE boolean NAME boolean NAME cache scores BLOCK EXPR this max docs to cache max docs to cache NAME this max docs to cache NAME this NAME max docs to cache NAME max docs to cache EXPR this max cache rammb null NAME this max cache rammb NAME this NAME max cache rammb EXPR this cache scores cache scores NAME this cache scores NAME this NAME cache scores NAME cache scores RETURN return this EXPR this NAME this enables caching for the second pass search the cache will not contain more than the maximum specified documents root ROOT enables xcomp enables caching case search for det search the amod search second compound search pass nmod for caching search det cache the nsubj contain cache aux contain will neg contain not acl relcl search contain dobj contain more case documents than det documents the amod documents maximum amod documents specified nmod than more documents enables caching for the second pass search the cache will not contain more than the maximum specified documents root ROOT enables xcomp enables caching case search for det search the amod search second compound search pass nmod for caching search det cache the nsubj contain cache aux contain will neg contain not acl relcl search contain dobj contain more case documents than det documents the amod documents maximum amod documents specified nmod than more documents the cache is filled during the first pass searched and then replayed during the second pass searched root ROOT filled det cache the nsubjpass filled cache auxpass filled is case pass during det pass the amod pass first nmod during filled pass dep filled searched cc searched and advmod replayed then dep filled replayed conj and searched replayed case pass during det pass the amod pass second nmod during searched pass dep filled searched if the cache grows beyond the specified limit then the cache is purged and not used in the second pass search root ROOT grows mark grows if det cache the nsubj grows cache case limit beyond det limit the amod limit specified nmod beyond grows limit advmod purged then det cache the nsubjpass purged cache nsubjpass used cache auxpass purged is ccomp grows purged cc purged and neg used not ccomp grows used conj and purged used case search in det search the amod search second compound search pass nmod in used search param max docs to cache the maximum number of documents the cache is allowed to hold root ROOT docs compound docs param compound docs max case cache to nmod to docs cache det number the amod number maximum dep docs number case documents of nmod of number documents det cache the nsubjpass allowed cache nsubj xsubj hold cache auxpass allowed is acl relcl documents allowed mark hold to xcomp allowed hold param cache scores whether to cache the scores root ROOT scores compound scores param compound scores cache dep scores whether case cache to root whether cache det scores the dobj cache scores return code this code root ROOT code compound code return det code this dobj code code public NN grouping VBG search NN root ROOT grouping dobj grouping search set VBN caching NN root ROOT set dobj set caching int NN max NN docs NNS to TO cache NN root ROOT docs compound docs max case cache to nmod to docs cache boolean NN cache NN scores NNS root ROOT scores compound scores cache this DT max NN docs NNS to TO cache NN max NN docs NNS to TO cache NN root ROOT docs compound docs max case cache to nmod to docs cache this DT max NN cache NN rammb NN null JJ this DT cache NN scores NNS cache NN scores NNS root ROOT scores compound scores cache return NN this DT allowed hold ANTONYM ANTONYM contain filled ANTONYM ANTONYM contain is ANTONYM ANTONYM contain return ANTONYM ANTONYM filled hold ANTONYM ANTONYM hold return ANTONYM ANTONYM hold scores ANTONYM ANTONYM limit hold ANTONYM ANTONYM number return ANTONYM ANTONYM pass hold ANTONYM ANTONYM purged number ANTONYM ANTONYM second number ANTONYM ANTONYM used hold ANTONYM ANTONYM will allowed ANTONYM ANTONYM,1,A3,Lucene/lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch.java,212
COMMENT DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME sysprop badapples INIT tests badapples EXPR tests badapples public NN static JJ final JJ string NN sysprop NN badapples NNS root ROOT badapples compound badapples sysprop tests NNS badapples NNS root ROOT badapples compound badapples tests,0,N/A,Lucene/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java,226
DECL STMT SPECIFIER private TYPE final intersects differentiating query SPECIFIER final NAME intersects differentiating query NAME intersects diff query private JJ final JJ intersects NNS differentiating VBG query NN root ROOT intersects acl intersects differentiating dobj differentiating query intersects NNS diff VBP query NN root ROOT diff nsubj diff intersects dobj diff query,0,N/A,Lucene/lucene/spatial-extras/src/java/org/apache/lucene/spatial/composite/IntersectsRPTVerifyQuery.java,50
COMMENT disables any enabled cache return code this code FUNCTION SPECIFIER public TYPE grouping search NAME grouping search NAME disable caching PARAMETER LIST BLOCK EXPR this max cache rammb null NAME this max cache rammb NAME this NAME max cache rammb EXPR this max docs to cache null NAME this max docs to cache NAME this NAME max docs to cache RETURN return this EXPR this NAME this disables any enabled cache root ROOT disables det cache any amod cache enabled dobj disables cache return code this code root ROOT code compound code return det code this dobj code code public NN grouping VBG search NN root ROOT grouping dobj grouping search disable VB caching NN root ROOT disable dobj disable caching this DT max NN cache NN rammb NN null JJ this DT max NN docs NNS to TO cache NN null JJ return NN this DT disables enabled ANTONYM ANTONYM,0,N/A,Lucene/lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch.java,224
COMMENT return the earliest start offset in the original text of a matching token in this group score gt or if there are none then the earliest offset of any token in the group FUNCTION SPECIFIER public TYPE int NAME int NAME get start offset PARAMETER LIST BLOCK RETURN return match start offset EXPR match start offset NAME match start offset return the earliest start offset in the original text of a matching token in this group score gt or root ROOT return det start the amod start earliest dobj return start acl start offset case text in det text the amod text original nmod in offset text case token of det token a amod token matching nmod of text token case gt in det gt this compound gt group compound gt score nmod in token gt cc return or if there are none then the earliest offset of any token in the group root ROOT are mark are if expl are there advmod offset none advmod offset then det earliest the nsubj offset earliest nsubj are offset case token of det token any nmod of offset token case group in det group the nmod in token group public NN int NN get VB start VB offset VBN root ROOT get xcomp get start xcomp start offset return NN match NN start NN offset VBP root ROOT offset compound start match nsubj offset start matching are ANTONYM ANTONYM matching score ANTONYM ANTONYM start offset ANTONYM ANTONYM,0,N/A,Lucene/lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup.java,110
COMMENT sets the hard upper bound on ram usage for a single segment after which the segment is forced to flush DECL STMT SPECIFIER protected TYPE volatile int SPECIFIER volatile NAME int NAME per thread hard limit mb sets the hard upper bound on ram usage for a single root ROOT sets det upper the amod upper hard dep sets upper acl upper bound case usage on compound usage ram nmod on bound usage case single for det single a nmod for upper single segment after which the segment is forced to flush root ROOT segment nmod after forced segment case which after ref segment which det segment the nsubjpass forced segment nsubj xsubj flush segment auxpass forced is acl relcl segment forced mark flush to xcomp forced flush segment after which the segment is forced to flush root ROOT segment nmod after forced segment case which after ref segment which det segment the nsubjpass forced segment nsubj xsubj flush segment auxpass forced is acl relcl segment forced mark flush to xcomp forced flush protected VBN volatile JJ int NN per IN thread NN hard JJ limit NN mb NN root ROOT mb case mb per compound mb thread amod mb hard compound mb limit sets bound ANTONYM ANTONYM single hard ANTONYM ANTONYM,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig.java,93
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE double NAME double NAME get radius PARAMETER LIST BLOCK RETURN return math pi EXPR math pi NAME math pi NAME math NAME pi override NN public NN double RB get VB radius NNS root ROOT get dobj get radius return NN math NN pi NN root ROOT pi compound pi math,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateLongitudeSlice.java,79
COMMENT carry over generation numbers from another segment infos lucene internal FUNCTION SPECIFIER public TYPE void NAME void NAME update generation PARAMETER LIST segment infos other PARAMETER segment infos other TYPE segment infos NAME segment infos NAME other BLOCK EXPR last generation other last generation NAME last generation NAME other last generation NAME other NAME last generation EXPR generation other generation NAME generation NAME other generation NAME other NAME generation carry over generation numbers from another segment infos root ROOT carry compound prt carry over compound numbers generation dobj carry numbers case infos from det infos another compound infos segment nmod from numbers infos lucene internal root ROOT internal nmod npmod internal lucene lucene internal root ROOT internal nmod npmod internal lucene public NN void NN update VB generation NN root ROOT update dobj update generation segment NN infos NNS root ROOT infos compound infos segment other JJ last JJ generation NN root ROOT generation amod generation last other JJ last JJ generation NN root ROOT generation amod generation other amod generation last generation NN other JJ generation NN root ROOT generation amod generation other public internal ANTONYM ANTONYM,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java,725
DECL STMT TYPE final long SPECIFIER final NAME long NAME num values final JJ long RB num NN values NNS root ROOT values compound values num,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/util/packed/DirectMonotonicReader.java,49
COMMENT shift the starting of the values to the left DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME start offset INIT EXPR shift the starting of the values to the left root ROOT shift det starting the dobj shift starting case values of det values the nmod of starting values case left to det left the nmod to shift left private JJ static JJ final JJ int NN start VB offset VBN root ROOT start xcomp start offset starting left ANTONYM ANTONYM,0,N/A,Lucene/lucene/core/src/test/org/apache/lucene/search/TestNumericRangeQuery32.java,48
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE double NAME double NAME get radius PARAMETER LIST BLOCK COMMENT this is a bit tricky i guess we should interpret this as meaning the angle of a circle that COMMENT would contain all the bounding box points when starting in the center IF if top lat return math pi CONDITION top lat EXPR top lat NAME top lat THEN return math pi BLOCK RETURN return math pi EXPR math pi NAME math pi NAME math NAME pi DECL STMT TYPE double NAME double NAME max cos lat INIT cos top lat EXPR cos top lat NAME cos top lat RETURN return max cos lat math pi EXPR max cos lat math pi NAME max cos lat NAME math pi NAME math NAME pi override NN public NN double RB get VB radius NNS root ROOT get dobj get radius this is a bit tricky i guess we should interpret this as meaning the angle of a circle that root ROOT guess nsubj guess this cop guess is det guess a compound guess bit amod guess tricky compound guess i nsubj interpret we aux interpret should ccomp guess interpret dobj interpret this mark meaning as advcl as interpret meaning det angle the dobj meaning angle case circle of det circle a nmod of angle circle dep circle that this is a bit tricky i guess we should interpret this as meaning the angle of a circle that root ROOT guess nsubj guess this cop guess is det guess a compound guess bit amod guess tricky compound guess i nsubj interpret we aux interpret should ccomp guess interpret dobj interpret this mark meaning as advcl as interpret meaning det angle the dobj meaning angle case circle of det circle a nmod of angle circle dep circle that would contain all the bounding box points when starting in the center root ROOT contain aux contain would det predet points all det points the amod points bounding compound points box dobj contain points advmod starting when advcl contain starting case center in det center the nmod in starting center if IN top JJ lat NN root ROOT lat amod lat top return NN math NN pi NN root ROOT pi compound pi math double RB max NN cos NNS lat VBP root ROOT lat compound cos max nsubj lat cos cos NNS top JJ lat NN root ROOT lat compound lat cos amod lat top return NN max NN cos NNS lat VBP root ROOT lat compound cos max nsubj lat cos math NN pi NN root ROOT pi compound pi math,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoSouthLatitudeZone.java,74
COMMENT link index reader passed to the constructor DECL STMT SPECIFIER private TYPE final map string ord range SPECIFIER final NAME map string ord range NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME ord range NAME prefix to ord range INIT new hash map EXPR new hash map CALL hash map NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST link index reader passed to the constructor root ROOT passed compound reader link compound reader index nsubj passed reader case constructor to det constructor the nmod to passed constructor link index reader passed to the constructor root ROOT passed compound reader link compound reader index nsubj passed reader case constructor to det constructor the nmod to passed constructor private JJ final JJ map NN string NN ord NN range NN root ROOT range compound range ord prefix NN to TO ord NN range NN root ROOT prefix case range to compound range ord nmod to prefix range new JJ hash VB map NN root ROOT hash dobj hash map,0,N/A,Lucene/lucene/facet/src/java/org/apache/lucene/facet/sortedset/DefaultSortedSetDocValuesReaderState.java,54
DECL STMT TYPE void NAME void NAME to string tree ARGUMENT LIST ARGUMENT EXPR string builder b NAME string builder NAME b SWITCH switch kind binary case regexp union case regexp concatenation case regexp intersection b append indent b append kind b append n exp to string tree b indent exp to string tree b indent break unary case regexp optional case regexp repeat case regexp complement b append indent b append kind b append n exp to string tree b indent break case regexp repeat min b append indent b append kind b append min b append min b append n exp to string tree b indent break case regexp repeat minmax b append indent b append kind b append min b append min b append max b append max b append n exp to string tree b indent break case regexp char b append indent b append kind b append char b append code point c b append n break case regexp char range b append indent b append kind b append from b append code point from b append to b append code point to b append n break case regexp anychar case regexp empty b append indent b append kind b append n break case regexp string b append indent b append kind b append string b append s b append n break case regexp anystring b append indent b append kind b append n break case regexp automaton b append indent b append kind b append n break case regexp interval b append indent b append kind string s integer to string min string s integer to string max b append if digits for int i s length i digits i b append b append s append if digits for int i s length i digits i b append b append s append b append n break CONDITION kind EXPR kind NAME kind BLOCK COMMENT binary CASE case regexp union EXPR regexp union NAME regexp union CASE case regexp concatenation EXPR regexp concatenation NAME regexp concatenation CASE case regexp intersection EXPR regexp intersection NAME regexp intersection EXPR b append indent CALL b append indent NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent EXPR b append kind CALL b append kind NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR kind NAME kind EXPR b append n CALL b append n NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR n EXPR exp to string tree b indent CALL exp to string tree b indent NAME exp to string tree NAME exp NAME to string tree ARGUMENT LIST ARGUMENT EXPR b NAME b ARGUMENT EXPR indent NAME indent EXPR exp to string tree b indent CALL exp to string tree b indent NAME exp to string tree NAME exp NAME to string tree ARGUMENT LIST ARGUMENT EXPR b NAME b ARGUMENT EXPR indent NAME indent BREAK break COMMENT unary CASE case regexp optional EXPR regexp optional NAME regexp optional CASE case regexp repeat EXPR regexp repeat NAME regexp repeat CASE case regexp complement EXPR regexp complement NAME regexp complement EXPR b append indent CALL b append indent NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent EXPR b append kind CALL b append kind NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR kind NAME kind EXPR b append n CALL b append n NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR n EXPR exp to string tree b indent CALL exp to string tree b indent NAME exp to string tree NAME exp NAME to string tree ARGUMENT LIST ARGUMENT EXPR b NAME b ARGUMENT EXPR indent NAME indent BREAK break CASE case regexp repeat min EXPR regexp repeat min NAME regexp repeat min EXPR b append indent CALL b append indent NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent EXPR b append kind CALL b append kind NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR kind NAME kind EXPR b append min CALL b append min NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR min EXPR b append min CALL b append min NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR min NAME min EXPR b append n CALL b append n NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR n EXPR exp to string tree b indent CALL exp to string tree b indent NAME exp to string tree NAME exp NAME to string tree ARGUMENT LIST ARGUMENT EXPR b NAME b ARGUMENT EXPR indent NAME indent BREAK break CASE case regexp repeat minmax EXPR regexp repeat minmax NAME regexp repeat minmax EXPR b append indent CALL b append indent NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent EXPR b append kind CALL b append kind NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR kind NAME kind EXPR b append min CALL b append min NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR min EXPR b append min CALL b append min NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR min NAME min EXPR b append max CALL b append max NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR max EXPR b append max CALL b append max NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR max NAME max EXPR b append n CALL b append n NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR n EXPR exp to string tree b indent CALL exp to string tree b indent NAME exp to string tree NAME exp NAME to string tree ARGUMENT LIST ARGUMENT EXPR b NAME b ARGUMENT EXPR indent NAME indent BREAK break CASE case regexp char EXPR regexp char NAME regexp char EXPR b append indent CALL b append indent NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent EXPR b append kind CALL b append kind NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR kind NAME kind EXPR b append char CALL b append char NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR char EXPR b append code point c CALL b append code point c NAME b append code point NAME b NAME append code point ARGUMENT LIST ARGUMENT EXPR c NAME c EXPR b append n CALL b append n NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR n BREAK break CASE case regexp char range EXPR regexp char range NAME regexp char range EXPR b append indent CALL b append indent NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent EXPR b append kind CALL b append kind NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR kind NAME kind EXPR b append from CALL b append from NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR from EXPR b append code point from CALL b append code point from NAME b append code point NAME b NAME append code point ARGUMENT LIST ARGUMENT EXPR from NAME from EXPR b append to CALL b append to NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR to EXPR b append code point to CALL b append code point to NAME b append code point NAME b NAME append code point ARGUMENT LIST ARGUMENT EXPR to NAME to EXPR b append n CALL b append n NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR n BREAK break CASE case regexp anychar EXPR regexp anychar NAME regexp anychar CASE case regexp empty EXPR regexp empty NAME regexp empty EXPR b append indent CALL b append indent NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent EXPR b append kind CALL b append kind NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR kind NAME kind EXPR b append n CALL b append n NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR n BREAK break CASE case regexp string EXPR regexp string NAME regexp string EXPR b append indent CALL b append indent NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent EXPR b append kind CALL b append kind NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR kind NAME kind EXPR b append string CALL b append string NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR string EXPR b append s CALL b append s NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR s NAME s EXPR b append n CALL b append n NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR n BREAK break CASE case regexp anystring EXPR regexp anystring NAME regexp anystring EXPR b append indent CALL b append indent NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent EXPR b append kind CALL b append kind NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR kind NAME kind EXPR b append n CALL b append n NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR n BREAK break CASE case regexp automaton EXPR regexp automaton NAME regexp automaton EXPR b append indent CALL b append indent NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent EXPR b append kind CALL b append kind NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR kind NAME kind EXPR b append n CALL b append n NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR n BREAK break CASE case regexp interval EXPR regexp interval NAME regexp interval EXPR b append indent CALL b append indent NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR indent NAME indent EXPR b append kind CALL b append kind NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR kind NAME kind DECL STMT TYPE string NAME string NAME s INIT integer to string min EXPR integer to string min CALL integer to string min NAME integer to string NAME integer NAME to string ARGUMENT LIST ARGUMENT EXPR min NAME min DECL STMT TYPE string NAME string NAME s INIT integer to string max EXPR integer to string max CALL integer to string max NAME integer to string NAME integer NAME to string ARGUMENT LIST ARGUMENT EXPR max NAME max EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR IF if digits for int i s length i digits i b append CONDITION digits EXPR digits NAME digits THEN for int i s length i digits i b append BLOCK FOR for int i s length i digits i b append CONTROL int i s length i digits i INIT int i s length TYPE int NAME int NAME i INIT s length EXPR s length CALL s length NAME s length NAME s NAME length ARGUMENT LIST CONDITION i digits EXPR i digits NAME i NAME digits INCR i EXPR i NAME i BLOCK EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR EXPR b append s append CALL b append s NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR s NAME s CALL append NAME append ARGUMENT LIST ARGUMENT EXPR IF if digits for int i s length i digits i b append CONDITION digits EXPR digits NAME digits THEN for int i s length i digits i b append BLOCK FOR for int i s length i digits i b append CONTROL int i s length i digits i INIT int i s length TYPE int NAME int NAME i INIT s length EXPR s length CALL s length NAME s length NAME s NAME length ARGUMENT LIST CONDITION i digits EXPR i digits NAME i NAME digits INCR i EXPR i NAME i BLOCK EXPR b append CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR EXPR b append s append CALL b append s NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR s NAME s CALL append NAME append ARGUMENT LIST ARGUMENT EXPR EXPR b append n CALL b append n NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR n BREAK break void NN to TO string VB tree NN root ROOT string mark string to dobj string tree string NN builder NN root ROOT builder compound builder string b NN switch NN kind NN binary case NN regexp NN union NN root ROOT union compound union regexp case NN regexp NN concatenation NN root ROOT concatenation compound concatenation regexp case NN regexp NN intersection NN root ROOT intersection compound intersection regexp b NN append IN root ROOT b dep b append indent JJ b NN append IN root ROOT b dep b append kind NN b NN append IN root ROOT b dep b append n NN exp NN to TO string VB tree NN root ROOT exp mark string to acl to exp string dobj string tree b NN indent JJ exp NN to TO string VB tree NN root ROOT exp mark string to acl to exp string dobj string tree b NN indent JJ break NN unary case NN regexp NN optional JJ root ROOT optional nmod npmod optional regexp case NN regexp NN repeat NN root ROOT repeat compound repeat regexp case NN regexp NN complement NN root ROOT complement compound complement regexp b NN append IN root ROOT b dep b append indent JJ b NN append IN root ROOT b dep b append kind NN b NN append IN root ROOT b dep b append n NN exp NN to TO string VB tree NN root ROOT exp mark string to acl to exp string dobj string tree b NN indent JJ break NN case NN regexp NN repeat NN min NN root ROOT min compound min regexp compound min repeat b NN append IN root ROOT b dep b append indent JJ b NN append IN root ROOT b dep b append kind NN b NN append IN root ROOT b dep b append min NN b NN append IN root ROOT b dep b append min NN b NN append IN root ROOT b dep b append n NN exp NN to TO string VB tree NN root ROOT exp mark string to acl to exp string dobj string tree b NN indent JJ break NN case NN regexp NN repeat NN minmax NN root ROOT minmax compound minmax regexp compound minmax repeat b NN append IN root ROOT b dep b append indent JJ b NN append IN root ROOT b dep b append kind NN b NN append IN root ROOT b dep b append min NN b NN append IN root ROOT b dep b append min NN b NN append IN root ROOT b dep b append max NN b NN append IN root ROOT b dep b append max NN b NN append IN root ROOT b dep b append n NN exp NN to TO string VB tree NN root ROOT exp mark string to acl to exp string dobj string tree b NN indent JJ break NN case NN regexp NN char NN root ROOT char compound char regexp b NN append IN root ROOT b dep b append indent JJ b NN append IN root ROOT b dep b append kind NN b NN append IN root ROOT b dep b append char NN b NN append NN code NN point NN root ROOT point compound point b compound point append compound point code c NN b NN append IN root ROOT b dep b append n NN break NN case NN regexp NN char NN range NN root ROOT range compound range regexp compound range char b NN append IN root ROOT b dep b append indent JJ b NN append IN root ROOT b dep b append kind NN b NN append IN root ROOT b dep b append from IN b NN append NN code NN point NN root ROOT point compound point b compound point append compound point code from IN b NN append IN root ROOT b dep b append to TO b NN append NN code NN point NN root ROOT point compound point b compound point append compound point code to TO b NN append IN root ROOT b dep b append n NN break NN case NN regexp NN anychar NN root ROOT anychar compound anychar regexp case NN regexp NN empty JJ root ROOT empty nmod npmod empty regexp b NN append IN root ROOT b dep b append indent JJ b NN append IN root ROOT b dep b append kind NN b NN append IN root ROOT b dep b append n NN break NN case NN regexp NN string NN root ROOT string compound string regexp b NN append IN root ROOT b dep b append indent JJ b NN append IN root ROOT b dep b append kind NN b NN append IN root ROOT b dep b append string NN b NN append IN root ROOT b dep b append s NNS b NN append IN root ROOT b dep b append n NN break NN case NN regexp NN anystring NN root ROOT anystring compound anystring regexp b NN append IN root ROOT b dep b append indent JJ b NN append IN root ROOT b dep b append kind NN b NN append IN root ROOT b dep b append n NN break NN case NN regexp JJ automaton NN root ROOT automaton amod automaton regexp b NN append IN root ROOT b dep b append indent JJ b NN append IN root ROOT b dep b append kind NN b NN append IN root ROOT b dep b append n NN break NN case NN regexp NN interval NN root ROOT interval compound interval regexp b NN append IN root ROOT b dep b append indent JJ b NN append IN root ROOT b dep b append kind NN string NN s NNS integer NN to TO string NN root ROOT integer case string to nmod to integer string min NN string NN s NNS integer NN to TO string NN root ROOT integer case string to nmod to integer string max NN b NN append IN root ROOT b dep b append if IN digits NNS for IN int NN i LS s NNS length NN root ROOT length compound length s i LS digits NNS i LS b NN append IN root ROOT b dep b append b NN append IN root ROOT b dep b append s NNS append IN if IN digits NNS for IN int NN i LS s NNS length NN root ROOT length compound length s i LS digits NNS i LS b NN append IN root ROOT b dep b append b NN append IN root ROOT b dep b append s NNS append IN b NN append IN root ROOT b dep b append n NN break NN,1,B5,Lucene/lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java,728
COMMENT a little bit overkill for us DECL STMT TYPE int NAME int NAME num dims a little bit overkill for us root ROOT overkill det overkill a amod overkill little compound overkill bit case us for nmod for overkill us final JJ int NN num NN dims VBZ root ROOT dims nsubj dims num,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/search/PointInSetQuery.java,57
COMMENT the number of bits in use DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME num words the number of bits in use root ROOT number det number the case bits of nmod of number bits case use in nmod in number use private JJ final JJ int NN num NN words NNS root ROOT words compound words num,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/util/FixedBitSet.java,40
COMMENT since lucene return that id FUNCTION SPECIFIER public TYPE byte NAME byte NAME byte INDEX NAME get id PARAMETER LIST BLOCK RETURN return id clone EXPR id clone CALL id clone NAME id clone NAME id NAME clone ARGUMENT LIST since lucene root ROOT lucene case lucene since return that id root ROOT return nsubj id return ref return that acl relcl return id public NN byte NN get VB id NN root ROOT get dobj get id return NN id NN clone NN root ROOT clone compound clone id,1,A4,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java,269
COMMENT todo support others DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME optimize predicates INIT true EXPR true todo support others root ROOT others compound others todo compound others support private JJ boolean NN optimize VB predicates NNS root ROOT optimize dobj optimize predicates true JJ,0,N/A,Lucene/lucene/spatial-extras/src/java/org/apache/lucene/spatial/composite/CompositeSpatialStrategy.java,53
DECL STMT TYPE final packed long values iterator SPECIFIER final NAME packed long values iterator NAME packed long values NAME iterator NAME iter final JJ packed JJ long JJ values NNS iterator NN root ROOT iterator amod values packed amod values long nsubj iterator values iter NN,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.java,185
DECL STMT SPECIFIER private TYPE long NAME long NAME num terms private JJ long RB num NN terms NNS root ROOT terms compound terms num,0,N/A,Lucene/lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.java,412
COMMENT members DECL STMT SPECIFIER private TYPE bytes ref iterator NAME bytes ref iterator NAME bytes iter INIT null EXPR null members private JJ bytes NNS ref VBP iterator NN root ROOT ref nsubj ref bytes dobj ref iterator bytes NNS iter VBP root ROOT iter nsubj iter bytes null JJ,0,N/A,Lucene/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/BytesRefIteratorTokenStream.java,70
DECL STMT TYPE final long SPECIFIER final NAME long NAME num terms final JJ long RB num NN terms NNS root ROOT terms compound terms num,0,N/A,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader.java,217
COMMENT track the field infos update files DECL STMT SPECIFIER private TYPE volatile long SPECIFIER volatile NAME long NAME size in bytes INIT EXPR track the field infos update files root ROOT update csubj update track det infos the compound infos field dobj track infos dobj update files private JJ volatile JJ long RB size NN in IN bytes NNS root ROOT size case bytes in nmod in size bytes,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo.java,71
COMMENT number of dimensions max DECL STMT TYPE final int SPECIFIER final NAME int NAME num dims number of dimensions max root ROOT number case max of compound max dimensions nmod of number max final JJ int NN num NN dims VBZ root ROOT dims nsubj dims num,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/document/RangeFieldQuery.java,54
COMMENT only with assert DECL STMT TYPE long NAME long NAME peak flush bytes INIT EXPR only with assert root ROOT assert advmod assert only mark assert with long RB peak JJ flush JJ bytes NNS root ROOT bytes amod bytes peak amod bytes flush,1,E1,Lucene/lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl.java,63
DECL STMT SPECIFIER private TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME min packed value private JJ final JJ byte NN min NN packed VBD value NN root ROOT packed nsubj packed min dobj packed value,1,D1,Lucene/lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint.java,1391
COMMENT phrase frequency in current doc as computed by phrase freq DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME num postings phrase frequency in current doc as computed by phrase freq root ROOT frequency compound frequency phrase case doc in amod doc current nmod in frequency doc mark computed as dep frequency computed case freq by compound freq phrase nmod by computed freq private JJ final JJ int NN num NN postings NNS root ROOT postings compound postings num,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer.java,42
DECL STMT SPECIFIER public SPECIFIER static TYPE final token SPECIFIER final NAME token NAME token INDEX NAME test token pos incr equal to n INIT new token create token please create token divide create token this create token sentence create token into create token shingles EXPR new token create token please create token divide create token this create token sentence create token into create token shingles NAME token NAME token INDEX BLOCK EXPR create token please CALL create token please NAME create token ARGUMENT LIST ARGUMENT EXPR please ARGUMENT EXPR ARGUMENT EXPR EXPR create token divide CALL create token divide NAME create token ARGUMENT LIST ARGUMENT EXPR divide ARGUMENT EXPR ARGUMENT EXPR EXPR create token this CALL create token this NAME create token ARGUMENT LIST ARGUMENT EXPR this ARGUMENT EXPR ARGUMENT EXPR EXPR create token sentence CALL create token sentence NAME create token ARGUMENT LIST ARGUMENT EXPR sentence ARGUMENT EXPR ARGUMENT EXPR ARGUMENT EXPR EXPR create token into CALL create token into NAME create token ARGUMENT LIST ARGUMENT EXPR into ARGUMENT EXPR ARGUMENT EXPR EXPR create token shingles CALL create token shingles NAME create token ARGUMENT LIST ARGUMENT EXPR shingles ARGUMENT EXPR ARGUMENT EXPR public NN static JJ final JJ token JJ test NN token JJ pos NNS incr VBP equal JJ to TO n NN root ROOT incr compound pos test amod pos token nsubj incr pos xcomp incr equal case n to nmod to equal n new JJ token JJ create VB token JJ root ROOT create dobj create token please VB create VB token JJ root ROOT create dobj create token divide NN create VB token JJ root ROOT create dobj create token this DT create VB token JJ root ROOT create dobj create token sentence NN create VB token JJ root ROOT create dobj create token into IN create VB token JJ root ROOT create dobj create token shingles NNS new equal ANTONYM ANTONYM,0,N/A,Lucene/lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest.java,626
COMMENT only with assert DECL STMT TYPE long NAME long NAME peak net bytes INIT EXPR only with assert root ROOT assert advmod assert only mark assert with long RB peak JJ net JJ bytes NNS root ROOT bytes amod bytes peak amod bytes net,1,E1,Lucene/lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl.java,64
COMMENT tells us the number of live docs DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME num docs tells us the number of live docs root ROOT tells iobj tells us det number the dobj tells number case docs of amod docs live nmod of number docs private JJ final JJ int NN num NN docs NNS root ROOT docs compound docs num,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,51
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME get distance bounds PARAMETER LIST final bounds bounds final distance style distance style final double distance value PARAMETER final bounds bounds TYPE final bounds SPECIFIER final NAME bounds NAME bounds PARAMETER final distance style distance style TYPE final distance style SPECIFIER final NAME distance style NAME distance style PARAMETER final double distance value TYPE final double SPECIFIER final NAME double NAME distance value BLOCK EXPR get bounds bounds CALL get bounds bounds NAME get bounds ARGUMENT LIST ARGUMENT EXPR bounds NAME bounds override NN public NN void NN get VB distance NN bounds NNS root ROOT get compound bounds distance dobj get bounds final JJ bounds NNS bounds NNS final JJ distance NN style NN root ROOT style compound style distance distance NN style NN root ROOT style compound style distance final JJ double RB distance NN value NN root ROOT value compound value distance get VB bounds NNS root ROOT get dobj get bounds bounds NNS,1,B3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegeneratePoint.java,135
COMMENT true if min y plane intersects globe DECL STMT SPECIFIER protected TYPE final boolean SPECIFIER final NAME boolean NAME min y plane intersects true if min y plane intersects globe root ROOT true dep true if compound globe min compound globe y compound globe plane compound globe intersects root if globe protected VBN final JJ boolean NN min NN y NN plane NN intersects NNS root ROOT intersects compound intersects min compound intersects y compound intersects plane,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/StandardXYZSolid.java,46
COMMENT number of overlapping tokens for this field DECL STMT SPECIFIER private TYPE int NAME int NAME num overlap tokens number of overlapping tokens for this field root ROOT number case tokens of amod tokens overlapping nmod of number tokens case field for det field this nmod for tokens field private JJ int NN num NN overlap VBP tokens NNS root ROOT overlap nsubj overlap num dobj overlap tokens,0,N/A,Lucene/lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java,863
COMMENT startup time of original test DECL STMT SPECIFIER public SPECIFIER static TYPE long NAME long NAME global start ns startup time of original test root ROOT time compound time startup case test of amod test original nmod of time test public NN static JJ long RB global JJ start NN ns NN root ROOT ns amod ns global compound ns start,0,N/A,Lucene/lucene/replicator/src/java/org/apache/lucene/replicator/nrt/Node.java,68
DECL STMT TYPE long NAME long NAME num ords long RB num NN ords NNS root ROOT ords compound ords num,0,N/A,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,778
DECL STMT TYPE final boolean SPECIFIER final NAME boolean NAME store payloads final JJ boolean NN store NN payloads NNS root ROOT payloads compound payloads store,0,N/A,Lucene/lucene/core/src/test/org/apache/lucene/index/TestCodecs.java,82
COMMENT phrase frequency in current doc as computed by phrase freq DECL STMT SPECIFIER private TYPE final phrase queue SPECIFIER final NAME phrase queue NAME pq phrase frequency in current doc as computed by phrase freq root ROOT frequency compound frequency phrase case doc in amod doc current nmod in frequency doc mark computed as dep frequency computed case freq by compound freq phrase nmod by computed freq private JJ final JJ phrase NN queue NN root ROOT queue compound queue phrase pq NN,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer.java,43
COMMENT used to record deletes against all prior already written to disk segments whenever any segment flushes deletes and insert into the buffered updates stream before the newly flushed segment s DECL STMT SPECIFIER private TYPE final delete slice SPECIFIER final NAME delete slice NAME global slice used to record deletes against all prior already written to disk segments whenever any segment flushes root ROOT used mark record to xcomp used record dobj record deletes mark written against dep written all advmod written prior advmod written already advcl against record written case segments to compound segments disk nmod to written segments advmod flushes whenever det segment any nsubj flushes segment advcl written flushes used to record deletes against all prior already written to disk segments whenever any segment flushes root ROOT used mark record to xcomp used record dobj record deletes mark written against dep written all advmod written prior advmod written already advcl against record written case segments to compound segments disk nmod to written segments advmod flushes whenever det segment any nsubj flushes segment advcl written flushes deletes and insert into the buffered updates stream before the newly flushed segment s root ROOT deletes cc deletes and conj and deletes insert case stream into det stream the amod stream buffered compound stream updates nmod into deletes stream case s before det s the advmod flushed newly amod s flushed compound s segment nmod before deletes s deletes and insert into the buffered updates stream before the newly flushed segment s root ROOT deletes cc deletes and conj and deletes insert case stream into det stream the amod stream buffered compound stream updates nmod into deletes stream case s before det s the advmod flushed newly amod s flushed compound s segment nmod before deletes s private JJ final JJ delete VB slice NN root ROOT delete dobj delete slice global JJ slice NN root ROOT slice amod slice global all any ANTONYM ANTONYM record deletes ANTONYM ANTONYM record insert ANTONYM ANTONYM,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue.java,77
FUNCTION SPECIFIER public TYPE int NAME int NAME int INDEX NAME get int block PARAMETER LIST BLOCK RETURN return new int block size EXPR new int block size NAME int block size NAME int INDEX block size EXPR block size NAME block size public NN int NN get VB int NN block NN root ROOT get compound block int dobj get block return NN new JJ int NN block NN size NN root ROOT size compound size block,1,A4,Lucene/lucene/core/src/java/org/apache/lucene/util/IntBlockPool.java,42
DECL STMT SPECIFIER private TYPE int NAME int NAME pos pending private JJ int NN pos NNS pending VBG root ROOT pos acl pos pending,1,D2,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.java,572
COMMENT minimum per dim values DECL STMT SPECIFIER protected TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME min packed value minimum per dim values root ROOT minimum case values per compound values dim nmod per minimum values protected VBN final JJ byte NN min NN packed VBD value NN root ROOT packed nsubj packed min dobj packed value,1,D1,Lucene/lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.java,134
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE double NAME double NAME get radius PARAMETER LIST BLOCK COMMENT this is a bit tricky i guess we should interpret this as meaning the angle of a circle that COMMENT would contain all the bounding box points when starting in the center IF if bottom lat return math pi CONDITION bottom lat EXPR bottom lat NAME bottom lat THEN return math pi BLOCK RETURN return math pi EXPR math pi NAME math pi NAME math NAME pi DECL STMT TYPE double NAME double NAME max cos lat INIT cos bottom lat EXPR cos bottom lat NAME cos bottom lat RETURN return max cos lat math pi EXPR max cos lat math pi NAME max cos lat NAME math pi NAME math NAME pi override NN public NN double RB get VB radius NNS root ROOT get dobj get radius this is a bit tricky i guess we should interpret this as meaning the angle of a circle that root ROOT guess nsubj guess this cop guess is det guess a compound guess bit amod guess tricky compound guess i nsubj interpret we aux interpret should ccomp guess interpret dobj interpret this mark meaning as advcl as interpret meaning det angle the dobj meaning angle case circle of det circle a nmod of angle circle dep circle that this is a bit tricky i guess we should interpret this as meaning the angle of a circle that root ROOT guess nsubj guess this cop guess is det guess a compound guess bit amod guess tricky compound guess i nsubj interpret we aux interpret should ccomp guess interpret dobj interpret this mark meaning as advcl as interpret meaning det angle the dobj meaning angle case circle of det circle a nmod of angle circle dep circle that would contain all the bounding box points when starting in the center root ROOT contain aux contain would det predet points all det points the amod points bounding compound points box dobj contain points advmod starting when advcl contain starting case center in det center the nmod in starting center if IN bottom JJ lat NN root ROOT lat amod lat bottom return NN math NN pi NN root ROOT pi compound pi math double RB max NN cos NNS lat VBP root ROOT lat compound cos max nsubj lat cos cos NNS bottom JJ lat NN root ROOT lat compound lat cos amod lat bottom return NN max NN cos NNS lat VBP root ROOT lat compound cos max nsubj lat cos math NN pi NN root ROOT pi compound pi math,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoNorthLatitudeZone.java,75
COMMENT array of longs holding the bits DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME num bits array of longs holding the bits root ROOT array case longs of nmod of array longs acl longs holding det bits the dobj holding bits private JJ final JJ int NN num NN bits NNS root ROOT bits compound bits num,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/util/FixedBitSet.java,39
DECL STMT SPECIFIER private TYPE long NAME long NAME flush bytes INIT EXPR private JJ long RB flush JJ bytes NNS root ROOT bytes amod bytes flush,1,E1,Lucene/lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl.java,50
COMMENT this method is called by a consumer before it begins consumption using link increment token p resets this stream to a clean state stateful implementations must implement this method so that they can be reused just as if they had been created fresh p if you override this method always call code super reset otherwise some internal state will not be correctly reset e g link tokenizer will throw link illegal state exception on further usage FUNCTION SPECIFIER public TYPE void NAME void NAME reset PARAMETER LIST THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK this method is called by a consumer before it begins consumption using root ROOT called det method this nsubjpass called method auxpass called is case consumer by det consumer a nmod agent called consumer mark begins before nsubj begins it advcl before called begins dobj begins consumption xcomp called using link increment token root ROOT token compound increment link nsubj token increment p resets this stream to a clean state stateful implementations must implement root ROOT implement nsubj implement resets det stream this dobj resets stream case implementations to det implementations a amod implementations clean compound implementations state amod implementations stateful nmod to resets implementations aux implement must resets this stream to a clean state stateful implementations must implement root ROOT implement nsubj implement resets det stream this dobj resets stream case implementations to det implementations a amod implementations clean compound implementations state amod implementations stateful nmod to resets implementations aux implement must this method so that they can be reused just as if they had been created fresh root ROOT method det method this mark reused so mwe so that nsubjpass reused they aux reused can auxpass reused be dep method reused advmod created just mark created as mwe as if nsubjpass created they aux created had auxpass created been advcl as if reused created xcomp created fresh p if you override this method always call code super reset otherwise root ROOT override mark override if nsubj override you det method this dobj override method advmod call always dep override call compound reset code amod reset super dobj call reset advmod call otherwise some internal state will not be correctly reset e g link tokenizer will root ROOT reset det state some amod state internal nsubj reset state aux reset will neg reset not aux reset be advmod reset correctly compound tokenizer e compound tokenizer g compound tokenizer link dobj reset tokenizer dep reset will throw link illegal state exception on further usage root ROOT throw compound exception link amod exception illegal compound exception state dobj throw exception case usage on amod usage further nmod on throw usage public NN void NN reset VB throws VBZ io NN exception NN root ROOT exception compound exception io,1,B1,Lucene/lucene/core/src/java/org/apache/lucene/analysis/TokenStream.java,192
COMMENT get the bounds for a segment endpoint param planet model is the planet model param bounds are the bounds to be modified FUNCTION SPECIFIER public TYPE void NAME void NAME get bounds PARAMETER LIST final planet model planet model bounds bounds PARAMETER final planet model planet model TYPE final planet model SPECIFIER final NAME planet model NAME planet model PARAMETER bounds bounds TYPE bounds NAME bounds NAME bounds BLOCK EXPR bounds add point point CALL bounds add point point NAME bounds add point NAME bounds NAME add point ARGUMENT LIST ARGUMENT EXPR point NAME point IF if circle plane null return CONDITION circle plane null EXPR circle plane null NAME circle plane THEN return BLOCK RETURN return EXPR bounds add plane planet model circle plane CALL bounds add plane planet model circle plane NAME bounds add plane NAME bounds NAME add plane ARGUMENT LIST ARGUMENT EXPR planet model NAME planet model ARGUMENT EXPR circle plane NAME circle plane get the bounds for a segment endpoint root ROOT get det bounds the dobj get bounds case endpoint for det endpoint a compound endpoint segment nmod for bounds endpoint param planet model is the planet model root ROOT model compound model param compound model planet nsubj model model cop model is det model the compound model planet param bounds are the bounds to be modified root ROOT bounds compound bounds param nsubj bounds bounds cop bounds are det bounds the mark modified to auxpass modified be acl to bounds modified public NN void NN get VB bounds NNS root ROOT get dobj get bounds final JJ planet NN model NN root ROOT model compound model planet planet NN model NN root ROOT model compound model planet bounds NNS bounds NNS bounds NNS add VBP point NN root ROOT add nsubj add bounds dobj add point point NN if IN circle NN plane NN root ROOT plane compound plane circle null JJ return NN bounds NNS add VBP plane NN root ROOT add nsubj add bounds dobj add plane planet NN model NN root ROOT model compound model planet circle NN plane NN root ROOT plane compound plane circle get model ANTONYM ANTONYM,1,B6,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoStandardPath.java,556
COMMENT the last offset encountered in this field for multi field support DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME prepared doc values and point values the last offset encountered in this field for multi field support root ROOT offset det offset the amod offset last acl offset encountered case field in det field this nmod in encountered field case support for compound support multi compound support field nmod for encountered support private JJ boolean NN prepared JJ doc NN values NNS and CC point NN values NNS root ROOT values amod values prepared compound values doc cc values and compound values point conj and values values last support ANTONYM ANTONYM offset last ANTONYM ANTONYM,1,E1,Lucene/lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java,880
COMMENT the last offset encountered in this field for multi field support DECL STMT SPECIFIER private TYPE byte NAME byte NAME byte INDEX NAME min packed value the last offset encountered in this field for multi field support root ROOT offset det offset the amod offset last acl offset encountered case field in det field this nmod in encountered field case support for compound support multi compound support field nmod for encountered support private JJ byte NN min NN packed VBD value NN root ROOT packed nsubj packed min dobj packed value last support ANTONYM ANTONYM offset last ANTONYM ANTONYM,1,D1,Lucene/lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java,884
DECL STMT SPECIFIER private TYPE final static int SPECIFIER final SPECIFIER static NAME int NAME rounds INIT EXPR private JJ final JJ static JJ int NN rounds NNS,1,E1,Lucene/lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest.java,69
COMMENT number of docs to generate for testing DECL STMT SPECIFIER private SPECIFIER static TYPE int NAME int NAME no docs number of docs to generate for testing root ROOT number case docs of nmod of number docs mark generate to acl to number generate case testing for nmod for generate testing private JJ static JJ int NN no DT docs NNS root ROOT docs neg docs no,0,N/A,Lucene/lucene/misc/src/test/org/apache/lucene/uninverting/TestNumericTerms32.java,49
COMMENT this is a reference to the token image array of the generated parser within which the parse error occurred this array is defined in the generated constants interface DECL STMT SPECIFIER public TYPE string NAME string NAME string INDEX NAME token image this is a reference to the token image array of the generated root ROOT reference nsubj reference this cop reference is det reference a case array to det array the amod array token compound array image nmod to reference array case generated of det generated the nmod of array generated parser within which the parse error occurred this array is root ROOT is nmod within occurred parser nsubj is parser case which within ref parser which det error the compound error parse nsubj occurred error acl relcl parser occurred det array this dobj occurred array parser within which the parse error occurred this array is root ROOT is nmod within occurred parser nsubj is parser case which within ref parser which det error the compound error parse nsubj occurred error acl relcl parser occurred det array this dobj occurred array defined in the generated constants interface root ROOT defined case constants in det constants the amod constants generated nmod in defined constants dobj defined interface public NN string NN token JJ image NN root ROOT image amod image token,0,N/A,Lucene/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/ParseException.java,82
DECL STMT SPECIFIER private SPECIFIER static TYPE directory NAME directory NAME directory private JJ static JJ directory NN directory NN,0,N/A,Lucene/solr/core/src/test/org/apache/solr/uninverting/TestLegacyFieldCache.java,63
DECL STMT SPECIFIER private SPECIFIER static TYPE int NAME int NAME num docs private JJ static JJ int NN num NN docs NNS root ROOT docs compound docs num,0,N/A,Lucene/lucene/misc/src/test/org/apache/lucene/uninverting/TestLegacyFieldCache.java,63
COMMENT the start offset in the int block pool per term DECL STMT TYPE int NAME int NAME int INDEX NAME end the start offset in the int block pool per term root ROOT start det start the acl start offset case pool in det pool the compound pool int compound pool block nmod in offset pool case term per nmod per pool term int NN end NN offset end ANTONYM ANTONYM start end ANTONYM ANTONYM start end ANTONYM ANTONYM start offset ANTONYM ANTONYM,1,D1,Lucene/lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java,1678
COMMENT most recently used queries this is why write operations are performed under a lock DECL STMT SPECIFIER private TYPE final map object leaf cache SPECIFIER final NAME map object leaf cache NAME map ARGUMENT LIST ARGUMENT NAME object ARGUMENT NAME leaf cache NAME cache most recently used queries this is why write operations are performed under a lock root ROOT queries advmod recently most advmod used recently amod queries used nsubj is this acl relcl queries is advmod performed why compound operations write nsubjpass performed operations auxpass performed are advcl is performed case lock under det lock a nmod under performed lock most recently used queries this is why write operations are performed under a lock root ROOT queries advmod recently most advmod used recently amod queries used nsubj is this acl relcl queries is advmod performed why compound operations write nsubjpass performed operations auxpass performed are advcl is performed case lock under det lock a nmod under performed lock private JJ final JJ map NN object NN leaf NN cache NN root ROOT cache compound cache leaf cache NN are map ANTONYM ANTONYM is map ANTONYM ANTONYM,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/search/LRUQueryCache.java,110
COMMENT compute the latitude for the point return the latitude FUNCTION SPECIFIER public TYPE double NAME double NAME get latitude PARAMETER LIST BLOCK DECL STMT TYPE double NAME double NAME lat INIT this latitude EXPR this latitude NAME this latitude NAME this NAME latitude COMMENT volatile read once IF if lat double negative infinity this latitude lat math asin z magnitude CONDITION lat double negative infinity EXPR lat double negative infinity NAME lat NAME double negative infinity NAME double NAME negative infinity THEN this latitude lat math asin z magnitude BLOCK EXPR this latitude lat math asin z magnitude NAME this latitude NAME this NAME latitude NAME lat CALL math asin z magnitude NAME math asin NAME math NAME asin ARGUMENT LIST ARGUMENT EXPR z magnitude NAME z CALL magnitude NAME magnitude ARGUMENT LIST RETURN return lat EXPR lat NAME lat compute the latitude for the point root ROOT compute det latitude the dobj compute latitude case point for det point the nmod for compute point return the latitude root ROOT return det latitude the dobj return latitude public NN double RB get VB latitude NN root ROOT get dobj get latitude double RB lat NN this DT latitude NN volatile JJ read NN once RB if IN lat NN double JJ negative JJ infinity NN this DT latitude NN lat NN math NN asin NN root ROOT asin compound asin math z SYM magnitude NN return NN lat NN,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,141
DECL STMT TYPE final int SPECIFIER final NAME int NAME num blocks final JJ int NN num NN blocks NNS root ROOT blocks compound blocks num,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/util/packed/DirectMonotonicReader.java,51
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME num docs private JJ final JJ int NN num NN docs NNS root ROOT docs compound docs num,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader.java,88
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME num bits private JJ final JJ int NN num NN bits NNS root ROOT bits compound bits num,0,N/A,Lucene/lucene/test-framework/src/java/org/apache/lucene/util/BaseBitSetTestCase.java,209
COMMENT total bytes sum of term lengths for all indexed terms DECL STMT SPECIFIER protected TYPE long NAME long NAME size of indexed strings total bytes sum of term lengths for all indexed terms root ROOT sum amod sum total compound sum bytes case lengths of compound lengths term nmod of sum lengths case terms for det terms all amod terms indexed nmod for lengths terms total bytes sum of term lengths for all indexed terms root ROOT sum amod sum total compound sum bytes case lengths of compound lengths term nmod of sum lengths case terms for det terms all amod terms indexed nmod for lengths terms protected VBN long RB size NN of IN indexed VBN strings NNS root ROOT size case strings of amod strings indexed nmod of size strings total all SYNONYM SYNONYM,0,N/A,Lucene/lucene/misc/src/java/org/apache/lucene/uninverting/DocTermOrds.java,151
DECL STMT SPECIFIER public TYPE final long SPECIFIER final NAME long NAME num terms public NN final JJ long RB num NN terms NNS root ROOT terms compound terms num,0,N/A,Lucene/lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.java,144
COMMENT true if all entries are terms DECL STMT TYPE int NAME int NAME num follow floor blocks true if all entries are terms root ROOT true mark terms if det entries all nsubj terms entries cop terms are advcl if true terms int NN num NN follow VB floor NN blocks NNS root ROOT follow nsubj follow num compound blocks floor dobj follow blocks,0,N/A,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/OrdsIntersectTermsEnumFrame.java,75
COMMENT maximum per dim values DECL STMT SPECIFIER protected TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME max packed value maximum per dim values root ROOT maximum case values per compound values dim nmod per maximum values protected VBN final JJ byte NN max NN packed VBD value NN root ROOT packed nsubj packed max dobj packed value,1,D1,Lucene/lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.java,137
COMMENT file offset where the directory starts in the index file DECL STMT TYPE final boolean SPECIFIER final NAME boolean NAME any auto prefix terms file offset where the directory starts in the index file root ROOT offset nsubj offset file advmod starts where det directory the nsubj starts directory advcl offset starts case file in det file the compound file index nmod in starts file file offset where the directory starts in the index file root ROOT offset nsubj offset file advmod starts where det directory the nsubj starts directory advcl offset starts case file in det file the compound file index nmod in starts file final JJ boolean NN any DT auto NN prefix NN terms NNS root ROOT terms det terms any compound terms auto compound terms prefix offset starts ANTONYM ANTONYM,1,E1,Lucene/lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader.java,141
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE list query node NAME list query node NAME list ARGUMENT LIST ARGUMENT NAME query node NAME set children order PARAMETER LIST list query node children PARAMETER list query node children TYPE list query node NAME list query node NAME list ARGUMENT LIST ARGUMENT NAME query node NAME children THROWS throws query node exception ARGUMENT EXPR query node exception NAME query node exception BLOCK RETURN return children EXPR children NAME children override NN protected VBN list NN query NN node NN root ROOT node compound node query set VBN children NNS order NN root ROOT set compound order children dobj set order list NN query NN node NN root ROOT node compound node query children NNS throws VBZ query NN node NN exception NN root ROOT exception compound exception query compound exception node return NN children NNS,1,A3,Lucene/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/AllowLeadingWildcardProcessor.java,96
COMMENT returns true if virus checking fs is in use and was in fact already enabled FUNCTION SPECIFIER public SPECIFIER static TYPE boolean NAME boolean NAME disable virus checker PARAMETER LIST directory in PARAMETER directory in TYPE directory NAME directory NAME in BLOCK DECL STMT TYPE directory NAME directory NAME dir INIT filter directory unwrap in EXPR filter directory unwrap in CALL filter directory unwrap in NAME filter directory unwrap NAME filter directory NAME unwrap ARGUMENT LIST ARGUMENT EXPR in NAME in IF if dir instanceof fs directory file system fs fs directory dir get directory get file system while fs instanceof filter file system filter file system ffs filter file system fs if ffs get parent instanceof virus checking fs virus checking fs vfs virus checking fs ffs get parent boolean is enabled vfs is enabled vfs disable return is enabled fs ffs get delegate CONDITION dir instanceof fs directory EXPR dir instanceof fs directory NAME dir NAME fs directory THEN file system fs fs directory dir get directory get file system while fs instanceof filter file system filter file system ffs filter file system fs if ffs get parent instanceof virus checking fs virus checking fs vfs virus checking fs ffs get parent boolean is enabled vfs is enabled vfs disable return is enabled fs ffs get delegate BLOCK DECL STMT TYPE file system NAME file system NAME fs INIT fs directory dir get directory get file system EXPR fs directory dir get directory get file system NAME fs directory NAME dir CALL get directory NAME get directory ARGUMENT LIST CALL get file system NAME get file system ARGUMENT LIST WHILE while fs instanceof filter file system filter file system ffs filter file system fs if ffs get parent instanceof virus checking fs virus checking fs vfs virus checking fs ffs get parent boolean is enabled vfs is enabled vfs disable return is enabled fs ffs get delegate CONDITION fs instanceof filter file system EXPR fs instanceof filter file system NAME fs NAME filter file system BLOCK DECL STMT TYPE filter file system NAME filter file system NAME ffs INIT filter file system fs EXPR filter file system fs NAME filter file system NAME fs IF if ffs get parent instanceof virus checking fs virus checking fs vfs virus checking fs ffs get parent boolean is enabled vfs is enabled vfs disable return is enabled CONDITION ffs get parent instanceof virus checking fs EXPR ffs get parent instanceof virus checking fs CALL ffs get parent NAME ffs get parent NAME ffs NAME get parent ARGUMENT LIST NAME virus checking fs THEN virus checking fs vfs virus checking fs ffs get parent boolean is enabled vfs is enabled vfs disable return is enabled BLOCK DECL STMT TYPE virus checking fs NAME virus checking fs NAME vfs INIT virus checking fs ffs get parent EXPR virus checking fs ffs get parent NAME virus checking fs CALL ffs get parent NAME ffs get parent NAME ffs NAME get parent ARGUMENT LIST DECL STMT TYPE boolean NAME boolean NAME is enabled INIT vfs is enabled EXPR vfs is enabled CALL vfs is enabled NAME vfs is enabled NAME vfs NAME is enabled ARGUMENT LIST EXPR vfs disable CALL vfs disable NAME vfs disable NAME vfs NAME disable ARGUMENT LIST RETURN return is enabled EXPR is enabled NAME is enabled EXPR fs ffs get delegate NAME fs CALL ffs get delegate NAME ffs get delegate NAME ffs NAME get delegate ARGUMENT LIST RETURN return false EXPR false returns true if virus checking fs is in use and was in fact already enabled root ROOT enabled dep use returns dep use true mark use if compound fs virus compound fs checking nsubj use fs cop use is case use in nsubj enabled use cc use and cop fact was case fact in conj and use fact nsubj enabled fact advmod enabled already public NN static JJ boolean NN disable JJ virus NN checker NN root ROOT checker amod checker disable compound checker virus directory NN in IN directory NN dir NN filter NN directory NN unwrap NN root ROOT unwrap compound unwrap filter compound unwrap directory in IN if IN dir NN instanceof NN fs NN directory NN root ROOT directory compound directory fs file NN system NN root ROOT system compound system file fs NNS fs NN directory NN root ROOT directory compound directory fs dir NN get VB directory NN root ROOT get dobj get directory get VB file NN system NN root ROOT get compound system file dobj get system while IN fs NNS instanceof NN filter NN file NN system NN root ROOT system compound system filter compound system file filter NN file NN system NN root ROOT system compound system filter compound system file ffs NNS filter NN file NN system NN root ROOT system compound system filter compound system file fs NNS if IN ffs NNS get VBP parent NN root ROOT get nsubj get ffs dobj get parent instanceof NN virus NN checking NN fs NNS root ROOT fs compound fs virus compound fs checking virus NN checking NN fs NNS root ROOT fs compound fs virus compound fs checking vfs NNS virus NN checking NN fs NNS root ROOT fs compound fs virus compound fs checking ffs NNS get VBP parent NN root ROOT get nsubj get ffs dobj get parent boolean NN is VBZ enabled VBN root ROOT enabled auxpass enabled is vfs NN is VBZ enabled VBN root ROOT enabled nsubjpass enabled vfs auxpass enabled is vfs NNS disable VBP root ROOT disable nsubj disable vfs return NN is VBZ enabled VBN root ROOT enabled auxpass enabled is fs NNS ffs NNS get VBP delegate NN root ROOT get nsubj get ffs dobj get delegate return NN false JJ,0,N/A,Lucene/lucene/test-framework/src/java/org/apache/lucene/util/TestUtil.java,1354
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME get bounds PARAMETER LIST bounds bounds PARAMETER bounds bounds TYPE bounds NAME bounds NAME bounds BLOCK EXPR super get bounds bounds CALL super get bounds bounds NAME super get bounds NAME super NAME get bounds ARGUMENT LIST ARGUMENT EXPR bounds NAME bounds EXPR bounds add vertical plane planet model longitude plane bounding plane add point planet model north pole add point planet model south pole CALL bounds add vertical plane planet model longitude plane bounding plane NAME bounds add vertical plane NAME bounds NAME add vertical plane ARGUMENT LIST ARGUMENT EXPR planet model NAME planet model ARGUMENT EXPR longitude NAME longitude ARGUMENT EXPR plane NAME plane ARGUMENT EXPR bounding plane NAME bounding plane CALL add point planet model north pole NAME add point ARGUMENT LIST ARGUMENT EXPR planet model north pole NAME planet model north pole NAME planet model NAME north pole CALL add point planet model south pole NAME add point ARGUMENT LIST ARGUMENT EXPR planet model south pole NAME planet model south pole NAME planet model NAME south pole override NN public NN void NN get VB bounds NNS root ROOT get dobj get bounds bounds NNS bounds NNS super JJ get VB bounds NNS bounds NNS bounds NNS add VB vertical JJ plane NN root ROOT add amod plane vertical dobj add plane planet NN model NN root ROOT model compound model planet longitude NN plane NN bounding VBG plane NN root ROOT bounding dobj bounding plane add VB point NN root ROOT add dobj add point planet NN model NN north NN root ROOT north compound north planet compound north model pole NN add VB point NN root ROOT add dobj add point planet NN model NN south RB root ROOT model compound model planet advmod model south pole NN,1,B6,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateLongitudeSlice.java,99
DECL STMT SPECIFIER private TYPE final boolean SPECIFIER final NAME boolean NAME transpositions private JJ final JJ boolean NN transpositions NNS,1,E1,Lucene/lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum.java,75
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE byte NAME byte NAME byte INDEX NAME get max packed value PARAMETER LIST string field name PARAMETER string field name TYPE string NAME string NAME field name THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK DECL STMT TYPE info NAME info NAME info INIT fields get field name EXPR fields get field name CALL fields get field name NAME fields get NAME fields NAME get ARGUMENT LIST ARGUMENT EXPR field name NAME field name IF if info null return null CONDITION info null EXPR info null NAME info THEN return null BLOCK RETURN return null EXPR null DECL STMT TYPE bytes ref NAME bytes ref NAME bytes ref INDEX NAME values INIT info point values EXPR info point values NAME info point values NAME info NAME point values IF if values null return info max packed value else return null CONDITION values null EXPR values null NAME values THEN return info max packed value BLOCK RETURN return info max packed value EXPR info max packed value NAME info max packed value NAME info NAME max packed value ELSE else return null BLOCK RETURN return null EXPR null override NN public NN byte NN get VB max NN packed JJ value NN root ROOT get compound value max amod value packed dobj get value string NN field NN name NN root ROOT name compound name field throws VBZ io NN exception NN root ROOT exception compound exception io info NN info NN fields NNS get VBP root ROOT get nsubj get fields field NN name NN root ROOT name compound name field if IN info NN null JJ return NN null JJ bytes NNS ref VBP root ROOT ref nsubj ref bytes values NNS info NN point NN values NNS root ROOT values compound values info compound values point if IN values NNS null JJ return NN info NN max NN packed VBD value NN root ROOT packed compound max info nsubj packed max dobj packed value else RB return NN null JJ,1,A4,Lucene/lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java,1553
COMMENT min latitude value in radians DECL STMT SPECIFIER public SPECIFIER static TYPE final double SPECIFIER final NAME double NAME min lat radians INIT to radians min lat incl EXPR to radians min lat incl NAME to radians NAME min lat incl min latitude value in radians root ROOT value compound value min compound value latitude case radians in nmod in value radians public NN static JJ final JJ double RB min NN lat NN radians NNS root ROOT radians compound radians min compound radians lat to TO radians NNS root ROOT radians case radians to min NN lat NN incl NN root ROOT incl compound incl min compound incl lat,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/geo/GeoUtils.java,49
COMMENT fetch response partition header v added log start offset field the earliest available offset of partition data that can be consumed DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME fetch request INIT fetch request v fetch request v fetch request v fetch request v fetch request v fetch request v EXPR fetch request v fetch request v fetch request v fetch request v fetch request v fetch request v BLOCK EXPR fetch request v NAME fetch request v EXPR fetch request v NAME fetch request v EXPR fetch request v NAME fetch request v EXPR fetch request v NAME fetch request v EXPR fetch request v NAME fetch request v EXPR fetch request v NAME fetch request v fetch response partition header v added log start offset field the earliest available offset of partition data that can be consumed root ROOT fetch compound header response compound header partition dobj fetch header nsubj added v acl relcl header added compound start log nsubj offset start ccomp added offset dobj offset field det offset the amod offset earliest amod offset available dep field offset case data of compound data partition nmod of offset data nsubjpass consumed data ref data that aux consumed can auxpass consumed be acl relcl data consumed public NN static JJ final JJ schema NN fetch VB request NN root ROOT fetch dobj fetch request fetch VB request NN v LS root ROOT fetch dobj fetch request dep fetch v fetch VB request NN v LS root ROOT fetch dobj fetch request dep fetch v fetch VB request NN v LS root ROOT fetch dobj fetch request dep fetch v fetch VB request NN v LS root ROOT fetch dobj fetch request dep fetch v fetch VB request NN v LS root ROOT fetch dobj fetch request dep fetch v fetch VB request NN v LS root ROOT fetch dobj fetch request dep fetch v added start ANTONYM ANTONYM fetch added ANTONYM ANTONYM fetch start ANTONYM ANTONYM start can ANTONYM ANTONYM start offset ANTONYM ANTONYM,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,762
DECL STMT SPECIFIER public SPECIFIER static TYPE final atomic boolean SPECIFIER final NAME atomic boolean NAME is on update called INIT new atomic boolean EXPR new atomic boolean CALL atomic boolean NAME atomic boolean ARGUMENT LIST public NN static JJ final JJ atomic JJ boolean NN root ROOT boolean amod boolean atomic is VBZ on IN update VBP called VBN root ROOT is case update on nmod on is update dep update called new JJ atomic JJ boolean NN root ROOT boolean amod boolean atomic,0,N/A,kafka/clients/src/test/java/org/apache/kafka/test/MockClusterResourceListener.java,27
DECL STMT SPECIFIER private SPECIFIER static TYPE final long SPECIFIER final NAME long NAME default cache size bytes INIT l EXPR l private JJ static JJ final JJ long RB default NN cache NN size NN bytes NNS root ROOT bytes compound bytes default compound bytes cache compound bytes size l NN,0,N/A,kafka/streams/src/test/java/org/apache/kafka/test/KStreamTestDriver.java,42
COMMENT task is unused DECL STMT SPECIFIER private TYPE final set topic partition SPECIFIER final NAME set topic partition NAME set ARGUMENT LIST ARGUMENT NAME topic partition NAME task assignment INIT collections singleton new topic partition topic EXPR collections singleton new topic partition topic CALL collections singleton new topic partition topic NAME collections singleton NAME collections NAME singleton ARGUMENT LIST ARGUMENT EXPR new topic partition topic CALL topic partition topic NAME topic partition ARGUMENT LIST ARGUMENT EXPR topic NAME topic ARGUMENT EXPR task is unused root ROOT unused nsubj unused task cop unused is private JJ final JJ set NN topic NN partition NN root ROOT partition compound partition topic task NN assignment NN root ROOT assignment compound assignment task collections NNS singleton NN root ROOT singleton compound singleton collections new JJ topic NN partition NN root ROOT partition compound partition topic topic NN,1,D1,kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,491
COMMENT internal stats DECL STMT SPECIFIER private TYPE long NAME long NAME num overwrites INIT EXPR internal stats root ROOT stats amod stats internal private JJ long RB num NN overwrites NNS root ROOT overwrites compound overwrites num internal private SYNONYM SYNONYM,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/state/internals/NamedCache.java,53
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME iterations INIT iterations EXPR iterations private JJ static JJ final JJ string NN iterations NNS iterations NNS,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/security/scram/ScramCredentialUtils.java,39
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME rest advertised host name config INIT rest advertised host name EXPR rest advertised host name public NN static JJ final JJ string NN rest NN advertised VBD host NN name NN config NN root ROOT advertised nsubj advertised rest compound config host compound config name dobj advertised config rest NN advertised VBD host NN name NN root ROOT advertised nsubj advertised rest compound name host dobj advertised name,1,D2,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConfig.java,107
COMMENT possible error codes group coordinator not available not coordinator illegal generation unknown member id rebalance in progress group authorization failed DECL STMT SPECIFIER private TYPE final byte buffer SPECIFIER final NAME byte buffer NAME member state possible error codes root ROOT codes amod codes possible compound codes error group coordinator not available root ROOT available compound coordinator group nsubj available coordinator neg available not not coordinator root ROOT coordinator neg coordinator not illegal generation root ROOT generation amod generation illegal unknown member id root ROOT id amod id unknown compound id member rebalance in progress root ROOT rebalance case progress in nmod in rebalance progress group authorization failed root ROOT failed compound authorization group nsubj failed authorization private JJ final JJ byte NN buffer NN root ROOT buffer compound buffer byte member NN state NN root ROOT state compound state member,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/requests/SyncGroupResponse.java,43
COMMENT describe configs api DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME describe configs response INIT describe configs response v EXPR describe configs response v BLOCK EXPR describe configs response v NAME describe configs response v describe configs api root ROOT describe dobj describe configs dep describe api public NN static JJ final JJ schema NN describe VBP configs NNS response NN root ROOT describe compound response configs dobj describe response describe VBP configs NNS response NN v LS root ROOT describe compound response configs dobj describe response dep describe v,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,1598
FUNCTION TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME get topics PARAMETER LIST collection string subscribed topics PARAMETER collection string subscribed topics TYPE collection string NAME collection string NAME collection ARGUMENT LIST ARGUMENT NAME string NAME subscribed topics BLOCK COMMENT if it is subscribed via patterns it is possible that the topic metadata has not been updated COMMENT yet and hence the map from source node to topics is stale in this case we put the pattern as a place holder COMMENT this should only happen for debugging since during runtime this function should always be called after the metadata has updated IF if subscribed topics is empty return collections singleton list pattern CONDITION subscribed topics is empty EXPR subscribed topics is empty CALL subscribed topics is empty NAME subscribed topics is empty NAME subscribed topics NAME is empty ARGUMENT LIST THEN return collections singleton list pattern BLOCK RETURN return collections singleton list pattern EXPR collections singleton list pattern CALL collections singleton list pattern NAME collections singleton list NAME collections NAME singleton list ARGUMENT LIST ARGUMENT EXPR pattern NAME pattern DECL STMT TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME matched topics INIT new array list EXPR new array list CALL array list NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST FOR for string update subscribed topics if this pattern topic to patterns get update matched topics add update else if topic to patterns contains key update is match update the same topic cannot be matched to more than one pattern todo we should lift this requirement in the future throw new topology builder exception topic update is already matched for another regex pattern topic to patterns get update and hence cannot be matched to this regex pattern pattern any more else if is match update topic to patterns put update this pattern matched topics add update CONTROL string update subscribed topics INIT string update subscribed topics TYPE string NAME string NAME update RANGE subscribed topics EXPR subscribed topics NAME subscribed topics BLOCK IF if this pattern topic to patterns get update matched topics add update else if topic to patterns contains key update is match update the same topic cannot be matched to more than one pattern todo we should lift this requirement in the future throw new topology builder exception topic update is already matched for another regex pattern topic to patterns get update and hence cannot be matched to this regex pattern pattern any more else if is match update topic to patterns put update this pattern matched topics add update CONDITION this pattern topic to patterns get update EXPR this pattern topic to patterns get update NAME this pattern NAME this NAME pattern CALL topic to patterns get update NAME topic to patterns get NAME topic to patterns NAME get ARGUMENT LIST ARGUMENT EXPR update NAME update THEN matched topics add update BLOCK EXPR matched topics add update CALL matched topics add update NAME matched topics add NAME matched topics NAME add ARGUMENT LIST ARGUMENT EXPR update NAME update ELSEIF else if topic to patterns contains key update is match update the same topic cannot be matched to more than one pattern todo we should lift this requirement in the future throw new topology builder exception topic update is already matched for another regex pattern topic to patterns get update and hence cannot be matched to this regex pattern pattern any more IF if topic to patterns contains key update is match update the same topic cannot be matched to more than one pattern todo we should lift this requirement in the future throw new topology builder exception topic update is already matched for another regex pattern topic to patterns get update and hence cannot be matched to this regex pattern pattern any more CONDITION topic to patterns contains key update is match update EXPR topic to patterns contains key update is match update CALL topic to patterns contains key update NAME topic to patterns contains key NAME topic to patterns NAME contains key ARGUMENT LIST ARGUMENT EXPR update NAME update CALL is match update NAME is match ARGUMENT LIST ARGUMENT EXPR update NAME update THEN the same topic cannot be matched to more than one pattern todo we should lift this requirement in the future throw new topology builder exception topic update is already matched for another regex pattern topic to patterns get update and hence cannot be matched to this regex pattern pattern any more BLOCK COMMENT the same topic cannot be matched to more than one pattern COMMENT todo we should lift this requirement in the future THROW throw new topology builder exception topic update is already matched for another regex pattern topic to patterns get update and hence cannot be matched to this regex pattern pattern any more EXPR new topology builder exception topic update is already matched for another regex pattern topic to patterns get update and hence cannot be matched to this regex pattern pattern any more CALL topology builder exception topic update is already matched for another regex pattern topic to patterns get update and hence cannot be matched to this regex pattern pattern any more NAME topology builder exception ARGUMENT LIST ARGUMENT EXPR topic update is already matched for another regex pattern topic to patterns get update and hence cannot be matched to this regex pattern pattern any more NAME update CALL topic to patterns get update NAME topic to patterns get NAME topic to patterns NAME get ARGUMENT LIST ARGUMENT EXPR update NAME update NAME pattern ELSEIF else if is match update topic to patterns put update this pattern matched topics add update IF if is match update topic to patterns put update this pattern matched topics add update CONDITION is match update EXPR is match update CALL is match update NAME is match ARGUMENT LIST ARGUMENT EXPR update NAME update THEN topic to patterns put update this pattern matched topics add update BLOCK EXPR topic to patterns put update this pattern CALL topic to patterns put update this pattern NAME topic to patterns put NAME topic to patterns NAME put ARGUMENT LIST ARGUMENT EXPR update NAME update ARGUMENT EXPR this pattern NAME this pattern NAME this NAME pattern EXPR matched topics add update CALL matched topics add update NAME matched topics add NAME matched topics NAME add ARGUMENT LIST ARGUMENT EXPR update NAME update RETURN return matched topics EXPR matched topics NAME matched topics list NN string NN get VB topics NNS root ROOT get dobj get topics collection NN string NN subscribed VBD topics NNS root ROOT subscribed dobj subscribed topics if it is subscribed via patterns it is possible that the topic metadata has not been updated root ROOT possible mark subscribed if nsubjpass subscribed it auxpass subscribed is advcl if possible subscribed case patterns via nmod via subscribed patterns nsubj possible it cop possible is mark updated that det metadata the compound metadata topic nsubjpass updated metadata aux updated has neg updated not auxpass updated been ccomp possible updated yet and hence the map from source node to topics is stale in this case we put the pattern as a place holder root ROOT stale advmod and yet cc stale and advmod and hence det map the nsubj stale map case node from compound node source nmod from map node case topics to nmod to map topics cop stale is case case in det case this nmod in put case nsubj put we ccomp stale put det pattern the dobj put pattern case place as det place a nmod as put place dobj put holder this should only happen for debugging since during runtime this function should always be called after the metadata has updated root ROOT happen nsubj happen this aux happen should advmod happen only mark debugging for advcl for happen debugging mark called since case runtime during nmod during called runtime det function this nsubjpass called function aux called should advmod called always auxpass called be advcl since debugging called mark updated after det metadata the nsubj updated metadata aux updated has advcl after called updated if IN subscribed VBD topics NNS is VBZ empty JJ root ROOT empty amod topics subscribed nsubj empty topics cop empty is return NN collections NNS singleton JJ list NN root ROOT list compound list collections amod list singleton pattern NN list NN string NN matched VBN topics NNS root ROOT topics amod topics matched new JJ array NN list NN root ROOT list compound list array for IN string NN update VB subscribed VBD topics NNS root ROOT subscribed dobj subscribed topics if IN this DT pattern NN topic NN to TO patterns NNS get VBP root ROOT get nsubj get topic case patterns to nmod to topic patterns update VB matched VBN topics NNS add VBP root ROOT add amod topics matched nsubj add topics update VB else RB if IN topic NN to TO patterns NNS contains VBZ key NN root ROOT contains nsubj contains topic case patterns to nmod to topic patterns dobj contains key update VB is VBZ match NN root ROOT match cop match is update VB the same topic can not be matched to more than one pattern root ROOT matched det topic the amod topic same nsubjpass matched topic aux matched can neg matched not auxpass matched be case pattern to advmod one more mwe more than nummod pattern one nmod to matched pattern todo we should lift this requirement in the future root ROOT todo nsubj lift we aux lift should acl relcl todo lift det requirement this dobj lift requirement case future in det future the nmod in lift future throw VB new JJ topology NN builder NN exception NN root ROOT exception compound exception topology compound exception builder topic NN update VB is VBZ already RB matched VBN for IN another DT regex NN pattern NN topic NN to TO patterns NNS get VBP root ROOT get nsubj get topic case patterns to nmod to topic patterns update VB and CC hence RB can MD not RB be VB matched VBN to TO this DT regex NN pattern NN pattern NN any DT more RBR else RB if IN is VBZ match NN root ROOT match cop match is update VB topic NN to TO patterns NNS put VBP root ROOT put nsubj put topic case patterns to nmod to topic patterns update VB this DT pattern NN matched VBN topics NNS add VBP root ROOT add amod topics matched nsubj add topics update VB return NN matched VBN topics NNS root ROOT topics amod topics matched,1,B7,kafka/streams/src/main/java/org/apache/kafka/streams/processor/TopologyBuilder.java,198
DECL STMT SPECIFIER private TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME world INIT world get bytes EXPR world get bytes CALL get bytes NAME get bytes ARGUMENT LIST private JJ final JJ byte NN world NN world NN get VB bytes NNS root ROOT get dobj get bytes,1,D1,kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/ChangeLoggingKeyValueBytesStoreTest.java,50
DECL STMT SPECIFIER private SPECIFIER static TYPE final long SPECIFIER final NAME long NAME reconfigure connector tasks backoff ms INIT EXPR private JJ static JJ final JJ long RB reconfigure NN connector NN tasks NNS backoff VBP ms NNS root ROOT backoff compound tasks reconfigure compound tasks connector nsubj backoff tasks dobj backoff ms,0,N/A,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java,103
COMMENT serialized DECL STMT SPECIFIER private SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME offset key serialized INIT key serialized get bytes EXPR key serialized get bytes CALL get bytes NAME get bytes ARGUMENT LIST serialized private JJ static JJ final JJ byte NN offset VBN key JJ serialized VBN root ROOT offset xcomp offset key dep key serialized key JJ serialized VBN root ROOT key dep key serialized get VB bytes NNS root ROOT get dobj get bytes,1,D1,kafka/connect/runtime/src/test/java/org/apache/kafka/connect/storage/OffsetStorageWriterTest.java,55
COMMENT find all of the link streams metadata s for a given store name param store name the store name to find metadata for return a collection of link streams metadata that have the provided store name FUNCTION SPECIFIER public SPECIFIER synchronized TYPE collection streams metadata NAME collection streams metadata NAME collection ARGUMENT LIST ARGUMENT NAME streams metadata NAME get all metadata for store PARAMETER LIST final string store name PARAMETER final string store name TYPE final string SPECIFIER final NAME string NAME store name BLOCK EXPR objects require non null store name store name cannot be null CALL objects require non null store name store name cannot be null NAME objects require non null NAME objects NAME require non null ARGUMENT LIST ARGUMENT EXPR store name NAME store name ARGUMENT EXPR store name cannot be null IF if is initialized return collections empty list CONDITION is initialized EXPR is initialized CALL is initialized NAME is initialized ARGUMENT LIST THEN return collections empty list BLOCK RETURN return collections empty list EXPR collections empty list CALL collections empty list NAME collections empty list NAME collections NAME empty list ARGUMENT LIST IF if global stores contains store name return all metadata CONDITION global stores contains store name EXPR global stores contains store name CALL global stores contains store name NAME global stores contains NAME global stores NAME contains ARGUMENT LIST ARGUMENT EXPR store name NAME store name THEN return all metadata BLOCK RETURN return all metadata EXPR all metadata NAME all metadata DECL STMT TYPE final list string SPECIFIER final NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME source topics INIT builder state store name to source topics get store name EXPR builder state store name to source topics get store name CALL builder state store name to source topics NAME builder state store name to source topics NAME builder NAME state store name to source topics ARGUMENT LIST CALL get store name NAME get ARGUMENT LIST ARGUMENT EXPR store name NAME store name IF if source topics null return collections empty list CONDITION source topics null EXPR source topics null NAME source topics THEN return collections empty list BLOCK RETURN return collections empty list EXPR collections empty list CALL collections empty list NAME collections empty list NAME collections NAME empty list ARGUMENT LIST DECL STMT TYPE final array list streams metadata SPECIFIER final NAME array list streams metadata NAME array list ARGUMENT LIST ARGUMENT NAME streams metadata NAME results INIT new array list EXPR new array list CALL array list NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST FOR for streams metadata metadata all metadata if metadata state store names contains store name results add metadata CONTROL streams metadata metadata all metadata INIT streams metadata metadata all metadata TYPE streams metadata NAME streams metadata NAME metadata RANGE all metadata EXPR all metadata NAME all metadata BLOCK IF if metadata state store names contains store name results add metadata CONDITION metadata state store names contains store name EXPR metadata state store names contains store name CALL metadata state store names NAME metadata state store names NAME metadata NAME state store names ARGUMENT LIST CALL contains store name NAME contains ARGUMENT LIST ARGUMENT EXPR store name NAME store name THEN results add metadata BLOCK EXPR results add metadata CALL results add metadata NAME results add NAME results NAME add ARGUMENT LIST ARGUMENT EXPR metadata NAME metadata RETURN return results EXPR results NAME results find all of the link streams metadata s for a given store name root ROOT find det qmod streams all mwe all of det streams the compound streams link det s streams compound s metadata dobj find s case name for det name a amod name given compound name store nmod for find name param store name the store name to find metadata for root ROOT name compound name param compound name store det name the compound name store dep name name mark find to acl to name find dobj find metadata nmod find for return a collection of link streams metadata that have the provided store name root ROOT metadata csubj metadata return det collection a dobj return collection case streams of compound streams link nmod of collection streams dep metadata that root that have det name the amod name provided compound name store dobj have name public NN synchronized VBN collection NN streams NNS metadata NNS root ROOT metadata compound metadata streams get VB all DT metadata NN for IN store NN root ROOT get det metadata all dobj get metadata case store for nmod for get store final JJ string NN store NN name NN root ROOT name compound name store objects NNS require VBP non JJ null JJ root ROOT require nsubj require objects amod null non dobj require null store NN name NN root ROOT name compound name store store NN name NN root ROOT name compound name store can MD not RB be VB null JJ if IN is VBZ initialized VBN root ROOT initialized auxpass initialized is return NN collections NNS empty JJ list NN root ROOT list compound list collections amod list empty if IN global JJ stores NNS contains VBZ root ROOT contains amod stores global nsubj contains stores store NN name NN root ROOT name compound name store return NN all DT metadata NN root ROOT metadata det metadata all final JJ list NN string NN source NN topics NNS root ROOT topics compound topics source builder NN state NN store NN name NN to TO source NN topics NNS root ROOT name compound name builder compound name state compound name store case topics to compound topics source nmod to name topics get VB store NN name NN root ROOT name compound name store if IN source NN topics NNS root ROOT topics compound topics source null JJ return NN collections NNS empty JJ list NN root ROOT list compound list collections amod list empty final JJ array NN list NN root ROOT list compound list array streams NNS metadata NNS root ROOT metadata compound metadata streams results NNS new JJ array NN list NN root ROOT list compound list array for IN streams NNS metadata NNS root ROOT metadata compound metadata streams metadata NN all DT metadata NN root ROOT metadata det metadata all if IN metadata JJ state NN store NN names NNS root ROOT names amod names metadata compound names state compound names store contains VBZ store NN name NN root ROOT name compound name store results NNS add VBP root ROOT add nsubj add results metadata NN return NN results NNS,1,A4,kafka/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsMetadataState.java,76
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE string NAME string NAME get authorization id PARAMETER LIST BLOCK IF if complete throw new illegal state exception authentication exchange has not completed CONDITION complete EXPR complete NAME complete THEN throw new illegal state exception authentication exchange has not completed BLOCK THROW throw new illegal state exception authentication exchange has not completed EXPR new illegal state exception authentication exchange has not completed CALL illegal state exception authentication exchange has not completed NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR authentication exchange has not completed RETURN return authorization id EXPR authorization id NAME authorization id override NN public NN string NN get VB authorization NN id NN root ROOT get compound id authorization dobj get id if IN complete JJ throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state authentication NN exchange NN has VBZ not RB completed VBN return NN authorization NN id NN root ROOT id compound id authorization,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/security/plain/PlainSaslServer.java,108
COMMENT changes the end window boundary to code time difference ms but keep the start window boundary as is thus records of the same key are joinable if the timestamp of a record from the secondary stream is at most code time difference ms later than the timestamp of the record from the primary stream code time difference ms can be negative but it s absolute value must not be larger than current window before value which would result in a negative window size param time difference ms relative window end time in milliseconds throws illegal argument exception if the resulting window size is negative FUNCTION SPECIFIER public TYPE join windows NAME join windows NAME after PARAMETER LIST final long time difference ms PARAMETER final long time difference ms TYPE final long SPECIFIER final NAME long NAME time difference ms THROWS throws illegal argument exception ARGUMENT EXPR illegal argument exception NAME illegal argument exception BLOCK RETURN return new join windows before ms time difference ms EXPR new join windows before ms time difference ms CALL join windows before ms time difference ms NAME join windows ARGUMENT LIST ARGUMENT EXPR before ms NAME before ms ARGUMENT EXPR time difference ms NAME time difference ms changes the end window boundary to code time difference ms but keep the start window boundary as is root ROOT changes det boundary the compound boundary end compound boundary window dobj changes boundary case ms to compound ms code compound ms time compound ms difference nmod to changes ms cc changes but conj but changes keep det boundary the compound boundary start compound boundary window dobj keep boundary nmod keep as dep changes is thus records of the same key are joinable if the timestamp of a record from the secondary stream is at most root ROOT joinable advmod joinable thus nsubj joinable records case key of det key the amod key same nmod of records key cop joinable are mark most if det timestamp the nsubj most timestamp case record of det record a nmod of timestamp record case stream from det stream the amod stream secondary nmod from record stream cop most is case most at advcl if joinable most code time difference ms later than the timestamp of the record from the primary stream root ROOT ms compound ms code compound ms time compound ms difference advmod ms later case timestamp than det timestamp the nmod than later timestamp case record of det record the nmod of timestamp record case stream from det stream the amod stream primary nmod from record stream code time difference ms can be negative but it s absolute value must not be larger than current window before root ROOT negative compound ms code compound ms time compound ms difference nsubj negative ms aux negative can cop negative be cc negative but nsubj value it cop value s amod value absolute conj but negative value aux larger must neg larger not cop larger be dep value larger case window than amod window current nmod than larger window dep larger before value which would result in a negative window size root ROOT value nsubj result value ref value which aux result would acl relcl value result case size in det size a amod size negative compound size window nmod in result size param time difference ms relative window end time in milliseconds root ROOT time compound ms param compound ms time compound ms difference compound time ms amod time relative compound time window compound time end case milliseconds in nmod in time milliseconds throws illegal argument exception if the resulting window size is negative root ROOT throws amod exception illegal compound exception argument dobj throws exception mark negative if det size the amod size resulting compound size window nsubj negative size cop negative is advcl if throws negative public NN join VB windows NNS root ROOT join dobj join windows after IN final JJ long RB time NN difference NN ms NNS root ROOT ms compound ms time compound ms difference throws VBZ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument return NN new JJ join VB windows NNS root ROOT join dobj join windows before IN ms NNS root ROOT ms case ms before time NN difference NN ms NNS root ROOT ms compound ms time compound ms difference,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/kstream/JoinWindows.java,116
COMMENT default values for older versions where a request level limit did not exist DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME min bytes default values for older versions where a request level limit did not exist root ROOT values compound values default case versions for amod versions older nmod for values versions advmod exist where det limit a compound limit request compound limit level nsubj exist limit aux exist did neg exist not acl relcl versions exist private JJ final JJ int NN min NN bytes NNS root ROOT bytes compound bytes min limit did ANTONYM ANTONYM,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/requests/FetchRequest.java,57
COMMENT v request is the same as v throttle time has been added to response DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME heartbeat response INIT heartbeat response v heartbeat response v EXPR heartbeat response v heartbeat response v BLOCK EXPR heartbeat response v NAME heartbeat response v EXPR heartbeat response v NAME heartbeat response v v request is the same as v throttle time has been added to response root ROOT v nsubj same request cop same is det same the root v same mark added as dep added v amod time throttle nsubjpass added time aux added has auxpass added been advcl as same added case response to nmod to added response v request is the same as v throttle time has been added to response root ROOT v nsubj same request cop same is det same the root v same mark added as dep added v amod time throttle nsubjpass added time aux added has auxpass added been advcl as same added case response to nmod to added response public NN static JJ final JJ schema NN heartbeat NN response NN root ROOT response compound response heartbeat heartbeat NN response NN v LS root ROOT v compound response heartbeat nsubj v response heartbeat NN response NN v LS root ROOT v compound response heartbeat nsubj v response,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,1012
COMMENT this class extends link streams metrics impl metrics string string map and overrides one of its functions for efficiency DECL STMT TYPE final consumer byte byte SPECIFIER final NAME consumer byte byte NAME consumer ARGUMENT LIST ARGUMENT NAME byte NAME byte INDEX ARGUMENT NAME byte NAME byte INDEX NAME restore consumer this class extends link streams metrics impl metrics string string map and root ROOT extends det class this nsubj extends class compound metrics link compound metrics streams compound metrics metrics compound metrics impl nsubj string metrics ccomp extends string compound map string dobj string map cc extends and overrides one of its functions for efficiency root ROOT overrides dobj overrides one case functions of nmod poss functions its nmod of one functions case efficiency for nmod for functions efficiency final JJ consumer NN byte NN byte NN restore VB consumer NN root ROOT restore dobj restore consumer,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java,349
FUNCTION SPECIFIER private SPECIFIER static TYPE set string NAME set string NAME set ARGUMENT LIST ARGUMENT NAME string NAME get tags PARAMETER LIST string keys PARAMETER string keys TYPE string NAME string MODIFIER NAME keys BLOCK DECL STMT TYPE set string NAME set string NAME set ARGUMENT LIST ARGUMENT NAME string NAME tags INIT new hash set string EXPR new hash set string CALL hash set string NAME hash set string NAME hash set ARGUMENT LIST ARGUMENT NAME string ARGUMENT LIST FOR for int i i keys length i tags add keys i CONTROL int i i keys length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i keys length EXPR i keys length NAME i NAME keys length NAME keys NAME length INCR i EXPR i NAME i BLOCK EXPR tags add keys i CALL tags add keys i NAME tags add NAME tags NAME add ARGUMENT LIST ARGUMENT EXPR keys i NAME keys i NAME keys INDEX i EXPR i NAME i RETURN return tags EXPR tags NAME tags private JJ static JJ set NN string NN get VB tags NNS root ROOT get dobj get tags string NN keys NNS set NN string NN tags NNS new JJ hash JJ set NN root ROOT set amod set hash string NN for IN int NN i LS i LS keys NNS length NN root ROOT length compound length keys i LS tags NNS add VBP root ROOT add nsubj add tags keys NNS i LS return NN tags NNS static set SYNONYM SYNONYM,1,A1,kafka/clients/src/main/java/org/apache/kafka/common/MetricNameTemplate.java,47
COMMENT code default timestamp extractor DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME default timestamp extractor class config INIT default timestamp extractor EXPR default timestamp extractor code default timestamp extractor root ROOT extractor compound extractor code compound extractor default amod extractor timestamp public NN static JJ final JJ string NN default NN timestamp JJ extractor NN class NN config NN root ROOT config compound config default amod config timestamp compound config extractor compound config class default NN timestamp JJ extractor NN,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,154
DECL STMT SPECIFIER private TYPE final float SPECIFIER final NAME float NAME float INDEX NAME hist private JJ final JJ float NN hist IN,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/metrics/stats/Histogram.java,22
COMMENT code status storage replication factor code DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME status storage replication factor config INIT status storage replication factor EXPR status storage replication factor code status storage replication factor code root ROOT code compound code code compound code status compound code storage compound code replication compound code factor public NN static JJ final JJ string NN status NN storage NN replication NN factor NN config NN root ROOT config compound config status compound config storage compound config replication compound config factor status NN storage NN replication NN factor NN root ROOT factor compound factor status compound factor storage compound factor replication,0,N/A,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedConfig.java,132
COMMENT the number of times to retry a failed request before giving up DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME retries the number of times to retry a failed request before giving up root ROOT number det number the case times of nmod of number times mark retry to acl to number retry det request a amod request failed dobj retry request mark giving before advcl before retry giving compound prt giving up private JJ final JJ int NN retries NNS failed giving ANTONYM ANTONYM,1,E1,kafka/clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java,98
FUNCTION ANNOTATION test NAME test SPECIFIER public TYPE void NAME void NAME null schema and primitive to json PARAMETER LIST BLOCK COMMENT this still needs to do conversion of data null schema means anything goes DECL STMT TYPE json node NAME json node NAME converted INIT parse converter from connect data topic null true EXPR parse converter from connect data topic null true CALL parse converter from connect data topic null true NAME parse ARGUMENT LIST ARGUMENT EXPR converter from connect data topic null true CALL converter from connect data topic null true NAME converter from connect data NAME converter NAME from connect data ARGUMENT LIST ARGUMENT EXPR topic NAME topic ARGUMENT EXPR null ARGUMENT EXPR true EXPR validate envelope null schema converted CALL validate envelope null schema converted NAME validate envelope null schema ARGUMENT LIST ARGUMENT EXPR converted NAME converted EXPR assert true converted get json schema envelope schema field name is null CALL assert true converted get json schema envelope schema field name is null NAME assert true ARGUMENT LIST ARGUMENT EXPR converted get json schema envelope schema field name is null CALL converted get json schema envelope schema field name NAME converted get NAME converted NAME get ARGUMENT LIST ARGUMENT EXPR json schema envelope schema field name NAME json schema envelope schema field name NAME json schema NAME envelope schema field name CALL is null NAME is null ARGUMENT LIST EXPR assert equals true converted get json schema envelope payload field name boolean value CALL assert equals true converted get json schema envelope payload field name boolean value NAME assert equals ARGUMENT LIST ARGUMENT EXPR true ARGUMENT EXPR converted get json schema envelope payload field name boolean value CALL converted get json schema envelope payload field name NAME converted get NAME converted NAME get ARGUMENT LIST ARGUMENT EXPR json schema envelope payload field name NAME json schema envelope payload field name NAME json schema NAME envelope payload field name CALL boolean value NAME boolean value ARGUMENT LIST test NN public NN void NN null JJ schema NN and CC primitive JJ to TO json VB root ROOT schema amod schema null cc schema and conj and schema primitive mark json to acl to schema json this still needs to do conversion of data null schema means anything goes root ROOT needs nsubj needs this nsubj xsubj do this advmod needs still mark do to xcomp needs do dobj do conversion case schema of compound schema data amod schema null nmod of conversion schema ccomp needs means nsubj goes anything ccomp means goes json NN node NN root ROOT node compound node json converted VBN parse VB converter NN from IN connect VB data NNS root ROOT converter mark connect from acl from converter connect dobj connect data topic NN null JJ true JJ validate VB envelope NN null JJ schema NN root ROOT validate compound schema envelope amod schema null dobj validate schema converted VBN assert VB true JJ root ROOT assert xcomp assert true converted VBN get VB root ROOT converted dep converted get json NN schema NN envelope NN root ROOT envelope compound envelope json compound envelope schema schema NN field NN name NN root ROOT name compound name schema compound name field is VBZ null JJ root ROOT null cop null is assert VB equals VBZ root ROOT equals nsubj equals assert true JJ converted VBN get VB root ROOT converted dep converted get json NN schema NN envelope NN root ROOT envelope compound envelope json compound envelope schema payload NN field NN name NN root ROOT name compound name payload compound name field boolean JJ value NN root ROOT value amod value boolean,1,B5,kafka/connect/json/src/test/java/org/apache/kafka/connect/json/JsonConverterTest.java,626
FUNCTION ANNOTATION override NAME override SPECIFIER public SPECIFIER synchronized TYPE void NAME void NAME get PARAMETER LIST THROWS throws interrupted exception execution exception ARGUMENT EXPR interrupted exception NAME interrupted exception ARGUMENT EXPR execution exception NAME execution exception BLOCK WHILE while completed this wait CONDITION completed EXPR completed NAME completed BLOCK EXPR this wait CALL this wait NAME this wait NAME this NAME wait ARGUMENT LIST IF if exception null throw new execution exception exception CONDITION exception null EXPR exception null NAME exception THEN throw new execution exception exception BLOCK THROW throw new execution exception exception EXPR new execution exception exception CALL execution exception exception NAME execution exception ARGUMENT LIST ARGUMENT EXPR exception NAME exception RETURN return null EXPR null override NN public NN synchronized VBN void NN get VB throws VBZ interrupted JJ exception NN root ROOT exception amod exception interrupted execution NN exception NN root ROOT exception compound exception execution while IN completed VBN this DT wait NN if IN exception NN null JJ throw VB new JJ execution NN exception NN root ROOT exception compound exception execution exception NN return NN null JJ get throws ANTONYM ANTONYM,1,B3,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaOffsetBackingStore.java,208
DECL STMT SPECIFIER private TYPE final static string SPECIFIER final SPECIFIER static NAME string NAME creations INIT creations EXPR creations private JJ final JJ static JJ string NN creations NNS creations NNS,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/requests/CreateAclsRequest.java,32
COMMENT the number of milliseconds until the next timeout DECL STMT SPECIFIER private TYPE int NAME int NAME next timeout ms the number of milliseconds until the next timeout root ROOT number det number the case milliseconds of nmod of number milliseconds case timeout until det timeout the amod timeout next nmod until number timeout private JJ int NN next JJ timeout NN ms NNS root ROOT ms amod ms next compound ms timeout,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java,581
COMMENT with mix of integer string in connect DECL STMT SPECIFIER private SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME raw key INIT key get bytes EXPR key get bytes CALL get bytes NAME get bytes ARGUMENT LIST with mix of integer string in connect root ROOT mix case mix with case string of compound string integer nmod of mix string mark connect in acl in mix connect private JJ static JJ final JJ byte NN raw JJ key NN root ROOT key amod key raw key NN get VB bytes NNS root ROOT get dobj get bytes,1,D1,kafka/connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerSinkTaskTest.java,93
DECL STMT SPECIFIER private TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME new value private JJ final JJ byte NN new JJ value NN root ROOT value amod value new,1,D1,kafka/streams/src/main/java/org/apache/kafka/streams/state/internals/ThreadCache.java,339
FUNCTION SPECIFIER private TYPE void NAME void NAME check for new topic assignments PARAMETER LIST assignment assignment PARAMETER assignment assignment TYPE assignment NAME assignment NAME assignment BLOCK IF if stream thread builder source topic pattern null final set string assigned topics new hash set for final topic partition topic partition assignment partitions assigned topics add topic partition topic if stream thread builder subscription updates get updates contains all assigned topics assigned topics add all stream thread builder subscription updates get updates update subscribed topics assigned topics CONDITION stream thread builder source topic pattern null EXPR stream thread builder source topic pattern null CALL stream thread builder source topic pattern NAME stream thread builder source topic pattern NAME stream thread NAME builder NAME source topic pattern ARGUMENT LIST THEN final set string assigned topics new hash set for final topic partition topic partition assignment partitions assigned topics add topic partition topic if stream thread builder subscription updates get updates contains all assigned topics assigned topics add all stream thread builder subscription updates get updates update subscribed topics assigned topics BLOCK DECL STMT TYPE final set string SPECIFIER final NAME set string NAME set ARGUMENT LIST ARGUMENT NAME string NAME assigned topics INIT new hash set EXPR new hash set CALL hash set NAME hash set NAME hash set ARGUMENT LIST ARGUMENT LIST FOR for final topic partition topic partition assignment partitions assigned topics add topic partition topic CONTROL final topic partition topic partition assignment partitions INIT final topic partition topic partition assignment partitions TYPE final topic partition SPECIFIER final NAME topic partition NAME topic partition RANGE assignment partitions EXPR assignment partitions CALL assignment partitions NAME assignment partitions NAME assignment NAME partitions ARGUMENT LIST BLOCK EXPR assigned topics add topic partition topic CALL assigned topics add topic partition topic NAME assigned topics add NAME assigned topics NAME add ARGUMENT LIST ARGUMENT EXPR topic partition topic CALL topic partition topic NAME topic partition topic NAME topic partition NAME topic ARGUMENT LIST IF if stream thread builder subscription updates get updates contains all assigned topics assigned topics add all stream thread builder subscription updates get updates update subscribed topics assigned topics CONDITION stream thread builder subscription updates get updates contains all assigned topics EXPR stream thread builder subscription updates get updates contains all assigned topics CALL stream thread builder subscription updates NAME stream thread builder subscription updates NAME stream thread NAME builder NAME subscription updates ARGUMENT LIST CALL get updates NAME get updates ARGUMENT LIST CALL contains all assigned topics NAME contains all ARGUMENT LIST ARGUMENT EXPR assigned topics NAME assigned topics THEN assigned topics add all stream thread builder subscription updates get updates update subscribed topics assigned topics BLOCK EXPR assigned topics add all stream thread builder subscription updates get updates CALL assigned topics add all stream thread builder subscription updates get updates NAME assigned topics add all NAME assigned topics NAME add all ARGUMENT LIST ARGUMENT EXPR stream thread builder subscription updates get updates CALL stream thread builder subscription updates NAME stream thread builder subscription updates NAME stream thread NAME builder NAME subscription updates ARGUMENT LIST CALL get updates NAME get updates ARGUMENT LIST EXPR update subscribed topics assigned topics CALL update subscribed topics assigned topics NAME update subscribed topics ARGUMENT LIST ARGUMENT EXPR assigned topics NAME assigned topics private JJ void NN check NN for IN new JJ topic NN assignments NNS root ROOT check case assignments for amod assignments new compound assignments topic nmod for check assignments assignment NN assignment NN if IN stream NN thread NN builder NN source NN topic NN pattern NN root ROOT pattern compound pattern stream compound pattern thread compound pattern builder compound pattern source compound pattern topic null JJ final JJ set NN string NN assigned VBN topics NNS root ROOT topics amod topics assigned new JJ hash JJ set NN root ROOT set amod set hash for IN final JJ topic NN partition NN root ROOT partition compound partition topic topic NN partition NN root ROOT partition compound partition topic assignment NN partitions NNS root ROOT partitions compound partitions assignment assigned VBN topics NNS add VBP root ROOT add amod topics assigned nsubj add topics topic NN partition NN topic NN root ROOT topic compound topic topic compound topic partition if IN stream NN thread NN builder NN subscription NN updates NNS root ROOT updates compound updates stream compound updates thread compound updates builder compound updates subscription get VB updates NNS root ROOT get dobj get updates contains VBZ all DT root ROOT contains dobj contains all assigned VBN topics NNS root ROOT topics amod topics assigned assigned VBN topics NNS add VBP all DT root ROOT add amod topics assigned nsubj add topics dobj add all stream NN thread NN builder NN subscription NN updates NNS root ROOT updates compound updates stream compound updates thread compound updates builder compound updates subscription get VB updates NNS root ROOT get dobj get updates update VB subscribed VBD topics NNS root ROOT subscribed nsubj subscribed update dobj subscribed topics assigned VBN topics NNS root ROOT topics amod topics assigned,1,B2,kafka/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamPartitionAssignor.java,619
COMMENT changes the start window boundary to code time difference ms but keep the end window boundary as is thus records of the same key are joinable if the timestamp of a record from the secondary stream is at most code time difference ms earlier than the timestamp of the record from the primary stream code time difference ms can be negative but it s absolute value must not be larger than current window after value which would result in a negative window size param time difference ms relative window start time in milliseconds throws illegal argument exception if the resulting window size is negative FUNCTION SPECIFIER public TYPE join windows NAME join windows NAME before PARAMETER LIST final long time difference ms PARAMETER final long time difference ms TYPE final long SPECIFIER final NAME long NAME time difference ms THROWS throws illegal argument exception ARGUMENT EXPR illegal argument exception NAME illegal argument exception BLOCK RETURN return new join windows time difference ms after ms EXPR new join windows time difference ms after ms CALL join windows time difference ms after ms NAME join windows ARGUMENT LIST ARGUMENT EXPR time difference ms NAME time difference ms ARGUMENT EXPR after ms NAME after ms changes the start window boundary to code time difference ms but keep the end window boundary as is root ROOT changes det boundary the compound boundary start compound boundary window dobj changes boundary case ms to compound ms code compound ms time compound ms difference nmod to boundary ms cc changes but conj but changes keep det boundary the compound boundary end compound boundary window dobj keep boundary nmod keep as dep changes is thus records of the same key are joinable if the timestamp of a record from the secondary stream is at most root ROOT joinable advmod joinable thus nsubj joinable records case key of det key the amod key same nmod of records key cop joinable are mark most if det timestamp the nsubj most timestamp case record of det record a nmod of timestamp record case stream from det stream the amod stream secondary nmod from record stream cop most is case most at advcl if joinable most code time difference ms earlier than the timestamp of the record from the primary stream root ROOT ms compound ms code compound ms time compound ms difference advmod ms earlier case timestamp than det timestamp the nmod than earlier timestamp case record of det record the nmod of timestamp record case stream from det stream the amod stream primary nmod from timestamp stream code time difference ms can be negative but it s absolute value must not be larger than current window after root ROOT negative compound ms code compound ms time compound ms difference nsubj negative ms aux negative can cop negative be cc negative but nsubj value it cop value s amod value absolute conj but negative value aux larger must neg larger not cop larger be dep value larger case window than amod window current nmod than larger window dep larger after value which would result in a negative window size root ROOT value nsubj result value ref value which aux result would acl relcl value result case size in det size a amod size negative compound size window nmod in result size param time difference ms relative window start time in milliseconds root ROOT time compound ms param compound ms time compound ms difference compound time ms amod time relative compound time window compound time start case milliseconds in nmod in time milliseconds throws illegal argument exception if the resulting window size is negative root ROOT throws amod exception illegal compound exception argument dobj throws exception mark negative if det size the amod size resulting compound size window nsubj negative size cop negative is advcl if throws negative public NN join VB windows NNS root ROOT join dobj join windows before IN final JJ long RB time NN difference NN ms NNS root ROOT ms compound ms time compound ms difference throws VBZ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument return NN new JJ join VB windows NNS root ROOT join dobj join windows time NN difference NN ms NNS root ROOT ms compound ms time compound ms difference after IN ms NNS root ROOT ms case ms after,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/kstream/JoinWindows.java,102
COMMENT todo these values should be configurable DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME ttl seconds INIT ttl not used EXPR ttl not used NAME ttl not used todo these values should be configurable root ROOT todo det values these nsubj configurable values aux configurable should cop configurable be acl relcl todo configurable private JJ static JJ final JJ int NN ttl NN seconds NNS root ROOT seconds compound seconds ttl ttl NN not RB used VBN root ROOT ttl neg used not acl ttl used,1,E1,kafka/streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java,81
COMMENT check whether an update has been explicitly requested return true if an update was requested false otherwise FUNCTION SPECIFIER public SPECIFIER synchronized TYPE boolean NAME boolean NAME update requested PARAMETER LIST BLOCK RETURN return this need update EXPR this need update NAME this need update NAME this NAME need update check whether an update has been explicitly requested root ROOT check mark requested whether det update an nsubjpass requested update aux requested has auxpass requested been advmod requested explicitly ccomp check requested return true if an update was requested false otherwise root ROOT return amod return true mark requested if det update an nsubjpass requested update auxpass requested was advcl if true requested xcomp requested false advmod requested otherwise public NN synchronized VBN boolean NN update VB requested VBN root ROOT update dep update requested return NN this DT need NN update VBP check has ANTONYM ANTONYM check return ANTONYM ANTONYM has return ANTONYM ANTONYM true false ANTONYM ANTONYM,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/Metadata.java,144
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME tasks max config INIT tasks max EXPR tasks max public NN static JJ final JJ string NN tasks NNS max VBP config NN root ROOT max nsubj max tasks dobj max config tasks NNS max VBP root ROOT max nsubj max tasks,0,N/A,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectorConfig.java,75
DECL STMT TYPE final set string SPECIFIER final NAME set string NAME set ARGUMENT LIST ARGUMENT NAME string NAME deleted topic INIT new hash set EXPR new hash set CALL hash set NAME hash set NAME hash set ARGUMENT LIST ARGUMENT LIST final JJ set NN string NN deleted VBN topic NN root ROOT topic amod topic deleted new JJ hash JJ set NN root ROOT set amod set hash,1,D1,kafka/streams/src/test/java/org/apache/kafka/streams/integration/utils/EmbeddedKafkaCluster.java,288
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE producer byte byte NAME producer byte byte NAME producer ARGUMENT LIST ARGUMENT NAME byte NAME byte INDEX ARGUMENT NAME byte NAME byte INDEX NAME get kafka producer PARAMETER LIST properties props PARAMETER properties props TYPE properties NAME properties NAME props BLOCK RETURN return mock producer EXPR mock producer NAME mock producer override NN protected VBN producer NN byte NN byte NN get VB kafka FW producer NN root ROOT get compound producer kafka dobj get producer properties NNS props NNS return NN mock JJ producer NN root ROOT producer amod producer mock,0,N/A,kafka/log4j-appender/src/test/java/org/apache/kafka/log4jappender/MockKafkaLog4jAppender.java,31
COMMENT shared content on rst and enriched rst FUNCTION SPECIFIER private TYPE void NAME void NAME get config key rst PARAMETER LIST config key key string builder b PARAMETER config key key TYPE config key NAME config key NAME key PARAMETER string builder b TYPE string builder NAME string builder NAME b BLOCK EXPR b append append key name append append n CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR CALL append key name NAME append ARGUMENT LIST ARGUMENT EXPR key name NAME key name NAME key NAME name CALL append NAME append ARGUMENT LIST ARGUMENT EXPR CALL append n NAME append ARGUMENT LIST ARGUMENT EXPR n FOR for string doc line key documentation split n if doc line length continue b append append doc line append n n CONTROL string doc line key documentation split n INIT string doc line key documentation split n TYPE string NAME string NAME doc line RANGE key documentation split n EXPR key documentation split n CALL key documentation split n NAME key documentation split NAME key NAME documentation NAME split ARGUMENT LIST ARGUMENT EXPR n BLOCK IF if doc line length continue CONDITION doc line length EXPR doc line length CALL doc line length NAME doc line length NAME doc line NAME length ARGUMENT LIST THEN continue BLOCK CONTINUE continue EXPR b append append doc line append n n CALL b append NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR CALL append doc line NAME append ARGUMENT LIST ARGUMENT EXPR doc line NAME doc line CALL append n n NAME append ARGUMENT LIST ARGUMENT EXPR n n EXPR b append type append get config value key type append n CALL b append type NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR type CALL append get config value key type NAME append ARGUMENT LIST ARGUMENT EXPR get config value key type CALL get config value key type NAME get config value ARGUMENT LIST ARGUMENT EXPR key NAME key ARGUMENT EXPR type CALL append n NAME append ARGUMENT LIST ARGUMENT EXPR n IF if key has default b append default append get config value key default append n CONDITION key has default EXPR key has default CALL key has default NAME key has default NAME key NAME has default ARGUMENT LIST THEN b append default append get config value key default append n BLOCK EXPR b append default append get config value key default append n CALL b append default NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR default CALL append get config value key default NAME append ARGUMENT LIST ARGUMENT EXPR get config value key default CALL get config value key default NAME get config value ARGUMENT LIST ARGUMENT EXPR key NAME key ARGUMENT EXPR default CALL append n NAME append ARGUMENT LIST ARGUMENT EXPR n IF if key validator null b append valid values append get config value key valid values append n CONDITION key validator null EXPR key validator null NAME key validator NAME key NAME validator THEN b append valid values append get config value key valid values append n BLOCK EXPR b append valid values append get config value key valid values append n CALL b append valid values NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR valid values CALL append get config value key valid values NAME append ARGUMENT LIST ARGUMENT EXPR get config value key valid values CALL get config value key valid values NAME get config value ARGUMENT LIST ARGUMENT EXPR key NAME key ARGUMENT EXPR valid values CALL append n NAME append ARGUMENT LIST ARGUMENT EXPR n EXPR b append importance append get config value key importance append n CALL b append importance NAME b append NAME b NAME append ARGUMENT LIST ARGUMENT EXPR importance CALL append get config value key importance NAME append ARGUMENT LIST ARGUMENT EXPR get config value key importance CALL get config value key importance NAME get config value ARGUMENT LIST ARGUMENT EXPR key NAME key ARGUMENT EXPR importance CALL append n NAME append ARGUMENT LIST ARGUMENT EXPR n shared content on rst and enriched rst root ROOT content amod content shared case rst on nmod on content rst cc rst and amod rst enriched nmod on content rst conj and rst rst private JJ void NN get VB config NN key JJ rst NN root ROOT get compound rst config amod rst key dobj get rst config NN key NN root ROOT key compound key config key NN string NN builder NN root ROOT builder compound builder string b NN b NN append IN root ROOT b dep b append append IN key JJ name NN root ROOT name amod name key append IN append IN n NN for IN string NN doc NN line NN root ROOT line compound line doc key JJ documentation NN split NN root ROOT split amod split key compound split documentation n NN if IN doc NN line NN length NN root ROOT length compound length doc compound length line continue VB b NN append IN root ROOT b dep b append append IN doc NN line NN root ROOT line compound line doc append IN n NN n NN b NN append IN root ROOT b dep b append type NN append IN get VB config NN value NN root ROOT get compound value config dobj get value key NN type NN append IN n NN if IN key NN has VBZ default NN root ROOT has nsubj has key dobj has default b NN append IN root ROOT b dep b append default NN append IN get VB config NN value NN root ROOT get compound value config dobj get value key NN default NN append IN n NN if IN key JJ validator NN root ROOT validator amod validator key null JJ b NN append IN root ROOT b dep b append valid JJ values NNS append IN get VB config NN value NN root ROOT get compound value config dobj get value key NN valid JJ values NNS append IN n NN b NN append IN root ROOT b dep b append importance NN append IN get VB config NN value NN root ROOT get compound value config dobj get value key NN importance NN append IN n NN,1,B3,kafka/clients/src/main/java/org/apache/kafka/common/config/ConfigDef.java,1087
DECL STMT SPECIFIER private TYPE final long SPECIFIER final NAME long NAME connections max idle nanos private JJ final JJ long RB connections NNS max VBP idle JJ nanos NNS root ROOT max nsubj max connections amod nanos idle dobj max nanos,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/network/Selector.java,869
COMMENT connect format any types should be accepted here DECL STMT SPECIFIER private SPECIFIER static TYPE final map string integer SPECIFIER final NAME map string integer NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME integer NAME offset value INIT collections singleton map key EXPR collections singleton map key CALL collections singleton map key NAME collections singleton map NAME collections NAME singleton map ARGUMENT LIST ARGUMENT EXPR key ARGUMENT EXPR connect format any types should be accepted here root ROOT accepted csubjpass accepted connect compound types format det types any dobj connect types aux accepted should auxpass accepted be advmod accepted here private JJ static JJ final JJ map NN string NN integer NN offset VBN value NN root ROOT value amod value offset collections NNS singleton JJ map NN root ROOT map compound map collections amod map singleton key NN be map ANTONYM ANTONYM,1,D1,kafka/connect/runtime/src/test/java/org/apache/kafka/connect/storage/OffsetStorageWriterTest.java,52
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME default num segments INIT EXPR private JJ static JJ final JJ int NN default NN num NN segments NNS root ROOT segments compound segments default compound segments num,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/kstream/Windows.java,39
COMMENT set to true if the request should be validated without creating the topic FUNCTION SPECIFIER public TYPE create topics options NAME create topics options NAME validate only PARAMETER LIST boolean validate only PARAMETER boolean validate only TYPE boolean NAME boolean NAME validate only BLOCK EXPR this validate only validate only NAME this validate only NAME this NAME validate only NAME validate only RETURN return this EXPR this NAME this set to true if the request should be validated without creating the topic root ROOT set case true to nmod to set true mark validated if det request the nsubjpass validated request aux validated should auxpass validated be advcl if set validated mark creating without advcl without validated creating det topic the dobj creating topic public NN create VB topics NNS options NNS root ROOT create compound options topics dobj create options validate VB only RB root ROOT validate advmod validate only boolean NN validate VB only RB root ROOT validate advmod validate only this DT validate NN only RB validate VB only RB root ROOT validate advmod validate only return NN this DT,1,B1,kafka/clients/src/main/java/org/apache/kafka/clients/admin/CreateTopicsOptions.java,54
FUNCTION SPECIFIER public TYPE int NAME int NAME get retries PARAMETER LIST BLOCK RETURN return retries EXPR retries NAME retries public NN int NN get VB retries NNS root ROOT get dobj get retries return NN retries NNS,1,B6,kafka/log4j-appender/src/main/java/org/apache/kafka/log4jappender/KafkaLog4jAppender.java,95
COMMENT the size of the serialized uncompressed key in bytes if key is null the returned size is FUNCTION SPECIFIER public TYPE int NAME int NAME serialized key size PARAMETER LIST BLOCK RETURN return this serialized key size EXPR this serialized key size NAME this serialized key size NAME this NAME serialized key size the size of the serialized uncompressed key in bytes if key is null the returned size root ROOT size det size the case key of det key the amod key serialized amod key uncompressed nmod of size key case bytes in nmod in size bytes mark null if nsubj null key cop null is dep size null det size the amod size returned dobj null size the size of the serialized uncompressed key in bytes if key is null the returned size root ROOT size det size the case key of det key the amod key serialized amod key uncompressed nmod of size key case bytes in nmod in size bytes mark null if nsubj null key cop null is dep size null det size the amod size returned dobj null size is public NN int NN serialized VBN key JJ size NN root ROOT serialized amod size key dobj serialized size return NN this DT serialized VBD key JJ size NN,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerRecord.java,216
COMMENT code request timeout ms code DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME security protocol config INIT common client configs security protocol config EXPR common client configs security protocol config NAME common client configs security protocol config NAME common client configs NAME security protocol config code request timeout ms code root ROOT ms compound timeout code compound timeout request nsubj ms timeout dobj ms code public NN static JJ final JJ string NN security NN protocol NN config NN root ROOT config compound config security compound config protocol common JJ client NN configs NNS security NN root ROOT security amod security common compound security client compound security configs protocol NN config NN root ROOT config compound config protocol,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/admin/AdminClientConfig.java,96
COMMENT default values for older versions where a request level limit did not exist DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME max bytes default values for older versions where a request level limit did not exist root ROOT values compound values default case versions for amod versions older nmod for values versions advmod exist where det limit a compound limit request compound limit level nsubj exist limit aux exist did neg exist not acl relcl versions exist private JJ final JJ int NN max NN bytes NNS root ROOT bytes compound bytes max limit did ANTONYM ANTONYM,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/requests/FetchRequest.java,58
COMMENT code application id DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME application id config INIT application id EXPR application id code application id root ROOT id compound id code compound id application public NN static JJ final JJ string NN application NN id VBD config NN root ROOT id nsubj id application dobj id config application NN id NN root ROOT id compound id application,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,119
COMMENT code batch size code DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME batch size config INIT batch size EXPR batch size code batch size code root ROOT code compound code code compound code batch compound code size public NN static JJ final JJ string NN batch NN size NN config NN root ROOT config compound config batch compound config size batch NN size NN root ROOT size compound size batch,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java,58
DECL STMT SPECIFIER private TYPE subscription state NAME subscription state NAME subscriptions INIT new subscription state offset reset strategy earliest EXPR new subscription state offset reset strategy earliest CALL subscription state offset reset strategy earliest NAME subscription state ARGUMENT LIST ARGUMENT EXPR offset reset strategy earliest NAME offset reset strategy earliest NAME offset reset strategy NAME earliest private JJ subscription NN state NN root ROOT state compound state subscription subscriptions NNS new JJ subscription NN state NN root ROOT state compound state subscription offset VBN reset NN strategy NN earliest JJS root ROOT strategy amod strategy offset compound strategy reset dep strategy earliest,1,E1,kafka/clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java,129
DECL STMT SPECIFIER private SPECIFIER static TYPE final byte buffer SPECIFIER final NAME byte buffer NAME tp key INIT buffer tp key EXPR buffer tp key CALL buffer tp key NAME buffer ARGUMENT LIST ARGUMENT EXPR tp key private JJ static JJ final JJ byte NN buffer NN root ROOT buffer compound buffer byte tp NN key NN root ROOT key compound key tp buffer NN tp NN key NN root ROOT key compound key tp,1,D1,kafka/connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaOffsetBackingStoreTest.java,94
DECL STMT SPECIFIER private TYPE final list node SPECIFIER final NAME list node NAME list ARGUMENT LIST ARGUMENT NAME node NAME isr private JJ final JJ list NN node NN isr NN,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/TopicPartitionInfo.java,32
COMMENT code group id code DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME group id config INIT group id EXPR group id code group id code root ROOT id compound group code nsubj id group dobj id code public NN static JJ final JJ string NN group NN id VBD config NN root ROOT id nsubj id group dobj id config group NN id NN root ROOT id compound id group,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java,52
DECL STMT TYPE final streams metrics impl SPECIFIER final NAME streams metrics impl NAME metrics final JJ streams NNS metrics NNS impl VBP root ROOT impl compound metrics streams nsubj impl metrics metrics NNS,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/state/internals/NamedCache.java,357
COMMENT set to true if the request should be validated without altering the configs FUNCTION SPECIFIER public TYPE alter configs options NAME alter configs options NAME validate only PARAMETER LIST boolean validate only PARAMETER boolean validate only TYPE boolean NAME boolean NAME validate only BLOCK EXPR this validate only validate only NAME this validate only NAME this NAME validate only NAME validate only RETURN return this EXPR this NAME this set to true if the request should be validated without altering the configs root ROOT set case true to nmod to set true mark validated if det request the nsubjpass validated request aux validated should auxpass validated be advcl if set validated mark altering without advcl without validated altering det configs the dobj altering configs public NN alter VB configs NNS options NNS root ROOT alter compound options configs dobj alter options validate VB only RB root ROOT validate advmod validate only boolean NN validate VB only RB root ROOT validate advmod validate only this DT validate NN only RB validate VB only RB root ROOT validate advmod validate only return NN this DT,1,B1,kafka/clients/src/main/java/org/apache/kafka/clients/admin/AlterConfigsOptions.java,62
COMMENT offsets for leader epoch api DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME txn offset commit request INIT txn offset commit request v EXPR txn offset commit request v BLOCK EXPR txn offset commit request v NAME txn offset commit request v offsets for leader epoch api root ROOT offsets case epoch for compound epoch leader nmod for offsets epoch dep offsets api public NN static JJ final JJ schema NN txn NN offset VBD commit VB request NN root ROOT offset nsubj offset txn ccomp offset commit dobj commit request txn NN offset VBD commit VB request NN v LS root ROOT offset nsubj offset txn ccomp offset commit dobj commit request dep offset v,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,1564
FUNCTION SPECIFIER synchronized TYPE void NAME void NAME transition to fatal error PARAMETER LIST runtime exception exception PARAMETER runtime exception exception TYPE runtime exception NAME runtime exception NAME exception BLOCK EXPR transition to state fatal error exception CALL transition to state fatal error exception NAME transition to ARGUMENT LIST ARGUMENT EXPR state fatal error NAME state fatal error NAME state NAME fatal error ARGUMENT EXPR exception NAME exception synchronized VBN void NN transition NN to TO fatal JJ error NN root ROOT transition case error to amod error fatal nmod to transition error runtime NN exception NN root ROOT exception compound exception runtime exception NN transition NN to TO root ROOT transition dep transition to state NN fatal JJ root ROOT fatal compound fatal state error NN exception NN,1,B5,kafka/clients/src/main/java/org/apache/kafka/clients/producer/internals/TransactionManager.java,304
DECL STMT SPECIFIER private TYPE rocks db segmented bytes store NAME rocks db segmented bytes store NAME underlying private JJ rocks NNS db VBP segmented JJ bytes NNS store NN root ROOT db nsubj db rocks amod store segmented compound store bytes dobj db store underlying VBG,0,N/A,kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CachingWindowStoreTest.java,57
COMMENT is to avoid invoking them while holding this object s monitor which can open the door for deadlocks DECL STMT SPECIFIER private TYPE final concurrent linked queue request future completion handler SPECIFIER final NAME concurrent linked queue request future completion handler NAME concurrent linked queue ARGUMENT LIST ARGUMENT NAME request future completion handler NAME pending completion INIT new concurrent linked queue EXPR new concurrent linked queue CALL concurrent linked queue NAME concurrent linked queue NAME concurrent linked queue ARGUMENT LIST ARGUMENT LIST is to avoid invoking them while holding this object s monitor which can open the door for deadlocks root ROOT is mark avoid to xcomp is avoid xcomp avoid invoking dobj invoking them mark holding while advcl while avoid holding det object this nsubj monitor object compound monitor s xcomp holding monitor nsubj open monitor ref monitor which aux open can acl relcl monitor open det door the dobj open door case deadlocks for nmod for door deadlocks private JJ final JJ concurrent JJ linked VBN queue NN root ROOT queue amod queue concurrent amod queue linked request NN future NN completion NN handler NN root ROOT handler compound handler request compound handler future compound handler completion pending VBG completion NN root ROOT completion case completion pending new JJ concurrent JJ linked VBN queue NN root ROOT queue amod queue concurrent amod queue linked holding open ANTONYM ANTONYM open new ANTONYM ANTONYM open private ANTONYM ANTONYM,1,D1,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.java,68
COMMENT v is not supported as it would require changes to the request header not to include client id DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME controlled shutdown request INIT null controlled shutdown request v EXPR null controlled shutdown request v BLOCK EXPR null EXPR controlled shutdown request v NAME controlled shutdown request v v is not supported as it would require changes to the request header not to include client id root ROOT supported nsubjpass supported v auxpass supported is neg supported not mark require as nsubj require it aux require would advcl as supported require dobj require changes case header to det header the compound header request nmod to changes header neg include not mark include to acl to changes include compound id client dobj include id public NN static JJ final JJ schema NN controlled JJ shutdown NN request NN root ROOT request amod request controlled compound request shutdown null JJ controlled JJ shutdown NN request NN v LS root ROOT v amod request controlled compound request shutdown nsubj v request require controlled ANTONYM ANTONYM require request ANTONYM ANTONYM supported controlled ANTONYM ANTONYM,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,886
DECL STMT SPECIFIER private TYPE final boolean SPECIFIER final NAME boolean NAME delete partitions private JJ final JJ boolean NN delete VB partitions NNS root ROOT delete dobj delete partitions,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/requests/StopReplicaRequest.java,77
COMMENT ensure our metadata is fresh if an update is expected this will block until it has completed FUNCTION SPECIFIER public TYPE void NAME void NAME ensure fresh metadata PARAMETER LIST BLOCK IF if this metadata update requested this metadata time to next update time milliseconds await metadata update CONDITION this metadata update requested this metadata time to next update time milliseconds EXPR this metadata update requested this metadata time to next update time milliseconds CALL this metadata update requested NAME this metadata update requested NAME this NAME metadata NAME update requested ARGUMENT LIST CALL this metadata time to next update time milliseconds NAME this metadata time to next update NAME this NAME metadata NAME time to next update ARGUMENT LIST ARGUMENT EXPR time milliseconds CALL time milliseconds NAME time milliseconds NAME time NAME milliseconds ARGUMENT LIST THEN await metadata update BLOCK EXPR await metadata update CALL await metadata update NAME await metadata update ARGUMENT LIST ensure our metadata is fresh if an update is expected this will block root ROOT ensure nmod poss metadata our nsubj fresh metadata cop fresh is ccomp ensure fresh mark expected if det update an nsubjpass expected update auxpass expected is advcl if fresh expected nsubj block this aux block will ccomp expected block until it has completed root ROOT completed mark completed until nsubj completed it aux completed has public NN void NN ensure VB fresh JJ metadata NN root ROOT ensure amod metadata fresh dobj ensure metadata if IN this DT metadata NN update VBP requested VBN this DT metadata NN time NN to TO next JJ update VBP time NN milliseconds NNS root ROOT milliseconds compound milliseconds time await VB metadata NN update VBP root ROOT update csubj update await dobj await metadata expected has ANTONYM ANTONYM,1,B2,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.java,143
COMMENT replica api DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME stop replica request INIT stop replica request v EXPR stop replica request v BLOCK EXPR stop replica request v NAME stop replica request v replica api root ROOT api compound api replica public NN static JJ final JJ schema NN stop VB replica NN request NN root ROOT stop compound request replica dobj stop request stop VB replica NN request NN v LS root ROOT stop compound request replica dobj stop request dep stop v,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,1083
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME transforms config INIT transforms EXPR transforms public NN static JJ final JJ string NN transforms VBZ config NN root ROOT transforms dobj transforms config transforms VBZ,0,N/A,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectorConfig.java,82
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE consumer byte byte NAME consumer byte byte NAME consumer ARGUMENT LIST ARGUMENT NAME byte NAME byte INDEX ARGUMENT NAME byte NAME byte INDEX NAME get consumer PARAMETER LIST map string object config PARAMETER map string object config TYPE map string object NAME map string object NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME object NAME config BLOCK RETURN return new kafka consumer config new byte array deserializer new byte array deserializer EXPR new kafka consumer config new byte array deserializer new byte array deserializer CALL kafka consumer config new byte array deserializer new byte array deserializer NAME kafka consumer NAME kafka consumer ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR config NAME config ARGUMENT EXPR new byte array deserializer CALL byte array deserializer NAME byte array deserializer ARGUMENT LIST ARGUMENT EXPR new byte array deserializer CALL byte array deserializer NAME byte array deserializer ARGUMENT LIST override NN public NN consumer NN byte NN byte NN get VB consumer NN root ROOT get dobj get consumer map NN string NN object NN config NN return NN new JJ kafka FW consumer NN root ROOT consumer compound consumer kafka config NN new JJ byte NN array NN deserializer NN root ROOT deserializer compound deserializer byte compound deserializer array new JJ byte NN array NN deserializer NN root ROOT deserializer compound deserializer byte compound deserializer array,1,A4,kafka/streams/src/main/java/org/apache/kafka/streams/processor/internals/DefaultKafkaClientSupplier.java,35
COMMENT note do not change either config names as these are part of the public api and change will break user code DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME ssl enabled protocols config INIT ssl enabled protocols EXPR ssl enabled protocols note do not change either config names as these are part of the public api and change will break user code root ROOT change nsubj change note aux change do neg change not cc preconj names either compound names config dobj change names mark part as nsubj part these cop part are csubj break part case api of det api the amod api public nmod of part api cc api and nmod of part change conj and api change aux break will parataxis change break compound code user dobj break code public NN static JJ final JJ string NN ssl NN enabled VBD protocols NNS config IN root ROOT enabled nsubj enabled ssl dobj enabled protocols dep enabled config ssl NN enabled VBD protocols NNS root ROOT enabled nsubj enabled ssl dobj enabled protocols break do ANTONYM ANTONYM break note ANTONYM ANTONYM do names ANTONYM ANTONYM names are ANTONYM ANTONYM names break ANTONYM ANTONYM note names ANTONYM ANTONYM,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/config/SslConfigs.java,47
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME transforms display INIT transforms EXPR transforms private JJ static JJ final JJ string NN transforms VBZ display NN root ROOT transforms dobj transforms display transforms VBZ,1,D2,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectorConfig.java,84
DECL STMT SPECIFIER private TYPE final static int SPECIFIER final SPECIFIER static NAME int NAME num topic partitions INIT EXPR private JJ final JJ static JJ int NN num NN topic NN partitions NNS root ROOT partitions compound partitions num compound partitions topic,0,N/A,kafka/streams/src/test/java/org/apache/kafka/streams/integration/EosIntegrationTest.java,85
COMMENT code state dir DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME state dir config INIT state dir EXPR state dir code state dir root ROOT dir compound dir code compound dir state public NN static JJ final JJ string NN state NN dir NN config NN root ROOT config compound config state compound config dir state NN dir NN root ROOT dir compound dir state,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,238
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME checkpoint PARAMETER LIST final map topic partition long offsets PARAMETER final map topic partition long offsets TYPE final map topic partition long SPECIFIER final NAME map topic partition long NAME map ARGUMENT LIST ARGUMENT NAME topic partition ARGUMENT NAME long NAME offsets BLOCK EXPR checkpointable offsets put all offsets CALL checkpointable offsets put all offsets NAME checkpointable offsets put all NAME checkpointable offsets NAME put all ARGUMENT LIST ARGUMENT EXPR offsets NAME offsets IF if checkpointable offsets is empty try checkpoint write checkpointable offsets catch io exception e log warn failed to write offsets checkpoint for global stores e CONDITION checkpointable offsets is empty EXPR checkpointable offsets is empty CALL checkpointable offsets is empty NAME checkpointable offsets is empty NAME checkpointable offsets NAME is empty ARGUMENT LIST THEN try checkpoint write checkpointable offsets catch io exception e log warn failed to write offsets checkpoint for global stores e BLOCK TRY try checkpoint write checkpointable offsets catch io exception e log warn failed to write offsets checkpoint for global stores e BLOCK EXPR checkpoint write checkpointable offsets CALL checkpoint write checkpointable offsets NAME checkpoint write NAME checkpoint NAME write ARGUMENT LIST ARGUMENT EXPR checkpointable offsets NAME checkpointable offsets CATCH catch io exception e log warn failed to write offsets checkpoint for global stores e PARAMETER LIST io exception e PARAMETER io exception e TYPE io exception NAME io exception NAME e BLOCK EXPR log warn failed to write offsets checkpoint for global stores e CALL log warn failed to write offsets checkpoint for global stores e NAME log warn NAME log NAME warn ARGUMENT LIST ARGUMENT EXPR failed to write offsets checkpoint for global stores ARGUMENT EXPR e NAME e override NN public NN void NN checkpoint NN final JJ map NN topic NN partition NN root ROOT partition compound partition topic long RB offsets NNS checkpointable JJ offsets NNS put VBD all DT root ROOT put amod offsets checkpointable nsubj put offsets dobj put all offsets NNS if IN checkpointable JJ offsets NNS is VBZ empty JJ root ROOT empty amod offsets checkpointable nsubj empty offsets cop empty is try VB checkpoint NN write VB root ROOT write nsubj write checkpoint checkpointable JJ offsets NNS root ROOT offsets amod offsets checkpointable catch NN io NN exception NN root ROOT exception compound exception io e SYM log NN warn VBP root ROOT warn nsubj warn log failed VBD to TO write VB offsets NNS checkpoint NN for IN global JJ stores NNS e SYM,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImpl.java,230
COMMENT code max poll interval ms code DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME max poll interval ms config INIT max poll interval ms EXPR max poll interval ms code max poll interval ms code root ROOT ms compound interval code compound interval max compound interval poll nsubj ms interval dobj ms code public NN static JJ final JJ string NN max NN poll NN interval NN ms NNS config VBP root ROOT config compound ms max compound ms poll compound ms interval nsubj config ms max NN poll NN interval NN ms NNS root ROOT ms compound ms max compound ms poll compound ms interval,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java,60
DECL STMT SPECIFIER public TYPE final int SPECIFIER final NAME int NAME max bytes public NN final JJ int NN max NN bytes NNS root ROOT bytes compound bytes max,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/requests/FetchRequest.java,65
DECL STMT SPECIFIER private TYPE int NAME int NAME max bytes INIT default response max bytes EXPR default response max bytes NAME default response max bytes private JJ int NN max NN bytes NNS root ROOT bytes compound bytes max default NN response NN max NN bytes NNS root ROOT bytes compound bytes default compound bytes response compound bytes max,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/requests/FetchRequest.java,108
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME num segments INIT EXPR private JJ final JJ int NN num NN segments NNS root ROOT segments compound segments num,0,N/A,kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBWindowStoreTest.java,66
DECL STMT SPECIFIER private SPECIFIER static TYPE final byte buffer SPECIFIER final NAME byte buffer NAME tp key INIT buffer tp key EXPR buffer tp key CALL buffer tp key NAME buffer ARGUMENT LIST ARGUMENT EXPR tp key private JJ static JJ final JJ byte NN buffer NN root ROOT buffer compound buffer byte tp NN key NN root ROOT key compound key tp buffer NN tp NN key NN root ROOT key compound key tp,1,D1,kafka/connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaOffsetBackingStoreTest.java,94
COMMENT check whether there are any batches which haven t been drained FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME has undrained PARAMETER LIST BLOCK FOR for map entry topic partition deque producer batch entry this batches entry set deque producer batch deque entry get value synchronized deque if deque is empty return true CONTROL map entry topic partition deque producer batch entry this batches entry set INIT map entry topic partition deque producer batch entry this batches entry set TYPE map entry topic partition deque producer batch NAME map entry topic partition deque producer batch NAME map NAME entry topic partition deque producer batch NAME entry ARGUMENT LIST ARGUMENT NAME topic partition ARGUMENT NAME deque producer batch NAME deque ARGUMENT LIST ARGUMENT NAME producer batch NAME entry RANGE this batches entry set EXPR this batches entry set CALL this batches entry set NAME this batches entry set NAME this NAME batches NAME entry set ARGUMENT LIST BLOCK DECL STMT TYPE deque producer batch NAME deque producer batch NAME deque ARGUMENT LIST ARGUMENT NAME producer batch NAME deque INIT entry get value EXPR entry get value CALL entry get value NAME entry get value NAME entry NAME get value ARGUMENT LIST SYNCHRONIZED synchronized deque if deque is empty return true INIT deque EXPR deque NAME deque BLOCK IF if deque is empty return true CONDITION deque is empty EXPR deque is empty CALL deque is empty NAME deque is empty NAME deque NAME is empty ARGUMENT LIST THEN return true BLOCK RETURN return true EXPR true RETURN return false EXPR false check whether there are any batches which haven t been drained root ROOT check mark are whether expl are there ccomp check are det batches any nsubj are batches dobj drained batches ref batches which compound t haven nsubjpass drained t auxpass drained been acl relcl batches drained public NN boolean NN has VBZ undrained VBN root ROOT undrained aux undrained has for IN map NN entry NN root ROOT entry compound entry map topic NN partition NN root ROOT partition compound partition topic deque NN producer NN batch NN root ROOT batch compound batch producer entry NN this DT batches NNS entry NN set NN deque NN producer NN batch NN root ROOT batch compound batch producer deque NN entry NN get VB value NN root ROOT get nsubj get entry dobj get value synchronized VBN deque NN if IN deque NN is VBZ empty JJ root ROOT empty nsubj empty deque cop empty is return NN true JJ return NN false JJ,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/producer/internals/RecordAccumulator.java,404
COMMENT the number of acknowledgements to request from the server DECL STMT SPECIFIER private TYPE final short SPECIFIER final NAME short NAME acks the number of acknowledgements to request from the server root ROOT number det number the case acknowledgements of nmod of number acknowledgements case request to nmod to number request case server from det server the nmod from request server private JJ final JJ short RB acks NNS,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java,95
DECL STMT SPECIFIER private TYPE final class extends t SPECIFIER final NAME class extends t NAME class ARGUMENT LIST ARGUMENT NAME EXTENDS extends t NAME t NAME klass private JJ final JJ class NN extends VBZ t NN klass NN,0,N/A,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginDesc.java,25
COMMENT iq may access this map DECL STMT SPECIFIER private TYPE map topic partition t NAME map topic partition t NAME map ARGUMENT LIST ARGUMENT NAME topic partition ARGUMENT NAME t NAME running by partition INIT new hash map EXPR new hash map CALL hash map NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST iq may access this map root ROOT access nsubj access iq aux access may det map this dobj access map private JJ map NN topic NN partition NN root ROOT partition compound partition topic t NN running VBG by IN partition NN root ROOT running case partition by nmod by running partition new JJ hash VB map NN root ROOT hash dobj hash map,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/processor/internals/AssignedTasks.java,54
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME num iterations private JJ final JJ int NN num NN iterations NNS root ROOT iterations compound iterations num,0,N/A,kafka/streams/src/test/java/org/apache/kafka/streams/integration/QueryableStateIntegrationTest.java,962
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE producer byte byte NAME producer byte byte NAME producer ARGUMENT LIST ARGUMENT NAME byte NAME byte INDEX ARGUMENT NAME byte NAME byte INDEX NAME get producer PARAMETER LIST map string object config PARAMETER map string object config TYPE map string object NAME map string object NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME object NAME config BLOCK RETURN return new kafka producer config new byte array serializer new byte array serializer EXPR new kafka producer config new byte array serializer new byte array serializer CALL kafka producer config new byte array serializer new byte array serializer NAME kafka producer NAME kafka producer ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR config NAME config ARGUMENT EXPR new byte array serializer CALL byte array serializer NAME byte array serializer ARGUMENT LIST ARGUMENT EXPR new byte array serializer CALL byte array serializer NAME byte array serializer ARGUMENT LIST override NN public NN producer NN byte NN byte NN get VB producer NN root ROOT get dobj get producer map NN string NN object NN config NN return NN new JJ kafka FW producer NN root ROOT producer compound producer kafka config NN new JJ byte NN array NN serializer NN root ROOT serializer compound serializer byte compound serializer array new JJ byte NN array NN serializer NN root ROOT serializer compound serializer byte compound serializer array,1,A4,kafka/streams/src/main/java/org/apache/kafka/streams/processor/internals/DefaultKafkaClientSupplier.java,30
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME max pairs private JJ final JJ int NN max NN pairs NNS root ROOT pairs compound pairs max,1,E1,kafka/streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor.java,253
DECL STMT SPECIFIER private SPECIFIER static TYPE final byte buffer SPECIFIER final NAME byte buffer NAME tp value INIT buffer val EXPR buffer val CALL buffer val NAME buffer ARGUMENT LIST ARGUMENT EXPR val private JJ static JJ final JJ byte NN buffer NN root ROOT buffer compound buffer byte tp NN value NN root ROOT value compound value tp buffer NN val NN,1,D1,kafka/connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaOffsetBackingStoreTest.java,96
DECL STMT SPECIFIER private TYPE final list string SPECIFIER final NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME expected output private JJ final JJ list NN string NN expected JJ output NN root ROOT output amod output expected,1,D1,kafka/streams/src/test/java/org/apache/kafka/streams/integration/KStreamRepartitionJoinTest.java,286
COMMENT code exclude internal topics code DECL STMT SPECIFIER public SPECIFIER static TYPE final boolean SPECIFIER final NAME boolean NAME default exclude internal topics INIT true EXPR true code exclude internal topics code root ROOT exclude nsubj exclude code amod topics internal dobj exclude topics dep exclude code public NN static JJ final JJ boolean NN default NN exclude VBP internal JJ topics NNS root ROOT exclude nsubj exclude default amod topics internal dobj exclude topics true JJ public internal ANTONYM ANTONYM,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java,232
COMMENT update metadata api DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME update metadata response INIT update metadata response v update metadata response v update metadata response v update metadata response v EXPR update metadata response v update metadata response v update metadata response v update metadata response v BLOCK EXPR update metadata response v NAME update metadata response v EXPR update metadata response v NAME update metadata response v EXPR update metadata response v NAME update metadata response v EXPR update metadata response v NAME update metadata response v update metadata api root ROOT update dobj update metadata dep update api public NN static JJ final JJ schema NN update VB metadata NN response NN root ROOT update compound response metadata dobj update response update VB metadata NN response NN v LS root ROOT update compound response metadata dobj update response dep update v update VB metadata NN response NN v LS root ROOT update compound response metadata dobj update response dep update v update VB metadata NN response NN v LS root ROOT update compound response metadata dobj update response dep update v update VB metadata NN response NN v LS root ROOT update compound response metadata dobj update response dep update v,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,1165
DECL STMT SPECIFIER private TYPE long NAME long NAME window bytes private JJ long RB window NN bytes NNS root ROOT bytes compound bytes window,1,E1,kafka/tools/src/main/java/org/apache/kafka/tools/ProducerPerformance.java,312
COMMENT code default value serde DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME default value serde class config INIT default value serde EXPR default value serde code default value serde root ROOT value compound value code compound value default dep value serde public NN static JJ final JJ string NN default NN value NN serde NN class NN config NN root ROOT config compound config default compound config value compound config serde compound config class default NN value NN serde NN,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
DECL STMT SPECIFIER private TYPE int NAME int NAME min bytes INIT EXPR private JJ int NN min NN bytes NNS root ROOT bytes compound bytes min,1,E1,kafka/clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java,116
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME iterations private JJ final JJ int NN iterations NNS,1,E1,kafka/clients/src/test/java/org/apache/kafka/clients/producer/internals/BufferPoolTest.java,349
DECL STMT SPECIFIER private TYPE final xx hash SPECIFIER final NAME xx hash NAME checksum private JJ final JJ xx NN hash VBP root ROOT hash nsubj hash xx checksum NN,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/record/KafkaLZ4BlockOutputStream.java,51
DECL STMT SPECIFIER private TYPE final static string SPECIFIER final SPECIFIER static NAME string NAME filters INIT filters EXPR filters private JJ final JJ static JJ string NN filters NNS filters NNS,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/requests/DeleteAclsRequest.java,34
COMMENT the list of topics the user has requested DECL STMT SPECIFIER private TYPE set string NAME set string NAME set ARGUMENT LIST ARGUMENT NAME string NAME subscription the list of topics the user has requested root ROOT list det list the case topics of nmod of list topics det user the nsubj requested user aux requested has acl relcl topics requested private JJ set NN string NN subscription NN,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java,71
FUNCTION SPECIFIER private TYPE properties NAME properties NAME set produce consume properties PARAMETER LIST final string client id PARAMETER final string client id TYPE final string SPECIFIER final NAME string NAME client id BLOCK DECL STMT TYPE properties NAME properties NAME props INIT new properties EXPR new properties CALL properties NAME properties ARGUMENT LIST EXPR props put producer config client id config client id CALL props put producer config client id config client id NAME props put NAME props NAME put ARGUMENT LIST ARGUMENT EXPR producer config client id config NAME producer config client id config NAME producer config NAME client id config ARGUMENT EXPR client id NAME client id EXPR props put producer config bootstrap servers config kafka CALL props put producer config bootstrap servers config kafka NAME props put NAME props NAME put ARGUMENT LIST ARGUMENT EXPR producer config bootstrap servers config NAME producer config bootstrap servers config NAME producer config NAME bootstrap servers config ARGUMENT EXPR kafka NAME kafka EXPR props put producer config key serializer class config integer serializer class CALL props put producer config key serializer class config integer serializer class NAME props put NAME props NAME put ARGUMENT LIST ARGUMENT EXPR producer config key serializer class config NAME producer config key serializer class config NAME producer config NAME key serializer class config ARGUMENT EXPR integer serializer class NAME integer serializer class NAME integer serializer NAME class EXPR props put producer config value serializer class config byte array serializer class CALL props put producer config value serializer class config byte array serializer class NAME props put NAME props NAME put ARGUMENT LIST ARGUMENT EXPR producer config value serializer class config NAME producer config value serializer class config NAME producer config NAME value serializer class config ARGUMENT EXPR byte array serializer class NAME byte array serializer class NAME byte array serializer NAME class COMMENT the socket buffer needs to be large especially when running in aws with COMMENT high latency if running locally the default is fine EXPR props put producer config send buffer config socket size bytes CALL props put producer config send buffer config socket size bytes NAME props put NAME props NAME put ARGUMENT LIST ARGUMENT EXPR producer config send buffer config NAME producer config send buffer config NAME producer config NAME send buffer config ARGUMENT EXPR socket size bytes NAME socket size bytes EXPR props put consumer config key deserializer class config integer deserializer class CALL props put consumer config key deserializer class config integer deserializer class NAME props put NAME props NAME put ARGUMENT LIST ARGUMENT EXPR consumer config key deserializer class config NAME consumer config key deserializer class config NAME consumer config NAME key deserializer class config ARGUMENT EXPR integer deserializer class NAME integer deserializer class NAME integer deserializer NAME class EXPR props put consumer config value deserializer class config byte array deserializer class CALL props put consumer config value deserializer class config byte array deserializer class NAME props put NAME props NAME put ARGUMENT LIST ARGUMENT EXPR consumer config value deserializer class config NAME consumer config value deserializer class config NAME consumer config NAME value deserializer class config ARGUMENT EXPR byte array deserializer class NAME byte array deserializer class NAME byte array deserializer NAME class EXPR props put consumer config enable auto commit config false CALL props put consumer config enable auto commit config false NAME props put NAME props NAME put ARGUMENT LIST ARGUMENT EXPR consumer config enable auto commit config NAME consumer config enable auto commit config NAME consumer config NAME enable auto commit config ARGUMENT EXPR false COMMENT the socket buffer needs to be large especially when running in aws with COMMENT high latency if running locally the default is fine EXPR props put consumer config receive buffer config socket size bytes CALL props put consumer config receive buffer config socket size bytes NAME props put NAME props NAME put ARGUMENT LIST ARGUMENT EXPR consumer config receive buffer config NAME consumer config receive buffer config NAME consumer config NAME receive buffer config ARGUMENT EXPR socket size bytes NAME socket size bytes EXPR props put consumer config max poll records config max poll records CALL props put consumer config max poll records config max poll records NAME props put NAME props NAME put ARGUMENT LIST ARGUMENT EXPR consumer config max poll records config NAME consumer config max poll records config NAME consumer config NAME max poll records config ARGUMENT EXPR max poll records NAME max poll records RETURN return props EXPR props NAME props private JJ properties NNS set VBN produce NN consume VBP properties NNS root ROOT consume amod produce set nsubj consume produce dobj consume properties final JJ string NN client NN id NN root ROOT id compound id client properties NNS props NNS new JJ properties NNS props NNS put VBD root ROOT put nsubj put props producer NN config NN client NN root ROOT client compound client producer compound client config id NN config NN root ROOT config compound config id client NN id NN root ROOT id compound id client props NNS put VBD root ROOT put nsubj put props producer NN config NN bootstrap NN root ROOT bootstrap compound bootstrap producer compound bootstrap config servers NNS config VBP root ROOT config nsubj config servers kafka FW props NNS put VBD root ROOT put nsubj put props producer NN config NN key NN root ROOT key compound key producer compound key config serializer NN class NN config NN root ROOT config compound config serializer compound config class integer NN serializer NN class NN props NNS put VBD root ROOT put nsubj put props producer NN config NN value NN root ROOT value compound value producer compound value config serializer NN class NN config NN root ROOT config compound config serializer compound config class byte NN array NN serializer NN class NN the socket buffer needs to be large especially when running in aws with root ROOT needs det buffer the compound buffer socket nsubj needs buffer nsubj xsubj large buffer mark large to cop large be xcomp needs large advmod running especially advmod running when advcl large running case aws in nmod in running aws nmod running with high latency if running locally the default is fine root ROOT latency amod latency high mark running if acl if latency running advmod fine locally det default the nsubj fine default cop fine is xcomp running fine high latency if running locally the default is fine root ROOT latency amod latency high mark running if acl if latency running advmod fine locally det default the nsubj fine default cop fine is xcomp running fine props NNS put VBD root ROOT put nsubj put props producer NN config NN send VBP root ROOT send compound config producer nsubj send config buffer NN config NN root ROOT config compound config buffer socket NN size NN bytes NNS root ROOT bytes compound bytes socket compound bytes size props NNS put VBD root ROOT put nsubj put props consumer NN config NN key NN root ROOT key compound key consumer compound key config deserializer NN class NN config NN root ROOT config compound config deserializer compound config class integer NN deserializer NN class NN props NNS put VBD root ROOT put nsubj put props consumer NN config NN value NN root ROOT value compound value consumer compound value config deserializer NN class NN config NN root ROOT config compound config deserializer compound config class byte NN array NN deserializer NN class NN props NNS put VBD root ROOT put nsubj put props consumer NN config NN enable VBP root ROOT enable compound config consumer nsubj enable config auto NN commit VB config NN root ROOT commit nsubj commit auto dobj commit config false JJ the socket buffer needs to be large especially when running in aws with root ROOT needs det buffer the compound buffer socket nsubj needs buffer nsubj xsubj large buffer mark large to cop large be xcomp needs large advmod running especially advmod running when advcl large running case aws in nmod in running aws nmod running with high latency if running locally the default is fine root ROOT latency amod latency high mark running if acl if latency running advmod fine locally det default the nsubj fine default cop fine is xcomp running fine high latency if running locally the default is fine root ROOT latency amod latency high mark running if acl if latency running advmod fine locally det default the nsubj fine default cop fine is xcomp running fine props NNS put VBD root ROOT put nsubj put props consumer NN config NN receive VBP root ROOT receive compound config consumer nsubj receive config buffer NN config NN root ROOT config compound config buffer socket NN size NN bytes NNS root ROOT bytes compound bytes socket compound bytes size props NNS put VBD root ROOT put nsubj put props consumer NN config NN max NN root ROOT max compound max consumer compound max config poll NN records NNS config VBP root ROOT config compound records poll nsubj config records max NN poll NN records NNS root ROOT records compound records max compound records poll return NN props NNS,1,A3,kafka/streams/src/test/java/org/apache/kafka/streams/perf/SimpleBenchmark.java,224
COMMENT a factory which creates timeout processors for the rpc thread DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME max retries a factory which creates timeout processors for the rpc thread root ROOT factory det factory a nsubj creates factory ref factory which acl relcl factory creates compound processors timeout dobj creates processors case thread for det thread the compound thread rpc nmod for processors thread private JJ final JJ int NN max NN retries NNS root ROOT retries compound retries max,1,E1,kafka/clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java,182
COMMENT list and sending it as user data to the leader during a rebalance DECL STMT SPECIFIER private TYPE list topic partition NAME list topic partition NAME list ARGUMENT LIST ARGUMENT NAME topic partition NAME member assignment INIT null EXPR null list and sending it as user data to the leader during a rebalance root ROOT list cc list and conj and list sending dobj sending it case data as compound data user nmod as sending data case leader to det leader the nmod to data leader case rebalance during det rebalance a nmod during sending rebalance private JJ list NN topic NN partition NN root ROOT partition compound partition topic member NN assignment NN root ROOT assignment compound assignment member null JJ,1,D1,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/StickyAssignor.java,189
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME min bytes private JJ final JJ int NN min NN bytes NNS root ROOT bytes compound bytes min,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/requests/FetchRequest.java,104
COMMENT todo these values should be configurable DECL STMT SPECIFIER private TYPE state serdes k v NAME state serdes k v NAME state serdes ARGUMENT LIST ARGUMENT NAME k ARGUMENT NAME v NAME serdes todo these values should be configurable root ROOT todo det values these nsubj configurable values aux configurable should cop configurable be acl relcl todo configurable private JJ state NN serdes NNS root ROOT serdes compound serdes state k NN v LS serdes NNS k v SYNONYM SYNONYM,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java,90
DECL STMT TYPE long NAME long NAME failed attempts long RB failed VBD attempts NNS root ROOT failed dobj failed attempts,1,E1,kafka/clients/src/main/java/org/apache/kafka/clients/ClusterConnectionStates.java,236
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME stream three partitions INIT EXPR private JJ static JJ final JJ int NN stream NN three CD partitions NNS root ROOT partitions compound partitions stream nummod partitions three,1,E1,kafka/streams/src/test/java/org/apache/kafka/streams/integration/QueryableStateIntegrationTest.java,90
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME configs key name INIT config entries EXPR config entries private JJ static JJ final JJ string NN configs NNS key JJ name NN root ROOT name compound name configs amod name key config NN entries NNS root ROOT entries compound entries config,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/requests/CreateTopicsRequest.java,46
COMMENT the size of the serialized uncompressed key in bytes if key is null the returned size is FUNCTION SPECIFIER public TYPE int NAME int NAME serialized key size PARAMETER LIST BLOCK RETURN return this serialized key size EXPR this serialized key size NAME this serialized key size NAME this NAME serialized key size the size of the serialized uncompressed key in bytes if key is null the returned size root ROOT size det size the case key of det key the amod key serialized amod key uncompressed nmod of size key case bytes in nmod in size bytes mark null if nsubj null key cop null is dep size null det size the amod size returned dobj null size the size of the serialized uncompressed key in bytes if key is null the returned size root ROOT size det size the case key of det key the amod key serialized amod key uncompressed nmod of size key case bytes in nmod in size bytes mark null if nsubj null key cop null is dep size null det size the amod size returned dobj null size is public NN int NN serialized VBN key JJ size NN root ROOT serialized amod size key dobj serialized size return NN this DT serialized VBD key JJ size NN,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerRecord.java,216
COMMENT of offset commit requests DECL STMT SPECIFIER private TYPE set string NAME set string NAME set ARGUMENT LIST ARGUMENT NAME string NAME joined subscription of offset commit requests root ROOT of dep of offset ccomp offset commit dobj commit requests private JJ set NN string NN joined VBD subscription NN root ROOT joined dobj joined subscription commit set ANTONYM ANTONYM,1,D1,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java,88
DECL STMT SPECIFIER private TYPE final deque completion SPECIFIER final NAME deque completion NAME deque ARGUMENT LIST ARGUMENT NAME completion NAME completions private JJ final JJ deque NN completion NN completions NNS,1,E1,kafka/clients/src/main/java/org/apache/kafka/clients/producer/MockProducer.java,58
COMMENT is used in the right place DECL STMT ANNOTATION mock NAME mock SPECIFIER private TYPE kafka producer byte byte NAME kafka producer byte byte NAME kafka producer ARGUMENT LIST ARGUMENT NAME byte NAME byte INDEX ARGUMENT NAME byte NAME byte INDEX NAME producer is used in the right place root ROOT used auxpass used is case place in det place the amod place right nmod in used place mock JJ private JJ kafka FW producer NN root ROOT producer compound producer kafka byte NN byte NN producer NN,0,N/A,kafka/connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerSourceTaskTest.java,91
COMMENT find coordinator api DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME find coordinator request INIT find coordinator request v find coordinator request v EXPR find coordinator request v find coordinator request v BLOCK EXPR find coordinator request v NAME find coordinator request v EXPR find coordinator request v NAME find coordinator request v find coordinator api root ROOT find dobj find coordinator dep find api public NN static JJ final JJ schema NN find VB coordinator NN request NN root ROOT find compound request coordinator dobj find request find VB coordinator NN request NN v LS root ROOT find compound request coordinator dobj find request dep find v find VB coordinator NN request NN v LS root ROOT find compound request coordinator dobj find request dep find v,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,867
DECL STMT SPECIFIER private SPECIFIER static TYPE final long SPECIFIER final NAME long NAME graceful shutdown timeout ms INIT EXPR private JJ static JJ final JJ long RB graceful JJ shutdown NN timeout NN ms NNS root ROOT ms amod ms graceful compound ms shutdown compound ms timeout,0,N/A,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/RestServer.java,71
DECL STMT SPECIFIER private TYPE byte NAME byte NAME byte INDEX NAME value INIT value get bytes EXPR value get bytes CALL get bytes NAME get bytes ARGUMENT LIST private JJ byte NN value NN value NN get VB bytes NNS root ROOT get dobj get bytes,1,D1,kafka/clients/src/test/java/org/apache/kafka/clients/producer/internals/RecordAccumulatorTest.java,84
COMMENT connect format any types should be accepted here DECL STMT SPECIFIER private SPECIFIER static TYPE final map string string SPECIFIER final NAME map string string NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME string NAME offset key INIT collections singleton map key key EXPR collections singleton map key key CALL collections singleton map key key NAME collections singleton map NAME collections NAME singleton map ARGUMENT LIST ARGUMENT EXPR key ARGUMENT EXPR key connect format any types should be accepted here root ROOT accepted csubjpass accepted connect compound types format det types any dobj connect types aux accepted should auxpass accepted be advmod accepted here private JJ static JJ final JJ map NN string NN string NN offset VBN key NN root ROOT key amod key offset collections NNS singleton JJ map NN root ROOT map compound map collections amod map singleton key NN key NN be map ANTONYM ANTONYM,1,D1,kafka/connect/runtime/src/test/java/org/apache/kafka/connect/storage/OffsetStorageWriterTest.java,51
COMMENT if on is true FUNCTION SPECIFIER public TYPE void NAME void NAME inject on acknowledgement error PARAMETER LIST boolean on PARAMETER boolean on TYPE boolean NAME boolean NAME on BLOCK EXPR throw exception on ack on NAME throw exception on ack NAME on if on is true root ROOT true mark true if mark true on cop true is public NN void NN inject VB on IN acknowledgement NN error NN root ROOT inject case error on compound error acknowledgement nmod on inject error boolean NN on IN throw VB exception NN on IN ack NN root ROOT throw dobj throw exception case ack on nmod on throw ack on IN,0,N/A,kafka/clients/src/test/java/org/apache/kafka/clients/producer/internals/ProducerInterceptorsTest.java,92
COMMENT code user endpoint DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME application server config INIT application server EXPR application server code user endpoint root ROOT endpoint compound endpoint code compound endpoint user public NN static JJ final JJ string NN application NN server NN config NN root ROOT config compound config application compound config server application NN server NN root ROOT server compound server application,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,123
DECL STMT SPECIFIER private TYPE final static int SPECIFIER final SPECIFIER static NAME int NAME num brokers INIT EXPR private JJ final JJ static JJ int NN num NN brokers NNS root ROOT brokers compound brokers num,0,N/A,kafka/streams/src/test/java/org/apache/kafka/streams/integration/KTableKTableJoinIntegrationTest.java,59
COMMENT offsets for leader epoch api DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME end txn request INIT end txn request v EXPR end txn request v BLOCK EXPR end txn request v NAME end txn request v offsets for leader epoch api root ROOT offsets case epoch for compound epoch leader nmod for offsets epoch dep offsets api public NN static JJ final JJ schema NN end NN txn NN request NN root ROOT request compound request end compound request txn end NN txn NN request NN v LS root ROOT v compound request end compound request txn nsubj v request offsets end ANTONYM ANTONYM,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,1472
COMMENT check for calls which have timed out timed out calls will be removed and failed the remaining milliseconds until the next timeout will be updated param calls the collection of calls return the number of calls which were timed out FUNCTION TYPE int NAME int NAME handle timeouts PARAMETER LIST collection call calls string msg PARAMETER collection call calls TYPE collection call NAME collection call NAME collection ARGUMENT LIST ARGUMENT NAME call NAME calls PARAMETER string msg TYPE string NAME string NAME msg BLOCK DECL STMT TYPE int NAME int NAME num timed out INIT EXPR FOR for iterator call iter calls iterator iter has next call call iter next int remaining ms calc timeout ms remaining as int now call deadline ms if remaining ms call fail now new timeout exception msg iter remove num timed out else next timeout ms math min next timeout ms remaining ms CONTROL iterator call iter calls iterator iter has next INIT iterator call iter calls iterator TYPE iterator call NAME iterator call NAME iterator ARGUMENT LIST ARGUMENT NAME call NAME iter INIT calls iterator EXPR calls iterator CALL calls iterator NAME calls iterator NAME calls NAME iterator ARGUMENT LIST CONDITION iter has next EXPR iter has next CALL iter has next NAME iter has next NAME iter NAME has next ARGUMENT LIST INCR BLOCK DECL STMT TYPE call NAME call NAME call INIT iter next EXPR iter next CALL iter next NAME iter next NAME iter NAME next ARGUMENT LIST DECL STMT TYPE int NAME int NAME remaining ms INIT calc timeout ms remaining as int now call deadline ms EXPR calc timeout ms remaining as int now call deadline ms CALL calc timeout ms remaining as int now call deadline ms NAME calc timeout ms remaining as int ARGUMENT LIST ARGUMENT EXPR now NAME now ARGUMENT EXPR call deadline ms NAME call deadline ms NAME call NAME deadline ms IF if remaining ms call fail now new timeout exception msg iter remove num timed out else next timeout ms math min next timeout ms remaining ms CONDITION remaining ms EXPR remaining ms NAME remaining ms THEN call fail now new timeout exception msg iter remove num timed out BLOCK EXPR call fail now new timeout exception msg CALL call fail now new timeout exception msg NAME call fail NAME call NAME fail ARGUMENT LIST ARGUMENT EXPR now NAME now ARGUMENT EXPR new timeout exception msg CALL timeout exception msg NAME timeout exception ARGUMENT LIST ARGUMENT EXPR msg NAME msg EXPR iter remove CALL iter remove NAME iter remove NAME iter NAME remove ARGUMENT LIST EXPR num timed out NAME num timed out ELSE else next timeout ms math min next timeout ms remaining ms BLOCK EXPR next timeout ms math min next timeout ms remaining ms NAME next timeout ms CALL math min next timeout ms remaining ms NAME math min NAME math NAME min ARGUMENT LIST ARGUMENT EXPR next timeout ms NAME next timeout ms ARGUMENT EXPR remaining ms NAME remaining ms RETURN return num timed out EXPR num timed out NAME num timed out check for calls which have timed out root ROOT check case calls for nmod for check calls nsubj timed calls ref calls which aux timed have acl relcl calls timed compound prt timed out timed out calls will be removed and failed root ROOT removed amod calls timed compound prt timed out nsubjpass removed calls nsubjpass failed calls aux removed will auxpass removed be cc removed and conj and removed failed the remaining milliseconds until the next timeout will be updated root ROOT milliseconds det milliseconds the amod milliseconds remaining mark updated until det timeout the amod timeout next nsubjpass updated timeout aux updated will auxpass updated be dep milliseconds updated param calls the collection of calls root ROOT calls nsubj calls param det collection the dobj calls collection case calls of nmod of collection calls return the number of calls which were timed out root ROOT return det number the dobj return number case calls of nmod of number calls nsubjpass timed calls ref calls which auxpass timed were acl relcl calls timed compound prt timed out int NN handle VB timeouts NNS root ROOT handle dobj handle timeouts collection NN call NN calls NNS string NN msg NN int NN num NN timed VBD out RP root ROOT timed nsubj timed num compound prt timed out for IN iterator NN call NN iter NN calls NNS iterator NN root ROOT iterator compound iterator calls iter NN has VBZ next JJ root ROOT has nsubj has iter advmod has next call NN call NN iter NN next IN root ROOT iter dep iter next int NN remaining VBG ms NNS root ROOT ms amod ms remaining calc NN timeout NN ms NNS remaining VBG as IN int NN root ROOT ms compound ms calc compound ms timeout acl ms remaining case int as nmod as remaining int now RB call VB deadline NN ms NNS root ROOT call compound ms deadline dobj call ms if IN remaining VBG ms NNS root ROOT ms amod ms remaining call NN fail VBP root ROOT fail nsubj fail call now RB new JJ timeout NN exception NN root ROOT exception compound exception timeout msg NN iter NN remove VB root ROOT remove nsubj remove iter num NN timed VBD out RP root ROOT timed nsubj timed num compound prt timed out else RB next JJ timeout NN ms NNS root ROOT ms amod ms next compound ms timeout math NN min NN root ROOT min compound min math next JJ timeout NN ms NNS root ROOT ms amod ms next compound ms timeout remaining VBG ms NNS root ROOT ms amod ms remaining return NN num NN timed VBD out RP root ROOT timed nsubj timed num compound prt timed out check failed ANTONYM ANTONYM check have ANTONYM ANTONYM check return ANTONYM ANTONYM failed return ANTONYM ANTONYM have removed ANTONYM ANTONYM have return ANTONYM ANTONYM next removed ANTONYM ANTONYM return number ANTONYM ANTONYM out failed SYNONYM SYNONYM,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java,602
COMMENT this is optimizing the case when underlying is already a bytes store iterator DECL STMT SPECIFIER protected TYPE final state serdes k v SPECIFIER final NAME state serdes k v NAME state serdes ARGUMENT LIST ARGUMENT NAME k ARGUMENT NAME v NAME serdes this is optimizing the case when underlying is already a bytes store iterator root ROOT optimizing nsubj optimizing this aux optimizing is det case the dobj optimizing case advmod bytes when csubj bytes underlying cop bytes is advmod bytes already det bytes a advcl optimizing bytes acl bytes store dobj store iterator protected VBN final JJ state NN serdes NNS root ROOT serdes compound serdes state k NN v LS serdes NNS k v SYNONYM SYNONYM,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/state/internals/WindowStoreIteratorWrapper.java,87
COMMENT specifies that records of the same key are joinable if their timestamps are within code time difference ms i e the timestamp of a record from the secondary stream is max code time difference ms earlier or later than the timestamp of the record from the primary stream param time difference ms join window interval in milliseconds throws illegal argument exception if code time difference ms is negative FUNCTION SPECIFIER public SPECIFIER static TYPE join windows NAME join windows NAME of PARAMETER LIST final long time difference ms PARAMETER final long time difference ms TYPE final long SPECIFIER final NAME long NAME time difference ms THROWS throws illegal argument exception ARGUMENT EXPR illegal argument exception NAME illegal argument exception BLOCK RETURN return new join windows time difference ms time difference ms EXPR new join windows time difference ms time difference ms CALL join windows time difference ms time difference ms NAME join windows ARGUMENT LIST ARGUMENT EXPR time difference ms NAME time difference ms ARGUMENT EXPR time difference ms NAME time difference ms specifies that records of the same key are joinable if their timestamps are within code time difference ms root ROOT specifies mark joinable that nsubj joinable records case key of det key the amod key same nmod of records key cop joinable are ccomp specifies joinable mark ms if nmod poss timestamps their nsubj ms timestamps cop ms are case ms within compound ms code compound ms time compound ms difference advcl within joinable ms i e the timestamp of a record from the secondary stream is max code time difference ms earlier or later than root ROOT i dep timestamp e det timestamp the nsubj ms timestamp case record of det record a nmod of timestamp record case stream from det stream the amod stream secondary nmod from record stream cop ms is compound time max compound time code compound ms time compound ms difference root i ms cc ms earlier cc earlier or cc ms later conj or earlier later dep earlier than the timestamp of the record from the primary stream root ROOT timestamp det timestamp the case record of det record the nmod of timestamp record case stream from det stream the amod stream primary nmod from record stream param time difference ms join window interval in milliseconds root ROOT ms compound difference param compound difference time nsubj ms difference ccomp ms join compound interval window dobj join interval case milliseconds in nmod in join milliseconds throws illegal argument exception if code time difference ms is negative root ROOT throws amod exception illegal compound exception argument dobj throws exception mark negative if compound ms code compound ms time compound ms difference nsubj negative ms cop negative is advcl if throws negative public NN static JJ join VB windows NNS root ROOT join dobj join windows of IN final JJ long RB time NN difference NN ms NNS root ROOT ms compound ms time compound ms difference throws VBZ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument return NN new JJ join VB windows NNS root ROOT join dobj join windows time NN difference NN ms NNS root ROOT ms compound ms time compound ms difference time NN difference NN ms NNS root ROOT ms compound ms time compound ms difference,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/kstream/JoinWindows.java,88
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE consumer byte byte NAME consumer byte byte NAME consumer ARGUMENT LIST ARGUMENT NAME byte NAME byte INDEX ARGUMENT NAME byte NAME byte INDEX NAME get restore consumer PARAMETER LIST final map string object config PARAMETER final map string object config TYPE final map string object SPECIFIER final NAME map string object NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME object NAME config BLOCK RETURN return restore consumer EXPR restore consumer NAME restore consumer override NN public NN consumer NN byte NN byte NN get VB restore VB consumer NN root ROOT restore aux restore get dobj restore consumer final JJ map NN string NN object NN config NN return NN restore VB consumer NN root ROOT restore dobj restore consumer,0,N/A,kafka/streams/src/test/java/org/apache/kafka/test/MockClientSupplier.java,70
FUNCTION SPECIFIER public TYPE isolation level NAME isolation level NAME isolation level PARAMETER LIST BLOCK RETURN return isolation level EXPR isolation level NAME isolation level public NN isolation NN level NN root ROOT level compound level isolation isolation NN level NN root ROOT level compound level isolation return NN isolation NN level NN root ROOT level compound level isolation,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/requests/ListOffsetRequest.java,250
COMMENT code windowstore changelog additional retention ms DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME window store change log additional retention ms config INIT windowstore changelog additional retention ms EXPR windowstore changelog additional retention ms code windowstore changelog additional retention ms root ROOT ms compound ms code compound ms windowstore compound ms changelog amod ms additional compound ms retention public NN static JJ final JJ string NN window NN store NN change NN log NN additional JJ retention NN ms NNS config VBP root ROOT config compound ms window compound ms store compound ms change compound ms log amod ms additional compound ms retention nsubj config ms windowstore NN changelog NN additional JJ retention NN ms NNS root ROOT ms compound ms windowstore compound ms changelog amod ms additional compound ms retention,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,258
FUNCTION ANNOTATION test NAME test SPECIFIER public TYPE void NAME void NAME no schema to json PARAMETER LIST BLOCK DECL STMT TYPE map string boolean NAME map string boolean NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME boolean NAME props INIT collections singleton map schemas enable false EXPR collections singleton map schemas enable false CALL collections singleton map schemas enable false NAME collections singleton map NAME collections NAME singleton map ARGUMENT LIST ARGUMENT EXPR schemas enable ARGUMENT EXPR false EXPR converter configure props true CALL converter configure props true NAME converter configure NAME converter NAME configure ARGUMENT LIST ARGUMENT EXPR props NAME props ARGUMENT EXPR true DECL STMT TYPE json node NAME json node NAME converted INIT parse converter from connect data topic null true EXPR parse converter from connect data topic null true CALL parse converter from connect data topic null true NAME parse ARGUMENT LIST ARGUMENT EXPR converter from connect data topic null true CALL converter from connect data topic null true NAME converter from connect data NAME converter NAME from connect data ARGUMENT LIST ARGUMENT EXPR topic NAME topic ARGUMENT EXPR null ARGUMENT EXPR true EXPR assert true converted is boolean CALL assert true converted is boolean NAME assert true ARGUMENT LIST ARGUMENT EXPR converted is boolean CALL converted is boolean NAME converted is boolean NAME converted NAME is boolean ARGUMENT LIST EXPR assert equals true converted boolean value CALL assert equals true converted boolean value NAME assert equals ARGUMENT LIST ARGUMENT EXPR true ARGUMENT EXPR converted boolean value CALL converted boolean value NAME converted boolean value NAME converted NAME boolean value ARGUMENT LIST test NN public NN void NN no DT schema NN to TO json NN root ROOT schema neg schema no case json to nmod to schema json map NN string NN boolean NN props NNS collections NNS singleton JJ map NN root ROOT map compound map collections amod map singleton schemas NNS enable VBP root ROOT enable nsubj enable schemas false JJ converter NN configure NN root ROOT configure compound configure converter props NNS true JJ json NN node NN root ROOT node compound node json converted VBN parse VB converter NN from IN connect VB data NNS root ROOT converter mark connect from acl from converter connect dobj connect data topic NN null JJ true JJ assert VB true JJ root ROOT assert xcomp assert true converted VBN is VBZ boolean JJ root ROOT boolean nsubj boolean converted cop boolean is assert VB equals VBZ root ROOT equals nsubj equals assert true JJ converted VBN boolean JJ value NN root ROOT value amod value converted amod value boolean,1,B5,kafka/connect/json/src/test/java/org/apache/kafka/connect/json/JsonConverterTest.java,701
DECL STMT SPECIFIER private TYPE final iterator header SPECIFIER final NAME iterator header NAME iterator ARGUMENT LIST ARGUMENT NAME header NAME original private JJ final JJ iterator NN header NN original JJ original final ANTONYM ANTONYM,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/header/internals/RecordHeaders.java,183
COMMENT do we need to request the latest committed offsets from the coordinator DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME needs fetch committed offsets do we need to request the latest committed offsets from the coordinator root ROOT need aux need do nsubj need we nsubj xsubj request we mark request to xcomp need request det offsets the amod offsets latest amod offsets committed dobj request offsets case coordinator from det coordinator the nmod from offsets coordinator do we need to request the latest committed offsets from the coordinator root ROOT need aux need do nsubj need we nsubj xsubj request we mark request to xcomp need request det offsets the amod offsets latest amod offsets committed dobj request offsets case coordinator from det coordinator the nmod from offsets coordinator private JJ boolean NN needs NNS fetch VBP committed JJ offsets NNS root ROOT fetch nsubj fetch needs amod offsets committed dobj fetch offsets need request ANTONYM ANTONYM,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java,80
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME max cache size bytes INIT EXPR private JJ final JJ int NN max NN cache NN size NN bytes NNS root ROOT bytes compound bytes max compound bytes cache compound bytes size,0,N/A,kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CachingKeyValueStoreTest.java,50
COMMENT package private for testing FUNCTION TYPE kafka based log string byte NAME kafka based log string byte NAME kafka based log ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME byte NAME byte INDEX NAME setup and create kafka based log PARAMETER LIST string topic final worker config config PARAMETER string topic TYPE string NAME string NAME topic PARAMETER final worker config config TYPE final worker config SPECIFIER final NAME worker config NAME config BLOCK DECL STMT TYPE map string object NAME map string object NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME object NAME producer props INIT new hash map EXPR new hash map CALL hash map NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST EXPR producer props put all config originals CALL producer props put all config originals NAME producer props put all NAME producer props NAME put all ARGUMENT LIST ARGUMENT EXPR config originals CALL config originals NAME config originals NAME config NAME originals ARGUMENT LIST EXPR producer props put producer config key serializer class config string serializer class get name CALL producer props put producer config key serializer class config string serializer class get name NAME producer props put NAME producer props NAME put ARGUMENT LIST ARGUMENT EXPR producer config key serializer class config NAME producer config key serializer class config NAME producer config NAME key serializer class config ARGUMENT EXPR string serializer class get name CALL string serializer class get name NAME string serializer class get name NAME string serializer NAME class get name NAME class NAME get name ARGUMENT LIST EXPR producer props put producer config value serializer class config byte array serializer class get name CALL producer props put producer config value serializer class config byte array serializer class get name NAME producer props put NAME producer props NAME put ARGUMENT LIST ARGUMENT EXPR producer config value serializer class config NAME producer config value serializer class config NAME producer config NAME value serializer class config ARGUMENT EXPR byte array serializer class get name CALL byte array serializer class get name NAME byte array serializer class get name NAME byte array serializer NAME class get name NAME class NAME get name ARGUMENT LIST EXPR producer props put producer config retries config integer max value CALL producer props put producer config retries config integer max value NAME producer props put NAME producer props NAME put ARGUMENT LIST ARGUMENT EXPR producer config retries config NAME producer config retries config NAME producer config NAME retries config ARGUMENT EXPR integer max value NAME integer max value NAME integer NAME max value DECL STMT TYPE map string object NAME map string object NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME object NAME consumer props INIT new hash map EXPR new hash map CALL hash map NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST EXPR consumer props put all config originals CALL consumer props put all config originals NAME consumer props put all NAME consumer props NAME put all ARGUMENT LIST ARGUMENT EXPR config originals CALL config originals NAME config originals NAME config NAME originals ARGUMENT LIST EXPR consumer props put consumer config key deserializer class config string deserializer class get name CALL consumer props put consumer config key deserializer class config string deserializer class get name NAME consumer props put NAME consumer props NAME put ARGUMENT LIST ARGUMENT EXPR consumer config key deserializer class config NAME consumer config key deserializer class config NAME consumer config NAME key deserializer class config ARGUMENT EXPR string deserializer class get name CALL string deserializer class get name NAME string deserializer class get name NAME string deserializer NAME class get name NAME class NAME get name ARGUMENT LIST EXPR consumer props put consumer config value deserializer class config byte array deserializer class get name CALL consumer props put consumer config value deserializer class config byte array deserializer class get name NAME consumer props put NAME consumer props NAME put ARGUMENT LIST ARGUMENT EXPR consumer config value deserializer class config NAME consumer config value deserializer class config NAME consumer config NAME value deserializer class config ARGUMENT EXPR byte array deserializer class get name CALL byte array deserializer class get name NAME byte array deserializer class get name NAME byte array deserializer NAME class get name NAME class NAME get name ARGUMENT LIST DECL STMT TYPE map string object NAME map string object NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME object NAME admin props INIT new hash map config originals EXPR new hash map config originals CALL hash map config originals NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR config originals CALL config originals NAME config originals NAME config NAME originals ARGUMENT LIST DECL STMT TYPE new topic NAME new topic NAME topic description INIT topic admin define topic topic compacted partitions replication factor config get short distributed config config storage replication factor config build EXPR topic admin define topic topic compacted partitions replication factor config get short distributed config config storage replication factor config build CALL topic admin define topic topic NAME topic admin define topic NAME topic admin NAME define topic ARGUMENT LIST ARGUMENT EXPR topic NAME topic CALL compacted NAME compacted ARGUMENT LIST CALL partitions NAME partitions ARGUMENT LIST ARGUMENT EXPR CALL replication factor config get short distributed config config storage replication factor config NAME replication factor ARGUMENT LIST ARGUMENT EXPR config get short distributed config config storage replication factor config CALL config get short distributed config config storage replication factor config NAME config get short NAME config NAME get short ARGUMENT LIST ARGUMENT EXPR distributed config config storage replication factor config NAME distributed config config storage replication factor config NAME distributed config NAME config storage replication factor config CALL build NAME build ARGUMENT LIST RETURN return create kafka based log topic producer props consumer props new consume callback topic description admin props EXPR create kafka based log topic producer props consumer props new consume callback topic description admin props CALL create kafka based log topic producer props consumer props new consume callback topic description admin props NAME create kafka based log ARGUMENT LIST ARGUMENT EXPR topic NAME topic ARGUMENT EXPR producer props NAME producer props ARGUMENT EXPR consumer props NAME consumer props ARGUMENT EXPR new consume callback CALL consume callback NAME consume callback ARGUMENT LIST ARGUMENT EXPR topic description NAME topic description ARGUMENT EXPR admin props NAME admin props package private for testing root ROOT package amod package private case testing for nmod for private testing kafka FW based VBN log NN root ROOT log compound log kafka amod log based string NN byte NN setup NN and CC create VB kafka FW based VBN log NN root ROOT log compound log setup cc setup and conj and setup create compound log create compound log kafka amod log based string NN topic NN final JJ worker NN config NN root ROOT config compound config worker config NN map NN string NN object NN producer NN props NNS root ROOT props compound props producer new JJ hash VB map NN root ROOT hash dobj hash map producer NN props NNS put VBD all DT root ROOT put compound props producer nsubj put props dobj put all config NN originals NNS root ROOT originals compound originals config producer NN props NNS put VBP root ROOT put compound props producer nsubj put props producer NN config NN key NN root ROOT key compound key producer compound key config serializer NN class NN config NN root ROOT config compound config serializer compound config class string NN serializer NN class NN get VB name NN producer NN props NNS put VBP root ROOT put compound props producer nsubj put props producer NN config NN value NN root ROOT value compound value producer compound value config serializer NN class NN config NN root ROOT config compound config serializer compound config class byte NN array NN serializer NN class NN get VB name NN producer NN props NNS put VBP root ROOT put compound props producer nsubj put props producer NN config NN retries NNS root ROOT retries compound retries producer compound retries config config NN integer NN max NN root ROOT max compound max integer value NN map NN string NN object NN consumer NN props NNS root ROOT props compound props consumer new JJ hash VB map NN root ROOT hash dobj hash map consumer NN props NNS put VBD all DT root ROOT put compound props consumer nsubj put props dobj put all config NN originals NNS root ROOT originals compound originals config consumer NN props NNS put VBP root ROOT put compound props consumer nsubj put props consumer NN config NN key NN root ROOT key compound key consumer compound key config deserializer NN class NN config NN root ROOT config compound config deserializer compound config class string NN deserializer NN class NN get VB name NN consumer NN props NNS put VBP root ROOT put compound props consumer nsubj put props consumer NN config NN value NN root ROOT value compound value consumer compound value config deserializer NN class NN config NN root ROOT config compound config deserializer compound config class byte NN array NN deserializer NN class NN get VB name NN map NN string NN object NN admin JJ props NNS root ROOT props amod props admin new JJ hash VB map NN root ROOT hash dobj hash map config NN originals NNS root ROOT originals compound originals config new JJ topic NN root ROOT topic amod topic new topic NN description NN root ROOT description compound description topic topic NN admin NN define VBP topic NN root ROOT define compound admin topic nsubj define admin dobj define topic topic NN compacted JJ partitions NNS replication NN factor NN root ROOT factor compound factor replication config NN get VB short RB root ROOT get nsubj get config advmod get short distributed VBN config NN config NN root ROOT distributed compound config config dobj distributed config storage NN replication NN factor NN config NN root ROOT config compound config storage compound config replication compound config factor build VB return NN create VB kafka FW based VBN log NN root ROOT create compound log kafka amod log based dobj create log topic NN producer NN props NNS root ROOT props compound props producer consumer NN props NNS root ROOT props compound props consumer new JJ consume VB callback NN root ROOT consume dobj consume callback topic NN description NN root ROOT description compound description topic admin JJ props NNS root ROOT props amod props admin,0,N/A,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java,408
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME max retries INIT integer max value EXPR integer max value NAME integer max value NAME integer NAME max value private JJ static JJ final JJ int NN max NN retries NNS root ROOT retries compound retries max integer NN max NN root ROOT max compound max integer value NN,1,E1,kafka/clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java,92
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME num brokers INIT EXPR private JJ static JJ final JJ int NN num NN brokers NNS root ROOT brokers compound brokers num,0,N/A,kafka/streams/src/test/java/org/apache/kafka/streams/integration/KStreamsFineGrainedAutoResetIntegrationTest.java,63
COMMENT possible error codes unknown topic leader not available invalid topic topic authorization failed DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME is internal key name INIT is internal EXPR is internal possible error codes root ROOT codes amod codes possible compound codes error unknown topic root ROOT topic amod topic unknown leader not available root ROOT available nsubj available leader neg available not invalid topic root ROOT topic amod topic invalid topic authorization failed root ROOT failed compound authorization topic nsubj failed authorization private JJ static JJ final JJ string NN is VBZ internal JJ key JJ name NN root ROOT name cop name is amod name internal amod name key is VBZ internal JJ root ROOT internal cop internal is is name ANTONYM ANTONYM internal private SYNONYM SYNONYM,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/requests/MetadataResponse.java,66
DECL STMT TYPE int NAME int NAME num changes INIT EXPR int NN num NN changes NNS root ROOT changes compound changes num,0,N/A,kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,1968
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE app configuration entry NAME app configuration entry NAME app configuration entry INDEX NAME get app configuration entry PARAMETER LIST string name PARAMETER string name TYPE string NAME string NAME name BLOCK IF if this login context name equals name return config entries to array new app configuration entry else return null CONDITION this login context name equals name EXPR this login context name equals name CALL this login context name equals name NAME this login context name equals NAME this NAME login context name NAME equals ARGUMENT LIST ARGUMENT EXPR name NAME name THEN return config entries to array new app configuration entry BLOCK RETURN return config entries to array new app configuration entry EXPR config entries to array new app configuration entry CALL config entries to array new app configuration entry NAME config entries to array NAME config entries NAME to array ARGUMENT LIST ARGUMENT EXPR new app configuration entry NAME app configuration entry NAME app configuration entry INDEX EXPR ELSE else return null BLOCK RETURN return null EXPR null override NN public NN app NN configuration NN entry NN root ROOT entry compound entry app compound entry configuration get VB app NN configuration NN entry NN root ROOT get compound entry app compound entry configuration dobj get entry string NN name NN if IN this DT login NN context NN name NN equals VBZ name NN return NN config NN entries NNS to TO array NN root ROOT entries compound entries config case array to nmod to entries array new JJ app NN configuration NN entry NN root ROOT entry compound entry app compound entry configuration else RB return NN null JJ,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/security/JaasConfig.java,75
COMMENT and the from other nodes are safe to process DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME can read configs and the from other nodes are safe to process root ROOT safe cc safe and nsubj safe the case nodes from amod nodes other nmod from the nodes cop safe are case process to nmod to safe process private JJ boolean NN can MD read VB configs NNS root ROOT read aux read can dobj read configs,0,N/A,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java,125
COMMENT so it s not safe to hold a direct reference to the underlying byte buffer DECL STMT SPECIFIER private TYPE int NAME int NAME num records INIT EXPR so it s not safe to hold a direct reference to the underlying byte buffer root ROOT safe mark safe so nsubj safe it nsubj xsubj hold it cop safe s neg safe not mark hold to xcomp safe hold det reference a amod reference direct dobj hold reference case buffer to det buffer the amod buffer underlying compound buffer byte nmod to hold buffer private JJ int NN num NN records NNS root ROOT records compound records num hold direct ANTONYM ANTONYM,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/record/MemoryRecordsBuilder.java,66
COMMENT fetch response partition header v added log start offset field the earliest available offset of partition data that can be consumed DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME fetch response INIT fetch response v fetch response v fetch response v fetch response v fetch response v fetch response v EXPR fetch response v fetch response v fetch response v fetch response v fetch response v fetch response v BLOCK EXPR fetch response v NAME fetch response v EXPR fetch response v NAME fetch response v EXPR fetch response v NAME fetch response v EXPR fetch response v NAME fetch response v EXPR fetch response v NAME fetch response v EXPR fetch response v NAME fetch response v fetch response partition header v added log start offset field the earliest available offset of partition data that can be consumed root ROOT fetch compound header response compound header partition dobj fetch header nsubj added v acl relcl header added compound start log nsubj offset start ccomp added offset dobj offset field det offset the amod offset earliest amod offset available dep field offset case data of compound data partition nmod of offset data nsubjpass consumed data ref data that aux consumed can auxpass consumed be acl relcl data consumed public NN static JJ final JJ schema NN fetch VB response NN root ROOT fetch dobj fetch response fetch VB response NN v LS root ROOT fetch dobj fetch response dep fetch v fetch VB response NN v LS root ROOT fetch dobj fetch response dep fetch v fetch VB response NN v LS root ROOT fetch dobj fetch response dep fetch v fetch VB response NN v LS root ROOT fetch dobj fetch response dep fetch v fetch VB response NN v LS root ROOT fetch dobj fetch response dep fetch v fetch VB response NN v LS root ROOT fetch dobj fetch response dep fetch v added start ANTONYM ANTONYM fetch added ANTONYM ANTONYM fetch start ANTONYM ANTONYM start can ANTONYM ANTONYM start offset ANTONYM ANTONYM,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,763
DECL STMT SPECIFIER private SPECIFIER static TYPE final set topic partition SPECIFIER final NAME set topic partition NAME set ARGUMENT LIST ARGUMENT NAME topic partition NAME consumer assignment INIT new hash set arrays as list tp possible error codes unknown this is because illegal state exception may be thrown in kafka controller shutdown broker it would be good to improve this broker not available stale controller epoch private final set topic partition partitions remaining final streams metrics impl metrics override public consumer byte byte get restore consumer map string object config return new kafka consumer config new byte array deserializer new byte array deserializer EXPR new hash set arrays as list tp possible error codes unknown this is because illegal state exception may be thrown in kafka controller shutdown broker it would be good to improve this broker not available stale controller epoch private final set topic partition partitions remaining final streams metrics impl metrics override public consumer byte byte get restore consumer map string object config return new kafka consumer config new byte array deserializer new byte array deserializer CALL hash set arrays as list tp possible error codes unknown this is because illegal state exception may be thrown in kafka controller shutdown broker it would be good to improve this broker not available stale controller epoch private final set topic partition partitions remaining final streams metrics impl metrics override public consumer byte byte get restore consumer map string object config return new kafka consumer config new byte array deserializer new byte array deserializer NAME hash set NAME hash set ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR arrays as list tp possible error codes unknown this is because illegal state exception may be thrown in kafka controller shutdown broker it would be good to improve this broker not available stale controller epoch private final set topic partition partitions remaining final streams metrics impl metrics override public consumer byte byte get restore consumer map string object config return new kafka consumer config new byte array deserializer new byte array deserializer CALL arrays as list tp possible error codes unknown this is because illegal state exception may be thrown in kafka controller shutdown broker it would be good to improve this broker not available stale controller epoch private final set topic partition partitions remaining final streams metrics impl metrics override public consumer byte byte get restore consumer map string object config return new kafka consumer config new byte array deserializer new byte array deserializer NAME arrays as list NAME arrays NAME as list ARGUMENT LIST ARGUMENT EXPR tp possible error codes unknown this is because illegal state exception may be thrown in kafka controller shutdown broker it would be good to improve this broker not available stale controller epoch private final set topic partition partitions remaining NAME tp COMMENT possible error codes unknown this is because illegal state exception may be thrown in kafka controller shutdown broker it would be good to improve this broker not available stale controller epoch SPECIFIER private NAME final NAME set topic partition NAME set ARGUMENT LIST ARGUMENT NAME topic partition NAME partitions remaining ARGUMENT EXPR final streams metrics impl metrics NAME final NAME streams metrics impl NAME metrics ARGUMENT EXPR override public consumer byte byte get restore consumer map string object config return new kafka consumer config new byte array deserializer new byte array deserializer ANNOTATION override NAME override SPECIFIER public NAME consumer byte byte NAME consumer ARGUMENT LIST ARGUMENT NAME byte NAME byte INDEX ARGUMENT NAME byte NAME byte INDEX CALL get restore consumer map string object config NAME get restore consumer ARGUMENT LIST ARGUMENT EXPR map string object config NAME map string object NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME object NAME config BLOCK RETURN return new kafka consumer config new byte array deserializer new byte array deserializer EXPR new kafka consumer config new byte array deserializer new byte array deserializer CALL kafka consumer config new byte array deserializer new byte array deserializer NAME kafka consumer NAME kafka consumer ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR config NAME config ARGUMENT EXPR new byte array deserializer CALL byte array deserializer NAME byte array deserializer ARGUMENT LIST ARGUMENT EXPR new byte array deserializer CALL byte array deserializer NAME byte array deserializer ARGUMENT LIST private JJ static JJ final JJ set NN topic NN partition NN root ROOT partition compound partition topic consumer NN assignment NN root ROOT assignment compound assignment consumer new JJ hash JJ set NN root ROOT set amod set hash arrays NNS as IN list NN root ROOT arrays case list as nmod as arrays list tp NN set arrays ANTONYM ANTONYM static set SYNONYM SYNONYM,1,D1,kafka/connect/runtime/src/test/java/org/apache/kafka/connect/util/KafkaBasedLogTest.java,90
COMMENT possible error codes unknown this is because illegal state exception may be thrown in kafka controller shutdown broker it would be good to improve this broker not available stale controller epoch DECL STMT SPECIFIER private TYPE final set topic partition SPECIFIER final NAME set topic partition NAME set ARGUMENT LIST ARGUMENT NAME topic partition NAME partitions remaining possible error codes root ROOT codes amod codes possible compound codes error unknown this is because illegal state exception may be thrown in kafka controller shutdown broker it would be good to improve this root ROOT is dep is unknown nsubj is this mark thrown because amod exception illegal compound exception state nsubjpass thrown exception aux thrown may auxpass thrown be advcl because good thrown case broker in compound broker kafka compound broker controller compound broker shutdown nmod in thrown broker nsubj good it nsubj xsubj improve it aux good would cop good be ccomp is good mark improve to xcomp good improve dobj improve this broker not available root ROOT available nsubj available broker neg available not stale controller epoch root ROOT epoch amod epoch stale compound epoch controller private JJ final JJ set NN topic NN partition NN root ROOT partition compound partition topic partitions NNS remaining VBG root ROOT partitions acl partitions remaining good stale ANTONYM ANTONYM possible good ANTONYM ANTONYM thrown set SYNONYM SYNONYM,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/requests/ControlledShutdownResponse.java,47
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE consumer byte byte NAME consumer byte byte NAME consumer ARGUMENT LIST ARGUMENT NAME byte NAME byte INDEX ARGUMENT NAME byte NAME byte INDEX NAME get restore consumer PARAMETER LIST map string object config PARAMETER map string object config TYPE map string object NAME map string object NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME object NAME config BLOCK RETURN return new kafka consumer config new byte array deserializer new byte array deserializer EXPR new kafka consumer config new byte array deserializer new byte array deserializer CALL kafka consumer config new byte array deserializer new byte array deserializer NAME kafka consumer NAME kafka consumer ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR config NAME config ARGUMENT EXPR new byte array deserializer CALL byte array deserializer NAME byte array deserializer ARGUMENT LIST ARGUMENT EXPR new byte array deserializer CALL byte array deserializer NAME byte array deserializer ARGUMENT LIST override NN public NN consumer NN byte NN byte NN get VB restore VB consumer NN root ROOT restore aux restore get dobj restore consumer map NN string NN object NN config NN return NN new JJ kafka FW consumer NN root ROOT consumer compound consumer kafka config NN new JJ byte NN array NN deserializer NN root ROOT deserializer compound deserializer byte compound deserializer array new JJ byte NN array NN deserializer NN root ROOT deserializer compound deserializer byte compound deserializer array,1,A1,kafka/streams/src/main/java/org/apache/kafka/streams/processor/internals/DefaultKafkaClientSupplier.java,40
DECL STMT SPECIFIER private TYPE int NAME int NAME required num acks INIT integer max value EXPR integer max value NAME integer max value NAME integer NAME max value private JJ int NN required VBN num NN acks NNS root ROOT required compound acks num dobj required acks integer NN max NN root ROOT max compound max integer value NN,0,N/A,kafka/log4j-appender/src/main/java/org/apache/kafka/log4jappender/KafkaLog4jAppender.java,71
COMMENT code exclude internal topics code DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME exclude internal topics config INIT exclude internal topics EXPR exclude internal topics code exclude internal topics code root ROOT exclude nsubj exclude code amod topics internal dobj exclude topics dep exclude code public NN static JJ final JJ string NN exclude VB internal JJ topics NNS config VBP root ROOT config csubj config exclude amod topics internal dobj exclude topics exclude VB internal JJ topics NNS root ROOT exclude amod topics internal dobj exclude topics public internal ANTONYM ANTONYM,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java,229
COMMENT task is unused DECL STMT SPECIFIER private TYPE final set topic partition SPECIFIER final NAME set topic partition NAME set ARGUMENT LIST ARGUMENT NAME topic partition NAME task assignment INIT collections singleton new topic partition topic EXPR collections singleton new topic partition topic CALL collections singleton new topic partition topic NAME collections singleton NAME collections NAME singleton ARGUMENT LIST ARGUMENT EXPR new topic partition topic CALL topic partition topic NAME topic partition ARGUMENT LIST ARGUMENT EXPR topic NAME topic ARGUMENT EXPR task is unused root ROOT unused nsubj unused task cop unused is private JJ final JJ set NN topic NN partition NN root ROOT partition compound partition topic task NN assignment NN root ROOT assignment compound assignment task collections NNS singleton NN root ROOT singleton compound singleton collections new JJ topic NN partition NN root ROOT partition compound partition topic topic NN,1,D1,kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,491
COMMENT this class extends link streams metrics impl metrics string string map and overrides one of its functions for efficiency DECL STMT SPECIFIER private TYPE final streams metrics thread impl SPECIFIER final NAME streams metrics thread impl NAME streams metrics this class extends link streams metrics impl metrics string string map and root ROOT extends det class this nsubj extends class compound metrics link compound metrics streams compound metrics metrics compound metrics impl nsubj string metrics ccomp extends string compound map string dobj string map cc extends and overrides one of its functions for efficiency root ROOT overrides dobj overrides one case functions of nmod poss functions its nmod of one functions case efficiency for nmod for functions efficiency private JJ final JJ streams NNS metrics NNS thread NN impl NN root ROOT impl compound impl streams compound impl metrics compound impl thread streams NNS metrics NNS root ROOT metrics compound metrics streams,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java,360
DECL STMT SPECIFIER private SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME min suffix INIT new byte suffix size EXPR new byte suffix size NAME byte suffix size NAME byte INDEX suffix size EXPR suffix size NAME suffix size private JJ static JJ final JJ byte NN min NN suffix NN root ROOT suffix compound suffix min new JJ byte NN suffix NN size NN root ROOT size compound size suffix,1,D1,kafka/streams/src/main/java/org/apache/kafka/streams/state/internals/WindowKeySchema.java,30
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME buckets private JJ final JJ int NN buckets NNS,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/metrics/stats/Percentiles.java,38
COMMENT note do not change either config names as these are part of the public api and change will break user code DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME ssl endpoint identification algorithm config INIT ssl endpoint identification algorithm EXPR ssl endpoint identification algorithm note do not change either config names as these are part of the public api and change will break user code root ROOT change nsubj change note aux change do neg change not cc preconj names either compound names config dobj change names mark part as nsubj part these cop part are csubj break part case api of det api the amod api public nmod of part api cc api and nmod of part change conj and api change aux break will parataxis change break compound code user dobj break code public NN static JJ final JJ string NN ssl NN endpoint NN identification NN algorithm NN config NN root ROOT config compound config ssl compound config endpoint compound config identification compound config algorithm ssl NN endpoint NN identification NN algorithm NN root ROOT algorithm compound algorithm ssl compound algorithm endpoint compound algorithm identification break do ANTONYM ANTONYM break note ANTONYM ANTONYM do names ANTONYM ANTONYM names are ANTONYM ANTONYM names break ANTONYM ANTONYM note names ANTONYM ANTONYM,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/config/SslConfigs.java,88
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME topics INIT topics EXPR topics public NN static JJ final JJ string NN topics NNS topics NNS,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/requests/OffsetsForLeaderEpochResponse.java,32
DECL STMT SPECIFIER private TYPE final atomic integer SPECIFIER final NAME atomic integer NAME attempts INIT new atomic integer EXPR new atomic integer CALL atomic integer NAME atomic integer ARGUMENT LIST ARGUMENT EXPR private JJ final JJ atomic JJ integer NN root ROOT integer amod integer atomic attempts NNS new JJ atomic JJ integer NN root ROOT integer amod integer atomic,1,E1,kafka/clients/src/main/java/org/apache/kafka/clients/producer/internals/ProducerBatch.java,67
COMMENT visible for testing DECL STMT SPECIFIER private TYPE final sensor SPECIFIER final NAME sensor NAME errors visible for testing root ROOT visible case testing for nmod for visible testing private JJ final JJ sensor NN errors NNS,1,E1,kafka/clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java,243
DECL STMT TYPE final int SPECIFIER final NAME int NAME num batches final JJ int NN num NN batches NNS root ROOT batches compound batches num,0,N/A,kafka/clients/src/test/java/org/apache/kafka/clients/producer/internals/RecordAccumulatorTest.java,816
COMMENT enter the checking api versions state for the given node param id the connection identifier FUNCTION SPECIFIER public TYPE void NAME void NAME checking api versions PARAMETER LIST string id PARAMETER string id TYPE string NAME string NAME id BLOCK DECL STMT TYPE node connection state NAME node connection state NAME node state INIT node state id EXPR node state id CALL node state id NAME node state ARGUMENT LIST ARGUMENT EXPR id NAME id EXPR node state state connection state checking api versions NAME node state state NAME node state NAME state NAME connection state checking api versions NAME connection state NAME checking api versions enter the checking api versions state for the given node root ROOT enter det state the compound state checking compound state api compound state versions dobj enter state case node for det node the amod node given nmod for enter node param id the connection identifier root ROOT id nsubj id param det identifier the compound identifier connection dobj id identifier public NN void NN checking VBG api NN versions NNS root ROOT checking compound versions api dobj checking versions string NN id NN node NN connection NN state NN root ROOT state compound state node compound state connection node NN state NN root ROOT state compound state node node NN state NN root ROOT state compound state node id NN node NN state NN state NN root ROOT state compound state node compound state state connection NN state NN checking NN root ROOT checking compound checking connection compound checking state api NN versions NNS root ROOT versions compound versions api checking given ANTONYM ANTONYM enter given ANTONYM ANTONYM,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/ClusterConnectionStates.java,123
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME to PARAMETER LIST serde k key serde serde v val serde stream partitioner super k super v partitioner string topic PARAMETER serde k key serde TYPE serde k NAME serde k NAME serde ARGUMENT LIST ARGUMENT NAME k NAME key serde PARAMETER serde v val serde TYPE serde v NAME serde v NAME serde ARGUMENT LIST ARGUMENT NAME v NAME val serde PARAMETER stream partitioner super k super v partitioner TYPE stream partitioner super k super v NAME stream partitioner super k super v NAME stream partitioner ARGUMENT LIST ARGUMENT NAME SUPER super k NAME k ARGUMENT NAME SUPER super v NAME v NAME partitioner PARAMETER string topic TYPE string NAME string NAME topic BLOCK EXPR this to stream to key serde val serde partitioner topic CALL this to stream NAME this to stream NAME this NAME to stream ARGUMENT LIST CALL to key serde val serde partitioner topic NAME to ARGUMENT LIST ARGUMENT EXPR key serde NAME key serde ARGUMENT EXPR val serde NAME val serde ARGUMENT EXPR partitioner NAME partitioner ARGUMENT EXPR topic NAME topic override NN public NN void NN to TO serde NN k NN key JJ serde NN root ROOT serde amod serde key serde NN v LS val NN serde NN root ROOT serde compound serde val stream NN partitioner NN root ROOT partitioner compound partitioner stream super JJ k NN super JJ v LS partitioner NN string NN topic NN this DT to TO stream NN to TO key JJ serde NN root ROOT serde amod serde key val NN serde NN root ROOT serde compound serde val partitioner NN topic NN k v SYNONYM SYNONYM,1,B5,kafka/streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableImpl.java,407
COMMENT task id DECL STMT SPECIFIER private TYPE long NAME long NAME max num msgs task id root ROOT id compound id task private JJ long RB max NN num NN msgs NNS root ROOT msgs compound msgs max compound msgs num,0,N/A,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/tools/SchemaSourceTask.java,58
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME bins private JJ final JJ int NN bins NNS,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/metrics/stats/Histogram.java,86
COMMENT visible for testing DECL STMT SPECIFIER private TYPE final subscription state SPECIFIER final NAME subscription state NAME subscriptions visible for testing root ROOT visible case testing for nmod for visible testing private JJ final JJ subscription NN state NN root ROOT state compound state subscription subscriptions NNS,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java,562
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME ensure valid PARAMETER LIST BLOCK EXPR load full batch ensure valid CALL load full batch NAME load full batch ARGUMENT LIST CALL ensure valid NAME ensure valid ARGUMENT LIST override NN public NN void NN ensure VB valid JJ root ROOT ensure xcomp ensure valid load NN full JJ batch NN root ROOT batch compound batch load amod batch full ensure VB valid JJ root ROOT ensure xcomp ensure valid,1,B2,kafka/clients/src/main/java/org/apache/kafka/common/record/FileLogInputStream.java,162
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME max bytes private JJ final JJ int NN max NN bytes NNS root ROOT bytes compound bytes max,1,E1,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java,100
DECL STMT SPECIFIER private TYPE final rocks iterator SPECIFIER final NAME rocks iterator NAME iter private JJ final JJ rocks NNS iterator NN root ROOT iterator compound iterator rocks iter NN,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java,407
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME schemas enable config INIT schemas enable EXPR schemas enable private JJ static JJ final JJ string NN schemas NNS enable VBP config NN root ROOT enable nsubj enable schemas dobj enable config schemas NNS enable VBP root ROOT enable nsubj enable schemas,1,D2,kafka/connect/json/src/main/java/org/apache/kafka/connect/json/JsonConverter.java,53
COMMENT code rocksdb config setter DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME rocksdb config setter class config INIT rocksdb config setter EXPR rocksdb config setter code rocksdb config setter root ROOT setter compound setter code compound setter rocksdb compound setter config public NN static JJ final JJ string NN rocksdb NN config NN setter NN class NN config NN root ROOT config compound config rocksdb compound config config compound config setter compound config class rocksdb NN config NN setter NN root ROOT setter compound setter rocksdb compound setter config,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,224
DECL STMT SPECIFIER private TYPE final long SPECIFIER final NAME long NAME max cache size bytes private JJ final JJ long RB max NN cache NN size NN bytes NNS root ROOT bytes compound bytes max compound bytes cache compound bytes size,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/state/internals/ThreadCache.java,43
FUNCTION ANNOTATION override NAME override SPECIFIER public SPECIFIER synchronized TYPE void NAME void NAME get PARAMETER LIST long timeout time unit unit PARAMETER long timeout TYPE long NAME long NAME timeout PARAMETER time unit unit TYPE time unit NAME time unit NAME unit THROWS throws interrupted exception execution exception timeout exception ARGUMENT EXPR interrupted exception NAME interrupted exception ARGUMENT EXPR execution exception NAME execution exception ARGUMENT EXPR timeout exception NAME timeout exception BLOCK DECL STMT TYPE long NAME long NAME started INIT system current time millis EXPR system current time millis CALL system current time millis NAME system current time millis NAME system NAME current time millis ARGUMENT LIST DECL STMT TYPE long NAME long NAME limit INIT started unit to millis timeout EXPR started unit to millis timeout NAME started CALL unit to millis timeout NAME unit to millis NAME unit NAME to millis ARGUMENT LIST ARGUMENT EXPR timeout NAME timeout WHILE while completed long left ms limit system current time millis if left ms throw new timeout exception kafka offset backing store future timed out this wait left ms CONDITION completed EXPR completed NAME completed BLOCK DECL STMT TYPE long NAME long NAME left ms INIT limit system current time millis EXPR limit system current time millis NAME limit CALL system current time millis NAME system current time millis NAME system NAME current time millis ARGUMENT LIST IF if left ms throw new timeout exception kafka offset backing store future timed out CONDITION left ms EXPR left ms NAME left ms THEN throw new timeout exception kafka offset backing store future timed out BLOCK THROW throw new timeout exception kafka offset backing store future timed out EXPR new timeout exception kafka offset backing store future timed out CALL timeout exception kafka offset backing store future timed out NAME timeout exception ARGUMENT LIST ARGUMENT EXPR kafka offset backing store future timed out EXPR this wait left ms CALL this wait left ms NAME this wait NAME this NAME wait ARGUMENT LIST ARGUMENT EXPR left ms NAME left ms IF if exception null throw new execution exception exception CONDITION exception null EXPR exception null NAME exception THEN throw new execution exception exception BLOCK THROW throw new execution exception exception EXPR new execution exception exception CALL execution exception exception NAME execution exception ARGUMENT LIST ARGUMENT EXPR exception NAME exception RETURN return null EXPR null override NN public NN synchronized VBN void NN get VB long RB timeout NN time NN unit NN root ROOT unit compound unit time unit NN throws VBZ interrupted JJ exception NN root ROOT exception amod exception interrupted execution NN exception NN root ROOT exception compound exception execution timeout NN exception NN root ROOT exception compound exception timeout long RB started VBD system NN current JJ time NN millis IN root ROOT time compound time system amod time current dep time millis long RB limit NN started VBD unit NN to TO millis NN root ROOT unit case millis to nmod to unit millis timeout NN while IN completed VBN long RB left JJ ms NNS root ROOT ms amod ms left limit NN system NN current JJ time NN millis IN root ROOT time compound time system amod time current dep time millis if IN left JJ ms NNS root ROOT ms amod ms left throw VB new JJ timeout NN exception NN root ROOT exception compound exception timeout kafka FW offset VBN backing NN store NN root ROOT store compound store kafka amod store offset compound store backing future NN timed VBN out IN this DT wait NN left JJ ms NNS root ROOT ms amod ms left if IN exception NN null JJ throw VB new JJ execution NN exception NN root ROOT exception compound exception execution exception NN return NN null JJ get throws ANTONYM ANTONYM,1,B3,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaOffsetBackingStore.java,218
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME socket size bytes INIT EXPR private JJ static JJ final JJ int NN socket NN size NN bytes NNS root ROOT bytes compound bytes socket compound bytes size,0,N/A,kafka/streams/src/test/java/org/apache/kafka/streams/perf/SimpleBenchmark.java,110
DECL STMT SPECIFIER private TYPE final static string SPECIFIER final SPECIFIER static NAME string NAME resources INIT resources EXPR resources private JJ final JJ static JJ string NN resources NNS resources NNS,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/requests/DescribeAclsResponse.java,34
COMMENT offsets for leader epoch api DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME end txn response INIT end txn response v EXPR end txn response v BLOCK EXPR end txn response v NAME end txn response v offsets for leader epoch api root ROOT offsets case epoch for compound epoch leader nmod for offsets epoch dep offsets api public NN static JJ final JJ schema NN end NN txn NN response NN root ROOT response compound response end compound response txn end NN txn NN response NN v LS root ROOT v compound response end compound response txn nsubj v response offsets end ANTONYM ANTONYM,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,1473
COMMENT ensure there is enough space to write some number of bytes expanding the underlying buffer if necessary this can be used to avoid incremental expansions through calls to link write int when you know how many total bytes are needed param remaining bytes required the number of bytes required FUNCTION SPECIFIER public TYPE void NAME void NAME ensure remaining PARAMETER LIST int remaining bytes required PARAMETER int remaining bytes required TYPE int NAME int NAME remaining bytes required BLOCK IF if remaining bytes required buffer remaining expand buffer remaining bytes required CONDITION remaining bytes required buffer remaining EXPR remaining bytes required buffer remaining NAME remaining bytes required CALL buffer remaining NAME buffer remaining NAME buffer NAME remaining ARGUMENT LIST THEN expand buffer remaining bytes required BLOCK EXPR expand buffer remaining bytes required CALL expand buffer remaining bytes required NAME expand buffer ARGUMENT LIST ARGUMENT EXPR remaining bytes required NAME remaining bytes required ensure there is enough space to write some number of bytes expanding the underlying buffer if necessary root ROOT ensure expl is there ccomp ensure is amod space enough nsubj is space mark write to acl to space write det number some dobj write number case bytes of nmod of number bytes acl bytes expanding det buffer the amod buffer underlying dobj expanding buffer mark necessary if advcl if is necessary this can be used to avoid incremental expansions through calls to link write int when you know how root ROOT used nsubjpass used this nsubj xsubj avoid this aux used can auxpass used be mark avoid to xcomp used avoid amod expansions incremental dobj avoid expansions case calls through nmod through avoid calls mark link to acl to calls link xcomp link write dobj write int advmod know when nsubj know you advcl write know dep know how many total bytes are needed root ROOT needed amod bytes many amod bytes total nsubjpass needed bytes auxpass needed are param remaining bytes required the number of bytes required root ROOT required compound bytes param amod bytes remaining nsubj required bytes det number the nsubj required number case bytes of nmod of number bytes ccomp required required public NN void NN ensure VB remaining VBG root ROOT ensure xcomp ensure remaining int NN remaining VBG bytes NNS required VBN root ROOT required amod bytes remaining nsubj required bytes if IN remaining VBG bytes NNS required VBN root ROOT required amod bytes remaining nsubj required bytes buffer NN remaining VBG root ROOT buffer acl buffer remaining expand VB buffer NN root ROOT expand dobj expand buffer remaining VBG bytes NNS required VBN root ROOT required amod bytes remaining nsubj required bytes can used ANTONYM ANTONYM,1,B2,kafka/clients/src/main/java/org/apache/kafka/common/utils/ByteBufferOutputStream.java,115
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME acks key name INIT acks EXPR acks private JJ static JJ final JJ string NN acks NNS key JJ name NN root ROOT name compound name acks amod name key acks NNS,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/requests/ProduceRequest.java,41
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE consumer byte byte NAME consumer byte byte NAME consumer ARGUMENT LIST ARGUMENT NAME byte NAME byte INDEX ARGUMENT NAME byte NAME byte INDEX NAME get consumer PARAMETER LIST final map string object config PARAMETER final map string object config TYPE final map string object SPECIFIER final NAME map string object NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME object NAME config BLOCK RETURN return consumer EXPR consumer NAME consumer override NN public NN consumer NN byte NN byte NN get VB consumer NN root ROOT get dobj get consumer final JJ map NN string NN object NN config NN return NN consumer NN,0,N/A,kafka/streams/src/test/java/org/apache/kafka/test/MockClientSupplier.java,65
DECL STMT SPECIFIER private SPECIFIER static TYPE final short SPECIFIER final NAME short NAME acks all INIT EXPR private JJ static JJ final JJ short RB acks NNS all DT root ROOT acks dep acks all,1,D2,kafka/clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java,91
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME min compaction lag ms config INIT min compaction lag ms EXPR min compaction lag ms public NN static JJ final JJ string NN min NN compaction NN lag NN ms NNS config VBP root ROOT config compound ms min compound ms compaction compound ms lag nsubj config ms min NN compaction NN lag NN ms NNS root ROOT ms compound ms min compound ms compaction compound ms lag,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/config/TopicConfig.java,101
COMMENT code client id code DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME client id config INIT common client configs client id config EXPR common client configs client id config NAME common client configs client id config NAME common client configs NAME client id config code client id code root ROOT code compound code code compound code client compound code id public NN static JJ final JJ string NN client NN id VBD config NN root ROOT id nsubj id client dobj id config common JJ client NN configs NNS client NN root ROOT client amod client common compound client client compound client configs id NN config NN root ROOT config compound config id,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java,102
DECL STMT SPECIFIER private TYPE byte NAME byte NAME byte INDEX NAME value private JJ byte NN value NN,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/header/internals/RecordHeader.java,29
COMMENT visible for testing DECL STMT SPECIFIER private TYPE final producer interceptors k v SPECIFIER final NAME producer interceptors k v NAME producer interceptors ARGUMENT LIST ARGUMENT NAME k ARGUMENT NAME v NAME interceptors visible for testing root ROOT visible case testing for nmod for visible testing private JJ final JJ producer NN interceptors NNS root ROOT interceptors compound interceptors producer k NN v LS interceptors NNS k v SYNONYM SYNONYM,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java,250
COMMENT visible for testing DECL STMT SPECIFIER private TYPE final consumer interceptors k v SPECIFIER final NAME consumer interceptors k v NAME consumer interceptors ARGUMENT LIST ARGUMENT NAME k ARGUMENT NAME v NAME interceptors visible for testing root ROOT visible case testing for nmod for visible testing private JJ final JJ consumer NN interceptors NNS root ROOT interceptors compound interceptors consumer k NN v LS interceptors NNS k v SYNONYM SYNONYM,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java,558
COMMENT validate the contents of this struct against its schema throws schema exception if validation fails FUNCTION SPECIFIER public TYPE void NAME void NAME validate PARAMETER LIST BLOCK EXPR this schema validate this CALL this schema validate this NAME this schema validate NAME this NAME schema NAME validate ARGUMENT LIST ARGUMENT EXPR this NAME this validate the contents of this struct against its schema root ROOT validate det contents the dobj validate contents case struct of det struct this nmod of contents struct case schema against nmod poss schema its nmod against validate schema throws schema exception if validation fails root ROOT throws compound exception schema dobj throws exception mark fails if nsubj fails validation advcl if throws fails public NN void NN validate VB this DT schema NN validate VBP this DT validate void ANTONYM ANTONYM,1,B2,kafka/clients/src/main/java/org/apache/kafka/common/protocol/types/Struct.java,285
COMMENT code group id code DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME group id config INIT group id EXPR group id code group id code root ROOT id compound group code nsubj id group dobj id code public NN static JJ final JJ string NN group NN id VBD config NN root ROOT id nsubj id group dobj id config group NN id NN root ROOT id compound id group,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java,52
COMMENT code client id DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME client id config INIT common client configs client id config EXPR common client configs client id config NAME common client configs client id config NAME common client configs NAME client id config code client id root ROOT id compound id code compound id client public NN static JJ final JJ string NN client NN id VBD config NN root ROOT id nsubj id client dobj id config common JJ client NN configs NNS client NN root ROOT client amod client common compound client client compound client configs id NN config NN root ROOT config compound config id,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,138
COMMENT the latest version of each api DECL STMT SPECIFIER static TYPE final short SPECIFIER final NAME short NAME short INDEX NAME curr version INIT new short api keys max api key EXPR new short api keys max api key NAME short api keys max api key NAME short INDEX api keys max api key EXPR api keys max api key NAME api keys max api key NAME api keys NAME max api key the latest version of each api root ROOT version det version the amod version latest case api of det api each nmod of version api static JJ final JJ short RB curr JJ version NN root ROOT version amod version curr new JJ short RB api NN keys NNS max NN root ROOT max compound max api compound max keys api NN key NN root ROOT key compound key api,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,1716
COMMENT offsets for leader epoch api DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME txn offset commit response INIT txn offset commit response v EXPR txn offset commit response v BLOCK EXPR txn offset commit response v NAME txn offset commit response v offsets for leader epoch api root ROOT offsets case epoch for compound epoch leader nmod for offsets epoch dep offsets api public NN static JJ final JJ schema NN txn NN offset VBD commit VB response NN root ROOT offset nsubj offset txn ccomp offset commit dobj commit response txn NN offset VBD commit VB response NN v LS root ROOT v nsubj offset txn ccomp v offset ccomp offset commit dobj commit response,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,1565
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME num partitions private JJ final JJ int NN num NN partitions NNS root ROOT partitions compound partitions num,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/admin/NewTopic.java,32
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME to PARAMETER LIST serde k key serde serde v val serde string topic PARAMETER serde k key serde TYPE serde k NAME serde k NAME serde ARGUMENT LIST ARGUMENT NAME k NAME key serde PARAMETER serde v val serde TYPE serde v NAME serde v NAME serde ARGUMENT LIST ARGUMENT NAME v NAME val serde PARAMETER string topic TYPE string NAME string NAME topic BLOCK EXPR to key serde val serde null topic CALL to key serde val serde null topic NAME to ARGUMENT LIST ARGUMENT EXPR key serde NAME key serde ARGUMENT EXPR val serde NAME val serde ARGUMENT EXPR null ARGUMENT EXPR topic NAME topic override NN public NN void NN to TO serde NN k NN key JJ serde NN root ROOT serde amod serde key serde NN v LS val NN serde NN root ROOT serde compound serde val string NN topic NN to TO key JJ serde NN root ROOT serde amod serde key val NN serde NN root ROOT serde compound serde val null JJ topic NN k v SYNONYM SYNONYM,1,B5,kafka/streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamImpl.java,357
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME to PARAMETER LIST serde k key serde serde v val serde string topic PARAMETER serde k key serde TYPE serde k NAME serde k NAME serde ARGUMENT LIST ARGUMENT NAME k NAME key serde PARAMETER serde v val serde TYPE serde v NAME serde v NAME serde ARGUMENT LIST ARGUMENT NAME v NAME val serde PARAMETER string topic TYPE string NAME string NAME topic BLOCK EXPR this to stream to key serde val serde null topic CALL this to stream NAME this to stream NAME this NAME to stream ARGUMENT LIST CALL to key serde val serde null topic NAME to ARGUMENT LIST ARGUMENT EXPR key serde NAME key serde ARGUMENT EXPR val serde NAME val serde ARGUMENT EXPR null ARGUMENT EXPR topic NAME topic override NN public NN void NN to TO serde NN k NN key JJ serde NN root ROOT serde amod serde key serde NN v LS val NN serde NN root ROOT serde compound serde val string NN topic NN this DT to TO stream NN to TO key JJ serde NN root ROOT serde amod serde key val NN serde NN root ROOT serde compound serde val null JJ topic NN k v SYNONYM SYNONYM,1,B5,kafka/streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableImpl.java,402
DECL STMT SPECIFIER private TYPE int NAME int NAME remaining private JJ int NN remaining VBG,1,D2,kafka/clients/src/main/java/org/apache/kafka/common/requests/RecordsSend.java,33
COMMENT find coordinator api DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME find coordinator response INIT find coordinator response v find coordinator response v EXPR find coordinator response v find coordinator response v BLOCK EXPR find coordinator response v NAME find coordinator response v EXPR find coordinator response v NAME find coordinator response v find coordinator api root ROOT find dobj find coordinator dep find api public NN static JJ final JJ schema NN find VB coordinator NN response NN root ROOT find compound response coordinator dobj find response find VB coordinator NN response NN v LS root ROOT find compound response coordinator dobj find response dep find v find VB coordinator NN response NN v LS root ROOT find compound response coordinator dobj find response dep find v,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,868
DECL STMT SPECIFIER private TYPE long NAME long NAME last refresh ms private JJ long RB last JJ refresh VB ms NNS root ROOT ms amod ms last compound ms refresh,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/Metadata.java,60
DECL STMT SPECIFIER private TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME message private JJ final JJ byte NN message NN,1,D1,kafka/tools/src/main/java/org/apache/kafka/tools/ClientCompatibilityTest.java,205
COMMENT code offset storage topic code DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME offset storage topic config INIT offset storage topic EXPR offset storage topic code offset storage topic code root ROOT offset nsubj offset code compound code storage compound code topic dobj offset code public NN static JJ final JJ string NN offset VBN storage NN topic NN config NN root ROOT offset compound config storage compound config topic dobj offset config offset VBN storage NN topic NN root ROOT topic amod topic offset compound topic storage,0,N/A,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedConfig.java,90
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME num segments INIT EXPR private JJ final JJ int NN num NN segments NNS root ROOT segments compound segments num,0,N/A,kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBWindowStoreTest.java,66
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME partitions INIT partitions EXPR partitions public NN static JJ final JJ string NN partitions NNS partitions NNS,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/requests/OffsetsForLeaderEpochRequest.java,34
FUNCTION SPECIFIER private TYPE void NAME void NAME check all threads dead and set error PARAMETER LIST BLOCK SYNCHRONIZED synchronized state lock if we are pending a shutdown it s ok for all threads to die in fact it is expected otherwise it is an error if state pending shutdown one thread died check if we have enough threads running for final stream thread state state thread state values if state stream thread state dead return log warn all stream threads have died the kafka streams instance will be in an error state and should be closed log prefix set state error INIT state lock EXPR state lock NAME state lock BLOCK COMMENT if we are pending a shutdown it s ok for all threads to die in fact COMMENT it is expected otherwise it is an error IF if state pending shutdown one thread died check if we have enough threads running for final stream thread state state thread state values if state stream thread state dead return log warn all stream threads have died the kafka streams instance will be in an error state and should be closed log prefix set state error CONDITION state pending shutdown EXPR state pending shutdown NAME state NAME pending shutdown THEN one thread died check if we have enough threads running for final stream thread state state thread state values if state stream thread state dead return log warn all stream threads have died the kafka streams instance will be in an error state and should be closed log prefix set state error BLOCK COMMENT one thread died check if we have enough threads running FOR for final stream thread state state thread state values if state stream thread state dead return CONTROL final stream thread state state thread state values INIT final stream thread state state thread state values TYPE final stream thread state SPECIFIER final NAME stream thread state NAME stream thread NAME state NAME state RANGE thread state values EXPR thread state values CALL thread state values NAME thread state values NAME thread state NAME values ARGUMENT LIST BLOCK IF if state stream thread state dead return CONDITION state stream thread state dead EXPR state stream thread state dead NAME state NAME stream thread state dead NAME stream thread NAME state NAME dead THEN return BLOCK RETURN return EXPR log warn all stream threads have died the kafka streams instance will be in an error state and should be closed log prefix CALL log warn all stream threads have died the kafka streams instance will be in an error state and should be closed log prefix NAME log warn NAME log NAME warn ARGUMENT LIST ARGUMENT EXPR all stream threads have died the kafka streams instance will be in an error state and should be closed ARGUMENT EXPR log prefix NAME log prefix EXPR set state error CALL set state error NAME set state ARGUMENT LIST ARGUMENT EXPR error NAME error private JJ void NN check VB all DT threads NNS dead JJ and CC set VBN error NN root ROOT check det threads all dobj check threads amod error dead cc dead and conj and dead set amod error set dep threads error synchronized VBN state NN lock NN root ROOT lock compound lock state if we are pending a shutdown it s ok for all threads to die in fact root ROOT pending mark pending if nsubj pending we aux pending are det shutdown a dobj pending shutdown nsubj ok it cop ok s acl relcl shutdown ok case threads for det threads all nmod for ok threads mark die to acl to ok die case fact in nmod in die fact it is expected otherwise it is an error root ROOT expected nsubjpass expected it auxpass expected is advmod error otherwise nsubj error it cop error is det error an ccomp expected error it is expected otherwise it is an error root ROOT expected nsubjpass expected it auxpass expected is advmod error otherwise nsubj error it cop error is det error an ccomp expected error if IN state NN pending VBG shutdown NN root ROOT shutdown case shutdown pending one thread died check if we have enough threads running root ROOT died nummod thread one nsubj died thread dobj died check mark have if nsubj have we advcl if died have amod threads enough nsubj running threads ccomp have running for IN final JJ stream NN thread NN state NN root ROOT state compound state stream compound state thread state NN thread NN state NN values NNS root ROOT values compound values thread compound values state if IN state NN stream NN thread NN state NN dead JJ root ROOT dead compound state stream compound state thread nsubj dead state return NN log NN warn VBP root ROOT warn nsubj warn log all DT stream NN threads NNS have VB died VBD the DT kafka FW streams NNS instance NN will MD be VB in IN an DT error NN state NN and CC should MD be VB closed VBN log NN prefix NN root ROOT prefix compound prefix log set VBN state NN root ROOT set dobj set state error NN,1,B2,kafka/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java,331
COMMENT a slice of in to avoid unnecessary copies DECL STMT SPECIFIER private TYPE byte buffer NAME byte buffer NAME decompressed buffer a slice of in to avoid unnecessary copies root ROOT slice det slice a mark avoid of mark avoid in mark avoid to acl to slice avoid amod copies unnecessary dobj avoid copies private JJ byte NN buffer NN root ROOT buffer compound buffer byte decompressed VBN buffer NN root ROOT buffer amod buffer decompressed,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/record/KafkaLZ4BlockInputStream.java,64
COMMENT internal stats DECL STMT SPECIFIER private TYPE long NAME long NAME num flushes INIT EXPR internal stats root ROOT stats amod stats internal private JJ long RB num NN flushes VBZ root ROOT flushes nsubj flushes num internal private SYNONYM SYNONYM,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/state/internals/NamedCache.java,54
COMMENT offsets for leader epoch api DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME write txn request INIT write txn markers request v EXPR write txn markers request v BLOCK EXPR write txn markers request v NAME write txn markers request v offsets for leader epoch api root ROOT offsets case epoch for compound epoch leader nmod for offsets epoch dep offsets api public NN static JJ final JJ schema NN write VB txn NN request NN root ROOT write compound request txn dobj write request write VB txn NN markers NNS request NN v LS root ROOT write compound request txn compound request markers dobj write request dep write v,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,1521
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME task class config INIT task class EXPR task class public NN static JJ final JJ string NN task NN class NN config NN root ROOT config compound config task compound config class task NN class NN,0,N/A,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/runtime/TaskConfig.java,35
COMMENT sasl mechanism configuration standard mechanism names are listed a href http www iana org assignments sasl mechanisms sasl mechanisms xhtml here a DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME sasl kerberos principal to local rules INIT sasl kerberos principal to local rules EXPR sasl kerberos principal to local rules sasl mechanism configuration standard mechanism names are listed a href http www iana org assignments sasl mechanisms sasl mechanisms xhtml here a root ROOT listed compound names sasl compound names mechanism compound names configuration amod names standard compound names mechanism nsubjpass listed names auxpass listed are det mechanisms a compound mechanisms href compound mechanisms http compound mechanisms www compound mechanisms iana compound mechanisms org compound mechanisms assignments amod mechanisms sasl dobj listed mechanisms amod mechanisms sasl nsubj xhtml mechanisms acl relcl mechanisms xhtml advmod xhtml here dobj xhtml a sasl mechanism configuration standard mechanism names are listed a href http www iana org assignments sasl mechanisms sasl mechanisms xhtml here a root ROOT listed compound names sasl compound names mechanism compound names configuration amod names standard compound names mechanism nsubjpass listed names auxpass listed are det mechanisms a compound mechanisms href compound mechanisms http compound mechanisms www compound mechanisms iana compound mechanisms org compound mechanisms assignments amod mechanisms sasl dobj listed mechanisms amod mechanisms sasl nsubj xhtml mechanisms acl relcl mechanisms xhtml advmod xhtml here dobj xhtml a public NN static JJ final JJ string NN sasl NN kerberos NNS principal JJ to TO local JJ rules NNS root ROOT kerberos compound kerberos sasl amod kerberos principal case rules to amod rules local nmod to principal rules sasl NN kerberos NNS principal JJ to TO local JJ rules NNS root ROOT kerberos compound kerberos sasl amod kerberos principal case rules to amod rules local nmod to principal rules names are ANTONYM ANTONYM,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/config/SaslConfigs.java,64
DECL STMT SPECIFIER public TYPE final int SPECIFIER final NAME int NAME num partitions public NN final JJ int NN num NN partitions NNS root ROOT partitions compound partitions num,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/requests/CreateTopicsRequest.java,49
COMMENT sasl handshake api DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME sasl handshake response INIT sasl handshake response v EXPR sasl handshake response v BLOCK EXPR sasl handshake response v NAME sasl handshake response v sasl handshake api root ROOT handshake compound handshake sasl dep handshake api public NN static JJ final JJ schema NN sasl NN handshake NN response NN root ROOT response compound response sasl compound response handshake sasl NN handshake NN response NN v LS root ROOT v compound response sasl compound response handshake nsubj v response,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,1177
DECL STMT SPECIFIER private TYPE kerberos short namer NAME kerberos short namer NAME kerberos short namer private JJ kerberos NNS short JJ namer NN root ROOT namer compound namer kerberos amod namer short kerberos NNS short JJ namer NN root ROOT namer compound namer kerberos amod namer short,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/network/SaslChannelBuilder.java,54
DECL STMT SPECIFIER private TYPE final string SPECIFIER final NAME string NAME string INDEX NAME topic INIT topic EXPR topic BLOCK EXPR topic private JJ final JJ string NN topic NN topic NN,1,D1,kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java,82
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME min insync replicas config INIT min insync replicas EXPR min insync replicas private JJ static JJ final JJ string NN min NN insync NN replicas VBZ config NN root ROOT replicas compound insync min nsubj replicas insync dobj replicas config min NN insync NN replicas VBZ root ROOT replicas compound insync min nsubj replicas insync,0,N/A,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/util/TopicAdmin.java,47
DECL STMT SPECIFIER private TYPE final byte buffer SPECIFIER final NAME byte buffer NAME metadata private JJ final JJ byte NN buffer NN root ROOT buffer compound buffer byte metadata NN,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/requests/JoinGroupRequest.java,50
DECL STMT SPECIFIER private TYPE byte NAME byte NAME byte INDEX NAME key private JJ byte NN key NN,1,D1,kafka/clients/src/main/java/org/apache/kafka/clients/producer/internals/ErrorLoggingCallback.java,29
COMMENT with mix of integer string in connect DECL STMT SPECIFIER private SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME raw value INIT value get bytes EXPR value get bytes CALL get bytes NAME get bytes ARGUMENT LIST with mix of integer string in connect root ROOT mix case mix with case string of compound string integer nmod of mix string mark connect in acl in mix connect private JJ static JJ final JJ byte NN raw JJ value NN root ROOT value amod value raw value NN get VB bytes NNS root ROOT get dobj get bytes,1,D1,kafka/connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerSinkTaskThreadedTest.java,82
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME file delete delay ms config INIT file delete delay ms EXPR file delete delay ms public NN static JJ final JJ string NN file NN delete VB delay NN ms NNS config VBP root ROOT config nsubj config file acl file delete compound ms delay dobj delete ms file NN delete VB delay NN ms NNS root ROOT delete nsubj delete file compound ms delay dobj delete ms,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/config/TopicConfig.java,90
COMMENT code request timeout ms code DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME client id config INIT common client configs client id config EXPR common client configs client id config NAME common client configs client id config NAME common client configs NAME client id config code request timeout ms code root ROOT ms compound timeout code compound timeout request nsubj ms timeout dobj ms code public NN static JJ final JJ string NN client NN id VBD config NN root ROOT id nsubj id client dobj id config common JJ client NN configs NNS client NN root ROOT client amod client common compound client client compound client configs id NN config NN root ROOT config compound config id,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/admin/AdminClientConfig.java,73
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME num millis INIT EXPR private JJ static JJ final JJ int NN num NN millis NNS root ROOT millis compound millis num,0,N/A,kafka/connect/api/src/test/java/org/apache/kafka/connect/data/TimestampTest.java,32
COMMENT code reconnect backoff max ms code DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME reconnect backoff max ms config INIT common client configs reconnect backoff max ms config EXPR common client configs reconnect backoff max ms config NAME common client configs reconnect backoff max ms config NAME common client configs NAME reconnect backoff max ms config code reconnect backoff max ms code root ROOT ms compound max code compound max reconnect compound max backoff nsubj ms max dobj ms code public NN static JJ final JJ string NN reconnect VB backoff FW max FW ms FW config FW root ROOT reconnect compound ms backoff compound ms max dobj reconnect ms dep ms config common JJ client NN configs NNS reconnect VBP root ROOT reconnect amod configs common compound configs client nsubj reconnect configs backoff NN max NN ms VBZ config NN root ROOT ms compound max backoff nsubj ms max dobj ms config,0,N/A,kafka/clients/src/main/java/org/apache/kafka/clients/admin/AdminClientConfig.java,54
DECL STMT SPECIFIER private TYPE final byte buffer SPECIFIER final NAME byte buffer NAME size private JJ final JJ byte NN buffer NN root ROOT buffer compound buffer byte size NN,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/network/NetworkReceive.java,34
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME max cache size bytes INIT EXPR private JJ static JJ final JJ int NN max NN cache NN size NN bytes NNS root ROOT bytes compound bytes max compound bytes cache compound bytes size,0,N/A,kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CachingSessionStoreTest.java,53
DECL STMT SPECIFIER public TYPE int NAME int NAME num partitions public NN int NN num NN partitions NNS root ROOT partitions compound partitions num,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamPartitionAssignor.java,142
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME transforms doc INIT aliases for the transformations to be applied to records EXPR aliases for the transformations to be applied to records private JJ static JJ final JJ string NN transforms VBZ doc NN root ROOT transforms dobj transforms doc aliases NNS for IN the DT transformations NNS to TO be VB applied VBN to TO records NNS,0,N/A,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectorConfig.java,83
COMMENT offsets for leader epoch api DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME write txn response INIT write txn markers response v EXPR write txn markers response v BLOCK EXPR write txn markers response v NAME write txn markers response v offsets for leader epoch api root ROOT offsets case epoch for compound epoch leader nmod for offsets epoch dep offsets api public NN static JJ final JJ schema NN write VB txn NN response NN root ROOT write compound response txn dobj write response write VB txn NN markers NNS response NN v LS root ROOT write compound response txn compound response markers dobj write response dep write v,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,1522
DECL STMT SPECIFIER private TYPE byte NAME byte NAME byte INDEX NAME key INIT key get bytes EXPR key get bytes CALL get bytes NAME get bytes ARGUMENT LIST private JJ byte NN key NN key NN get VB bytes NNS root ROOT get dobj get bytes,1,D1,kafka/clients/src/test/java/org/apache/kafka/clients/producer/internals/RecordAccumulatorTest.java,83
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE app configuration entry NAME app configuration entry NAME app configuration entry INDEX NAME get app configuration entry PARAMETER LIST string name PARAMETER string name TYPE string NAME string NAME name BLOCK RETURN return entry map get name EXPR entry map get name CALL entry map get name NAME entry map get NAME entry map NAME get ARGUMENT LIST ARGUMENT EXPR name NAME name override NN public NN app NN configuration NN entry NN root ROOT entry compound entry app compound entry configuration get VB app NN configuration NN entry NN root ROOT get compound entry app compound entry configuration dobj get entry string NN name NN return NN entry NN map NN get VB root ROOT get compound map entry nsubj get map name NN,0,N/A,kafka/clients/src/test/java/org/apache/kafka/common/security/authenticator/TestJaasConfig.java,79
COMMENT validates that this struct has filled in all the necessary data with valid values for required fields without defaults this validates that a value has been set and has matching types schemas if any validation fails throws a data exception FUNCTION SPECIFIER public TYPE void NAME void NAME validate PARAMETER LIST BLOCK FOR for field field schema fields schema field schema field schema object value values field index if value null field schema is optional field schema default value null continue connect schema validate value field name field schema value CONTROL field field schema fields INIT field field schema fields TYPE field NAME field NAME field RANGE schema fields EXPR schema fields CALL schema fields NAME schema fields NAME schema NAME fields ARGUMENT LIST BLOCK DECL STMT TYPE schema NAME schema NAME field schema INIT field schema EXPR field schema CALL field schema NAME field schema NAME field NAME schema ARGUMENT LIST DECL STMT TYPE object NAME object NAME value INIT values field index EXPR values field index NAME values field index NAME values INDEX field index EXPR field index CALL field index NAME field index NAME field NAME index ARGUMENT LIST IF if value null field schema is optional field schema default value null continue CONDITION value null field schema is optional field schema default value null EXPR value null field schema is optional field schema default value null NAME value CALL field schema is optional NAME field schema is optional NAME field schema NAME is optional ARGUMENT LIST CALL field schema default value NAME field schema default value NAME field schema NAME default value ARGUMENT LIST THEN continue BLOCK CONTINUE continue EXPR connect schema validate value field name field schema value CALL connect schema validate value field name field schema value NAME connect schema validate value NAME connect schema NAME validate value ARGUMENT LIST ARGUMENT EXPR field name CALL field name NAME field name NAME field NAME name ARGUMENT LIST ARGUMENT EXPR field schema NAME field schema ARGUMENT EXPR value NAME value validates that this struct has filled in all the necessary data with valid values for required fields root ROOT validates mark filled that det struct this nsubj filled struct aux filled has ccomp validates filled case data in det predet data all det data the amod data necessary nmod in filled data case values with amod values valid nmod with data values case fields for amod fields required nmod for values fields validates that this struct has filled in all the necessary data with valid values for required fields root ROOT validates mark filled that det struct this nsubj filled struct aux filled has ccomp validates filled case data in det predet data all det data the amod data necessary nmod in filled data case values with amod values valid nmod with data values case fields for amod fields required nmod for values fields without defaults this validates that a value has been set and has matching types schemas if any validation root ROOT validates case defaults without nmod without validates defaults nsubj validates this mark set that det value a nsubjpass set value aux set has auxpass set been ccomp validates set cc set and aux schemas has amod types matching nsubj schemas types ccomp validates schemas conj and set schemas case validation if det validation any nmod if schemas validation without defaults this validates that a value has been set and has matching types schemas if any validation root ROOT validates case defaults without nmod without validates defaults nsubj validates this mark set that det value a nsubjpass set value aux set has auxpass set been ccomp validates set cc set and aux schemas has amod types matching nsubj schemas types ccomp validates schemas conj and set schemas case validation if det validation any nmod if schemas validation fails throws a data exception root ROOT throws nsubj throws fails det exception a compound exception data dobj throws exception public NN void NN validate VB for IN field NN field NN schema NN fields NNS root ROOT fields compound fields schema schema NN field NN schema NN root ROOT schema compound schema field field NN schema NN root ROOT schema compound schema field object NN value NN values NNS field NN index NN root ROOT index compound index field if IN value NN null JJ field NN schema NN is VBZ optional JJ root ROOT optional compound schema field nsubj optional schema cop optional is field NN schema NN default NN value NN root ROOT value compound value field compound value schema compound value default null JJ continue VB connect VB schema NN validate NN value NN root ROOT connect compound value schema compound value validate dobj connect value field NN name NN root ROOT name compound name field field NN schema NN root ROOT schema compound schema field value NN all any ANTONYM ANTONYM been matching ANTONYM ANTONYM filled matching ANTONYM ANTONYM filled required ANTONYM ANTONYM filled void ANTONYM ANTONYM has filled ANTONYM ANTONYM has required ANTONYM ANTONYM valid void ANTONYM ANTONYM validates void ANTONYM ANTONYM void validate ANTONYM ANTONYM,0,N/A,kafka/connect/api/src/main/java/org/apache/kafka/connect/data/Struct.java,225
COMMENT transactions api DECL STMT SPECIFIER public SPECIFIER static TYPE final schema SPECIFIER final NAME schema NAME schema INDEX NAME init producer id response INIT init producer id response v EXPR init producer id response v BLOCK EXPR init producer id response v NAME init producer id response v transactions api root ROOT transactions dep transactions api public NN static JJ final JJ schema NN init NN producer NN id NN response NN root ROOT response compound response init compound response producer compound response id init NN producer NN id NN response NN v LS root ROOT v compound response init compound response producer compound response id nsubj v response,1,D1,kafka/clients/src/main/java/org/apache/kafka/common/protocol/Protocol.java,1344
DECL STMT SPECIFIER private TYPE int NAME int NAME max bytes INIT integer max value EXPR integer max value NAME integer max value NAME integer NAME max value private JJ int NN max NN bytes NNS root ROOT bytes compound bytes max integer NN max NN root ROOT max compound max integer value NN,1,E1,kafka/clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java,117
COMMENT possible error codes unsupported version DECL STMT SPECIFIER private TYPE final map short api version SPECIFIER final NAME map short api version NAME map ARGUMENT LIST ARGUMENT NAME short ARGUMENT NAME api version NAME api key to api version possible error codes root ROOT codes amod codes possible compound codes error unsupported version root ROOT version amod version unsupported private JJ final JJ map NN short RB api NN version NN root ROOT version compound version api api NN key NN to TO api VB version NN root ROOT key compound key api mark api to acl to key api dobj api version,0,N/A,kafka/clients/src/main/java/org/apache/kafka/common/requests/ApiVersionsResponse.java,50
COMMENT partition level field names DECL STMT SPECIFIER private TYPE final short SPECIFIER final NAME short NAME acks partition level field names root ROOT names compound names partition compound names level compound names field private JJ final JJ short RB acks NNS,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/requests/ProduceRequest.java,102
DECL STMT SPECIFIER private TYPE final byte buffer SPECIFIER final NAME byte buffer NAME value private JJ final JJ byte NN buffer NN root ROOT buffer compound buffer byte value NN,1,D1,kafka/clients/src/test/java/org/apache/kafka/common/record/LegacyRecordTest.java,41
FUNCTION ANNOTATION test NAME test SPECIFIER public TYPE void NAME void NAME long to json PARAMETER LIST BLOCK DECL STMT TYPE json node NAME json node NAME converted INIT parse converter from connect data topic schema int schema l EXPR parse converter from connect data topic schema int schema l CALL parse converter from connect data topic schema int schema l NAME parse ARGUMENT LIST ARGUMENT EXPR converter from connect data topic schema int schema l CALL converter from connect data topic schema int schema l NAME converter from connect data NAME converter NAME from connect data ARGUMENT LIST ARGUMENT EXPR topic NAME topic ARGUMENT EXPR schema int schema NAME schema int schema NAME schema NAME int schema ARGUMENT EXPR l EXPR validate envelope converted CALL validate envelope converted NAME validate envelope ARGUMENT LIST ARGUMENT EXPR converted NAME converted EXPR assert equals parse type int optional false converted get json schema envelope schema field name CALL assert equals parse type int optional false converted get json schema envelope schema field name NAME assert equals ARGUMENT LIST ARGUMENT EXPR parse type int optional false CALL parse type int optional false NAME parse ARGUMENT LIST ARGUMENT EXPR type int optional false ARGUMENT EXPR converted get json schema envelope schema field name CALL converted get json schema envelope schema field name NAME converted get NAME converted NAME get ARGUMENT LIST ARGUMENT EXPR json schema envelope schema field name NAME json schema envelope schema field name NAME json schema NAME envelope schema field name EXPR assert equals l converted get json schema envelope payload field name long value CALL assert equals l converted get json schema envelope payload field name long value NAME assert equals ARGUMENT LIST ARGUMENT EXPR l ARGUMENT EXPR converted get json schema envelope payload field name long value CALL converted get json schema envelope payload field name NAME converted get NAME converted NAME get ARGUMENT LIST ARGUMENT EXPR json schema envelope payload field name NAME json schema envelope payload field name NAME json schema NAME envelope payload field name CALL long value NAME long value ARGUMENT LIST test NN public NN void NN long RB to TO json NN root ROOT long case json to nmod to long json json NN node NN root ROOT node compound node json converted VBN parse VB converter NN from IN connect VB data NNS root ROOT converter mark connect from acl from converter connect dobj connect data topic NN schema NN int NN root ROOT int compound int schema schema NN l NN validate VB envelope NN root ROOT validate dobj validate envelope converted VBN assert VB equals VBZ root ROOT equals nsubj equals assert parse VB type NN int NN optional JJ false JJ converted VBN get VB root ROOT converted dep converted get json NN schema NN envelope NN root ROOT envelope compound envelope json compound envelope schema schema NN field NN name NN root ROOT name compound name schema compound name field assert VB equals VBZ root ROOT equals nsubj equals assert l NN converted VBN get VB root ROOT converted dep converted get json NN schema NN envelope NN root ROOT envelope compound envelope json compound envelope schema payload NN field NN name NN root ROOT name compound name payload compound name field long RB value NN root ROOT value amod value long,1,B5,kafka/connect/json/src/test/java/org/apache/kafka/connect/json/JsonConverterTest.java,461
COMMENT this is used in the extended k stream builder DECL STMT SPECIFIER private TYPE final map string string SPECIFIER final NAME map string string NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME string NAME store to changelog topic INIT new hash map EXPR new hash map CALL hash map NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST this is used in the extended k stream builder root ROOT used nsubjpass used this auxpass used is case builder in det builder the amod builder extended compound builder k compound builder stream nmod in used builder private JJ final JJ map NN string NN string NN store NN to TO changelog NN topic NN root ROOT store case topic to compound topic changelog nmod to store topic new JJ hash VB map NN root ROOT hash dobj hash map is map ANTONYM ANTONYM used new ANTONYM ANTONYM,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/processor/TopologyBuilder.java,112
FUNCTION SPECIFIER public TYPE void NAME void NAME ensure active PARAMETER LIST BLOCK EXPR coordinator poll CALL coordinator poll NAME coordinator poll NAME coordinator NAME poll ARGUMENT LIST ARGUMENT EXPR public NN void NN ensure VB active JJ root ROOT ensure xcomp ensure active coordinator NN poll NN root ROOT poll compound poll coordinator,1,B2,kafka/connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/WorkerGroupMember.java,139
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME num brokers INIT EXPR private JJ static JJ final JJ int NN num NN brokers NNS root ROOT brokers compound brokers num,0,N/A,kafka/streams/src/test/java/org/apache/kafka/streams/integration/KStreamsFineGrainedAutoResetIntegrationTest.java,63
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE string buffer NAME string buffer NAME get request url PARAMETER LIST BLOCK RETURN return request util get request url this EXPR request util get request url this CALL request util get request url this NAME request util get request url NAME request util NAME get request url ARGUMENT LIST ARGUMENT EXPR this NAME this override NN public NN string NN buffer NN root ROOT buffer compound buffer string get VB request NN url NN root ROOT get compound url request dobj get url return NN request NN util NN get VB request NN url NN root ROOT get compound util request nsubj get util compound url request dobj get url this DT,0,N/A,tomcat/java/org/apache/catalina/filters/RemoteIpFilter.java,622
COMMENT storage for the message to be sent DECL STMT SPECIFIER private TYPE byte NAME byte NAME byte INDEX NAME message storage for the message to be sent root ROOT storage mark sent for det message the nsubjpass sent message mark sent to auxpass sent be acl to storage sent private JJ byte NN message NN,1,D1,tomcat/java/org/apache/catalina/tribes/ByteMessage.java,43
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME size private JJ final JJ int NN size NN,0,N/A,tomcat/java/javax/el/BeanELResolver.java,352
COMMENT constants DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME adapter notes INIT EXPR constants public NN static JJ final JJ int NN adapter NN notes NNS root ROOT notes compound notes adapter,1,E1,tomcat/java/org/apache/catalina/connector/CoyoteAdapter.java,78
COMMENT hsts DECL STMT SPECIFIER private TYPE int NAME int NAME hsts max age seconds INIT EXPR hsts private JJ int NN hsts NNS max NN age NN seconds NNS root ROOT seconds compound seconds hsts compound seconds max compound seconds age,0,N/A,tomcat/java/org/apache/catalina/filters/HttpHeaderSecurityFilter.java,44
COMMENT a conditional node is constructed if its condition is true all the nodes that have been pushed since the node was opened are made children of the conditional node which is then pushed on to the stack if the condition is false the node is not constructed and they are left on the stack FUNCTION SPECIFIER public TYPE void NAME void NAME close node scope PARAMETER LIST node n boolean condition PARAMETER node n TYPE node NAME node NAME n PARAMETER boolean condition TYPE boolean NAME boolean NAME condition BLOCK IF if condition int a node arity mk marks remove marks size while a node c pop node c jjt set parent n n jjt add child c a n jjt close push node n node created true else mk marks remove marks size node created false CONDITION condition EXPR condition NAME condition THEN int a node arity mk marks remove marks size while a node c pop node c jjt set parent n n jjt add child c a n jjt close push node n node created true BLOCK DECL STMT TYPE int NAME int NAME a INIT node arity EXPR node arity CALL node arity NAME node arity ARGUMENT LIST EXPR mk marks remove marks size NAME mk CALL marks remove marks size NAME marks remove NAME marks NAME remove ARGUMENT LIST ARGUMENT EXPR marks size CALL marks size NAME marks size NAME marks NAME size ARGUMENT LIST WHILE while a node c pop node c jjt set parent n n jjt add child c a CONDITION a EXPR a NAME a BLOCK DECL STMT TYPE node NAME node NAME c INIT pop node EXPR pop node CALL pop node NAME pop node ARGUMENT LIST EXPR c jjt set parent n CALL c jjt set parent n NAME c jjt set parent NAME c NAME jjt set parent ARGUMENT LIST ARGUMENT EXPR n NAME n EXPR n jjt add child c a CALL n jjt add child c a NAME n jjt add child NAME n NAME jjt add child ARGUMENT LIST ARGUMENT EXPR c NAME c ARGUMENT EXPR a NAME a EXPR n jjt close CALL n jjt close NAME n jjt close NAME n NAME jjt close ARGUMENT LIST EXPR push node n CALL push node n NAME push node ARGUMENT LIST ARGUMENT EXPR n NAME n EXPR node created true NAME node created ELSE else mk marks remove marks size node created false BLOCK EXPR mk marks remove marks size NAME mk CALL marks remove marks size NAME marks remove NAME marks NAME remove ARGUMENT LIST ARGUMENT EXPR marks size CALL marks size NAME marks size NAME marks NAME size ARGUMENT LIST EXPR node created false NAME node created a conditional node is constructed if its condition is true all root ROOT constructed det node a amod node conditional nsubjpass constructed node auxpass constructed is mark true if nmod poss condition its nsubj true condition cop true is advcl if constructed true dep constructed all a conditional node is constructed if its condition is true all root ROOT constructed det node a amod node conditional nsubjpass constructed node auxpass constructed is mark true if nmod poss condition its nsubj true condition cop true is advcl if constructed true dep constructed all the DT nodes NNS that IN have VB been VBN pushed VBN since IN the DT node NN was VBD opened VBN are VBP made VBN children NNS of IN the DT conditional JJ node NN which WDT is VBZ then RB pushed VBN on IN to TO the DT stack VB if IN the DT condition NN is VBZ false JJ the DT node NN is VBZ not RB constructed VBN and CC they PRP are VBP left RB on IN the DT stack VB public NN void NN close RB node NN scope NN root ROOT scope amod scope close compound scope node node NN n NN boolean NN condition NN if IN condition NN int NN a DT node NN arity NN root ROOT arity compound arity node mk NN marks NNS remove VB root ROOT remove nsubj remove marks marks NNS size NN root ROOT size compound size marks while IN a DT node NN c NN pop NN node NN root ROOT node compound node pop c NN jjt NN set VBN parent NN root ROOT set compound jjt c nsubj set jjt dobj set parent n NN n NN jjt NN add VBP child NN root ROOT add compound jjt n nsubj add jjt dobj add child c NN a DT n NN jjt NN close NN root ROOT close compound close n compound close jjt push NN node NN root ROOT node compound node push n NN node NN created VBD root ROOT created nsubj created node true JJ else RB mk NN marks NNS remove VB root ROOT remove nsubj remove marks marks NNS size NN root ROOT size compound size marks node NN created VBD root ROOT created nsubj created node false JJ are made ANTONYM ANTONYM been made ANTONYM ANTONYM constructed have ANTONYM ANTONYM have left ANTONYM ANTONYM have opened ANTONYM ANTONYM is made ANTONYM ANTONYM made left ANTONYM ANTONYM opened left ANTONYM ANTONYM opened made ANTONYM ANTONYM public opened ANTONYM ANTONYM pushed made ANTONYM ANTONYM true false ANTONYM ANTONYM was made ANTONYM ANTONYM false void SYNONYM SYNONYM,0,N/A,tomcat/java/org/apache/el/parser/JJTELParserState.java,106
DECL STMT SPECIFIER private TYPE volatile string SPECIFIER volatile NAME string NAME jdbc interceptors INIT null EXPR null private JJ volatile JJ string NN jdbc NN interceptors NNS root ROOT interceptors compound interceptors jdbc null JJ,1,E1,tomcat/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PoolProperties.java,75
DECL STMT TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME id final JJ byte NN id NN,1,D1,tomcat/java/org/apache/catalina/tribes/UniqueId.java,33
COMMENT jsse DECL STMT SPECIFIER private TYPE string NAME string NAME certificate key alias jsse private JJ string NN certificate NN key JJ alias NNS root ROOT alias compound alias certificate amod alias key,0,N/A,tomcat/java/org/apache/tomcat/util/net/SSLHostConfigCertificate.java,55
DECL STMT SPECIFIER private TYPE final string SPECIFIER final NAME string NAME credentials private JJ final JJ string NN credentials NNS,1,E1,tomcat/test/org/apache/catalina/authenticator/TestSSOnonLoginAndBasicAuthenticator.java,669
COMMENT disable ssl tls cbc vulnerability workaround that was added in open ssl d usually depending on the application protocol the workaround is not needed unfortunately some broken ssl tls implementations cannot handle it at all which is why we include it in ssl op all DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME ssl op dont insert empty fragments INIT x EXPR x disable ssl tls cbc vulnerability workaround that was added root ROOT disable compound workaround ssl compound workaround tls compound workaround cbc compound workaround vulnerability dobj disable workaround nsubjpass added workaround ref workaround that auxpass added was acl relcl workaround added in open ssl d usually depending on the application protocol root ROOT d case d in amod d open compound d ssl advmod depending usually acl d depending case protocol on det protocol the compound protocol application nmod on depending protocol the workaround is not needed unfortunately some broken ssl tls root ROOT needed det workaround the nsubjpass needed workaround auxpass needed is neg needed not advmod tls unfortunately det tls some amod tls broken compound tls ssl dobj needed tls the workaround is not needed unfortunately some broken ssl tls root ROOT needed det workaround the nsubjpass needed workaround auxpass needed is neg needed not advmod tls unfortunately det tls some amod tls broken compound tls ssl dobj needed tls implementations can not handle it at all which is why we include root ROOT handle nsubj handle implementations aux handle can neg handle not dobj handle it case all at nmod at handle all nsubj is all ref all which acl relcl all is advmod include why nsubj include we advcl is include it in ssl op all root ROOT it case op in compound op ssl nmod in it op det it all it in ssl op all root ROOT it case op in compound op ssl nmod in it op det it all public NN static JJ final JJ int NN ssl NN op NN dont JJ insert NN empty JJ fragments NNS root ROOT fragments compound fragments ssl compound fragments op amod fragments dont compound fragments insert amod fragments empty x NN added broken ANTONYM ANTONYM broken fragments ANTONYM ANTONYM some all ANTONYM ANTONYM d x SYNONYM SYNONYM,1,D2,tomcat/java/org/apache/tomcat/jni/SSL.java,111
COMMENT returns the message contents of this byte message return byte message contents can be null FUNCTION SPECIFIER public TYPE byte NAME byte NAME byte INDEX NAME get message PARAMETER LIST BLOCK RETURN return message EXPR message NAME message returns the message contents of this byte message root ROOT returns det contents the compound contents message dobj returns contents case message of det message this compound message byte nmod of contents message return byte message contents can be null root ROOT null compound contents return compound contents byte compound contents message nsubj null contents aux null can cop null be public NN byte NN get VB message NN root ROOT get dobj get message return NN message NN,0,N/A,tomcat/java/org/apache/catalina/tribes/ByteMessage.java,65
COMMENT decodes an integer in the hpack prefix format if the return value is it means that there was not enough data in the buffer to complete the decoding sequence p if this method returns then the source buffer will not have been modified param source the buffer that contains the integer param n the encoding prefix length return the encoded integer or if there was not enough data FUNCTION SPECIFIER static TYPE int NAME int NAME decode integer PARAMETER LIST byte buffer source int n PARAMETER byte buffer source TYPE byte buffer NAME byte buffer NAME source PARAMETER int n TYPE int NAME int NAME n THROWS throws hpack exception ARGUMENT EXPR hpack exception NAME hpack exception BLOCK IF if source remaining return CONDITION source remaining EXPR source remaining CALL source remaining NAME source remaining NAME source NAME remaining ARGUMENT LIST THEN return BLOCK RETURN return EXPR DECL STMT TYPE int NAME int NAME count INIT EXPR DECL STMT TYPE int NAME int NAME sp INIT source position EXPR source position CALL source position NAME source position NAME source NAME position ARGUMENT LIST DECL STMT TYPE int NAME int NAME mask INIT prefix table n EXPR prefix table n NAME prefix table n NAME prefix table INDEX n EXPR n NAME n DECL STMT TYPE int NAME int NAME i INIT mask source get EXPR mask source get NAME mask CALL source get NAME source get NAME source NAME get ARGUMENT LIST DECL STMT TYPE int NAME int NAME b IF if i prefix table n return i else int m do if count max integer octets throw new hpack exception sm get string hpack integer encoded over too many octets integer value of max integer octets if source remaining we have run out of data reset source position sp return b source get i i b prefix table m m while b CONDITION i prefix table n EXPR i prefix table n NAME i NAME prefix table n NAME prefix table INDEX n EXPR n NAME n THEN return i BLOCK RETURN return i EXPR i NAME i ELSE else int m do if count max integer octets throw new hpack exception sm get string hpack integer encoded over too many octets integer value of max integer octets if source remaining we have run out of data reset source position sp return b source get i i b prefix table m m while b BLOCK DECL STMT TYPE int NAME int NAME m INIT EXPR DO do if count max integer octets throw new hpack exception sm get string hpack integer encoded over too many octets integer value of max integer octets if source remaining we have run out of data reset source position sp return b source get i i b prefix table m m while b BLOCK IF if count max integer octets throw new hpack exception sm get string hpack integer encoded over too many octets integer value of max integer octets CONDITION count max integer octets EXPR count max integer octets NAME count NAME max integer octets THEN throw new hpack exception sm get string hpack integer encoded over too many octets integer value of max integer octets BLOCK THROW throw new hpack exception sm get string hpack integer encoded over too many octets integer value of max integer octets EXPR new hpack exception sm get string hpack integer encoded over too many octets integer value of max integer octets CALL hpack exception sm get string hpack integer encoded over too many octets integer value of max integer octets NAME hpack exception ARGUMENT LIST ARGUMENT EXPR sm get string hpack integer encoded over too many octets integer value of max integer octets CALL sm get string hpack integer encoded over too many octets integer value of max integer octets NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR hpack integer encoded over too many octets ARGUMENT EXPR integer value of max integer octets CALL integer value of max integer octets NAME integer value of NAME integer NAME value of ARGUMENT LIST ARGUMENT EXPR max integer octets NAME max integer octets IF if source remaining we have run out of data reset source position sp return CONDITION source remaining EXPR source remaining CALL source remaining NAME source remaining NAME source NAME remaining ARGUMENT LIST THEN we have run out of data reset source position sp return BLOCK COMMENT we have run out of data COMMENT reset EXPR source position sp CALL source position sp NAME source position NAME source NAME position ARGUMENT LIST ARGUMENT EXPR sp NAME sp RETURN return EXPR EXPR b source get NAME b CALL source get NAME source get NAME source NAME get ARGUMENT LIST EXPR i i b prefix table m NAME i NAME i NAME b NAME prefix table m NAME prefix table INDEX m EXPR m NAME m EXPR m NAME m CONDITION b EXPR b NAME b RETURN return i EXPR i NAME i decodes an integer in the hpack prefix format if the return value is root ROOT decodes det integer an dobj decodes integer case format in det format the compound format hpack compound format prefix nmod in integer format mark is if det value the compound value return nsubj is value advcl if decodes is decodes an integer in the hpack prefix format if the return value is root ROOT decodes det integer an dobj decodes integer case format in det format the compound format hpack compound format prefix nmod in integer format mark is if det value the compound value return nsubj is value advcl if decodes is it means that there was not enough data in the buffer to complete the decoding root ROOT means nsubj means it mark was that expl was there ccomp means was neg was not amod data enough nsubj was data case buffer in det buffer the nmod in data buffer mark complete to acl to data complete det decoding the dobj complete decoding sequence p if this method returns then the source buffer will not have been modified root ROOT modified mark returns if det method this nsubj returns method advcl if modified returns advmod modified then det buffer the compound buffer source nsubjpass modified buffer aux modified will neg modified not aux modified have auxpass modified been param source the buffer that contains the integer root ROOT source compound source param det buffer the dep source buffer nsubj contains buffer ref buffer that acl relcl buffer contains det integer the dobj contains integer param n the encoding prefix length root ROOT n compound n param det length the amod length encoding compound length prefix dep n length return the encoded integer or if there was not enough data root ROOT return det integer the amod integer encoded dobj return integer cc return or mark was if expl was there conj or return was neg was not amod data enough nsubj was data static JJ int NN decode VB integer NN root ROOT decode dobj decode integer byte NN buffer NN root ROOT buffer compound buffer byte source NN int NN n NN throws VBZ hpack NN exception NN root ROOT exception compound exception hpack if IN source NN remaining VBG root ROOT source acl source remaining return NN int NN count NN int NN sp NN source NN position NN root ROOT position compound position source int NN mask NN prefix NN table NN root ROOT table compound table prefix n NN int NN i LS mask NN source NN get VB root ROOT get nsubj get source int NN b NN if IN i LS prefix NN table NN root ROOT table compound table prefix n NN return NN i LS else RB int NN m NN do VB if IN count NN max NN integer NN octets NNS root ROOT octets compound octets max compound octets integer throw VB new JJ hpack NN exception NN root ROOT exception compound exception hpack sm NN get VB string NN root ROOT get nsubj get sm dobj get string hpack NN integer NN encoded VBN over IN too RB many JJ octets NNS root ROOT encoded compound integer hpack nsubj encoded integer case octets over advmod many too amod octets many nmod over encoded octets integer NN value NN of IN root ROOT value compound value integer acl value of max NN integer NN octets NNS root ROOT octets compound octets max compound octets integer if IN source NN remaining VBG root ROOT source acl source remaining we have run out of data root ROOT run nsubj run we aux run have case data out mwe out of nmod out of run data reset source NN position NN root ROOT position compound position source sp NN return NN b NN source NN get VB root ROOT get nsubj get source i LS i LS b NN prefix NN table NN root ROOT table compound table prefix m NN m NN while IN b NN return NN i LS been contains ANTONYM ANTONYM contains throws ANTONYM ANTONYM decodes encoded ANTONYM ANTONYM decodes encoding ANTONYM ANTONYM decoding encoded ANTONYM ANTONYM decoding encoding ANTONYM ANTONYM have contains ANTONYM ANTONYM is contains ANTONYM ANTONYM return contains ANTONYM ANTONYM return have ANTONYM ANTONYM return throws ANTONYM ANTONYM returns contains ANTONYM ANTONYM returns have ANTONYM ANTONYM returns throws ANTONYM ANTONYM was contains ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/coyote/http2/Hpack.java,146
DECL STMT SPECIFIER protected SPECIFIER static TYPE final string manager SPECIFIER final NAME string manager NAME sm INIT string manager get manager order interceptor class EXPR string manager get manager order interceptor class CALL string manager get manager order interceptor class NAME string manager get manager NAME string manager NAME get manager ARGUMENT LIST ARGUMENT EXPR order interceptor class NAME order interceptor class NAME order interceptor NAME class protected VBN static JJ final JJ string NN manager NN root ROOT manager compound manager string sm NN string NN manager NN get VB manager NN root ROOT get compound manager string nsubj get manager dobj get manager order NN interceptor NN class NN,0,N/A,tomcat/java/org/apache/catalina/tribes/group/interceptors/OrderInterceptor.java,58
FUNCTION DECL protected abstract void set request body byte chunk body SPECIFIER protected SPECIFIER abstract TYPE void NAME void NAME set request body PARAMETER LIST byte chunk body PARAMETER byte chunk body TYPE byte chunk NAME byte chunk NAME body protected VBN abstract JJ void NN set VBN request NN body NN root ROOT set compound body request dobj set body byte NN chunk NN root ROOT chunk compound chunk byte body NN,1,B1,tomcat/java/org/apache/coyote/AbstractProcessor.java,580
DECL STMT SPECIFIER private TYPE string NAME string NAME is error page value private JJ string NN is VBZ error NN page NN value NN root ROOT value cop value is compound value error compound value page,1,D2,tomcat/java/org/apache/jasper/compiler/PageInfo.java,65
FUNCTION SPECIFIER public TYPE file NAME file NAME get deploy dir file PARAMETER LIST BLOCK IF if deploy dir file null return deploy dir file CONDITION deploy dir file null EXPR deploy dir file null NAME deploy dir file THEN return deploy dir file BLOCK RETURN return deploy dir file EXPR deploy dir file NAME deploy dir file DECL STMT TYPE file NAME file NAME dir INIT get absolute path get deploy dir EXPR get absolute path get deploy dir CALL get absolute path get deploy dir NAME get absolute path ARGUMENT LIST ARGUMENT EXPR get deploy dir CALL get deploy dir NAME get deploy dir ARGUMENT LIST EXPR this deploy dir file dir NAME this deploy dir file NAME this NAME deploy dir file NAME dir RETURN return dir EXPR dir NAME dir public NN file NN get VB deploy VB dir NN file NN root ROOT get xcomp get deploy compound file dir dobj deploy file if IN deploy VB dir NN file NN root ROOT deploy compound file dir dobj deploy file null JJ return NN deploy VB dir NN file NN root ROOT deploy compound file dir dobj deploy file file NN dir NN get VB absolute JJ path NN root ROOT get amod path absolute dobj get path get VB deploy VB dir NN root ROOT get xcomp get deploy dobj deploy dir this DT deploy NN dir NN file NN dir NN return NN dir NN,1,A1,tomcat/java/org/apache/catalina/ha/deploy/FarmWarDeployer.java,643
DECL STMT SPECIFIER private SPECIFIER static TYPE final char SPECIFIER final NAME char NAME char INDEX NAME hexadecimal INIT a b c d e f EXPR a b c d e f BLOCK EXPR EXPR EXPR EXPR EXPR a EXPR b EXPR c EXPR d EXPR e EXPR f private JJ static JJ final JJ char NN hexadecimal NN a DT b NN c NN d NN e SYM f SYM,1,D1,tomcat/java/org/apache/tomcat/util/security/MD5Encoder.java,36
COMMENT returns the value of the access to underlying connection allowed property return true if access to the underlying is allowed false otherwise FUNCTION SPECIFIER public SPECIFIER synchronized TYPE boolean NAME boolean NAME is access to underlying connection allowed PARAMETER LIST BLOCK RETURN return this access to underlying connection allowed EXPR this access to underlying connection allowed NAME this access to underlying connection allowed NAME this NAME access to underlying connection allowed returns the value of the access to underlying connection allowed property root ROOT returns det value the nsubj allowed value case access of det access the nmod of value access case connection to amod connection underlying nmod to access connection acl relcl returns allowed dobj allowed property return true if access to the underlying is allowed false otherwise root ROOT return amod return true mark allowed if nsubjpass allowed access case underlying to det underlying the nmod to access underlying auxpass allowed is advcl if true allowed xcomp allowed false advmod return otherwise public NN synchronized VBN boolean NN is VBZ access NN to TO underlying VBG connection NN allowed VBD root ROOT allowed cop access is nsubj allowed access case connection to amod connection underlying nmod to access connection return NN this DT access NN to TO underlying VBG connection NN allowed VBD true false ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/dbcp/dbcp2/cpdsadapter/PooledConnectionImpl.java,505
COMMENT deallocates or frees a memory block param mem previously allocated memory block to be freed FUNCTION DECL public static native void free long mem SPECIFIER public SPECIFIER static SPECIFIER native TYPE void NAME void NAME free PARAMETER LIST long mem PARAMETER long mem TYPE long NAME long NAME mem deallocates or frees a memory block root ROOT deallocates cc deallocates or conj or deallocates frees det block a compound block memory dep deallocates block param mem previously allocated memory block to be freed root ROOT allocated compound mem param nsubj allocated mem advmod allocated previously compound block memory dobj allocated block nsubjpass xsubj freed block mark freed to auxpass freed be xcomp allocated freed public NN static JJ native JJ void NN free JJ long RB mem NN block free ANTONYM ANTONYM block freed ANTONYM ANTONYM frees block ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/jni/Stdlib.java,80
FUNCTION SPECIFIER private TYPE string NAME string NAME get credentials PARAMETER LIST BLOCK RETURN return credentials EXPR credentials NAME credentials private JJ string NN get VB credentials NNS root ROOT get dobj get credentials return NN credentials NNS,1,B6,tomcat/test/org/apache/catalina/authenticator/TestSSOnonLoginAndBasicAuthenticator.java,683
COMMENT separate attributes DECL STMT SPECIFIER private TYPE final char buffer SPECIFIER final NAME char buffer NAME control buffer text INIT char buffer allocate EXPR char buffer allocate CALL char buffer allocate NAME char buffer allocate NAME char buffer NAME allocate ARGUMENT LIST ARGUMENT EXPR separate attributes root ROOT attributes amod attributes separate private JJ final JJ char NN buffer NN root ROOT buffer compound buffer char control NN buffer NN text NN root ROOT text compound text control compound text buffer char NN buffer NN allocate VBP root ROOT allocate compound buffer char nsubj allocate buffer,0,N/A,tomcat/java/org/apache/tomcat/websocket/WsFrameBase.java,57
DECL STMT SPECIFIER private SPECIFIER static TYPE string builder NAME string builder NAME calls INIT new string builder EXPR new string builder CALL string builder NAME string builder ARGUMENT LIST private JJ static JJ string NN builder NN root ROOT builder compound builder string calls NNS new JJ string NN builder NN root ROOT builder compound builder string,1,E1,tomcat/test/javax/el/TesterFunctions.java,21
COMMENT return the logger for this container FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE log NAME log NAME get logger PARAMETER LIST BLOCK IF if logger null return logger CONDITION logger null EXPR logger null NAME logger THEN return logger BLOCK RETURN return logger EXPR logger NAME logger EXPR logger log factory get log get log name NAME logger CALL log factory get log get log name NAME log factory get log NAME log factory NAME get log ARGUMENT LIST ARGUMENT EXPR get log name CALL get log name NAME get log name ARGUMENT LIST RETURN return logger EXPR logger NAME logger return the logger for this container root ROOT return det logger the dobj return logger case container for det container this nmod for return container override NN public NN log NN get VB logger NN root ROOT get dobj get logger if IN logger NN null JJ return NN logger NN logger NN log NN factory NN get VB log NN root ROOT get compound factory log nsubj get factory dobj get log get VB log NN name NN root ROOT get compound name log dobj get name return NN logger NN,0,N/A,tomcat/java/org/apache/catalina/core/ContainerBase.java,355
COMMENT the cache of single sign on entry instances for authenticated principals keyed by the cookie value that is used to select them DECL STMT SPECIFIER protected TYPE map string single sign on entry NAME map string single sign on entry NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME single sign on entry NAME cache INIT new concurrent hash map EXPR new concurrent hash map CALL concurrent hash map NAME concurrent hash map NAME concurrent hash map ARGUMENT LIST ARGUMENT LIST the cache of single sign on entry instances for authenticated principals root ROOT cache det cache the case sign of amod sign single nmod of cache sign case instances on compound instances entry nmod on sign instances case principals for amod principals authenticated nmod for instances principals keyed by the cookie value that is used to select them root ROOT keyed case value by det value the compound value cookie nmod by keyed value nsubjpass used value nsubj xsubj select value ref value that auxpass used is acl relcl value used mark select to xcomp used select dobj select them protected VBN map NN string NN single JJ sign NN on IN entry NN root ROOT sign amod sign single case entry on nmod on sign entry cache NN new JJ concurrent JJ hash NN map NN root ROOT map amod map concurrent compound map hash is map ANTONYM ANTONYM used new ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/authenticator/SingleSignOn.java,83
COMMENT per user pool properties DECL STMT SPECIFIER private TYPE map string boolean NAME map string boolean NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME boolean NAME per user test on return INIT null EXPR null per user pool properties root ROOT properties case properties per compound properties user compound properties pool private JJ map NN string NN boolean NN per IN user NN test NN on IN return NN root ROOT test case test per compound test user case return on nmod on test return null JJ,0,N/A,tomcat/java/org/apache/tomcat/dbcp/dbcp2/datasources/PerUserPoolDataSource.java,79
COMMENT checks to see if there is data left in the coyote output buffers not the servlet output buffer and if so registers the associated socket for write so the buffers will be emptied the container will take care of this as far as the app is concerned there is a non blocking write in progress it doesn t have visibility of whether the data is buffered in the socket buffer or the coyote buffers FUNCTION SPECIFIER private TYPE void NAME void NAME check register for write PARAMETER LIST BLOCK EXPR ob check register for write CALL ob check register for write NAME ob check register for write NAME ob NAME check register for write ARGUMENT LIST checks to see if there is data left in the coyote output buffers not the root ROOT checks mark see to acl to checks see mark is if expl is there advcl if see is compound left data nsubj is left case buffers in det buffers the compound buffers coyote compound buffers output nmod in is buffers neg the not dep buffers the servlet output buffer and if so registers the associated socket for root ROOT buffer amod buffer servlet compound buffer output cc buffer and mark registers if advmod registers so conj and buffer registers det socket the amod socket associated dobj registers socket nmod registers for write so the buffers will be emptied the container will take care of root ROOT write advmod emptied so det buffers the nsubjpass emptied buffers aux emptied will auxpass emptied be ccomp write emptied det container the nsubj take container aux take will ccomp emptied take dobj take care dep take of write so the buffers will be emptied the container will take care of root ROOT write advmod emptied so det buffers the nsubjpass emptied buffers aux emptied will auxpass emptied be ccomp write emptied det container the nsubj take container aux take will ccomp emptied take dobj take care dep take of this as far as the app is concerned there is a non blocking write in root ROOT this advmod far as advmod is far mark concerned as det app the nsubjpass concerned app auxpass concerned is advcl as is concerned expl is there dep this is det blocking a amod blocking non dep is blocking acl blocking write compound prt write in this as far as the app is concerned there is a non blocking write in root ROOT this advmod far as advmod is far mark concerned as det app the nsubjpass concerned app auxpass concerned is advcl as is concerned expl is there dep this is det blocking a amod blocking non dep is blocking acl blocking write compound prt write in progress it doesn t have visibility of whether the data is buffered in root ROOT progress dobj progress it compound t doesn nsubj have t acl relcl it have dobj have visibility mark buffered of mark buffered whether det data the nsubjpass buffered data auxpass buffered is acl whether visibility buffered compound prt buffered in progress it doesn t have visibility of whether the data is buffered in root ROOT progress dobj progress it compound t doesn nsubj have t acl relcl it have dobj have visibility mark buffered of mark buffered whether det data the nsubjpass buffered data auxpass buffered is acl whether visibility buffered compound prt buffered in the socket buffer or the coyote buffers root ROOT buffer det buffer the compound buffer socket cc buffer or det buffers the compound buffers coyote conj or buffer buffers private JJ void NN check NN register NN for IN write VB root ROOT register compound register check mark write for acl for register write ob NN check NN register NN for IN write VB root ROOT register compound register ob compound register check mark write for acl for register write associated concerned ANTONYM ANTONYM care concerned ANTONYM ANTONYM checks blocking ANTONYM ANTONYM checks have ANTONYM ANTONYM checks take ANTONYM ANTONYM emptied take ANTONYM ANTONYM left blocking ANTONYM ANTONYM left far ANTONYM ANTONYM left have ANTONYM ANTONYM left progress ANTONYM ANTONYM left take ANTONYM ANTONYM output take ANTONYM ANTONYM registers take ANTONYM ANTONYM see have ANTONYM ANTONYM see left ANTONYM ANTONYM see take ANTONYM ANTONYM take care ANTONYM ANTONYM take concerned ANTONYM ANTONYM will care ANTONYM ANTONYM associated concerned SYNONYM SYNONYM,0,N/A,tomcat/java/org/apache/catalina/connector/CoyoteOutputStream.java,150
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME manager scan interval secs INIT EXPR private JJ static JJ final JJ int NN manager NN scan VB interval NN secs NNS root ROOT scan nsubj scan manager compound secs interval dobj scan secs,0,N/A,tomcat/test/org/apache/catalina/authenticator/TestNonLoginAndBasicAuthenticator.java,79
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME server max window bits private JJ final JJ int NN server NN max NN window NN bits NNS root ROOT bits compound bits server compound bits max compound bits window,0,N/A,tomcat/java/org/apache/tomcat/websocket/PerMessageDeflate.java,48
COMMENT object max size must be max size DECL STMT SPECIFIER private TYPE final concurrent map string cached resource SPECIFIER final NAME concurrent map string cached resource NAME concurrent map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME cached resource NAME resource cache INIT new concurrent hash map EXPR new concurrent hash map CALL concurrent hash map NAME concurrent hash map NAME concurrent hash map ARGUMENT LIST ARGUMENT LIST object max size must be max size root ROOT size compound size object compound size max nsubj size size aux size must cop size be compound size max private JJ final JJ concurrent JJ map NN root ROOT map amod map concurrent string NN cached VBN resource NN root ROOT resource amod resource cached resource NN cache NN root ROOT cache compound cache resource new JJ concurrent JJ hash NN map NN root ROOT map amod map concurrent compound map hash,0,N/A,tomcat/java/org/apache/catalina/webresources/Cache.java,52
FUNCTION SPECIFIER public TYPE string NAME string NAME get hint PARAMETER LIST BLOCK RETURN return hint EXPR hint NAME hint public NN string NN get VB hint VB root ROOT hint aux hint get return NN hint NN,0,N/A,tomcat/webapps/examples/WEB-INF/classes/num/NumberGuessBean.java,49
COMMENT header for a coordination message DECL STMT SPECIFIER protected SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME coord header INIT new byte EXPR new byte NAME byte NAME byte INDEX BLOCK EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR header for a coordination message root ROOT header case message for det message a compound message coordination nmod for header message protected VBN static JJ final JJ byte NN coord NN header NN root ROOT header compound header coord new JJ byte NN,0,N/A,tomcat/java/org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,137
COMMENT the shell environment variables to be passed to the cgi script DECL STMT SPECIFIER private TYPE final hashtable string string SPECIFIER final NAME hashtable string string NAME hashtable ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME string NAME shell env INIT new hashtable EXPR new hashtable CALL hashtable NAME hashtable NAME hashtable ARGUMENT LIST ARGUMENT LIST the shell environment variables to be passed to the cgi script root ROOT variables det environment the compound environment shell nsubj variables environment mark passed to auxpass passed be acl to variables passed case script to det script the compound script cgi nmod to passed script private JJ final JJ hashtable JJ string NN string NN shell NN env NN root ROOT env compound env shell new JJ hashtable JJ passed string ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/servlets/CGIServlet.java,283
DECL STMT SPECIFIER protected SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string INDEX NAME prepared type INIT new string prepare statement EXPR new string prepare statement NAME string NAME string INDEX BLOCK EXPR prepare statement NAME prepare statement protected VBN static JJ final JJ string NN prepared JJ type NN root ROOT type amod type prepared new JJ string NN prepare VB statement NN root ROOT prepare dobj prepare statement,1,D1,tomcat/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/StatementCache.java,39
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME param values INIT EXPR private JJ static JJ final JJ int NN param NN values NNS root ROOT values compound values param,1,E1,tomcat/java/javax/servlet/jsp/el/ImplicitObjectELResolver.java,69
COMMENT spnego authentication constants DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME jaas conf property INIT java security auth login config EXPR java security auth login config spnego authentication constants root ROOT constants compound constants spnego compound constants authentication public NN static JJ final JJ string NN jaas NN conf NN property NN root ROOT property compound property jaas compound property conf java NN security NN auth NN login NN config NN root ROOT config compound config java compound config security compound config auth compound config login,0,N/A,tomcat/java/org/apache/catalina/authenticator/Constants.java,36
COMMENT system properties DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME skip jars property INIT tomcat util scan standard jar scan filter jars to skip EXPR tomcat util scan standard jar scan filter jars to skip system properties root ROOT properties compound properties system public NN static JJ final JJ string NN skip VB jars NNS property NN root ROOT skip compound property jars dobj skip property tomcat NN util NN scan VB standard JJ jar NN scan VB filter NN jars NNS to TO skip VB root ROOT scan compound util tomcat nsubj scan util amod jar standard nsubj scan jar ccomp scan scan compound jars filter dobj scan jars mark skip to advcl to scan skip skip scan ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/util/scan/Constants.java,28
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE savepoint NAME savepoint NAME set savepoint PARAMETER LIST string name PARAMETER string name TYPE string NAME string NAME name THROWS throws sql exception ARGUMENT EXPR sql exception NAME sql exception BLOCK RETURN return null EXPR null override NN public NN savepoint NN set VBN savepoint NN root ROOT set dobj set savepoint string NN name NN throws VBZ sql NN exception NN root ROOT exception compound exception sql return NN null JJ name throws ANTONYM ANTONYM,1,A3,tomcat/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/driver/Connection.java,265
COMMENT instance of tag extra info DECL STMT SPECIFIER private TYPE final tag attribute info SPECIFIER final NAME tag attribute info NAME tag attribute info INDEX NAME attribute info instance of tag extra info root ROOT instance case info of compound info tag amod info extra nmod of instance info private JJ final JJ tag NN attribute NN info NN root ROOT info compound info tag compound info attribute attribute NN info NN root ROOT info compound info attribute,0,N/A,tomcat/java/javax/servlet/jsp/tagext/TagInfo.java,443
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME short session timeout secs INIT EXPR private JJ static JJ final JJ int NN short JJ session NN timeout NN secs NNS root ROOT secs amod secs short compound secs session compound secs timeout,0,N/A,tomcat/test/org/apache/catalina/authenticator/TestNonLoginAndBasicAuthenticator.java,78
DECL STMT SPECIFIER public TYPE final int SPECIFIER final NAME int NAME int INDEX NAME input public NN final JJ int NN input NN,1,D1,tomcat/test/org/apache/tomcat/util/buf/TestUtf8.java,656
DECL STMT SPECIFIER private TYPE final list message handler info SPECIFIER final NAME list message handler info NAME list ARGUMENT LIST ARGUMENT NAME message handler info NAME on message INIT new array list EXPR new array list CALL array list NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST private JJ final JJ list NN message NN handler NN info NN root ROOT info compound info message compound info handler on IN message NN root ROOT message case message on new JJ array NN list NN root ROOT list compound list array,1,D1,tomcat/java/org/apache/tomcat/websocket/pojo/PojoMethodMapping.java,69
FUNCTION SPECIFIER protected TYPE m bean parameter info NAME m bean parameter info NAME m bean parameter info INDEX NAME get m bean parameter info PARAMETER LIST BLOCK DECL STMT TYPE parameter info NAME parameter info NAME params NAME params INDEX INIT get signature EXPR get signature CALL get signature NAME get signature ARGUMENT LIST DECL STMT TYPE m bean parameter info NAME m bean parameter info NAME parameters NAME parameters INDEX INIT new m bean parameter info params length EXPR new m bean parameter info params length NAME m bean parameter info params length NAME m bean parameter info INDEX params length EXPR params length NAME params length NAME params NAME length FOR for int i i params length i parameters i params i create parameter info CONTROL int i i params length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i params length EXPR i params length NAME i NAME params length NAME params NAME length INCR i EXPR i NAME i BLOCK EXPR parameters i params i create parameter info NAME parameters i NAME parameters INDEX i EXPR i NAME i NAME params i NAME params INDEX i EXPR i NAME i CALL create parameter info NAME create parameter info ARGUMENT LIST RETURN return parameters EXPR parameters NAME parameters protected VBN m NN bean NN parameter NN info NN root ROOT info compound info m compound info bean compound info parameter get VB m NN bean NN parameter NN info NN root ROOT get compound info m compound info bean compound info parameter dobj get info parameter NN info NN root ROOT info compound info parameter params NNS get VB signature NN root ROOT get dobj get signature m NN bean NN parameter NN info NN root ROOT info compound info m compound info bean compound info parameter parameters NNS new JJ m NN bean NN parameter NN info NN root ROOT info compound info m compound info bean compound info parameter params NNS length NN root ROOT length compound length params for IN int NN i LS i LS params NNS length NN root ROOT length compound length params i LS parameters NNS i LS params NNS i LS create VB parameter NN info NN root ROOT create compound info parameter dobj create info return NN parameters NNS,1,A1,tomcat/java/org/apache/tomcat/util/modeler/OperationInfo.java,164
DECL STMT SPECIFIER private TYPE int NAME int NAME iterations INIT get default iterations EXPR get default iterations CALL get default iterations NAME get default iterations ARGUMENT LIST private JJ int NN iterations NNS get VB default NN iterations NNS root ROOT get compound iterations default dobj get iterations,1,E1,tomcat/java/org/apache/catalina/realm/DigestCredentialHandlerBase.java,38
COMMENT the permission collection for each code source for a web application context DECL STMT SPECIFIER protected TYPE final hash map string permission collection SPECIFIER final NAME hash map string permission collection NAME hash map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME permission collection NAME loader pc INIT new hash map EXPR new hash map CALL hash map NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST the permission collection for each code source for a web root ROOT collection det collection the compound collection permission case source for det source each compound source code nmod for collection source case web for det web a nmod for source web application context root ROOT context compound context application protected VBN final JJ hash VB map NN root ROOT hash dobj hash map string NN permission NN collection NN root ROOT collection compound collection permission loader NN pc NN root ROOT pc compound pc loader new JJ hash VB map NN root ROOT hash dobj hash map,0,N/A,tomcat/java/org/apache/catalina/loader/WebappClassLoaderBase.java,297
DECL STMT SPECIFIER private TYPE rpc callback NAME rpc callback NAME callback private JJ rpc NN callback NN root ROOT callback compound callback rpc callback NN,0,N/A,tomcat/java/org/apache/catalina/tribes/group/RpcChannel.java,49
DECL STMT SPECIFIER private TYPE int NAME int NAME options private JJ int NN options NNS,1,E1,tomcat/java/org/apache/catalina/tribes/transport/AbstractRxTask.java,30
DECL STMT SPECIFIER private TYPE long NAME long NAME max conn lifetime millis INIT EXPR private JJ long RB max NN conn NN lifetime NN millis NN root ROOT millis compound millis max compound millis conn compound millis lifetime,0,N/A,tomcat/java/org/apache/tomcat/dbcp/dbcp2/datasources/KeyedCPDSConnectionFactory.java,60
DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME so timeout INIT EXPR public NN static JJ final JJ int NN so RB timeout NN root ROOT timeout advmod timeout so,0,N/A,tomcat/test/org/apache/catalina/connector/TestMaxConnections.java,36
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string INDEX NAME time INIT am pm pm pm pm pm pm pm pm pm EXPR am pm pm pm pm pm pm pm pm pm BLOCK EXPR am pm EXPR pm EXPR pm EXPR pm EXPR pm EXPR pm EXPR pm EXPR pm EXPR pm private JJ static JJ final JJ string NN time NN am RB pm NN pm NN pm NN pm NN pm NN pm NN pm NN pm NN pm NN,1,D1,tomcat/webapps/examples/WEB-INF/classes/cal/Entries.java,26
COMMENT specifies a comment that describes a cookie s purpose the comment is useful if the browser presents the cookie to the user comments are not supported by netscape version cookies param purpose a code string code specifying the comment to display to the user see get comment FUNCTION SPECIFIER public TYPE void NAME void NAME set comment PARAMETER LIST string purpose PARAMETER string purpose TYPE string NAME string NAME purpose BLOCK EXPR comment purpose NAME comment NAME purpose specifies a comment that describes a cookie s purpose the comment is root ROOT specifies det comment a nsubj describes comment nsubj purpose comment ref comment that acl relcl comment describes det cookie a dobj describes cookie compound purpose s ccomp specifies purpose det comment the dobj purpose comment aux specifies is specifies a comment that describes a cookie s purpose the comment is root ROOT specifies det comment a nsubj describes comment nsubj purpose comment ref comment that acl relcl comment describes det cookie a dobj describes cookie compound purpose s ccomp specifies purpose det comment the dobj purpose comment aux specifies is useful if the browser presents the cookie to the user comments are not root ROOT useful mark presents if det browser the nsubj presents browser advcl if useful presents det cookie the dobj presents cookie case comments to det comments the compound comments user nmod to presents comments dep useful are neg are not useful if the browser presents the cookie to the user comments are not root ROOT useful mark presents if det browser the nsubj presents browser advcl if useful presents det cookie the dobj presents cookie case comments to det comments the compound comments user nmod to presents comments dep useful are neg are not supported by netscape version cookies root ROOT supported case cookies by compound cookies netscape compound cookies version nmod by supported cookies param purpose root ROOT purpose compound purpose param a code string code specifying the comment to display to the root ROOT code det code a compound code code compound code string acl code specifying det comment the dobj specifying comment mark display to advcl to specifying display case the to nmod to display the user see get comment root ROOT see ccomp see get dobj get comment public NN void NN set VBN comment NN root ROOT set dobj set comment string NN purpose NN comment NN purpose NN describes see ANTONYM ANTONYM describes specifying ANTONYM ANTONYM describes string ANTONYM ANTONYM is presents ANTONYM ANTONYM presents are ANTONYM ANTONYM presents display ANTONYM ANTONYM specifies describes ANTONYM ANTONYM specifies see ANTONYM ANTONYM specifying see ANTONYM ANTONYM,0,N/A,tomcat/java/javax/servlet/http/Cookie.java,134
COMMENT sets the minimum amount of time an object may sit idle in the pool before it is eligible for eviction by the idle object evictor if any see link set time between eviction runs millis long with the extra condition that at least code min idle code object instances remain in the pool this setting is overridden by link get min evictable idle time millis that is if link get min evictable idle time millis is positive then link get soft min evictable idle time millis is ignored param soft min evictable idle time millis minimum amount of time an object may sit idle in the pool before it is eligible for eviction if min idle instances are available see get soft min evictable idle time millis FUNCTION SPECIFIER public SPECIFIER final TYPE void NAME void NAME set soft min evictable idle time millis PARAMETER LIST final long soft min evictable idle time millis PARAMETER final long soft min evictable idle time millis TYPE final long SPECIFIER final NAME long NAME soft min evictable idle time millis BLOCK EXPR this soft min evictable idle time millis soft min evictable idle time millis NAME this soft min evictable idle time millis NAME this NAME soft min evictable idle time millis NAME soft min evictable idle time millis sets the minimum amount of time an object may sit idle in the pool root ROOT sets det amount the compound amount minimum dobj sets amount case time of nmod of amount time det object an nsubj sit object aux sit may acl relcl amount sit xcomp sit idle case pool in det pool the nmod in sit pool before it is eligible for eviction by the idle object evictor if any root ROOT eligible mark eligible before nsubj eligible it cop eligible is case eviction for nmod for eligible eviction case evictor by det evictor the amod evictor idle compound evictor object nmod by eligible evictor mark any if advcl if eligible any see link set time between eviction runs millis long root ROOT see compound time link amod time set nsubj runs time case eviction between nmod between time eviction ccomp see runs xcomp runs millis advmod millis long with the extra condition that at least code min idle code object root ROOT condition case condition with det condition the amod condition extra det object that case least at nmod npmod min least compound min code nummod object min amod object idle compound object code dep condition object instances remain in the pool this setting is overridden by root ROOT remain nsubj remain instances case pool in det pool the nmod in remain pool det setting this nsubjpass overridden setting auxpass overridden is xcomp remain overridden nmod overridden by instances remain in the pool this setting is overridden by root ROOT remain nsubj remain instances case pool in det pool the nmod in remain pool det setting this nsubjpass overridden setting auxpass overridden is xcomp remain overridden nmod overridden by link get min evictable idle time millis that is if root ROOT get nsubj get link compound time min amod time evictable amod time idle nsubj millis time ccomp get millis nsubj is that dep millis is dep is if link get min evictable idle time millis is positive then root ROOT get nsubj get link compound time min amod time evictable amod time idle nsubj positive time dep time millis cop positive is ccomp get positive advmod get then link get soft min evictable idle time millis is ignored root ROOT ignored nsubj get link csubjpass ignored get amod min soft xcomp get min amod millis evictable amod millis idle compound millis time dep min millis auxpass ignored is param soft min evictable idle time millis root ROOT min compound min param amod min soft amod time evictable amod time idle dep min time dep min millis minimum amount of time an object may sit idle in the pool root ROOT amount amod amount minimum case time of nmod of amount time det object an nsubj sit object aux sit may acl relcl time sit xcomp sit idle case pool in det pool the nmod in sit pool before it is eligible for eviction if min idle instances are root ROOT eligible mark eligible before nsubj eligible it cop eligible is case eviction for nmod for eligible eviction mark are if compound instances min amod instances idle nsubj are instances advcl if eligible are available see get soft min evictable idle time millis root ROOT see xcomp see get amod min soft xcomp get min amod time evictable amod time idle dep min time dep get millis public NN final JJ void NN set VBN soft JJ min NN evictable JJ idle JJ time NN millis IN root ROOT set amod min soft dobj set min amod time evictable amod time idle dep min time dep set millis final JJ long RB soft JJ min NN evictable JJ idle JJ time NN millis IN root ROOT min amod min soft amod time evictable amod time idle dep min time dep min millis this DT soft JJ min NN evictable JJ idle JJ time NN millis IN soft JJ min NN evictable JJ idle JJ time NN millis IN root ROOT min amod min soft amod time evictable amod time idle dep min time dep min millis sets see ANTONYM ANTONYM sets sit ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/dbcp/pool2/impl/BaseGenericObjectPool.java,570
COMMENT registry enums DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME hkey users INIT EXPR registry enums root ROOT enums compound enums registry public NN static JJ final JJ int NN hkey NN users NNS root ROOT users compound users hkey,1,E1,tomcat/java/org/apache/tomcat/jni/Registry.java,31
COMMENT sets a new limit if the limit is decreased there may be a period where more shares of the latch are acquired than the limit in this case no more shares of the latch will be issued until sufficient shares have been returned to reduce the number of acquired shares of the latch to below the new limit if the limit is increased threads currently in the queue may not be issued one of the newly available shares until the next request is made for a latch param limit the new limit FUNCTION SPECIFIER public TYPE void NAME void NAME set limit PARAMETER LIST long limit PARAMETER long limit TYPE long NAME long NAME limit BLOCK EXPR this limit limit NAME this limit NAME this NAME limit NAME limit sets a new limit if the limit is decreased there may be a period where root ROOT sets det limit a amod limit new dobj sets limit mark decreased if det limit the nsubjpass decreased limit auxpass decreased is advcl if period decreased expl period there aux period may cop period be det period a dep sets period dep period where sets a new limit if the limit is decreased there may be a period where root ROOT sets det limit a amod limit new dobj sets limit mark decreased if det limit the nsubjpass decreased limit auxpass decreased is advcl if period decreased expl period there aux period may cop period be det period a dep sets period dep period where more shares of the latch are acquired than the limit in this case no root ROOT acquired amod shares more nsubjpass acquired shares case latch of det latch the nmod of shares latch auxpass acquired are case limit than det limit the nmod than acquired limit case case in det case this nmod in acquired case dep acquired no more shares of the latch are acquired than the limit in this case no root ROOT acquired amod shares more nsubjpass acquired shares case latch of det latch the nmod of shares latch auxpass acquired are case limit than det limit the nmod than acquired limit case case in det case this nmod in acquired case dep acquired no more shares of the latch will be issued until sufficient shares have been root ROOT issued amod shares more nsubjpass issued shares case latch of det latch the nmod of shares latch aux issued will auxpass issued be mark been until amod shares sufficient nsubj been shares aux been have advcl until issued been returned to reduce the number of acquired shares of the latch to below root ROOT returned mark reduce to xcomp returned reduce det number the dobj reduce number case shares of amod shares acquired nmod of number shares case latch of det latch the nmod of shares latch case below to nmod to reduce below the new limit if the limit is increased threads currently in the queue root ROOT limit det limit the amod limit new mark threads if det limit the nsubj threads limit cop threads is amod threads increased dep limit threads advmod queue currently case queue in det queue the nmod in threads queue the new limit if the limit is increased threads currently in the queue root ROOT limit det limit the amod limit new mark threads if det limit the nsubj threads limit cop threads is amod threads increased dep limit threads advmod queue currently case queue in det queue the nmod in threads queue may not be issued one of the newly available shares until the next root ROOT issued aux issued may neg issued not auxpass issued be det qmod shares one mwe one of det shares the advmod available newly amod shares available dobj issued shares case next until det next the nmod until issued next request is made for a latch root ROOT made nsubjpass made request auxpass made is case a for nmod for made a dep made latch param limit the new limit root ROOT limit compound limit param det limit the amod limit new dobj limit limit public NN void NN set VBN limit NN root ROOT set dobj set limit long RB limit NN this DT limit NN limit NN acquired have ANTONYM ANTONYM acquired made ANTONYM ANTONYM are made ANTONYM ANTONYM be made ANTONYM ANTONYM been made ANTONYM ANTONYM decreased increased ANTONYM ANTONYM decreased increased ANTONYM ANTONYM decreased returned ANTONYM ANTONYM have returned ANTONYM ANTONYM increased returned ANTONYM ANTONYM is made ANTONYM ANTONYM issued reduce ANTONYM ANTONYM issued returned ANTONYM ANTONYM limit made ANTONYM ANTONYM reduce acquired ANTONYM ANTONYM reduce made ANTONYM ANTONYM reduce number ANTONYM ANTONYM reduce void ANTONYM ANTONYM returned made ANTONYM ANTONYM sets made ANTONYM ANTONYM threads made ANTONYM ANTONYM in made SYNONYM SYNONYM in next SYNONYM SYNONYM,0,N/A,tomcat/java/org/apache/tomcat/util/threads/LimitLatch.java,103
FUNCTION SPECIFIER public TYPE byte NAME byte NAME byte INDEX NAME get message PARAMETER LIST BLOCK RETURN return current EXPR current NAME current public NN byte NN get VB message NN root ROOT get dobj get message return NN current JJ,1,A4,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,381
COMMENT now compute some delays beware of the units DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME extra delay secs INIT EXPR now compute some delays beware of the units root ROOT compute advmod compute now det delays some dobj compute delays dep delays beware case units of det units the nmod of beware units private JJ static JJ final JJ int NN extra JJ delay NN secs NNS root ROOT secs amod secs extra compound secs delay,0,N/A,tomcat/test/org/apache/catalina/authenticator/TestSSOnonLoginAndBasicAuthenticator.java,101
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE sql warning NAME sql warning NAME get warnings PARAMETER LIST THROWS throws sql exception ARGUMENT EXPR sql exception NAME sql exception BLOCK COMMENT todo auto generated method stub RETURN return null EXPR null override NN public NN sql NN warning NN root ROOT warning compound warning sql get VB warnings NNS root ROOT get dobj get warnings throws VBZ sql NN exception NN root ROOT exception compound exception sql todo auto generated method stub root ROOT generated amod auto todo nsubj generated auto compound stub method dobj generated stub return NN null JJ,1,B6,tomcat/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/driver/Statement.java,1215
COMMENT comma separated list of cipher suites to use for start tls if empty the default suites are used DECL STMT SPECIFIER private TYPE string NAME string NAME cipher suites comma separated list of cipher suites to use for start tls if empty the root ROOT list compound list comma amod list separated case suites of compound suites cipher nmod of list suites mark use to acl to list use case tls for compound tls start nmod for use tls mark empty if advcl if use empty dep empty the comma separated list of cipher suites to use for start tls if empty the root ROOT list compound list comma amod list separated case suites of compound suites cipher nmod of list suites mark use to acl to list use case tls for compound tls start nmod for use tls mark empty if advcl if use empty dep empty the default suites are used root ROOT used compound suites default nsubjpass used suites auxpass used are private JJ string NN cipher NN suites NNS root ROOT suites compound suites cipher,0,N/A,tomcat/java/org/apache/catalina/realm/JNDIRealm.java,487
COMMENT to obtain the country name of the client certificate issuer use the ssl info client i dn ssl info dn countryname DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME ssl info client s dn INIT x EXPR x to obtain the country name of the client certificate issuer root ROOT obtain mark obtain to det name the compound name country dobj obtain name case issuer of det issuer the compound issuer client compound issuer certificate nmod of name issuer use the ssl info client i dn ssl info dn countryname root ROOT use det countryname the compound countryname ssl compound countryname info compound countryname client compound countryname i compound countryname dn compound countryname ssl compound countryname info compound countryname dn dobj use countryname public NN static JJ final JJ int NN ssl NN info NN client NN s NNS dn VBP root ROOT dn compound s ssl compound s info compound s client nsubj dn s x NN i x SYNONYM SYNONYM,0,N/A,tomcat/java/org/apache/tomcat/jni/SSL.java,203
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE string buffer NAME string buffer NAME get request url PARAMETER LIST BLOCK IF if request null throw new illegal state exception sm get string request facade null request CONDITION request null EXPR request null NAME request THEN throw new illegal state exception sm get string request facade null request BLOCK THROW throw new illegal state exception sm get string request facade null request EXPR new illegal state exception sm get string request facade null request CALL illegal state exception sm get string request facade null request NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR sm get string request facade null request CALL sm get string request facade null request NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR request facade null request RETURN return request get request url EXPR request get request url CALL request get request url NAME request get request url NAME request NAME get request url ARGUMENT LIST override NN public NN string NN buffer NN root ROOT buffer compound buffer string get VB request NN url NN root ROOT get compound url request dobj get url if IN request NN null JJ throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state sm NN get VB string NN root ROOT get nsubj get sm dobj get string request NN facade NN null JJ request NN root ROOT request compound request request compound request facade amod request null return NN request NN get VB request NN url NN root ROOT get nsubj get request compound url request dobj get url,0,N/A,tomcat/java/org/apache/catalina/connector/RequestFacade.java,872
DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME max records INIT integer parse int system get property org apache juli async max record count integer to string default max records EXPR integer parse int system get property org apache juli async max record count integer to string default max records CALL integer parse int system get property org apache juli async max record count integer to string default max records NAME integer parse int NAME integer NAME parse int ARGUMENT LIST ARGUMENT EXPR system get property org apache juli async max record count integer to string default max records CALL system get property org apache juli async max record count integer to string default max records NAME system get property NAME system NAME get property ARGUMENT LIST ARGUMENT EXPR org apache juli async max record count ARGUMENT EXPR integer to string default max records CALL integer to string default max records NAME integer to string NAME integer NAME to string ARGUMENT LIST ARGUMENT EXPR default max records NAME default max records public NN static JJ final JJ int NN max NN records NNS root ROOT records compound records max integer NN parse NN int NN root ROOT int compound int integer compound int parse system NN get VB property NN root ROOT get nsubj get system dobj get property org NN apache NN juli NN async NN max NN record NN count NN root ROOT count compound count org compound count apache compound count juli compound count async compound count max compound count record integer NN to TO string NN root ROOT integer case string to nmod to integer string default NN max NN records NNS root ROOT records compound records default compound records max,0,N/A,tomcat/java/org/apache/juli/AsyncFileHandler.java,55
COMMENT instance of the jdbc driver class we use as a connection factory DECL STMT SPECIFIER private TYPE long NAME long NAME current time millis instance of the jdbc driver class we use as a connection factory root ROOT instance case class of det class the compound class jdbc compound class driver nmod of instance class nsubj use we acl relcl instance use case factory as det factory a compound factory connection nmod as use factory private JJ long RB current JJ time NN millis IN root ROOT time amod time current dep time millis,0,N/A,tomcat/java/org/apache/catalina/valves/JDBCAccessLogValve.java,208
COMMENT state variables DECL STMT SPECIFIER protected TYPE byte buffer NAME byte buffer NAME readbuf INIT null EXPR null state variables root ROOT variables compound variables state protected VBN byte NN buffer NN root ROOT buffer compound buffer byte readbuf NN null JJ,0,N/A,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,63
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE value expression NAME value expression NAME set variable PARAMETER LIST string variable value expression expression PARAMETER string variable TYPE string NAME string NAME variable PARAMETER value expression expression TYPE value expression NAME value expression NAME expression BLOCK IF if vars null vars new hash map CONDITION vars null EXPR vars null NAME vars THEN vars new hash map BLOCK EXPR vars new hash map NAME vars CALL hash map NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST IF if expression null return vars remove variable else return vars put variable expression CONDITION expression null EXPR expression null NAME expression THEN return vars remove variable BLOCK RETURN return vars remove variable EXPR vars remove variable CALL vars remove variable NAME vars remove NAME vars NAME remove ARGUMENT LIST ARGUMENT EXPR variable NAME variable ELSE else return vars put variable expression BLOCK RETURN return vars put variable expression EXPR vars put variable expression CALL vars put variable expression NAME vars put NAME vars NAME put ARGUMENT LIST ARGUMENT EXPR variable NAME variable ARGUMENT EXPR expression NAME expression override NN public NN value NN expression NN root ROOT expression compound expression value set VBN variable JJ root ROOT set xcomp set variable string NN variable JJ value NN expression NN root ROOT expression compound expression value expression NN if IN vars NNS null JJ vars NNS new JJ hash VB map NN root ROOT hash dobj hash map if IN expression NN null JJ return NN vars NNS remove VB root ROOT remove nsubj remove vars variable JJ else RB return NN vars NNS put VBD root ROOT put nsubj put vars variable JJ expression NN,1,A3,tomcat/java/org/apache/jasper/el/ELContextImpl.java,66
COMMENT number of duplicated session ids anything means we have problems DECL STMT SPECIFIER protected TYPE volatile int SPECIFIER volatile NAME int NAME duplicates INIT EXPR number of duplicated session ids anything means we have problems root ROOT number case ids of amod ids duplicated compound ids session nmod of number ids nsubj means anything acl relcl number means nsubj have we ccomp means have dobj have problems protected VBN volatile JJ int NN duplicates NNS,0,N/A,tomcat/java/org/apache/catalina/session/ManagerBase.java,158
DECL STMT SPECIFIER private TYPE member NAME member NAME primary private JJ member NN primary JJ,0,N/A,tomcat/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,1402
COMMENT the handler reference class DECL STMT SPECIFIER private TYPE string NAME string NAME handlerclass INIT null EXPR null the handler reference class root ROOT class det class the compound class handler compound class reference private JJ string NN handlerclass NN null JJ,0,N/A,tomcat/java/org/apache/tomcat/util/descriptor/web/ContextHandler.java,43
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME short session timeout mins INIT EXPR private JJ static JJ final JJ int NN short JJ session NN timeout NN mins NNS root ROOT mins amod mins short compound mins session compound mins timeout,0,N/A,tomcat/test/org/apache/catalina/filters/TestRestCsrfPreventionFilter2.java,89
COMMENT decodes base data into octets p b note b this method seamlessly handles data encoded in url safe or normal mode p param base data byte array containing base data return array containing decoded data FUNCTION SPECIFIER public SPECIFIER static TYPE byte NAME byte NAME byte INDEX NAME decode base PARAMETER LIST final byte base data PARAMETER final byte base data TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME base data BLOCK RETURN return decode base base data base data length EXPR decode base base data base data length CALL decode base base data base data length NAME decode base ARGUMENT LIST ARGUMENT EXPR base data NAME base data ARGUMENT EXPR ARGUMENT EXPR base data length NAME base data length NAME base data NAME length decodes base data into octets root ROOT decodes compound data base dobj decodes data case octets into nmod into decodes octets p b note b this method seamlessly handles data encoded in url safe or normal mode root ROOT b compound b b compound b note det method this nsubj handles method advmod handles seamlessly acl relcl b handles dobj handles data acl data encoded case mode in compound mode url amod mode safe cc safe or conj or safe normal amod mode normal nmod in encoded mode p param base data root ROOT data compound data param compound data base byte array containing base data root ROOT array compound array byte acl array containing compound data base dobj containing data return array containing decoded data root ROOT array compound array return acl array containing amod data decoded dobj containing data public NN static JJ byte NN decode VB base NN root ROOT decode dobj decode base final JJ byte NN base NN data NNS root ROOT data compound data base return NN decode VB base NN root ROOT decode dobj decode base base NN data NNS root ROOT data compound data base base NN data NNS length NN root ROOT length compound length base compound length data containing return ANTONYM ANTONYM decodes encoded ANTONYM ANTONYM encoded decoded ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/util/codec/binary/Base64.java,689
DECL STMT SPECIFIER private TYPE final page context SPECIFIER final NAME page context NAME page context INDEX NAME pool private JJ final JJ page NN context NN root ROOT context compound context page pool NN,0,N/A,tomcat/java/org/apache/jasper/runtime/JspFactoryImpl.java,179
COMMENT start at so the add logic in close idle streams works DECL STMT SPECIFIER private TYPE final ping manager SPECIFIER final NAME ping manager NAME ping manager INIT get ping manager EXPR get ping manager CALL get ping manager NAME get ping manager ARGUMENT LIST start at so the add logic in close idle streams works root ROOT works nsubj works start case logic at advmod logic so det logic the amod logic add nmod at start logic case streams in amod streams close amod streams idle nmod in start streams private JJ final JJ ping NN manager NN root ROOT manager compound manager ping ping NN manager NN root ROOT manager compound manager ping get VB ping NN manager NN root ROOT get compound manager ping dobj get manager add start ANTONYM ANTONYM add works ANTONYM ANTONYM start works ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/coyote/http2/Http2UpgradeHandler.java,135
DECL STMT SPECIFIER private TYPE member NAME member NAME member INDEX NAME view private JJ member NN view NN,1,D1,tomcat/java/org/apache/catalina/tribes/group/interceptors/SimpleCoordinator.java,36
COMMENT whether a rollback will be issued after executing the sql query that will be used to validate connections from this pool before returning them to the caller return true if a rollback will be issued after executing the validation query FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME is rollback after validation PARAMETER LIST BLOCK RETURN return this rollback after validation EXPR this rollback after validation NAME this rollback after validation NAME this NAME rollback after validation whether a rollback will be issued after executing the sql query root ROOT issued mark issued whether det rollback a nsubjpass issued rollback aux issued will auxpass issued be mark executing after advcl after issued executing det query the compound query sql dobj executing query that will be used to validate connections from this pool root ROOT used nsubjpass used that nsubj xsubj validate that aux used will auxpass used be mark validate to xcomp used validate dobj validate connections case pool from det pool this nmod from connections pool before returning them to the caller root ROOT returning mark returning before dobj returning them case caller to det caller the nmod to returning caller return true if a rollback will be issued after executing the root ROOT return amod return true mark issued if det rollback a nsubjpass issued rollback aux issued will auxpass issued be advcl if true issued mark executing after advcl after issued executing dobj executing the validation query root ROOT query compound query validation public NN boolean NN is VBZ rollback NN after IN validation NN root ROOT rollback cop rollback is case validation after nmod after rollback validation return NN this DT rollback NN after IN validation NN issued return ANTONYM ANTONYM issued returning ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/dbcp/dbcp2/datasources/InstanceKeyDataSource.java,825
COMMENT the minimum amount of time a connection may sit idle in the pool before it is eligible for eviction by the idle object evictor with the extra condition that at least min idle connections remain in the pool note that code min evictable idle time millis takes precedence over this parameter see link get soft min evictable idle time millis DECL STMT SPECIFIER private TYPE long NAME long NAME soft min evictable idle time millis INIT base object pool config default soft min evictable idle time millis EXPR base object pool config default soft min evictable idle time millis NAME base object pool config default soft min evictable idle time millis NAME base object pool config NAME default soft min evictable idle time millis the minimum amount of time a connection may sit idle in the pool before root ROOT amount det amount the compound amount minimum case time of nmod of amount time det connection a nsubj sit connection aux sit may acl relcl amount sit xcomp sit idle case pool in det pool the nmod in sit pool advmod sit before it is eligible for eviction by the idle object evictor with the extra root ROOT eligible nsubj eligible it cop eligible is case eviction for nmod for eligible eviction case evictor by det evictor the amod evictor idle compound evictor object nmod by eviction evictor case extra with det extra the nmod with evictor extra condition that at least min idle connections remain in the pool root ROOT condition mark remain that case least at nmod npmod min least nummod connections min amod connections idle nsubj remain connections ccomp condition remain case pool in det pool the nmod in remain pool note that code min evictable idle time millis takes precedence over this root ROOT note nsubj code note ref note that acl relcl note code compound time min amod time evictable amod time idle dobj code time nsubj takes millis acl relcl time takes dobj takes precedence case this over nmod over takes this parameter see link get soft min evictable idle time millis root ROOT see nsubj see parameter nsubj get link ccomp see get amod min soft xcomp get min amod time evictable amod time idle dep min time dep see millis parameter see link get soft min evictable idle time millis root ROOT see nsubj see parameter nsubj get link ccomp see get amod min soft xcomp get min amod time evictable amod time idle dep min time dep see millis private JJ long RB soft JJ min NN evictable JJ idle JJ time NN millis IN root ROOT min amod min soft amod time evictable amod time idle dep min time dep min millis base NN object NN pool NN config NN default NN soft JJ min NN evictable JJ idle JJ time NN millis IN root ROOT min amod min soft amod time evictable amod time idle dep min time dep min millis,0,N/A,tomcat/java/org/apache/tomcat/dbcp/dbcp2/BasicDataSource.java,873
COMMENT set of all element and attribute prefixes used in this translation unit DECL STMT SPECIFIER private TYPE collection string NAME collection string NAME collection ARGUMENT LIST ARGUMENT NAME string NAME include coda set of all element and attribute prefixes used in this translation unit root ROOT set case element of det element all nmod of set element cc element and compound prefixes attribute nmod of set prefixes conj and element prefixes acl element used case unit in det unit this compound unit translation nmod in used unit private JJ collection NN string NN include VB coda NN root ROOT include dobj include coda,1,D2,tomcat/java/org/apache/jasper/compiler/PageInfo.java,96
COMMENT the properties for the connection pool DECL STMT SPECIFIER protected TYPE pool configuration NAME pool configuration NAME pool properties the properties for the connection pool root ROOT properties det properties the case pool for det pool the compound pool connection nmod for properties pool protected VBN pool NN configuration NN root ROOT configuration compound configuration pool pool NN properties NNS root ROOT properties compound properties pool,0,N/A,tomcat/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PooledConnection.java,66
COMMENT mb DECL STMT SPECIFIER protected TYPE final atomic long SPECIFIER final NAME atomic long NAME current size INIT new atomic long EXPR new atomic long CALL atomic long NAME atomic long ARGUMENT LIST ARGUMENT EXPR mb protected VBN final JJ atomic JJ long JJ root ROOT long amod long atomic current JJ size NN root ROOT size amod size current new JJ atomic JJ long JJ root ROOT long amod long atomic,0,N/A,tomcat/java/org/apache/catalina/tribes/group/interceptors/MessageDispatchInterceptor.java,56
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME register write interest PARAMETER LIST BLOCK SYNCHRONIZED synchronized write completion handler if write pending available permits write interest true else if no write is pending notify get endpoint process socket this socket event open write true INIT write completion handler EXPR write completion handler NAME write completion handler BLOCK IF if write pending available permits write interest true else if no write is pending notify get endpoint process socket this socket event open write true CONDITION write pending available permits EXPR write pending available permits CALL write pending available permits NAME write pending available permits NAME write pending NAME available permits ARGUMENT LIST THEN write interest true BLOCK EXPR write interest true NAME write interest ELSE else if no write is pending notify get endpoint process socket this socket event open write true BLOCK COMMENT if no write is pending notify EXPR get endpoint process socket this socket event open write true CALL get endpoint NAME get endpoint ARGUMENT LIST CALL process socket this socket event open write true NAME process socket ARGUMENT LIST ARGUMENT EXPR this NAME this ARGUMENT EXPR socket event open write NAME socket event open write NAME socket event NAME open write ARGUMENT EXPR true override NN public NN void NN register NN write VB interest NN root ROOT write nsubj write register dobj write interest synchronized VBN write VB completion NN handler NN root ROOT write compound handler completion dobj write handler if IN write VB pending VBG available JJ permits NNS root ROOT write case permits pending amod permits available nmod pending write permits write VB interest NN root ROOT write dobj write interest true JJ else RB if no write is pending notify root ROOT notify mark notify if neg write no nsubj notify write aux notify is amod notify pending get VB endpoint NN root ROOT get dobj get endpoint process NN socket NN root ROOT socket compound socket process this DT socket NN event NN open JJ root ROOT open compound event socket nsubj open event write VB true JJ,0,N/A,tomcat/java/org/apache/tomcat/util/net/Nio2Endpoint.java,1392
COMMENT second DECL STMT TYPE weak reference static membership interceptor NAME weak reference static membership interceptor NAME weak reference ARGUMENT LIST ARGUMENT NAME static membership interceptor NAME static members INIT null EXPR null second weak JJ reference NN root ROOT reference amod reference weak static JJ membership NN interceptor NN root ROOT interceptor amod interceptor static compound interceptor membership static JJ members NNS root ROOT members amod members static null JJ,1,E1,tomcat/java/org/apache/catalina/tribes/group/interceptors/TcpPingInterceptor.java,63
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME max integer octets INIT EXPR private JJ static JJ final JJ int NN max NN integer NN octets NNS root ROOT octets compound octets max compound octets integer,0,N/A,tomcat/java/org/apache/coyote/http2/Hpack.java,29
COMMENT sets a value of a bean of the given name if the named bean does not exist and link can create bean returns code true code then a bean is created with the given value param bean name the name of the bean to be set create param value the value of the bean to set create throws property not writable exception if the bean is read only FUNCTION SPECIFIER public TYPE void NAME void NAME set bean value PARAMETER LIST string bean name object value PARAMETER string bean name TYPE string NAME string NAME bean name PARAMETER object value TYPE object NAME object NAME value THROWS throws property not writable exception ARGUMENT EXPR property not writable exception NAME property not writable exception BLOCK THROW throw new property not writable exception EXPR new property not writable exception CALL property not writable exception NAME property not writable exception ARGUMENT LIST sets a value of a bean of the given name if the named bean does not root ROOT sets det value a dobj sets value case bean of det bean a nmod of value bean case name of det name the amod name given nmod of bean name dep sets if det bean the amod bean named root if bean dep bean does neg does not sets a value of a bean of the given name if the named bean does not root ROOT sets det value a dobj sets value case bean of det bean a nmod of value bean case name of det name the amod name given nmod of bean name dep sets if det bean the amod bean named root if bean dep bean does neg does not exist and link can create bean returns code true code then a bean root ROOT create nsubj create exist cc exist and conj and exist link nsubj create link aux create can compound returns bean nsubj code returns ccomp create code amod code true dobj code code advmod bean then det bean a nmod code bean is created with the given value root ROOT created auxpass created is case value with det value the amod value given nmod with created value param bean name the name of the bean to be set create root ROOT create compound name param compound name bean nsubj create name det name the dep name name case bean of det bean the nmod of name bean mark set to auxpass set be acl to name set param value the value of the bean to set create root ROOT create compound value param nsubj create value det value the dep value value case bean of det bean the nmod of value bean mark set to acl to value set throws property not writable exception if the bean is read only root ROOT throws compound exception property neg writable not amod exception writable dobj throws exception mark read if det bean the nsubjpass read bean auxpass read is advcl if throws read advmod read only public NN void NN set VBN bean NN value NN root ROOT set compound value bean dobj set value string NN bean NN name NN root ROOT name compound name bean object NN value NN throws VBZ property NN not RB writable JJ exception NN root ROOT exception compound exception property neg writable not amod exception writable throw VB new JJ property NN not RB writable JJ exception NN root ROOT exception compound exception property neg writable not amod exception writable given does ANTONYM ANTONYM given name ANTONYM ANTONYM given named ANTONYM ANTONYM name does ANTONYM ANTONYM named does ANTONYM ANTONYM,1,B1,tomcat/java/javax/el/BeanNameResolver.java,61
DECL STMT SPECIFIER public TYPE mapped wrapper NAME mapped wrapper NAME mapped wrapper INDEX NAME wildcard wrappers INIT new mapped wrapper EXPR new mapped wrapper NAME mapped wrapper NAME mapped wrapper INDEX EXPR public NN mapped VBN wrapper NN root ROOT mapped dobj mapped wrapper wildcard JJ wrappers NNS root ROOT wrappers amod wrappers wildcard new JJ mapped VBN wrapper NN root ROOT mapped dobj mapped wrapper,0,N/A,tomcat/java/org/apache/catalina/mapper/Mapper.java,1701
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE byte NAME byte NAME byte INDEX NAME get message PARAMETER LIST BLOCK IF if message null message outdata CONDITION message null EXPR message null NAME message THEN message outdata BLOCK EXPR message outdata NAME message NAME outdata RETURN return message EXPR message NAME message override NN public NN byte NN get VB message NN root ROOT get dobj get message if IN message NN null JJ message NN outdata NN return NN message NN,1,A4,tomcat/test/org/apache/catalina/tribes/demos/LoadTest.java,258
DECL STMT TYPE long NAME long NAME n INIT l EXPR l long RB n NN l NN,0,N/A,tomcat/test/org/apache/catalina/loader/TestWebappClassLoaderExecutorMemoryLeak.java,83
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE byte NAME byte NAME byte INDEX NAME get signature PARAMETER LIST BLOCK RETURN return unwrap get signature EXPR unwrap get signature CALL unwrap NAME unwrap ARGUMENT LIST CALL get signature NAME get signature ARGUMENT LIST override NN public NN byte NN get VB signature NN root ROOT get dobj get signature return NN unwrap NN get VB signature NN root ROOT get dobj get signature,1,A4,tomcat/java/org/apache/tomcat/util/net/openssl/OpenSSLX509Certificate.java,89
COMMENT lex state array DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME int INDEX NAME jjnew lex state INIT EXPR BLOCK EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR lex state array root ROOT array amod array lex compound array state lex state array root ROOT array amod array lex compound array state public NN static JJ final JJ int NN jjnew NN lex NN state NN root ROOT state compound state jjnew compound state lex,0,N/A,tomcat/java/org/apache/el/parser/ELParserTokenManager.java,1883
COMMENT minimum session timeout DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME short session timeout secs INIT EXPR minimum session timeout root ROOT timeout compound timeout minimum compound timeout session private JJ static JJ final JJ int NN short JJ session NN timeout NN secs NNS root ROOT secs amod secs short compound secs session compound secs timeout,0,N/A,tomcat/test/org/apache/catalina/authenticator/TestFormAuthenticator.java,98
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE enumeration locale NAME enumeration locale NAME enumeration ARGUMENT LIST ARGUMENT NAME locale NAME get locales PARAMETER LIST BLOCK IF if request null throw new illegal state exception sm get string request facade null request CONDITION request null EXPR request null NAME request THEN throw new illegal state exception sm get string request facade null request BLOCK THROW throw new illegal state exception sm get string request facade null request EXPR new illegal state exception sm get string request facade null request CALL illegal state exception sm get string request facade null request NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR sm get string request facade null request CALL sm get string request facade null request NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR request facade null request IF if globals is security enabled return access controller do privileged new get locales privileged action else return request get locales CONDITION globals is security enabled EXPR globals is security enabled NAME globals is security enabled NAME globals NAME is security enabled THEN return access controller do privileged new get locales privileged action BLOCK RETURN return access controller do privileged new get locales privileged action EXPR access controller do privileged new get locales privileged action CALL access controller do privileged new get locales privileged action NAME access controller do privileged NAME access controller NAME do privileged ARGUMENT LIST ARGUMENT EXPR new get locales privileged action CALL get locales privileged action NAME get locales privileged action ARGUMENT LIST ELSE else return request get locales BLOCK RETURN return request get locales EXPR request get locales CALL request get locales NAME request get locales NAME request NAME get locales ARGUMENT LIST override NN public NN enumeration NN locale NN get VB locales NNS root ROOT get dobj get locales if IN request NN null JJ throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state sm NN get VB string NN root ROOT get nsubj get sm dobj get string request NN facade NN null JJ request NN root ROOT request compound request request compound request facade amod request null if IN globals NNS is VBZ root ROOT is nsubj is globals security NN enabled VBD root ROOT enabled nsubj enabled security return NN access NN controller NN do VBP privileged JJ root ROOT do compound controller access nsubj do controller dobj do privileged new JJ get VB locales NNS privileged JJ action NN root ROOT get compound action locales amod action privileged dobj get action else RB return NN request NN get VB locales NNS root ROOT get nsubj get request dobj get locales,0,N/A,tomcat/java/org/apache/catalina/connector/RequestFacade.java,573
COMMENT state variables DECL STMT SPECIFIER protected TYPE byte buffer NAME byte buffer NAME writebuf INIT null EXPR null state variables root ROOT variables compound variables state protected VBN byte NN buffer NN root ROOT buffer compound buffer byte writebuf NN null JJ,0,N/A,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,64
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE set string NAME set string NAME set ARGUMENT LIST ARGUMENT NAME string NAME set init parameters PARAMETER LIST map string string init parameters PARAMETER map string string init parameters TYPE map string string NAME map string string NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME string NAME init parameters BLOCK DECL STMT TYPE set string NAME set string NAME set ARGUMENT LIST ARGUMENT NAME string NAME conflicts INIT new hash set EXPR new hash set CALL hash set NAME hash set NAME hash set ARGUMENT LIST ARGUMENT LIST FOR for map entry string string entry init parameters entry set if entry get key null entry get value null throw new illegal argument exception sm get string application filter registration null init params entry get key entry get value if get init parameter entry get key null conflicts add entry get key CONTROL map entry string string entry init parameters entry set INIT map entry string string entry init parameters entry set TYPE map entry string string NAME map entry string string NAME map NAME entry string string NAME entry ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME string NAME entry RANGE init parameters entry set EXPR init parameters entry set CALL init parameters entry set NAME init parameters entry set NAME init parameters NAME entry set ARGUMENT LIST BLOCK IF if entry get key null entry get value null throw new illegal argument exception sm get string application filter registration null init params entry get key entry get value CONDITION entry get key null entry get value null EXPR entry get key null entry get value null CALL entry get key NAME entry get key NAME entry NAME get key ARGUMENT LIST CALL entry get value NAME entry get value NAME entry NAME get value ARGUMENT LIST THEN throw new illegal argument exception sm get string application filter registration null init params entry get key entry get value BLOCK THROW throw new illegal argument exception sm get string application filter registration null init params entry get key entry get value EXPR new illegal argument exception sm get string application filter registration null init params entry get key entry get value CALL illegal argument exception sm get string application filter registration null init params entry get key entry get value NAME illegal argument exception ARGUMENT LIST ARGUMENT EXPR sm get string application filter registration null init params entry get key entry get value CALL sm get string application filter registration null init params entry get key entry get value NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR application filter registration null init params ARGUMENT EXPR entry get key CALL entry get key NAME entry get key NAME entry NAME get key ARGUMENT LIST ARGUMENT EXPR entry get value CALL entry get value NAME entry get value NAME entry NAME get value ARGUMENT LIST IF if get init parameter entry get key null conflicts add entry get key CONDITION get init parameter entry get key null EXPR get init parameter entry get key null CALL get init parameter entry get key NAME get init parameter ARGUMENT LIST ARGUMENT EXPR entry get key CALL entry get key NAME entry get key NAME entry NAME get key ARGUMENT LIST THEN conflicts add entry get key BLOCK EXPR conflicts add entry get key CALL conflicts add entry get key NAME conflicts add NAME conflicts NAME add ARGUMENT LIST ARGUMENT EXPR entry get key CALL entry get key NAME entry get key NAME entry NAME get key ARGUMENT LIST COMMENT have to add in a separate loop since spec requires no updates at all COMMENT if there is an issue FOR for map entry string string entry init parameters entry set set init parameter entry get key entry get value CONTROL map entry string string entry init parameters entry set INIT map entry string string entry init parameters entry set TYPE map entry string string NAME map entry string string NAME map NAME entry string string NAME entry ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME string NAME entry RANGE init parameters entry set EXPR init parameters entry set CALL init parameters entry set NAME init parameters entry set NAME init parameters NAME entry set ARGUMENT LIST BLOCK EXPR set init parameter entry get key entry get value CALL set init parameter entry get key entry get value NAME set init parameter ARGUMENT LIST ARGUMENT EXPR entry get key CALL entry get key NAME entry get key NAME entry NAME get key ARGUMENT LIST ARGUMENT EXPR entry get value CALL entry get value NAME entry get value NAME entry NAME get value ARGUMENT LIST RETURN return conflicts EXPR conflicts NAME conflicts override NN public NN set NN string NN set VBN init NN parameters NNS root ROOT set compound parameters init dobj set parameters map NN string NN string NN init NN parameters NNS root ROOT parameters compound parameters init set NN string NN conflicts NNS new JJ hash JJ set NN root ROOT set amod set hash for IN map NN entry NN root ROOT entry compound entry map string NN string NN entry NN init NN parameters NNS entry NN set NN root ROOT set compound set init compound set parameters compound set entry if IN entry NN get VB key JJ root ROOT get nsubj get entry xcomp get key null JJ entry NN get VB value NN root ROOT get nsubj get entry dobj get value null JJ throw VB new JJ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument sm NN get VB string NN root ROOT get nsubj get sm dobj get string application NN filter NN registration NN null JJ init NN params NNS root ROOT params compound params application compound params filter compound params registration amod params null compound params init entry NN get VB key JJ root ROOT get nsubj get entry xcomp get key entry NN get VB value NN root ROOT get nsubj get entry dobj get value if IN get VB init NN parameter NN root ROOT get compound parameter init dobj get parameter entry NN get VB key JJ root ROOT get nsubj get entry xcomp get key null JJ conflicts NNS add VBP root ROOT add nsubj add conflicts entry NN get VB key JJ root ROOT get nsubj get entry xcomp get key have to add in a separate loop since spec requires no updates at all root ROOT have mark add to xcomp have add case loop in det loop a amod loop separate nmod in add loop mark requires since nsubj requires spec advcl since add requires neg updates no dobj requires updates case all at nmod at requires all if there is an issue root ROOT is mark is if expl is there det issue an nsubj is issue for IN map NN entry NN root ROOT entry compound entry map string NN string NN entry NN init NN parameters NNS entry NN set NN root ROOT set compound set init compound set parameters compound set entry set VBN init NN parameter NN root ROOT set compound parameter init dobj set parameter entry NN get VB key JJ root ROOT get nsubj get entry xcomp get key entry NN get VB value NN root ROOT get nsubj get entry dobj get value return NN conflicts NNS,1,A3,tomcat/java/org/apache/catalina/core/ApplicationFilterRegistration.java,185
COMMENT override the code get servlet path code method of the wrapped request FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE string NAME string NAME get servlet path PARAMETER LIST BLOCK RETURN return this servlet path EXPR this servlet path NAME this servlet path NAME this NAME servlet path override the code get servlet path code method of the wrapped root ROOT override det code the nsubj get code ccomp override get amod method servlet compound method path compound method code dobj get method case wrapped of det wrapped the nmod of method wrapped request override NN public NN string NN get VB servlet JJ path NN root ROOT get amod path servlet dobj get path return NN this DT servlet JJ path NN,0,N/A,tomcat/java/org/apache/catalina/core/ApplicationHttpRequest.java,489
COMMENT this method is invoked by a connection pool when the pool is first started up usually when the first connection is requested interceptor classes can override this method if they keep static variables or other tracking means around b this method is only invoked on a single instance of the interceptor and not on every instance created b param pool the pool that is being closed FUNCTION SPECIFIER public TYPE void NAME void NAME pool started PARAMETER LIST connection pool pool PARAMETER connection pool pool TYPE connection pool NAME connection pool NAME pool BLOCK COMMENT noop this method is invoked by a connection pool when the pool is first started up usually when the first connection is requested root ROOT invoked det method this nsubjpass invoked method auxpass invoked is case pool by det pool a compound pool connection nmod agent invoked pool advmod started when det pool the nsubjpass started pool auxpass started is advmod started first advcl invoked started compound prt started up advmod started usually advmod requested when det connection the amod connection first nsubjpass requested connection auxpass requested is advcl started requested interceptor classes can override this method if they keep static root ROOT override compound classes interceptor nsubj override classes aux override can det method this dobj override method mark keep if nsubj keep they advcl if override keep xcomp keep static variables or other tracking means around root ROOT means nsubj means variables cc variables or amod tracking other conj or variables tracking nsubj means tracking advmod means around b this method is only invoked on a single instance of the interceptor and not on every instance created b root ROOT b det method this nsubjpass invoked method nsubjpass invoked method auxpass invoked is advmod invoked only acl relcl b invoked acl relcl b invoked conj and invoked invoked case instance on det instance a amod instance single nmod on invoked instance case interceptor of det interceptor the nmod of instance interceptor cc invoked and neg instance not case instance on det instance every nmod on invoked instance acl instance created dobj created b b this method is only invoked on a single instance of the interceptor and not on every instance created b root ROOT b det method this nsubjpass invoked method nsubjpass invoked method auxpass invoked is advmod invoked only acl relcl b invoked acl relcl b invoked conj and invoked invoked case instance on det instance a amod instance single nmod on invoked instance case interceptor of det interceptor the nmod of instance interceptor cc invoked and neg instance not case instance on det instance every nmod on invoked instance acl instance created dobj created b param pool the pool that is being closed root ROOT pool compound pool param det pool the dep pool pool nsubjpass closed pool ref pool that aux closed is auxpass closed being acl relcl pool closed public NN void NN pool NN started VBD root ROOT started nsubj started pool connection NN pool NN root ROOT pool compound pool connection pool NN noop single public ANTONYM ANTONYM started can ANTONYM ANTONYM,0,N/A,tomcat/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/JdbcInterceptor.java,235
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE sql warning NAME sql warning NAME get warnings PARAMETER LIST THROWS throws sql exception ARGUMENT EXPR sql exception NAME sql exception BLOCK RETURN return null EXPR null override NN public NN sql NN warning NN root ROOT warning compound warning sql get VB warnings NNS root ROOT get dobj get warnings throws VBZ sql NN exception NN root ROOT exception compound exception sql return NN null JJ,1,B6,tomcat/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/driver/Connection.java,152
DECL STMT SPECIFIER private TYPE final string SPECIFIER final NAME string NAME new lines private JJ final JJ string NN new JJ lines NNS root ROOT lines amod lines new,1,E1,tomcat/test/org/apache/coyote/http11/TestHttp11InputBuffer.java,359
COMMENT limits DECL STMT SPECIFIER static TYPE final int SPECIFIER final NAME int NAME default max cookie count INIT EXPR limits static JJ final JJ int NN default NN max NN cookie NN count NN root ROOT count compound count default compound count max compound count cookie,0,N/A,tomcat/java/org/apache/coyote/http2/Constants.java,28
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME common alias INIT common EXPR common public NN static JJ final JJ string NN common JJ alias NNS root ROOT alias amod alias common common JJ,0,N/A,tomcat/java/org/apache/catalina/valves/Constants.java,33
COMMENT only execute if a property of the given name does not exist in the current project param c property name FUNCTION SPECIFIER public TYPE void NAME void NAME set unless PARAMETER LIST string c PARAMETER string c TYPE string NAME string NAME c BLOCK EXPR unless condition c NAME unless condition NAME c only execute if a property of the given name does not root ROOT execute advmod execute only dobj execute if det property a root if property case name of det name the amod name given nmod of property name dep property does neg does not exist in the current project root ROOT exist case project in det project the amod project current nmod in exist project param c property name root ROOT name compound name param compound name c compound name property public NN void NN set VBN unless IN root ROOT set dep set unless string NN c NN unless IN condition NN root ROOT condition case condition unless c NN given does ANTONYM ANTONYM given name ANTONYM ANTONYM given project ANTONYM ANTONYM name does ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/ant/jmx/JMXAccessorCondition.java,144
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE driver property info NAME driver property info NAME driver property info INDEX NAME get property info PARAMETER LIST string url properties info PARAMETER string url TYPE string NAME string NAME url PARAMETER properties info TYPE properties NAME properties NAME info THROWS throws sql exception ARGUMENT EXPR sql exception NAME sql exception BLOCK RETURN return null EXPR null override NN public NN driver NN property NN info NN root ROOT info compound info driver compound info property get VB property NN info NN root ROOT get compound info property dobj get info string NN url NN properties NNS info NN throws VBZ sql NN exception NN root ROOT exception compound exception sql return NN null JJ,0,N/A,tomcat/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/driver/Driver.java,71
COMMENT parser cache DECL STMT SPECIFIER private SPECIFIER static TYPE final map string long SPECIFIER final NAME map string long NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME long NAME parse cache INIT new concurrent hash map cache size EXPR new concurrent hash map cache size CALL concurrent hash map cache size NAME concurrent hash map NAME concurrent hash map ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR cache size NAME cache size parser cache root ROOT cache compound cache parser private JJ static JJ final JJ map NN string NN long RB parse VB cache NN root ROOT parse dobj parse cache new JJ concurrent JJ hash NN map NN root ROOT map amod map concurrent compound map hash cache NN size NN root ROOT size compound size cache,0,N/A,tomcat/java/org/apache/tomcat/util/http/FastHttpDateFormat.java,85
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME iterations INIT EXPR private JJ static JJ final JJ int NN iterations NNS,1,E1,tomcat/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/AlternateUsernameTest.java,37
COMMENT attributes of the current frame DECL STMT SPECIFIER private TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME mask INIT new byte EXPR new byte NAME byte NAME byte INDEX EXPR attributes of the current frame root ROOT attributes case frame of det frame the amod frame current nmod of attributes frame private JJ final JJ byte NN mask NN new JJ byte NN,1,D1,tomcat/java/org/apache/tomcat/websocket/WsFrameBase.java,79
COMMENT returns an iterator of all the interceptors in this stack return iterator FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE iterator channel interceptor NAME iterator channel interceptor NAME iterator ARGUMENT LIST ARGUMENT NAME channel interceptor NAME get interceptors PARAMETER LIST BLOCK RETURN return new interceptor iterator this get next this coordinator EXPR new interceptor iterator this get next this coordinator CALL interceptor iterator this get next this coordinator NAME interceptor iterator ARGUMENT LIST ARGUMENT EXPR this get next CALL this get next NAME this get next NAME this NAME get next ARGUMENT LIST ARGUMENT EXPR this coordinator NAME this coordinator NAME this NAME coordinator returns an iterator of all the interceptors in this stack root ROOT stack nsubj stack returns det iterator an dobj returns iterator case interceptors of det predet interceptors all det interceptors the nmod of iterator interceptors case this in nmod in iterator this return iterator root ROOT iterator compound iterator return override NN public NN iterator NN channel NN interceptor NN root ROOT interceptor compound interceptor channel get VB interceptors NNS root ROOT get dobj get interceptors return NN new JJ interceptor NN iterator NN root ROOT iterator compound iterator interceptor this DT get VB next JJ this DT coordinator NN,0,N/A,tomcat/java/org/apache/catalina/tribes/group/GroupChannel.java,603
COMMENT table for byte to hex string translation DECL STMT SPECIFIER private SPECIFIER static TYPE final char SPECIFIER final NAME char NAME char INDEX NAME hex INIT abcdef to char array EXPR abcdef to char array CALL to char array NAME to char array ARGUMENT LIST table for byte to hex string translation root ROOT table case byte for nmod for table byte case translation to compound translation hex compound translation string nmod to byte translation private JJ static JJ final JJ char NN hex NN abcdef NN to TO char VB array NN root ROOT char mark char to dobj char array,0,N/A,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,57
DECL STMT SPECIFIER protected SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string INDEX NAME callable type INIT new string prepare call EXPR new string prepare call NAME string NAME string INDEX BLOCK EXPR prepare call NAME prepare call protected VBN static JJ final JJ string NN callable JJ type NN root ROOT type amod type callable new JJ string NN prepare VB call NN root ROOT prepare dobj prepare call,1,D1,tomcat/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/StatementCache.java,38
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE boolean NAME boolean NAME boolean INDEX NAME get key usage PARAMETER LIST BLOCK RETURN return unwrap get key usage EXPR unwrap get key usage CALL unwrap NAME unwrap ARGUMENT LIST CALL get key usage NAME get key usage ARGUMENT LIST override NN public NN boolean NN get VB key JJ usage NN root ROOT get amod usage key dobj get usage return NN unwrap NN get VB key JJ usage NN root ROOT get amod usage key dobj get usage,0,N/A,tomcat/java/org/apache/tomcat/util/net/openssl/OpenSSLX509Certificate.java,119
COMMENT chunk separator per rfc section p n b the next major release may break compatibility and make this field private p see a href http www ietf org rfc rfc txt rfc section a DECL STMT SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME chunk separator INIT r n EXPR r n BLOCK EXPR r EXPR n chunk separator per rfc section root ROOT separator compound separator chunk case section per compound section rfc nmod per separator section p n b the next major release may break compatibility and make this field private root ROOT b compound b n det release the amod release next amod release major nsubj break release nsubj make release aux break may acl relcl b break dobj break compatibility cc break and acl relcl b make conj and break make det field this nsubj private field xcomp make private n b the next major release may break compatibility and make this field private root ROOT b compound b n det release the amod release next amod release major nsubj break release nsubj make release aux break may acl relcl b break dobj break compatibility cc break and acl relcl b make conj and break make det field this nsubj private field xcomp make private p see a href http www ietf org rfc rfc txt rfc section a root ROOT see det section a compound section href compound section http compound section www compound section ietf compound section org compound section rfc compound section rfc compound section txt compound section rfc dobj see section dep section a static JJ final JJ byte NN chunk NN separator NN root ROOT separator compound separator chunk r NN n NN break make ANTONYM ANTONYM break see ANTONYM ANTONYM make see ANTONYM ANTONYM release break ANTONYM ANTONYM release make ANTONYM ANTONYM,1,D1,tomcat/java/org/apache/tomcat/util/codec/binary/Base64.java,72
FUNCTION SPECIFIER public SPECIFIER static TYPE m bean notification info NAME m bean notification info NAME m bean notification info INDEX NAME get default notification info PARAMETER LIST BLOCK DECL STMT TYPE string NAME string NAME string INDEX NAME types INIT new string notify init notify connect notify abandon slow query notification failed query notification suspect abandoned notification pool empty suspect returned notification EXPR new string notify init notify connect notify abandon slow query notification failed query notification suspect abandoned notification pool empty suspect returned notification NAME string NAME string INDEX BLOCK EXPR notify init NAME notify init EXPR notify connect NAME notify connect EXPR notify abandon NAME notify abandon EXPR slow query notification NAME slow query notification EXPR failed query notification NAME failed query notification EXPR suspect abandoned notification NAME suspect abandoned notification EXPR pool empty NAME pool empty EXPR suspect returned notification NAME suspect returned notification DECL STMT TYPE string NAME string NAME name INIT notification class get name EXPR notification class get name CALL notification class get name NAME notification class get name NAME notification NAME class get name NAME class NAME get name ARGUMENT LIST DECL STMT TYPE string NAME string NAME description INIT a connection pool error condition was met EXPR a connection pool error condition was met DECL STMT TYPE m bean notification info NAME m bean notification info NAME info INIT new m bean notification info types name description EXPR new m bean notification info types name description CALL m bean notification info types name description NAME m bean notification info ARGUMENT LIST ARGUMENT EXPR types NAME types ARGUMENT EXPR name NAME name ARGUMENT EXPR description NAME description RETURN return new m bean notification info info EXPR new m bean notification info info NAME m bean notification info NAME m bean notification info INDEX BLOCK EXPR info NAME info public NN static JJ m NN bean NN notification NN info NN root ROOT info compound info m compound info bean compound info notification get VB default NN notification NN info NN root ROOT get compound info default compound info notification dobj get info string NN types NNS new JJ string NN notify VB init NN root ROOT notify dobj notify init notify VB connect VB root ROOT notify dobj notify connect notify VB abandon VB root ROOT notify dobj notify abandon slow JJ query NN notification NN root ROOT notification amod notification slow compound notification query failed VBD query NN notification NN root ROOT failed compound notification query dobj failed notification suspect JJ abandoned VBN notification NN root ROOT notification amod notification suspect amod notification abandoned pool NN empty JJ root ROOT empty nmod npmod empty pool suspect JJ returned VBD notification NN root ROOT returned nsubj returned suspect dobj returned notification string NN name NN notification NN class NN get VB name NN string NN description NN a DT connection NN pool NN error NN condition NN was VBD met VBD m NN bean NN notification NN info NN root ROOT info compound info m compound info bean compound info notification info NN new JJ m NN bean NN notification NN info NN root ROOT info compound info m compound info bean compound info notification types NNS name NN description NN return NN new JJ m NN bean NN notification NN info NN root ROOT info compound info m compound info bean compound info notification info NN,1,A1,tomcat/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/jmx/ConnectionPool.java,90
COMMENT remove a jmx notification listener see javax management notification broadcaster remove notification listener javax management notification listener FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME remove notification listener PARAMETER LIST notification listener listener PARAMETER notification listener listener TYPE notification listener NAME notification listener NAME listener THROWS throws listener not found exception ARGUMENT EXPR listener not found exception NAME listener not found exception BLOCK EXPR broadcaster remove notification listener listener CALL broadcaster remove notification listener listener NAME broadcaster remove notification listener NAME broadcaster NAME remove notification listener ARGUMENT LIST ARGUMENT EXPR listener NAME listener remove a jmx notification listener root ROOT remove det listener a compound listener jmx compound listener notification dobj remove listener see javax management notification broadcaster remove notification listener javax management notification listener root ROOT see compound broadcaster javax compound broadcaster management compound broadcaster notification nsubj remove broadcaster ccomp see remove compound listener notification compound listener listener compound listener javax compound listener management compound listener notification dobj remove listener override NN public NN void NN remove VB notification NN listener NN root ROOT remove compound listener notification dobj remove listener notification NN listener NN root ROOT listener compound listener notification listener NN throws VBZ listener NN not RB found VBN exception NN root ROOT found nsubj found listener neg found not dobj found exception broadcaster NN remove VB notification NN listener NN root ROOT remove nsubj remove broadcaster compound listener notification dobj remove listener listener NN see throws ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/core/StandardWrapper.java,1799
COMMENT return associated resources COMMENT properties FUNCTION SPECIFIER public TYPE web resource root NAME web resource root NAME get resources PARAMETER LIST BLOCK RETURN return this resources EXPR this resources NAME this resources NAME this NAME resources return associated resources root ROOT resources compound resources return amod resources associated properties public NN web NN resource NN root NN root ROOT root compound root web compound root resource get VB resources NNS root ROOT get dobj get resources return NN this DT resources NNS,1,B6,tomcat/java/org/apache/catalina/loader/WebappClassLoaderBase.java,396
COMMENT inherit doc FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE boolean NAME boolean NAME is caching PARAMETER LIST BLOCK RETURN return caching EXPR caching NAME caching inherit doc root ROOT inherit dobj inherit doc override NN public NN boolean NN is VBZ caching VBG root ROOT caching aux caching is return NN caching VBG,0,N/A,tomcat/java/org/apache/jasper/JspC.java,563
FUNCTION SPECIFIER private TYPE nio sender NAME nio sender NAME nio sender INDEX NAME setup for send PARAMETER LIST member destination PARAMETER member destination TYPE member NAME member NAME member INDEX NAME destination THROWS throws channel exception ARGUMENT EXPR channel exception NAME channel exception BLOCK DECL STMT TYPE channel exception NAME channel exception NAME cx INIT null EXPR null DECL STMT TYPE nio sender NAME nio sender NAME nio sender INDEX NAME result INIT new nio sender destination length EXPR new nio sender destination length NAME nio sender destination length NAME nio sender INDEX destination length EXPR destination length NAME destination length NAME destination NAME length FOR for int i i destination length i nio sender sender nio senders get destination i try if sender null sender new nio sender abstract sender transfer properties this sender nio senders put destination i sender sender reset sender set destination destination i sender set selector selector sender set udp based is udp based result i sender catch unknown host exception x if cx null cx new channel exception sm get string parallel nio sender unable setup nio sender x cx add faulty member destination i x CONTROL int i i destination length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i destination length EXPR i destination length NAME i NAME destination length NAME destination NAME length INCR i EXPR i NAME i BLOCK DECL STMT TYPE nio sender NAME nio sender NAME sender INIT nio senders get destination i EXPR nio senders get destination i CALL nio senders get destination i NAME nio senders get NAME nio senders NAME get ARGUMENT LIST ARGUMENT EXPR destination i NAME destination i NAME destination INDEX i EXPR i NAME i TRY try if sender null sender new nio sender abstract sender transfer properties this sender nio senders put destination i sender sender reset sender set destination destination i sender set selector selector sender set udp based is udp based result i sender catch unknown host exception x if cx null cx new channel exception sm get string parallel nio sender unable setup nio sender x cx add faulty member destination i x BLOCK IF if sender null sender new nio sender abstract sender transfer properties this sender nio senders put destination i sender CONDITION sender null EXPR sender null NAME sender THEN sender new nio sender abstract sender transfer properties this sender nio senders put destination i sender BLOCK EXPR sender new nio sender NAME sender CALL nio sender NAME nio sender ARGUMENT LIST EXPR abstract sender transfer properties this sender CALL abstract sender transfer properties this sender NAME abstract sender transfer properties NAME abstract sender NAME transfer properties ARGUMENT LIST ARGUMENT EXPR this NAME this ARGUMENT EXPR sender NAME sender EXPR nio senders put destination i sender CALL nio senders put destination i sender NAME nio senders put NAME nio senders NAME put ARGUMENT LIST ARGUMENT EXPR destination i NAME destination i NAME destination INDEX i EXPR i NAME i ARGUMENT EXPR sender NAME sender EXPR sender reset CALL sender reset NAME sender reset NAME sender NAME reset ARGUMENT LIST EXPR sender set destination destination i CALL sender set destination destination i NAME sender set destination NAME sender NAME set destination ARGUMENT LIST ARGUMENT EXPR destination i NAME destination i NAME destination INDEX i EXPR i NAME i EXPR sender set selector selector CALL sender set selector selector NAME sender set selector NAME sender NAME set selector ARGUMENT LIST ARGUMENT EXPR selector NAME selector EXPR sender set udp based is udp based CALL sender set udp based is udp based NAME sender set udp based NAME sender NAME set udp based ARGUMENT LIST ARGUMENT EXPR is udp based CALL is udp based NAME is udp based ARGUMENT LIST EXPR result i sender NAME result i NAME result INDEX i EXPR i NAME i NAME sender CATCH catch unknown host exception x if cx null cx new channel exception sm get string parallel nio sender unable setup nio sender x cx add faulty member destination i x PARAMETER LIST unknown host exception x PARAMETER unknown host exception x TYPE unknown host exception NAME unknown host exception NAME x BLOCK IF if cx null cx new channel exception sm get string parallel nio sender unable setup nio sender x CONDITION cx null EXPR cx null NAME cx THEN cx new channel exception sm get string parallel nio sender unable setup nio sender x BLOCK EXPR cx new channel exception sm get string parallel nio sender unable setup nio sender x NAME cx CALL channel exception sm get string parallel nio sender unable setup nio sender x NAME channel exception ARGUMENT LIST ARGUMENT EXPR sm get string parallel nio sender unable setup nio sender CALL sm get string parallel nio sender unable setup nio sender NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR parallel nio sender unable setup nio sender ARGUMENT EXPR x NAME x EXPR cx add faulty member destination i x CALL cx add faulty member destination i x NAME cx add faulty member NAME cx NAME add faulty member ARGUMENT LIST ARGUMENT EXPR destination i NAME destination i NAME destination INDEX i EXPR i NAME i ARGUMENT EXPR x NAME x IF if cx null throw cx else return result CONDITION cx null EXPR cx null NAME cx THEN throw cx BLOCK THROW throw cx EXPR cx NAME cx ELSE else return result BLOCK RETURN return result EXPR result NAME result private JJ nio NN sender NN root ROOT sender compound sender nio setup NN for IN send VB root ROOT setup mark send for acl for setup send member NN destination NN throws VBZ channel NN exception NN root ROOT exception compound exception channel channel NN exception NN root ROOT exception compound exception channel cx NN null JJ nio NN sender NN root ROOT sender compound sender nio result NN new JJ nio NN sender NN root ROOT sender compound sender nio destination NN length NN root ROOT length compound length destination for IN int NN i LS i LS destination NN length NN root ROOT length compound length destination i LS nio NN sender NN root ROOT sender compound sender nio sender NN nio NN senders NNS get VBP root ROOT get compound senders nio nsubj get senders destination NN i LS try VB if IN sender NN null JJ sender NN new JJ nio NN sender NN root ROOT sender compound sender nio abstract JJ sender NN transfer NN properties NNS root ROOT properties amod properties abstract compound properties sender compound properties transfer this DT sender NN nio NN senders NNS put VBP root ROOT put compound senders nio nsubj put senders destination NN i LS sender NN sender NN reset NN root ROOT reset compound reset sender sender NN set VBD destination NN root ROOT set nsubj set sender dobj set destination destination NN i LS sender NN set VBD selector NN root ROOT set nsubj set sender dobj set selector selector NN sender NN set VBD udp NN based VBN root ROOT set nsubj set sender dobj set udp acl udp based is VBZ udp NN based VBN root ROOT based auxpass based is nsubjpass based udp result NN i LS sender NN catch NN unknown JJ host NN exception NN root ROOT exception amod exception unknown compound exception host x NN if IN cx NN null JJ cx NN new JJ channel NN exception NN root ROOT exception compound exception channel sm NN get VB string NN root ROOT get nsubj get sm dobj get string parallel JJ nio NN sender NN unable JJ setup NN nio NN sender NN root ROOT sender amod sender parallel compound sender nio amod sender unable compound sender setup compound sender nio dep sender sender x NN cx NN add VB faulty JJ member NN root ROOT add nsubj add cx amod member faulty dobj add member destination NN i LS x NN if IN cx NN null JJ throw VB cx NN else RB return NN result NN,0,N/A,tomcat/java/org/apache/catalina/tribes/transport/nio/ParallelNioSender.java,229
COMMENT state variables DECL STMT SPECIFIER protected TYPE final x byte buffer SPECIFIER final NAME x byte buffer NAME ackbuf INIT new x byte buffer true EXPR new x byte buffer true CALL x byte buffer true NAME x byte buffer ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR true state variables root ROOT variables compound variables state protected VBN final JJ x CC byte NN buffer NN root ROOT buffer compound buffer x compound buffer byte ackbuf NN new JJ x CC byte NN buffer NN root ROOT buffer compound buffer x compound buffer byte true JJ,0,N/A,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,66
DECL STMT SPECIFIER private TYPE linked hash set string NAME linked hash set string NAME linked hash set ARGUMENT LIST ARGUMENT NAME string NAME url pattern INIT new linked hash set EXPR new linked hash set CALL linked hash set NAME linked hash set NAME linked hash set ARGUMENT LIST ARGUMENT LIST private JJ linked VBN hash JJ set NN root ROOT set amod set linked amod set hash string NN url NN pattern NN root ROOT pattern compound pattern url new JJ linked VBN hash JJ set NN root ROOT set amod set linked amod set hash,1,D1,tomcat/java/org/apache/tomcat/util/descriptor/web/JspPropertyGroup.java,79
DECL STMT SPECIFIER protected SPECIFIER static TYPE final string manager SPECIFIER final NAME string manager NAME sm INIT string manager get manager domain filter interceptor class EXPR string manager get manager domain filter interceptor class CALL string manager get manager domain filter interceptor class NAME string manager get manager NAME string manager NAME get manager ARGUMENT LIST ARGUMENT EXPR domain filter interceptor class NAME domain filter interceptor class NAME domain filter interceptor NAME class protected VBN static JJ final JJ string NN manager NN root ROOT manager compound manager string sm NN string NN manager NN get VB manager NN root ROOT get compound manager string nsubj get manager dobj get manager domain NN filter NN interceptor NN class NN,0,N/A,tomcat/java/org/apache/catalina/tribes/group/interceptors/DomainFilterInterceptor.java,42
COMMENT the default value for the code eviction policy class name configuration attribute see generic object pool get eviction policy class name see generic keyed object pool get eviction policy class name DECL STMT SPECIFIER private TYPE long NAME long NAME soft min evictable idle time millis INIT default min evictable idle time millis EXPR default min evictable idle time millis NAME default min evictable idle time millis the default value for the code eviction policy class name configuration root ROOT value det value the compound value default case configuration for det configuration the compound configuration code compound configuration eviction compound configuration policy compound configuration class compound configuration name nmod for value configuration attribute see generic object pool get eviction policy class name root ROOT see amod pool generic compound pool object nsubj get pool ccomp see get compound name eviction compound name policy compound name class dobj get name see generic keyed object pool get eviction policy class name root ROOT see amod pool generic amod pool keyed compound pool object nsubj get pool ccomp see get compound name eviction compound name policy compound name class dobj get name private JJ long RB soft JJ min NN evictable JJ idle JJ time NN millis IN root ROOT min amod min soft amod time evictable amod time idle dep min time dep min millis default NN min NN evictable JJ idle JJ time NN millis IN root ROOT min compound min default amod time evictable amod time idle dep min time dep min millis,0,N/A,tomcat/java/org/apache/tomcat/dbcp/pool2/impl/BaseObjectPoolConfig.java,166
COMMENT command so that the custom payload doesn t have to be used this is for internal tribes use such as shutdown command DECL STMT SPECIFIER protected TYPE volatile byte SPECIFIER volatile NAME byte NAME byte INDEX NAME command INIT new byte EXPR new byte NAME byte NAME byte INDEX EXPR command so that the custom payload doesn t have to be used root ROOT command mark have so mwe so that det t the compound t custom compound t payload compound t doesn nsubj have t nsubjpass xsubj used t advcl so that command have mark used to auxpass used be xcomp have used this is for internal tribes use such as shutdown command root ROOT is nsubj is this case tribes for amod tribes internal nmod for use tribes ccomp is use case command such mwe such as compound command shutdown nmod such as use command protected VBN volatile JJ byte NN command NN new JJ byte NN custom use ANTONYM ANTONYM used new ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/tribes/membership/MemberImpl.java,104
COMMENT should tomcat attempt to terminate any link java util timer thread s that have been started by the web application if not specified the default value of code false code will be used DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME clear references stop timer threads INIT false EXPR false should tomcat attempt to terminate any link java util timer thread s root ROOT tomcat aux tomcat should dobj tomcat attempt mark terminate to acl to attempt terminate det s any compound s link compound s java compound s util compound s timer compound s thread dobj terminate s that have been started by the web application if not specified the root ROOT started nsubjpass started that aux started have auxpass started been case application by det application the compound application web nmod agent started application mark specified if neg specified not advcl if started specified dobj specified the that have been started by the web application if not specified the root ROOT started nsubjpass started that aux started have auxpass started been case application by det application the compound application web nmod agent started application mark specified if neg specified not advcl if started specified dobj specified the default value of code false code will be used root ROOT used compound value default nsubjpass used value case code of compound code code amod code false nmod of value code aux used will auxpass used be private JJ boolean NN clear JJ references NNS stop VBP timer NN threads NNS root ROOT stop amod references clear nsubj stop references compound threads timer dobj stop threads false JJ terminate attempt ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/loader/WebappClassLoaderBase.java,344
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME check members PARAMETER LIST boolean check all PARAMETER boolean check all TYPE boolean NAME boolean NAME check all BLOCK TRY try if membership null setup membership synchronized membership if check all perform basic check else perform forced check catch exception x log warn sm get string tcp failure detector heartbeat failed x BLOCK IF if membership null setup membership CONDITION membership null EXPR membership null NAME membership THEN setup membership BLOCK EXPR setup membership CALL setup membership NAME setup membership ARGUMENT LIST SYNCHRONIZED synchronized membership if check all perform basic check else perform forced check INIT membership EXPR membership NAME membership BLOCK IF if check all perform basic check else perform forced check CONDITION check all EXPR check all NAME check all THEN perform basic check BLOCK EXPR perform basic check CALL perform basic check NAME perform basic check ARGUMENT LIST ELSE else perform forced check BLOCK EXPR perform forced check CALL perform forced check NAME perform forced check ARGUMENT LIST CATCH catch exception x log warn sm get string tcp failure detector heartbeat failed x PARAMETER LIST exception x PARAMETER exception x TYPE exception NAME exception NAME x BLOCK EXPR log warn sm get string tcp failure detector heartbeat failed x CALL log warn sm get string tcp failure detector heartbeat failed x NAME log warn NAME log NAME warn ARGUMENT LIST ARGUMENT EXPR sm get string tcp failure detector heartbeat failed CALL sm get string tcp failure detector heartbeat failed NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR tcp failure detector heartbeat failed ARGUMENT EXPR x NAME x override NN public NN void NN check NN members NNS root ROOT members compound members check boolean NN check VB all DT root ROOT check dobj check all try VB if IN membership NN null JJ setup NN membership NN root ROOT membership compound membership setup synchronized VBN membership NN if IN check VB all DT root ROOT check dobj check all perform VB basic JJ check NN root ROOT perform amod check basic dobj perform check else RB perform VB forced VBN check NN root ROOT perform amod check forced dobj perform check catch NN exception NN x NN log NN warn VBP root ROOT warn nsubj warn log sm NN get VB string NN root ROOT get nsubj get sm dobj get string tcp NN failure NN detector NN heartbeat NN failed VBD root ROOT failed compound heartbeat tcp compound heartbeat failure compound heartbeat detector nsubj failed heartbeat x NN,1,B2,tomcat/java/org/apache/catalina/tribes/group/interceptors/TcpFailureDetector.java,221
COMMENT the default value for the code eviction policy class name configuration attribute see generic object pool get eviction policy class name see generic keyed object pool get eviction policy class name DECL STMT SPECIFIER private TYPE long NAME long NAME time between eviction runs millis INIT default time between eviction runs millis EXPR default time between eviction runs millis NAME default time between eviction runs millis the default value for the code eviction policy class name configuration root ROOT value det value the compound value default case configuration for det configuration the compound configuration code compound configuration eviction compound configuration policy compound configuration class compound configuration name nmod for value configuration attribute see generic object pool get eviction policy class name root ROOT see amod pool generic compound pool object nsubj get pool ccomp see get compound name eviction compound name policy compound name class dobj get name see generic keyed object pool get eviction policy class name root ROOT see amod pool generic amod pool keyed compound pool object nsubj get pool ccomp see get compound name eviction compound name policy compound name class dobj get name private JJ long RB time NN between IN eviction NN runs VBZ millis IN root ROOT runs nsubj runs time case eviction between nmod between time eviction dobj runs millis default NN time NN between IN eviction NN runs VBZ millis IN root ROOT runs compound time default nsubj runs time case eviction between nmod between time eviction dobj runs millis,0,N/A,tomcat/java/org/apache/tomcat/dbcp/pool2/impl/BaseObjectPoolConfig.java,182
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE boolean NAME boolean NAME boolean INDEX NAME get subject unique id PARAMETER LIST BLOCK RETURN return unwrap get subject unique id EXPR unwrap get subject unique id CALL unwrap NAME unwrap ARGUMENT LIST CALL get subject unique id NAME get subject unique id ARGUMENT LIST override NN public NN boolean NN get VB subject JJ unique JJ id NN root ROOT get amod id subject amod id unique dobj get id return NN unwrap NN get VB subject JJ unique JJ id NN root ROOT get amod id subject amod id unique dobj get id,1,A4,tomcat/java/org/apache/tomcat/util/net/openssl/OpenSSLX509Certificate.java,114
COMMENT called by the worker thread to return itself to the idle pool param worker the worker FUNCTION SPECIFIER public TYPE void NAME void NAME return worker PARAMETER LIST abstract rx task worker PARAMETER abstract rx task worker TYPE abstract rx task NAME abstract rx task NAME worker BLOCK IF if running synchronized mutex used remove worker if idle size min threads idle contains worker idle add worker if idle size max tasks idle contains worker idle add worker let max be the upper limit else worker set do run false synchronized worker worker notify mutex notify else worker set do run false synchronized worker worker notify CONDITION running EXPR running NAME running THEN synchronized mutex used remove worker if idle size min threads idle contains worker idle add worker if idle size max tasks idle contains worker idle add worker let max be the upper limit else worker set do run false synchronized worker worker notify mutex notify BLOCK SYNCHRONIZED synchronized mutex used remove worker if idle size min threads idle contains worker idle add worker if idle size max tasks idle contains worker idle add worker let max be the upper limit else worker set do run false synchronized worker worker notify mutex notify INIT mutex EXPR mutex NAME mutex BLOCK EXPR used remove worker CALL used remove worker NAME used remove NAME used NAME remove ARGUMENT LIST ARGUMENT EXPR worker NAME worker COMMENT if idle size min threads idle contains worker idle add worker IF if idle size max tasks idle contains worker idle add worker let max be the upper limit else worker set do run false synchronized worker worker notify CONDITION idle size max tasks idle contains worker EXPR idle size max tasks idle contains worker CALL idle size NAME idle size NAME idle NAME size ARGUMENT LIST NAME max tasks CALL idle contains worker NAME idle contains NAME idle NAME contains ARGUMENT LIST ARGUMENT EXPR worker NAME worker THEN idle add worker BLOCK EXPR idle add worker CALL idle add worker NAME idle add NAME idle NAME add ARGUMENT LIST ARGUMENT EXPR worker NAME worker COMMENT let max be the upper limit ELSE else worker set do run false synchronized worker worker notify BLOCK EXPR worker set do run false CALL worker set do run false NAME worker set do run NAME worker NAME set do run ARGUMENT LIST ARGUMENT EXPR false SYNCHRONIZED synchronized worker worker notify INIT worker EXPR worker NAME worker BLOCK EXPR worker notify CALL worker notify NAME worker notify NAME worker NAME notify ARGUMENT LIST EXPR mutex notify CALL mutex notify NAME mutex notify NAME mutex NAME notify ARGUMENT LIST ELSE else worker set do run false synchronized worker worker notify BLOCK EXPR worker set do run false CALL worker set do run false NAME worker set do run NAME worker NAME set do run ARGUMENT LIST ARGUMENT EXPR false SYNCHRONIZED synchronized worker worker notify INIT worker EXPR worker NAME worker BLOCK EXPR worker notify CALL worker notify NAME worker notify NAME worker NAME notify ARGUMENT LIST called by the worker thread to return itself to the root ROOT called case thread by det thread the compound thread worker nmod by called thread mark return to xcomp called return dobj return itself case the to nmod to return the idle pool root ROOT pool amod pool idle param worker the worker root ROOT worker compound worker param det worker the dobj worker worker public NN void NN return NN worker NN root ROOT worker compound worker return abstract JJ rx NN task NN root ROOT task amod task abstract compound task rx worker NN if IN running VBG synchronized VBN mutex NN used VBN remove VB root ROOT used dobj used remove worker NN if idle size min threads idle contains worker idle add worker root ROOT contains mark contains if amod threads idle compound threads size compound threads min nsubj contains threads amod threads idle dobj contains worker amod worker idle dep idle add dobj add worker if idle size min threads idle contains worker idle add worker root ROOT contains mark contains if amod threads idle compound threads size compound threads min nsubj contains threads amod threads idle dobj contains worker amod worker idle dep idle add dobj add worker if IN idle JJ size NN root ROOT size amod size idle max NN tasks NNS root ROOT tasks compound tasks max idle JJ contains VBZ root ROOT contains nsubj contains idle worker NN idle JJ add VB root ROOT add nsubj add idle worker NN let VB max NN be VB the DT upper JJ limit NN else RB worker NN set NN do VBP run VB root ROOT run compound set worker nsubj run set aux run do false JJ synchronized VBN worker NN worker NN notify VBP root ROOT notify nsubj notify worker mutex NN notify VBP root ROOT notify nsubj notify mutex else RB worker NN set NN do VBP run VB root ROOT run compound set worker nsubj run set aux run do false JJ synchronized VBN worker NN worker NN notify VBP root ROOT notify nsubj notify worker,1,B3,tomcat/java/org/apache/catalina/tribes/transport/RxTaskPool.java,101
COMMENT obsolete properties from dbcp x with warning strings suggesting new properties linked hash map will guarantee that properties will be listed to output in order of insertion into map DECL STMT SPECIFIER private SPECIFIER static TYPE final map string string SPECIFIER final NAME map string string NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME string NAME nuprop warntext INIT new linked hash map EXPR new linked hash map CALL linked hash map NAME linked hash map NAME linked hash map ARGUMENT LIST ARGUMENT LIST obsolete properties from dbcp x with warning strings suggesting root ROOT suggesting amod properties obsolete nsubj suggesting properties case x from compound x dbcp nmod from properties x case strings with amod strings warning nmod with properties strings obsolete properties from dbcp x with warning strings suggesting root ROOT suggesting amod properties obsolete nsubj suggesting properties case x from compound x dbcp nmod from properties x case strings with amod strings warning nmod with properties strings new properties linked hash map will guarantee that properties will be listed root ROOT hash amod properties new nsubj hash properties acl properties linked nsubj guarantee map aux guarantee will ccomp hash guarantee mark listed that nsubjpass listed properties aux listed will auxpass listed be ccomp guarantee listed new properties linked hash map will guarantee that properties will be listed root ROOT hash amod properties new nsubj hash properties acl properties linked nsubj guarantee map aux guarantee will ccomp hash guarantee mark listed that nsubjpass listed properties aux listed will auxpass listed be ccomp guarantee listed to output in order of insertion into map root ROOT output case output to case order in nmod in output order case insertion of nmod of order insertion case map into nmod into output map private JJ static JJ final JJ map NN string NN string NN nuprop JJ warntext NN root ROOT warntext amod warntext nuprop new JJ linked VBN hash JJ map NN root ROOT map amod map linked amod map hash be map ANTONYM ANTONYM,1,D1,tomcat/java/org/apache/tomcat/dbcp/dbcp2/BasicDataSourceFactory.java,189
COMMENT make poll return param pollset the pollset to use return negative apr error code FUNCTION DECL public static native int interrupt long pollset SPECIFIER public SPECIFIER static SPECIFIER native TYPE int NAME int NAME interrupt PARAMETER LIST long pollset PARAMETER long pollset TYPE long NAME long NAME pollset make poll return root ROOT make compound return poll dobj make return param pollset the pollset to use root ROOT pollset compound pollset param det pollset the dep pollset pollset mark use to acl to pollset use return negative apr error code root ROOT code compound code return amod code negative compound code apr compound code error public NN static JJ native JJ int NN interrupt VB long RB pollset NN make interrupt ANTONYM ANTONYM make return ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/jni/Poll.java,178
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE driver property info NAME driver property info NAME driver property info INDEX NAME get property info PARAMETER LIST final string url final properties info PARAMETER final string url TYPE final string SPECIFIER final NAME string NAME url PARAMETER final properties info TYPE final properties SPECIFIER final NAME properties NAME info BLOCK RETURN return new driver property info EXPR new driver property info NAME driver property info NAME driver property info INDEX EXPR override NN public NN driver NN property NN info NN root ROOT info compound info driver compound info property get VB property NN info NN root ROOT get compound info property dobj get info final JJ string NN url NN final JJ properties NNS info NN return NN new JJ driver NN property NN info NN root ROOT info compound info driver compound info property,0,N/A,tomcat/java/org/apache/tomcat/dbcp/dbcp2/PoolingDriver.java,199
COMMENT return an empty enumeration of servlets deprecated this method has been deprecated with no replacement FUNCTION ANNOTATION override NAME override ANNOTATION deprecated NAME deprecated SPECIFIER public TYPE enumeration servlet NAME enumeration servlet NAME enumeration ARGUMENT LIST ARGUMENT NAME servlet NAME get servlets PARAMETER LIST BLOCK RETURN return new vector servlet elements EXPR new vector servlet elements CALL vector servlet NAME vector servlet NAME vector ARGUMENT LIST ARGUMENT NAME servlet ARGUMENT LIST CALL elements NAME elements ARGUMENT LIST return an empty enumeration of servlets root ROOT return det enumeration an amod enumeration empty dobj return enumeration case servlets of nmod of enumeration servlets deprecated this method has been deprecated with no replacement root ROOT deprecated det method this nsubjpass deprecated method aux deprecated has auxpass deprecated been ccomp deprecated deprecated case replacement with neg replacement no nmod with deprecated replacement override NN deprecated VBN public NN enumeration NN servlet NN get VB servlets NNS root ROOT get dobj get servlets return NN new JJ vector NN servlet NN elements NNS return has ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/jasper/servlet/JspCServletContext.java,455
FUNCTION SPECIFIER protected TYPE void NAME void NAME get random bytes PARAMETER LIST byte bytes PARAMETER byte bytes TYPE byte NAME byte NAME bytes NAME bytes INDEX BLOCK DECL STMT TYPE secure random NAME secure random NAME random INIT randoms poll EXPR randoms poll CALL randoms poll NAME randoms poll NAME randoms NAME poll ARGUMENT LIST IF if random null random create secure random CONDITION random null EXPR random null NAME random THEN random create secure random BLOCK EXPR random create secure random NAME random CALL create secure random NAME create secure random ARGUMENT LIST EXPR random next bytes bytes CALL random next bytes bytes NAME random next bytes NAME random NAME next bytes ARGUMENT LIST ARGUMENT EXPR bytes NAME bytes EXPR randoms add random CALL randoms add random NAME randoms add NAME randoms NAME add ARGUMENT LIST ARGUMENT EXPR random NAME random protected VBN void NN get VB random JJ bytes NNS root ROOT get amod bytes random dobj get bytes byte NN bytes NNS secure JJ random JJ root ROOT secure dep secure random random JJ randoms NNS poll NN root ROOT poll compound poll randoms if IN random JJ null JJ random JJ create VB secure JJ random JJ root ROOT create amod random secure dobj create random random JJ next JJ bytes NNS root ROOT bytes amod bytes random amod bytes next bytes NNS randoms NNS add VBP root ROOT add nsubj add randoms random JJ,1,B3,tomcat/java/org/apache/catalina/util/SessionIdGeneratorBase.java,199
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE string buffer NAME string buffer NAME get request url PARAMETER LIST BLOCK THROW throw new runtime exception not implemented EXPR new runtime exception not implemented CALL runtime exception not implemented NAME runtime exception ARGUMENT LIST ARGUMENT EXPR not implemented override NN public NN string NN buffer NN root ROOT buffer compound buffer string get VB request NN url NN root ROOT get compound url request dobj get url throw VB new JJ runtime NN exception NN root ROOT exception compound exception runtime not RB implemented VBN,0,N/A,tomcat/test/org/apache/catalina/filters/TesterHttpServletRequest.java,326
COMMENT op codes DECL STMT SPECIFIER public SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME opcode pong INIT x a EXPR x a op codes root ROOT codes compound codes op public NN static JJ final JJ byte NN opcode NN pong NN root ROOT pong compound pong opcode x CC a DT root ROOT a compound a x,0,N/A,tomcat/java/org/apache/tomcat/websocket/Constants.java,36
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE session id generator NAME session id generator NAME get session id generator PARAMETER LIST BLOCK IF if session id generator null return session id generator else if session id generator class null try session id generator session id generator class new instance return session id generator catch illegal access exception ex ignore catch instantiation exception ex ignore CONDITION session id generator null EXPR session id generator null NAME session id generator THEN return session id generator BLOCK RETURN return session id generator EXPR session id generator NAME session id generator ELSEIF else if session id generator class null try session id generator session id generator class new instance return session id generator catch illegal access exception ex ignore catch instantiation exception ex ignore IF if session id generator class null try session id generator session id generator class new instance return session id generator catch illegal access exception ex ignore catch instantiation exception ex ignore CONDITION session id generator class null EXPR session id generator class null NAME session id generator class THEN try session id generator session id generator class new instance return session id generator catch illegal access exception ex ignore catch instantiation exception ex ignore BLOCK TRY try session id generator session id generator class new instance return session id generator catch illegal access exception ex ignore catch instantiation exception ex ignore BLOCK EXPR session id generator session id generator class new instance NAME session id generator CALL session id generator class new instance NAME session id generator class new instance NAME session id generator class NAME new instance ARGUMENT LIST RETURN return session id generator EXPR session id generator NAME session id generator CATCH catch illegal access exception ex ignore PARAMETER LIST illegal access exception ex PARAMETER illegal access exception ex TYPE illegal access exception NAME illegal access exception NAME ex BLOCK COMMENT ignore CATCH catch instantiation exception ex ignore PARAMETER LIST instantiation exception ex PARAMETER instantiation exception ex TYPE instantiation exception NAME instantiation exception NAME ex BLOCK COMMENT ignore RETURN return null EXPR null override NN public NN session NN id VBD generator NN root ROOT id nsubj id session dobj id generator get VB session NN id NN generator NN root ROOT get compound generator session compound generator id dobj get generator if IN session NN id VBD generator NN root ROOT id nsubj id session dobj id generator null JJ return NN session NN id VBD generator NN root ROOT id nsubj id session dobj id generator else RB if IN session NN id VBD generator NN class NN root ROOT id nsubj id session compound class generator dobj id class null JJ try VB session NN id VBD generator NN root ROOT id nsubj id session dobj id generator session NN id VBD generator NN class NN new JJ instance NN root ROOT id nsubj id session compound instance generator compound instance class amod instance new dobj id instance return NN session NN id VBD generator NN root ROOT id nsubj id session dobj id generator catch NN illegal JJ access NN exception NN root ROOT exception amod exception illegal compound exception access ex FW ignore catch NN instantiation NN exception NN root ROOT exception compound exception instantiation ex FW ignore return NN null JJ,1,A1,tomcat/java/org/apache/catalina/session/ManagerBase.java,374
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME set int header PARAMETER LIST string name int value PARAMETER string name TYPE string NAME string NAME name PARAMETER int value TYPE int NAME int NAME value BLOCK EXPR super set int header name value CALL super set int header name value NAME super set int header NAME super NAME set int header ARGUMENT LIST ARGUMENT EXPR name NAME name ARGUMENT EXPR value NAME value EXPR check header name CALL check header name NAME check header ARGUMENT LIST ARGUMENT EXPR name NAME name override NN public NN void NN set VBN int NN header NN root ROOT set compound header int dobj set header string NN name NN int NN value NN super JJ set NN int NN header NN name NN value NN check NN header NN root ROOT header compound header check name NN,0,N/A,tomcat/java/javax/servlet/http/HttpServlet.java,801
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME war tracker INIT meta inf war tracker EXPR meta inf war tracker public NN static JJ final JJ string NN war NN tracker NN root ROOT tracker compound tracker war meta NN inf NN war NN tracker NN root ROOT tracker compound tracker meta compound tracker inf compound tracker war,0,N/A,tomcat/java/org/apache/catalina/startup/Constants.java,35
DECL STMT SPECIFIER private TYPE string NAME string NAME xtends private JJ string NN xtends NNS,0,N/A,tomcat/java/org/apache/jasper/compiler/PageInfo.java,55
COMMENT two different forms for tls DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME ssl proto tl sv INIT tl sv EXPR tl sv two different forms for tls root ROOT forms nummod forms two amod forms different case tls for nmod for forms tls public NN static JJ final JJ string NN ssl NN proto NN tl NN sv NN root ROOT sv compound sv ssl compound sv proto compound sv tl tl NN sv NN root ROOT sv compound sv tl,0,N/A,tomcat/java/org/apache/tomcat/util/net/Constants.java,35
DECL STMT SPECIFIER private TYPE final composite el resolver SPECIFIER final NAME composite el resolver NAME custom resolvers private JJ final JJ composite JJ el FW resolver FW root ROOT resolver amod resolver composite compound resolver el custom NN resolvers VBZ root ROOT resolvers nsubj resolvers custom,0,N/A,tomcat/java/javax/el/StandardELContext.java,32
COMMENT session expiry in web xml is defined in minutes DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME short session timeout mins INIT EXPR session expiry in web xml is defined in minutes root ROOT defined compound expiry session nsubjpass defined expiry case xml in compound xml web nmod in expiry xml auxpass defined is case minutes in nmod in defined minutes private JJ static JJ final JJ int NN short JJ session NN timeout NN mins NNS root ROOT mins amod mins short compound mins session compound mins timeout,0,N/A,tomcat/test/org/apache/catalina/authenticator/TestSSOnonLoginAndBasicAuthenticator.java,93
FUNCTION SPECIFIER public TYPE byte NAME byte NAME byte INDEX NAME get header PARAMETER LIST BLOCK RETURN return non blocking coordinator coord header EXPR non blocking coordinator coord header NAME non blocking coordinator coord header NAME non blocking coordinator NAME coord header public NN byte NN get VB header NN root ROOT get dobj get header return NN non JJ blocking VBG coordinator NN coord NN root ROOT non dep non blocking compound coord coordinator dobj blocking coord header NN,1,A4,tomcat/java/org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,665
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE savepoint NAME savepoint NAME set savepoint PARAMETER LIST THROWS throws sql exception ARGUMENT EXPR sql exception NAME sql exception BLOCK RETURN return null EXPR null override NN public NN savepoint NN set VBN savepoint NN root ROOT set dobj set savepoint throws VBZ sql NN exception NN root ROOT exception compound exception sql return NN null JJ,1,A3,tomcat/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/driver/Connection.java,260
COMMENT creates a statement interceptor to monitor query response times FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE object NAME object NAME create statement PARAMETER LIST object proxy method method object args object statement long time PARAMETER object proxy TYPE object NAME object NAME proxy PARAMETER method method TYPE method NAME method NAME method PARAMETER object args TYPE object NAME object NAME object INDEX NAME args PARAMETER object statement TYPE object NAME object NAME statement PARAMETER long time TYPE long NAME long NAME time BLOCK TRY try object result null string name method get name string sql null constructor constructor null if compare create statement name create statement constructor get constructor create statement idx statement class else if compare prepare statement name prepare statement sql string args constructor get constructor prepare statement idx prepared statement class if sql null prepare statement sql time else if compare prepare call name prepare call sql string args constructor get constructor prepare call idx callable statement class prepare call sql time else do nothing might be a future unsupported method so we better bail out and let the system continue return statement result constructor new instance new object new statement proxy statement sql return result catch exception x log warn unable to create statement proxy for slow query report x BLOCK DECL STMT TYPE object NAME object NAME result INIT null EXPR null DECL STMT TYPE string NAME string NAME name INIT method get name EXPR method get name CALL method get name NAME method get name NAME method NAME get name ARGUMENT LIST DECL STMT TYPE string NAME string NAME sql INIT null EXPR null DECL STMT TYPE constructor NAME constructor NAME constructor ARGUMENT LIST ARGUMENT NAME NAME constructor INIT null EXPR null IF if compare create statement name create statement constructor get constructor create statement idx statement class else if compare prepare statement name prepare statement sql string args constructor get constructor prepare statement idx prepared statement class if sql null prepare statement sql time else if compare prepare call name prepare call sql string args constructor get constructor prepare call idx callable statement class prepare call sql time else do nothing might be a future unsupported method so we better bail out and let the system continue return statement CONDITION compare create statement name EXPR compare create statement name CALL compare create statement name NAME compare ARGUMENT LIST ARGUMENT EXPR create statement NAME create statement ARGUMENT EXPR name NAME name THEN create statement constructor get constructor create statement idx statement class BLOCK COMMENT create statement EXPR constructor get constructor create statement idx statement class NAME constructor CALL get constructor create statement idx statement class NAME get constructor ARGUMENT LIST ARGUMENT EXPR create statement idx NAME create statement idx ARGUMENT EXPR statement class NAME statement class NAME statement NAME class ELSEIF else if compare prepare statement name prepare statement sql string args constructor get constructor prepare statement idx prepared statement class if sql null prepare statement sql time IF if compare prepare statement name prepare statement sql string args constructor get constructor prepare statement idx prepared statement class if sql null prepare statement sql time CONDITION compare prepare statement name EXPR compare prepare statement name CALL compare prepare statement name NAME compare ARGUMENT LIST ARGUMENT EXPR prepare statement NAME prepare statement ARGUMENT EXPR name NAME name THEN prepare statement sql string args constructor get constructor prepare statement idx prepared statement class if sql null prepare statement sql time BLOCK COMMENT prepare statement EXPR sql string args NAME sql NAME string NAME args NAME args INDEX EXPR EXPR constructor get constructor prepare statement idx prepared statement class NAME constructor CALL get constructor prepare statement idx prepared statement class NAME get constructor ARGUMENT LIST ARGUMENT EXPR prepare statement idx NAME prepare statement idx ARGUMENT EXPR prepared statement class NAME prepared statement class NAME prepared statement NAME class IF if sql null prepare statement sql time CONDITION sql null EXPR sql null NAME sql THEN prepare statement sql time BLOCK EXPR prepare statement sql time CALL prepare statement sql time NAME prepare statement ARGUMENT LIST ARGUMENT EXPR sql NAME sql ARGUMENT EXPR time NAME time ELSEIF else if compare prepare call name prepare call sql string args constructor get constructor prepare call idx callable statement class prepare call sql time IF if compare prepare call name prepare call sql string args constructor get constructor prepare call idx callable statement class prepare call sql time CONDITION compare prepare call name EXPR compare prepare call name CALL compare prepare call name NAME compare ARGUMENT LIST ARGUMENT EXPR prepare call NAME prepare call ARGUMENT EXPR name NAME name THEN prepare call sql string args constructor get constructor prepare call idx callable statement class prepare call sql time BLOCK COMMENT prepare call EXPR sql string args NAME sql NAME string NAME args NAME args INDEX EXPR EXPR constructor get constructor prepare call idx callable statement class NAME constructor CALL get constructor prepare call idx callable statement class NAME get constructor ARGUMENT LIST ARGUMENT EXPR prepare call idx NAME prepare call idx ARGUMENT EXPR callable statement class NAME callable statement class NAME callable statement NAME class EXPR prepare call sql time CALL prepare call sql time NAME prepare call ARGUMENT LIST ARGUMENT EXPR sql NAME sql ARGUMENT EXPR time NAME time ELSE else do nothing might be a future unsupported method so we better bail out and let the system continue return statement BLOCK COMMENT do nothing might be a future unsupported method COMMENT so we better bail out and let the system continue RETURN return statement EXPR statement NAME statement EXPR result constructor new instance new object new statement proxy statement sql NAME result CALL constructor new instance new object new statement proxy statement sql NAME constructor new instance NAME constructor NAME new instance ARGUMENT LIST ARGUMENT EXPR new object new statement proxy statement sql NAME object NAME object INDEX BLOCK EXPR new statement proxy statement sql CALL statement proxy statement sql NAME statement proxy ARGUMENT LIST ARGUMENT EXPR statement NAME statement ARGUMENT EXPR sql NAME sql RETURN return result EXPR result NAME result CATCH catch exception x log warn unable to create statement proxy for slow query report x PARAMETER LIST exception x PARAMETER exception x TYPE exception NAME exception NAME x BLOCK EXPR log warn unable to create statement proxy for slow query report x CALL log warn unable to create statement proxy for slow query report x NAME log warn NAME log NAME warn ARGUMENT LIST ARGUMENT EXPR unable to create statement proxy for slow query report ARGUMENT EXPR x NAME x RETURN return statement EXPR statement NAME statement creates a statement interceptor to monitor query response times root ROOT creates det interceptor a compound interceptor statement dobj creates interceptor mark monitor to acl to interceptor monitor compound times query compound times response dobj monitor times override NN public NN object NN create VB statement NN root ROOT create dobj create statement object NN proxy NN method NN method NN object NN args NNS object NN statement NN long RB time NN try VB object NN result NN null JJ string NN name NN method NN get VB name NN root ROOT get nsubj get method dobj get name string NN sql NN null JJ constructor NN constructor NN null JJ if IN compare VB create VB statement NN root ROOT create dobj create statement name NN create statement root ROOT create dobj create statement constructor NN get VB constructor NN root ROOT get dobj get constructor create VB statement NN idx NN root ROOT create compound idx statement dobj create idx statement NN class NN else RB if IN compare VB prepare VB statement NN root ROOT prepare dobj prepare statement name NN prepare statement root ROOT prepare dobj prepare statement sql NN string NN args NNS constructor NN get VB constructor NN root ROOT get dobj get constructor prepare VB statement NN idx NN root ROOT prepare compound idx statement dobj prepare idx prepared JJ statement NN class NN if IN sql NN null JJ prepare VB statement NN root ROOT prepare dobj prepare statement sql NN time NN else RB if IN compare VB prepare VB call NN root ROOT prepare dobj prepare call name NN prepare call root ROOT prepare dobj prepare call sql NN string NN args NNS constructor NN get VB constructor NN root ROOT get dobj get constructor prepare VB call NN idx NN root ROOT prepare compound idx call dobj prepare idx callable JJ statement NN class NN prepare VB call NN root ROOT prepare dobj prepare call sql NN time NN else RB do nothing might be a future unsupported method root ROOT do nsubj method nothing aux method might cop method be det method a amod method future amod method unsupported ccomp do method so we better bail out and let the system continue root ROOT bail mark bail so nsubj bail we nsubj let we amod bail better advmod bail out cc bail and conj and bail let det system the nsubj continue system ccomp let continue return NN statement NN result NN constructor NN new JJ instance NN root ROOT instance compound instance constructor amod instance new new JJ object NN new JJ statement NN proxy NN root ROOT proxy compound proxy statement statement NN sql NN return NN result NN catch NN exception NN x NN log NN warn VBP root ROOT warn nsubj warn log unable JJ to TO create VB statement NN proxy NN for IN slow JJ query NN report NN x NN return NN statement NN query response ANTONYM ANTONYM,0,N/A,tomcat/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/AbstractQueryReport.java,142
COMMENT prepared statement pool properties DECL STMT SPECIFIER private TYPE long NAME long NAME time between eviction runs millis INIT base object pool config default time between eviction runs millis EXPR base object pool config default time between eviction runs millis NAME base object pool config default time between eviction runs millis NAME base object pool config NAME default time between eviction runs millis prepared statement pool properties root ROOT properties amod properties prepared compound properties statement compound properties pool private JJ long RB time NN between IN eviction NN runs VBZ millis IN root ROOT runs nsubj runs time case eviction between nmod between time eviction dobj runs millis base NN object NN pool NN config NN default NN time NN between IN eviction NN runs VBZ millis IN root ROOT runs nsubj runs time case eviction between nmod between time eviction dobj runs millis,0,N/A,tomcat/java/org/apache/tomcat/dbcp/dbcp2/cpdsadapter/DriverAdapterCPDS.java,123
DECL STMT SPECIFIER private TYPE list data sender NAME list data sender NAME list ARGUMENT LIST ARGUMENT NAME data sender NAME inuse INIT null EXPR null private JJ list NN data NNS sender NN root ROOT sender compound sender data inuse NN null JJ,1,D1,tomcat/java/org/apache/catalina/tribes/transport/PooledSender.java,118
COMMENT set to true if string comparisons for the link compare string method and link compare string string methods should use the object equals object method the default is false param use equals code true code if equals will be used for comparisons FUNCTION SPECIFIER public TYPE void NAME void NAME set use equals PARAMETER LIST boolean use equals PARAMETER boolean use equals TYPE boolean NAME boolean NAME use equals BLOCK EXPR this use equals use equals NAME this use equals NAME this NAME use equals NAME use equals set to true if string comparisons for the link compare string method and link compare string string methods should use the object equals object method root ROOT use csubj use set case true to nmod to set true mark compare if compound comparisons string nsubj compare comparisons case link for det link the nmod for comparisons link advcl if set compare compound method string nsubj compare method cc method and conj and method link nsubj compare link ccomp compare compare compound methods string compound methods string dobj compare methods aux use should det object the dobj use object dep use equals compound method object dobj equals method the default is false root ROOT false det default the nsubj false default cop false is param use equals code true code if equals will be used for comparisons root ROOT equals compound use param nsubj equals use compound code code amod code true dobj equals code mark used if nsubjpass used equals aux used will auxpass used be advcl if equals used case comparisons for nmod for used comparisons public NN void NN set VBN use NN equals VBZ root ROOT equals amod use set nsubj equals use boolean NN use NN equals VBZ root ROOT equals nsubj equals use this DT use NN equals VBZ use NN equals VBZ root ROOT equals nsubj equals use,0,N/A,tomcat/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/JdbcInterceptor.java,213
COMMENT cache for byte chunk DECL STMT SPECIFIER protected SPECIFIER static TYPE byte entry NAME byte entry NAME byte entry INDEX NAME bc cache INIT null EXPR null cache for byte chunk root ROOT cache case chunk for compound chunk byte nmod for cache chunk protected VBN static JJ byte NN entry NN root ROOT entry compound entry byte bc NN cache NN root ROOT cache compound cache bc null JJ,0,N/A,tomcat/java/org/apache/tomcat/util/buf/StringCache.java,82
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME spaces INIT EXPR private JJ static JJ final JJ string NN spaces NNS,1,E1,tomcat/java/org/apache/jasper/compiler/ServletWriter.java,30
DECL STMT SPECIFIER static TYPE double NAME double NAME seconds INIT EXPR static JJ double RB seconds NNS,1,E1,tomcat/test/org/apache/catalina/tribes/test/transport/SocketNioReceive.java,36
DECL STMT SPECIFIER private TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME header INIT http auth get bytes standard charsets iso EXPR http auth get bytes standard charsets iso CALL http auth get bytes standard charsets iso NAME http auth get bytes NAME http auth NAME get bytes ARGUMENT LIST ARGUMENT EXPR standard charsets iso NAME standard charsets iso NAME standard charsets NAME iso private JJ final JJ byte NN header NN http NN auth IN root ROOT http dep http auth get VB bytes NNS root ROOT get dobj get bytes standard JJ charsets NNS iso NN root ROOT iso amod charsets standard nsubj iso charsets,1,D1,tomcat/test/org/apache/catalina/authenticator/TestBasicAuthParser.java,469
DECL STMT SPECIFIER private TYPE int NAME int NAME max tasks private JJ int NN max NN tasks NNS root ROOT tasks compound tasks max,1,E1,tomcat/java/org/apache/catalina/tribes/transport/RxTaskPool.java,37
COMMENT returns the body passed in by the container via set jsp body return the fragment encapsulating the body of this tag or null if the action element is empty in the page FUNCTION SPECIFIER protected TYPE jsp fragment NAME jsp fragment NAME get jsp body PARAMETER LIST BLOCK RETURN return this jsp body EXPR this jsp body NAME this jsp body NAME this NAME jsp body returns the body passed in by the container via set jsp body root ROOT returns det body the dobj returns body acl body passed compound prt passed in case container by det container the nmod by passed container case body via amod body set compound body jsp nmod via passed body return the fragment encapsulating the body of this tag or root ROOT return det fragment the dobj return fragment acl fragment encapsulating det body the dobj encapsulating body case tag of det tag this nmod of body tag cc return or null if the action element is empty in the page root ROOT null mark empty if det element the compound element action nsubj empty element cop empty is advcl if null empty case page in det page the nmod in empty page protected VBN jsp NN fragment NN root ROOT fragment compound fragment jsp get VB jsp NN body NN root ROOT get compound body jsp dobj get body return NN this DT jsp NN body NN body is ANTONYM ANTONYM empty null ANTONYM ANTONYM,0,N/A,tomcat/java/javax/servlet/jsp/tagext/SimpleTagSupport.java,139
COMMENT a unique message id DECL STMT SPECIFIER private TYPE byte NAME byte NAME byte INDEX NAME unique id a unique message id root ROOT id det id a amod id unique compound id message private JJ byte NN unique JJ id NN root ROOT id amod id unique,1,D1,tomcat/java/org/apache/catalina/tribes/io/ChannelData.java,57
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME server max window bits INIT server max window bits EXPR server max window bits private JJ static JJ final JJ string NN server NN max NN window NN bits NNS root ROOT bits compound bits server compound bits max compound bits window server NN max NN window NN bits NNS root ROOT bits compound bits server compound bits max compound bits window,0,N/A,tomcat/java/org/apache/tomcat/websocket/PerMessageDeflate.java,39
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME accepted paths INIT accepted path test listener test null private static final resource bundle l strings resource bundle get bundle lstring file override public byte get tbs certificate throws certificate encoding exception return unwrap get tbs certificate override public boolean get issuer unique id return unwrap get issuer unique id check for modification and send notification to listener logic public void check if log is debug enabled log debug sm get string war watcher checking wars watch dir file list watch dir list files new war filter if list null log warn sm get string war watcher cant list watch dir watch dir list new file first make sure all the files are listed in our current status for int i i list length i if list i exists log warn sm get string war watcher listed file does not exist list i watch dir add war info list i check all the status codes and update the farm deployer for iterator map entry string war info i current status entry set iterator i has next map entry string war info entry i next war info info entry get value if log is trace enabled log trace sm get string war watcher checking war info get war int check info check if check listener file modified info get war else if check listener file removed info get war no need to keep in memory i remove if log is trace enabled log trace sm get string war watcher check war result integer value of check info get war private static final byte utf message new byte the set of cookies associated with this request protected cookie cookies null private static final boolean is token new boolean array size the column in the user role table that names a role protected string role name col null private static string browser cookies cookie returns the value of the attribute that has been added removed or replaced return if the attribute was added this is the value of the attribute if the attribute was removed this is the value of the removed attribute if the attribute was replaced this is the old value of the attribute public object get value return this value by default none of the headers are exposed in response public static final string default exposed headers private static final int extra delay secs public date get current date long systime system current time millis if systime current millis synchronized this if systime current millis current date new date systime current millis systime return current date called when link java sql connection close is called on the underlying connection this is to notify the interceptors that the physical connection has been released implementation of this method should be thought through with care as no actions should trigger an exception param parent the connection pool that this connection belongs to param con the pooled connection that holds this connection param finalizing if this connection is finalizing true means that the pooled connection will not reconnect the underlying connection public void disconnected connection pool parent pooled connection con boolean finalizing private final int client max window bits spnego authentication constants public static final string default jaas conf conf jaas conf deallocates or frees a memory block used by byte buffer br b warning b call this method only on byte buffers that were created by calling buffer alloc or buffer calloc param buf previously allocated byte buffer to be freed public static native void free byte buffer buf table for hex to dec byte translation private static final int dec private static final boolean is http protocol new boolean array size public static final string message section protected input buffer ib static big decimal bytes new big decimal private final char expr return the set of parameters for this operation public parameter info get signature lock read lock parameters lock read lock read lock lock try return this parameters finally read lock unlock set of all element and attribute prefixes used in this translation unit private collection string include prelude private boolean closed false back up idle sessions protected void process max idle backups if get state is available max idle backup return session sessions find sessions back up all sessions idle longer than max idle backup if max idle backup for int i i sessions length i standard session session standard session sessions i synchronized session if session is valid continue long last accessed time session get last accessed time internal long persisted last accessed time long session get note persisted last accessed time if persisted last accessed time null last accessed time persisted last accessed time long value continue int time idle int session get idle time internal l if time idle max idle backup if log is debug enabled log debug sm get string persistent manager backup max idle session get id internal integer value of time idle try write session session catch io exception e this is logged in write session session set note persisted last accessed time long value of last accessed time public int get case count throws interrupted exception latch await return case count private volatile int nr of invocations subclass friendly method to add error handling when a permit isn t granted param request the servlet request param response the servlet response throws io exception error writing output throws servlet exception other error public void permit denied request request response response throws io exception servlet exception no op by default override public void get long timeout time unit unit throws interrupted exception execution exception timeout exception return null public byte get type if type null parse return type domain if we want to filter based on domain protected volatile byte domain new byte hsts private boolean hsts preload false information on the scripting objects created by this tag at runtime this is a convenience method on the associated tag extra info class param data tag data describing this action return if a tag extra info object is associated with this tag info the result of get tag extra info get variable info data otherwise null public variable info get variable info tag data data variable info result null tag extra info tei get tag extra info if tei null result tei get variable info data return result coordination confirmation for blocking installations protected static final byte coord conf new byte the boundary which separates the various parts private final byte boundary x a ldr protected member view public static final string exposed headers x custom header private static final string web inf tags web inf tags two different forms for tls public static final string ssl proto ss lv ss lv public member get view return view spnego authentication constants public static final string default krb conf conf krb ini prefix codes for message types from container to server public static final byte jk ajp send body chunk encodes the given string into a sequence of bytes using the utf charset storing the result into a new byte array param string the string to encode may be code null code return encoded bytes or code null code if the input string was code null code see a href http download oracle com javase docs api java nio charset charset html standard charsets a public static byte get bytes utf final string string return get bytes string standard charsets utf EXPR accepted path test listener test null private static final resource bundle l strings resource bundle get bundle lstring file override public byte get tbs certificate throws certificate encoding exception return unwrap get tbs certificate override public boolean get issuer unique id return unwrap get issuer unique id check for modification and send notification to listener logic public void check if log is debug enabled log debug sm get string war watcher checking wars watch dir file list watch dir list files new war filter if list null log warn sm get string war watcher cant list watch dir watch dir list new file first make sure all the files are listed in our current status for int i i list length i if list i exists log warn sm get string war watcher listed file does not exist list i watch dir add war info list i check all the status codes and update the farm deployer for iterator map entry string war info i current status entry set iterator i has next map entry string war info entry i next war info info entry get value if log is trace enabled log trace sm get string war watcher checking war info get war int check info check if check listener file modified info get war else if check listener file removed info get war no need to keep in memory i remove if log is trace enabled log trace sm get string war watcher check war result integer value of check info get war private static final byte utf message new byte the set of cookies associated with this request protected cookie cookies null private static final boolean is token new boolean array size the column in the user role table that names a role protected string role name col null private static string browser cookies cookie returns the value of the attribute that has been added removed or replaced return if the attribute was added this is the value of the attribute if the attribute was removed this is the value of the removed attribute if the attribute was replaced this is the old value of the attribute public object get value return this value by default none of the headers are exposed in response public static final string default exposed headers private static final int extra delay secs public date get current date long systime system current time millis if systime current millis synchronized this if systime current millis current date new date systime current millis systime return current date called when link java sql connection close is called on the underlying connection this is to notify the interceptors that the physical connection has been released implementation of this method should be thought through with care as no actions should trigger an exception param parent the connection pool that this connection belongs to param con the pooled connection that holds this connection param finalizing if this connection is finalizing true means that the pooled connection will not reconnect the underlying connection public void disconnected connection pool parent pooled connection con boolean finalizing private final int client max window bits spnego authentication constants public static final string default jaas conf conf jaas conf deallocates or frees a memory block used by byte buffer br b warning b call this method only on byte buffers that were created by calling buffer alloc or buffer calloc param buf previously allocated byte buffer to be freed public static native void free byte buffer buf table for hex to dec byte translation private static final int dec private static final boolean is http protocol new boolean array size public static final string message section protected input buffer ib static big decimal bytes new big decimal private final char expr return the set of parameters for this operation public parameter info get signature lock read lock parameters lock read lock read lock lock try return this parameters finally read lock unlock set of all element and attribute prefixes used in this translation unit private collection string include prelude private boolean closed false back up idle sessions protected void process max idle backups if get state is available max idle backup return session sessions find sessions back up all sessions idle longer than max idle backup if max idle backup for int i i sessions length i standard session session standard session sessions i synchronized session if session is valid continue long last accessed time session get last accessed time internal long persisted last accessed time long session get note persisted last accessed time if persisted last accessed time null last accessed time persisted last accessed time long value continue int time idle int session get idle time internal l if time idle max idle backup if log is debug enabled log debug sm get string persistent manager backup max idle session get id internal integer value of time idle try write session session catch io exception e this is logged in write session session set note persisted last accessed time long value of last accessed time public int get case count throws interrupted exception latch await return case count private volatile int nr of invocations subclass friendly method to add error handling when a permit isn t granted param request the servlet request param response the servlet response throws io exception error writing output throws servlet exception other error public void permit denied request request response response throws io exception servlet exception no op by default override public void get long timeout time unit unit throws interrupted exception execution exception timeout exception return null public byte get type if type null parse return type domain if we want to filter based on domain protected volatile byte domain new byte hsts private boolean hsts preload false information on the scripting objects created by this tag at runtime this is a convenience method on the associated tag extra info class param data tag data describing this action return if a tag extra info object is associated with this tag info the result of get tag extra info get variable info data otherwise null public variable info get variable info tag data data variable info result null tag extra info tei get tag extra info if tei null result tei get variable info data return result coordination confirmation for blocking installations protected static final byte coord conf new byte the boundary which separates the various parts private final byte boundary x a ldr protected member view public static final string exposed headers x custom header private static final string web inf tags web inf tags two different forms for tls public static final string ssl proto ss lv ss lv public member get view return view spnego authentication constants public static final string default krb conf conf krb ini prefix codes for message types from container to server public static final byte jk ajp send body chunk encodes the given string into a sequence of bytes using the utf charset storing the result into a new byte array param string the string to encode may be code null code return encoded bytes or code null code if the input string was code null code see a href http download oracle com javase docs api java nio charset charset html standard charsets a public static byte get bytes utf final string string return get bytes string standard charsets utf NAME accepted path NAME war watcher checking wars NAME war watcher NAME checking wars NAME war watcher cant list watch dir NAME war watcher NAME cant list watch dir NAME war watcher listed file does not exist NAME war watcher NAME listed file does not exist NAME war watcher checking war NAME war watcher NAME checking war NAME war watcher check war result NAME war watcher NAME check war result NAME cookie NAME conf NAME jaas conf NAME jaas NAME conf NAME persistent manager backup max idle NAME persistent manager NAME backup max idle NAME x NAME custom NAME header NAME web NAME inf NAME tags NAME ss lv NAME conf NAME krb ini NAME krb NAME ini NAME http COMMENT download oracle com javase docs api java nio charset charset html standard charsets a SPECIFIER public SPECIFIER static NAME byte NAME byte INDEX CALL get bytes utf final string string NAME get bytes utf ARGUMENT LIST ARGUMENT EXPR final string string NAME final NAME string NAME string BLOCK RETURN return get bytes string standard charsets utf EXPR get bytes string standard charsets utf CALL get bytes string standard charsets utf NAME get bytes ARGUMENT LIST ARGUMENT EXPR string NAME string ARGUMENT EXPR standard charsets utf NAME standard charsets utf NAME standard charsets NAME utf public NN static JJ final JJ string NN accepted VBN paths NNS root ROOT paths amod paths accepted accepted VBN path NN root ROOT path amod path accepted,1,E1,tomcat/test/org/apache/catalina/filters/TestRestCsrfPreventionFilter.java,50
DECL STMT TYPE test listener NAME test listener NAME test listener INDEX NAME test INIT null EXPR null test NN listener NN root ROOT listener compound listener test test NN null JJ,1,D1,tomcat/test/org/apache/catalina/tribes/group/interceptors/TestOrderInterceptor.java,46
DECL STMT SPECIFIER private SPECIFIER static TYPE final resource bundle SPECIFIER final NAME resource bundle NAME l strings INIT resource bundle get bundle lstring file EXPR resource bundle get bundle lstring file CALL resource bundle get bundle lstring file NAME resource bundle get bundle NAME resource bundle NAME get bundle ARGUMENT LIST ARGUMENT EXPR lstring file NAME lstring file private JJ static JJ final JJ resource NN bundle NN root ROOT bundle compound bundle resource l NN strings NNS root ROOT strings compound strings l resource NN bundle NN get VBP bundle NN root ROOT get compound bundle resource nsubj get bundle dobj get bundle lstring VBG file NN root ROOT lstring dobj lstring file,0,N/A,tomcat/java/javax/servlet/HttpConstraintElement.java,33
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE byte NAME byte NAME byte INDEX NAME get tbs certificate PARAMETER LIST THROWS throws certificate encoding exception ARGUMENT EXPR certificate encoding exception NAME certificate encoding exception BLOCK RETURN return unwrap get tbs certificate EXPR unwrap get tbs certificate CALL unwrap NAME unwrap ARGUMENT LIST CALL get tbs certificate NAME get tbs certificate ARGUMENT LIST override NN public NN byte NN get VB tbs NNS certificate NN root ROOT get compound certificate tbs dobj get certificate throws VBZ certificate NN encoding VBG exception NN root ROOT certificate acl certificate encoding dobj encoding exception return NN unwrap NN get VB tbs NNS certificate NN root ROOT get compound certificate tbs dobj get certificate,1,A4,tomcat/java/org/apache/tomcat/util/net/openssl/OpenSSLX509Certificate.java,84
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE boolean NAME boolean NAME boolean INDEX NAME get issuer unique id PARAMETER LIST BLOCK RETURN return unwrap get issuer unique id EXPR unwrap get issuer unique id CALL unwrap NAME unwrap ARGUMENT LIST CALL get issuer unique id NAME get issuer unique id ARGUMENT LIST override NN public NN boolean NN get VB issuer NN unique JJ id NN root ROOT get compound id issuer amod id unique dobj get id return NN unwrap NN get VB issuer NN unique JJ id NN root ROOT get compound id issuer amod id unique dobj get id,1,A4,tomcat/java/org/apache/tomcat/util/net/openssl/OpenSSLX509Certificate.java,109
COMMENT check for modification and send notification to listener COMMENT logic FUNCTION SPECIFIER public TYPE void NAME void NAME check PARAMETER LIST BLOCK IF if log is debug enabled log debug sm get string war watcher checking wars watch dir CONDITION log is debug enabled EXPR log is debug enabled CALL log is debug enabled NAME log is debug enabled NAME log NAME is debug enabled ARGUMENT LIST THEN log debug sm get string war watcher checking wars watch dir BLOCK EXPR log debug sm get string war watcher checking wars watch dir CALL log debug sm get string war watcher checking wars watch dir NAME log debug NAME log NAME debug ARGUMENT LIST ARGUMENT EXPR sm get string war watcher checking wars watch dir CALL sm get string war watcher checking wars watch dir NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR war watcher checking wars ARGUMENT EXPR watch dir NAME watch dir DECL STMT TYPE file NAME file NAME file INDEX NAME list INIT watch dir list files new war filter EXPR watch dir list files new war filter CALL watch dir list files new war filter NAME watch dir list files NAME watch dir NAME list files ARGUMENT LIST ARGUMENT EXPR new war filter CALL war filter NAME war filter ARGUMENT LIST IF if list null log warn sm get string war watcher cant list watch dir watch dir list new file CONDITION list null EXPR list null NAME list THEN log warn sm get string war watcher cant list watch dir watch dir list new file BLOCK EXPR log warn sm get string war watcher cant list watch dir watch dir CALL log warn sm get string war watcher cant list watch dir watch dir NAME log warn NAME log NAME warn ARGUMENT LIST ARGUMENT EXPR sm get string war watcher cant list watch dir watch dir CALL sm get string war watcher cant list watch dir watch dir NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR war watcher cant list watch dir ARGUMENT EXPR watch dir NAME watch dir EXPR list new file NAME list NAME file NAME file INDEX EXPR COMMENT first make sure all the files are listed in our current status FOR for int i i list length i if list i exists log warn sm get string war watcher listed file does not exist list i watch dir add war info list i CONTROL int i i list length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i list length EXPR i list length NAME i NAME list length NAME list NAME length INCR i EXPR i NAME i BLOCK IF if list i exists log warn sm get string war watcher listed file does not exist list i watch dir CONDITION list i exists EXPR list i exists NAME list i NAME list INDEX i EXPR i NAME i CALL exists NAME exists ARGUMENT LIST THEN log warn sm get string war watcher listed file does not exist list i watch dir BLOCK EXPR log warn sm get string war watcher listed file does not exist list i watch dir CALL log warn sm get string war watcher listed file does not exist list i watch dir NAME log warn NAME log NAME warn ARGUMENT LIST ARGUMENT EXPR sm get string war watcher listed file does not exist list i watch dir CALL sm get string war watcher listed file does not exist list i watch dir NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR war watcher listed file does not exist ARGUMENT EXPR list i NAME list i NAME list INDEX i EXPR i NAME i ARGUMENT EXPR watch dir NAME watch dir EXPR add war info list i CALL add war info list i NAME add war info ARGUMENT LIST ARGUMENT EXPR list i NAME list i NAME list INDEX i EXPR i NAME i COMMENT check all the status codes and update the farm deployer FOR for iterator map entry string war info i current status entry set iterator i has next map entry string war info entry i next war info info entry get value if log is trace enabled log trace sm get string war watcher checking war info get war int check info check if check listener file modified info get war else if check listener file removed info get war no need to keep in memory i remove if log is trace enabled log trace sm get string war watcher check war result integer value of check info get war CONTROL iterator map entry string war info i current status entry set iterator i has next INIT iterator map entry string war info i current status entry set iterator TYPE iterator map entry string war info NAME iterator map entry string war info NAME iterator ARGUMENT LIST ARGUMENT NAME map entry string war info NAME map NAME entry string war info NAME entry ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME war info NAME i INIT current status entry set iterator EXPR current status entry set iterator CALL current status entry set NAME current status entry set NAME current status NAME entry set ARGUMENT LIST CALL iterator NAME iterator ARGUMENT LIST CONDITION i has next EXPR i has next CALL i has next NAME i has next NAME i NAME has next ARGUMENT LIST INCR BLOCK DECL STMT TYPE map entry string war info NAME map entry string war info NAME map NAME entry string war info NAME entry ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME war info NAME entry INIT i next EXPR i next CALL i next NAME i next NAME i NAME next ARGUMENT LIST DECL STMT TYPE war info NAME war info NAME info INIT entry get value EXPR entry get value CALL entry get value NAME entry get value NAME entry NAME get value ARGUMENT LIST IF if log is trace enabled log trace sm get string war watcher checking war info get war CONDITION log is trace enabled EXPR log is trace enabled CALL log is trace enabled NAME log is trace enabled NAME log NAME is trace enabled ARGUMENT LIST THEN log trace sm get string war watcher checking war info get war BLOCK EXPR log trace sm get string war watcher checking war info get war CALL log trace sm get string war watcher checking war info get war NAME log trace NAME log NAME trace ARGUMENT LIST ARGUMENT EXPR sm get string war watcher checking war info get war CALL sm get string war watcher checking war info get war NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR war watcher checking war ARGUMENT EXPR info get war CALL info get war NAME info get war NAME info NAME get war ARGUMENT LIST DECL STMT TYPE int NAME int NAME check INIT info check EXPR info check CALL info check NAME info check NAME info NAME check ARGUMENT LIST IF if check listener file modified info get war else if check listener file removed info get war no need to keep in memory i remove CONDITION check EXPR check NAME check THEN listener file modified info get war BLOCK EXPR listener file modified info get war CALL listener file modified info get war NAME listener file modified NAME listener NAME file modified ARGUMENT LIST ARGUMENT EXPR info get war CALL info get war NAME info get war NAME info NAME get war ARGUMENT LIST ELSEIF else if check listener file removed info get war no need to keep in memory i remove IF if check listener file removed info get war no need to keep in memory i remove CONDITION check EXPR check NAME check THEN listener file removed info get war no need to keep in memory i remove BLOCK EXPR listener file removed info get war CALL listener file removed info get war NAME listener file removed NAME listener NAME file removed ARGUMENT LIST ARGUMENT EXPR info get war CALL info get war NAME info get war NAME info NAME get war ARGUMENT LIST COMMENT no need to keep in memory EXPR i remove CALL i remove NAME i remove NAME i NAME remove ARGUMENT LIST IF if log is trace enabled log trace sm get string war watcher check war result integer value of check info get war CONDITION log is trace enabled EXPR log is trace enabled CALL log is trace enabled NAME log is trace enabled NAME log NAME is trace enabled ARGUMENT LIST THEN log trace sm get string war watcher check war result integer value of check info get war BLOCK EXPR log trace sm get string war watcher check war result integer value of check info get war CALL log trace sm get string war watcher check war result integer value of check info get war NAME log trace NAME log NAME trace ARGUMENT LIST ARGUMENT EXPR sm get string war watcher check war result integer value of check info get war CALL sm get string war watcher check war result integer value of check info get war NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR war watcher check war result ARGUMENT EXPR integer value of check CALL integer value of check NAME integer value of NAME integer NAME value of ARGUMENT LIST ARGUMENT EXPR check NAME check ARGUMENT EXPR info get war CALL info get war NAME info get war NAME info NAME get war ARGUMENT LIST check for modification and send notification to listener root ROOT check case modification for nmod for check modification cc check and conj and check send dobj send notification case listener to nmod to send listener logic public NN void NN check NN if IN log NN is VBZ debug NN enabled VBD root ROOT debug nsubj debug log cop debug is dep debug enabled log NN debug NN root ROOT debug compound debug log sm NN get VB string NN root ROOT get nsubj get sm dobj get string war NN watcher NN checking VBG wars NNS root ROOT wars compound watcher war compound wars watcher amod wars checking watch NN dir NN root ROOT dir compound dir watch file NN list NN watch NN dir NN list NN files NNS root ROOT files compound files watch compound files dir compound files list new JJ war NN filter NN root ROOT filter compound filter war if IN list NN null JJ log NN warn VBP root ROOT warn nsubj warn log sm NN get VB string NN root ROOT get nsubj get sm dobj get string war NN watcher NN cant JJ list NN watch NN dir NN root ROOT dir compound dir war compound dir watcher amod dir cant compound dir list compound dir watch watch NN dir NN root ROOT dir compound dir watch list NN new JJ file NN first make sure all the files are listed in our current status root ROOT make advmod make first xcomp make sure det predet files all det files the nsubjpass listed files auxpass listed are ccomp sure listed case status in nmod poss status our amod status current nmod in listed status for IN int NN i LS i LS list NN length NN root ROOT length compound length list i LS if IN list NN i LS exists VBZ log NN warn VBP root ROOT warn nsubj warn log sm NN get VB string NN root ROOT get nsubj get sm dobj get string war NN watcher NN listed VBN file NN does VBZ not RB exist VB root ROOT exist compound watcher war compound file watcher amod file listed nsubj exist file aux exist does neg exist not list NN i LS watch NN dir NN root ROOT dir compound dir watch add VB war NN info NN root ROOT add compound info war dobj add info list NN i LS check all the status codes and update the farm deployer root ROOT check det predet codes all det codes the compound codes status dobj check codes cc check and conj and check update det deployer the compound deployer farm dobj update deployer for IN iterator NN map NN entry NN root ROOT entry compound entry map string NN war NN info NN root ROOT info compound info war i LS current JJ status NN entry NN set NN root ROOT set amod set current compound set status compound set entry iterator NN i LS has VBZ next JJ root ROOT i root i has advmod has next map NN entry NN root ROOT entry compound entry map string NN war NN info NN root ROOT info compound info war entry NN i LS next IN root ROOT i advmod i next war NN info NN root ROOT info compound info war info NN entry NN get VB value NN root ROOT get nsubj get entry dobj get value if IN log NN is VBZ trace NN enabled VBD root ROOT trace nsubj trace log cop trace is dep trace enabled log NN trace NN root ROOT trace compound trace log sm NN get VB string NN root ROOT get nsubj get sm dobj get string war NN watcher NN checking VBG war NN root ROOT watcher compound watcher war acl watcher checking dobj checking war info NN get VB war NN root ROOT get nsubj get info dobj get war int NN check NN info NN check NN root ROOT check compound check info if IN check NN listener NN file NN modified VBN root ROOT modified compound file listener nsubj modified file info NN get VB war NN root ROOT get nsubj get info dobj get war else RB if IN check NN listener NN file NN removed VBD root ROOT removed compound file listener nsubj removed file info NN get VB war NN root ROOT get nsubj get info dobj get war no need to keep in memory root ROOT need neg need no mark keep to acl to need keep case memory in nmod in keep memory i LS remove VB root ROOT remove nsubj remove i if IN log NN is VBZ trace NN enabled VBD root ROOT trace nsubj trace log cop trace is dep trace enabled log NN trace NN root ROOT trace compound trace log sm NN get VB string NN root ROOT get nsubj get sm dobj get string war NN watcher NN check NN war NN result VBP root ROOT result compound war war compound war watcher compound war check nsubj result war integer NN value NN of IN root ROOT value compound value integer acl value of check NN info NN get VB war NN root ROOT get nsubj get info dobj get war,0,N/A,tomcat/java/org/apache/catalina/ha/deploy/WarWatcher.java,70
DECL STMT SPECIFIER private SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME utf message INIT new byte EXPR new byte NAME byte NAME byte INDEX BLOCK EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR private JJ static JJ final JJ byte NN utf NN message NN root ROOT message compound message utf new JJ byte NN,1,D1,tomcat/test/org/apache/tomcat/util/buf/TestB2CConverter.java,29
COMMENT the set of cookies associated with this request DECL STMT SPECIFIER protected TYPE cookie NAME cookie NAME cookie INDEX NAME cookies INIT null EXPR null the set of cookies associated with this request root ROOT set det set the case cookies of nmod of set cookies acl cookies associated case request with det request this nmod with associated request protected VBN cookie NN cookies NNS null JJ,0,N/A,tomcat/java/org/apache/catalina/connector/Request.java,192
DECL STMT SPECIFIER private SPECIFIER static TYPE final boolean SPECIFIER final NAME boolean NAME boolean INDEX NAME is token INIT new boolean array size EXPR new boolean array size NAME boolean array size NAME boolean INDEX array size EXPR array size NAME array size private JJ static JJ final JJ boolean NN is VBZ token JJ root ROOT token cop token is new JJ boolean NN array NN size NN root ROOT size compound size array,1,D2,tomcat/java/org/apache/tomcat/util/http/parser/HttpParser.java,41
COMMENT the column in the user role table that names a role DECL STMT SPECIFIER protected TYPE string NAME string NAME role name col INIT null EXPR null the column in the user role table that names a role root ROOT column det column the nsubj names column case table in det table the compound table user compound table role nmod in column table ref column that acl relcl column names det role a dobj names role protected VBN string NN role NN name NN col NN root ROOT col compound col role compound col name null JJ,0,N/A,tomcat/java/org/apache/catalina/realm/JDBCRealm.java,110
DECL STMT SPECIFIER private SPECIFIER static TYPE string NAME string NAME browser cookies INIT cookie EXPR cookie private JJ static JJ string NN browser NN cookies NNS root ROOT cookies compound cookies browser cookie NN,1,E1,tomcat/test/org/apache/catalina/authenticator/TestSSOnonLoginAndDigestAuthenticator.java,85
COMMENT returns the value of the attribute that has been added removed or replaced return if the attribute was added this is the value of the attribute if the attribute was removed this is the value of the removed attribute if the attribute was replaced this is the old value of the attribute FUNCTION SPECIFIER public TYPE object NAME object NAME get value PARAMETER LIST BLOCK RETURN return this value EXPR this value NAME this value NAME this NAME value returns the value of the attribute that has been added removed or root ROOT returns det value the dobj returns value case attribute of det attribute the nmod of value attribute nsubjpass added attribute ref attribute that aux added has auxpass added been acl relcl attribute added dep added removed cc removed or replaced return if the attribute was added this is the value of the attribute root ROOT return mark added if det attribute the nsubjpass added attribute auxpass added was advcl if return added nsubj value this cop value is det value the ccomp added value case attribute of det attribute the nmod of value attribute if the attribute was removed this is the value of the removed root ROOT removed mark removed if det attribute the nsubjpass removed attribute auxpass removed was nsubj value this cop value is det value the ccomp removed value case removed of det removed the nmod of value removed attribute if the attribute was replaced this is the old value root ROOT attribute mark replaced if det attribute the nsubjpass replaced attribute auxpass replaced was advcl if attribute replaced nsubj value this cop value is det value the amod value old ccomp replaced value attribute if the attribute was replaced this is the old value root ROOT attribute mark replaced if det attribute the nsubjpass replaced attribute auxpass replaced was advcl if attribute replaced nsubj value this cop value is det value the amod value old ccomp replaced value of the attribute root ROOT attribute case attribute of det attribute the public NN object NN get VB value NN root ROOT get dobj get value return NN this DT value NN added removed ANTONYM ANTONYM has removed ANTONYM ANTONYM has return ANTONYM ANTONYM returns has ANTONYM ANTONYM,0,N/A,tomcat/java/javax/servlet/ServletContextAttributeEvent.java,65
COMMENT by default none of the headers are exposed in response DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME default exposed headers INIT EXPR by default none of the headers are exposed in response root ROOT exposed case none by compound none default nmod agent exposed none case headers of det headers the nmod of none headers auxpass exposed are case response in nmod in exposed response public NN static JJ final JJ string NN default NN exposed VBN headers NNS root ROOT exposed nsubj exposed default dobj exposed headers public exposed ANTONYM ANTONYM,1,E1,tomcat/java/org/apache/catalina/filters/CorsFilter.java,1107
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME extra delay secs INIT EXPR private JJ static JJ final JJ int NN extra JJ delay NN secs NNS root ROOT secs amod secs extra compound secs delay,0,N/A,tomcat/test/org/apache/catalina/authenticator/TestNonLoginAndBasicAuthenticator.java,81
FUNCTION SPECIFIER public TYPE date NAME date NAME get current date PARAMETER LIST BLOCK DECL STMT TYPE long NAME long NAME systime INIT system current time millis EXPR system current time millis CALL system current time millis NAME system current time millis NAME system NAME current time millis ARGUMENT LIST IF if systime current millis synchronized this if systime current millis current date new date systime current millis systime CONDITION systime current millis EXPR systime current millis NAME systime NAME current millis THEN synchronized this if systime current millis current date new date systime current millis systime BLOCK SYNCHRONIZED synchronized this if systime current millis current date new date systime current millis systime INIT this EXPR this NAME this BLOCK IF if systime current millis current date new date systime current millis systime CONDITION systime current millis EXPR systime current millis NAME systime NAME current millis THEN current date new date systime current millis systime BLOCK EXPR current date new date systime NAME current date CALL date systime NAME date ARGUMENT LIST ARGUMENT EXPR systime NAME systime EXPR current millis systime NAME current millis NAME systime RETURN return current date EXPR current date NAME current date public NN date NN get VB current JJ date NN root ROOT get amod date current dobj get date long RB systime NN system NN current JJ time NN millis IN root ROOT time compound time system amod time current dep time millis if IN systime NN current JJ millis NNS root ROOT millis amod millis current synchronized VBN this DT if IN systime NN current JJ millis NNS root ROOT millis amod millis current current JJ date NN root ROOT date amod date current new JJ date NN systime NN current JJ millis NNS root ROOT millis amod millis current systime NN return NN current JJ date NN root ROOT date amod date current,1,A1,tomcat/test/org/apache/catalina/valves/Benchmarks.java,58
COMMENT called when link java sql connection close is called on the underlying connection this is to notify the interceptors that the physical connection has been released implementation of this method should be thought through with care as no actions should trigger an exception param parent the connection pool that this connection belongs to param con the pooled connection that holds this connection param finalizing if this connection is finalizing true means that the pooled connection will not reconnect the underlying connection FUNCTION SPECIFIER public TYPE void NAME void NAME disconnected PARAMETER LIST connection pool parent pooled connection con boolean finalizing PARAMETER connection pool parent TYPE connection pool NAME connection pool NAME parent PARAMETER pooled connection con TYPE pooled connection NAME pooled connection NAME con PARAMETER boolean finalizing TYPE boolean NAME boolean NAME finalizing BLOCK called when link java sql connection close is called on the underlying connection root ROOT called advmod called when compound connection link compound connection java compound connection sql nsubjpass called connection amod connection close auxpass called is advcl called called case connection on det connection the amod connection underlying nmod on called connection this is to notify the interceptors that the physical connection has been released root ROOT is nsubj is this nsubj xsubj notify this mark notify to xcomp is notify det interceptors the dobj notify interceptors mark released that det connection the amod connection physical nsubjpass released connection aux released has auxpass released been ccomp interceptors released implementation of this method should be thought through with care as no actions should trigger an exception root ROOT thought nsubjpass thought implementation case method of det method this nmod of implementation method aux thought should auxpass thought be case care through case care with nmod with thought care mark trigger as neg actions no nsubj trigger actions aux trigger should advcl as thought trigger det exception an dobj trigger exception param parent the connection pool that this connection belongs to root ROOT parent compound parent param det pool the compound pool connection dep parent pool mark belongs that det connection this nsubj belongs connection ccomp pool belongs nmod belongs to param con the pooled connection that holds this connection root ROOT con compound con param det connection the amod connection pooled dep con connection nsubj holds connection ref connection that acl relcl connection holds det connection this dobj holds connection param finalizing if this connection is finalizing true means that the pooled connection will not reconnect the underlying connection root ROOT param acl param finalizing mark finalizing if det connection this nsubj finalizing connection aux finalizing is advcl if finalizing finalizing amod means true dobj finalizing means mark reconnect that det connection the amod connection pooled nsubj reconnect connection aux reconnect will neg reconnect not ccomp means reconnect det connection the amod connection underlying dobj reconnect connection param finalizing if this connection is finalizing true means that the pooled connection will not reconnect the underlying connection root ROOT param acl param finalizing mark finalizing if det connection this nsubj finalizing connection aux finalizing is advcl if finalizing finalizing amod means true dobj finalizing means mark reconnect that det connection the amod connection pooled nsubj reconnect connection aux reconnect will neg reconnect not ccomp means reconnect det connection the amod connection underlying dobj reconnect connection public NN void NN disconnected VBN connection NN pool NN root ROOT pool compound pool connection parent NN pooled JJ connection NN root ROOT connection amod connection pooled con RB boolean NN finalizing VBG,0,N/A,tomcat/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/JdbcInterceptor.java,173
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME client max window bits private JJ final JJ int NN client NN max NN window NN bits NNS root ROOT bits compound bits client compound bits max compound bits window,0,N/A,tomcat/java/org/apache/tomcat/websocket/PerMessageDeflate.java,50
COMMENT spnego authentication constants DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME default jaas conf INIT conf jaas conf EXPR conf jaas conf spnego authentication constants root ROOT constants compound constants spnego compound constants authentication public NN static JJ final JJ string NN default NN jaas NNS conf VBP root ROOT conf compound jaas default nsubj conf jaas conf NN jaas NNS root ROOT jaas compound jaas conf conf NN,0,N/A,tomcat/java/org/apache/catalina/authenticator/Constants.java,38
COMMENT deallocates or frees a memory block used by byte buffer br b warning b call this method only on byte buffers that were created by calling buffer alloc or buffer calloc param buf previously allocated byte buffer to be freed FUNCTION DECL public static native void free byte buffer buf SPECIFIER public SPECIFIER static SPECIFIER native TYPE void NAME void NAME free PARAMETER LIST byte buffer buf PARAMETER byte buffer buf TYPE byte buffer NAME byte buffer NAME buf deallocates or frees a memory block used by byte buffer root ROOT deallocates cc deallocates or conj or deallocates frees det block a compound block memory dep deallocates block acl block used case buffer by compound buffer byte nmod by used buffer br b warning b call this method only on byte buffers root ROOT call compound b br compound call b amod call warning compound call b det method this dep call method advmod buffers only case buffers on compound buffers byte nmod on method buffers that were created by calling buffer alloc or buffer calloc root ROOT created nsubjpass created that auxpass created were mark calling by advcl by created calling compound alloc buffer dobj calling alloc cc alloc or compound calloc buffer dobj calling calloc conj or alloc calloc param buf previously allocated byte buffer to be freed root ROOT allocated compound buf param nsubj allocated buf advmod allocated previously compound buffer byte dobj allocated buffer nsubjpass xsubj freed buffer mark freed to auxpass freed be xcomp allocated freed public NN static JJ native JJ void NN free JJ byte NN buffer NN root ROOT buffer compound buffer byte buf NN block call ANTONYM ANTONYM block calling ANTONYM ANTONYM block free ANTONYM ANTONYM block freed ANTONYM ANTONYM free used ANTONYM ANTONYM freed used ANTONYM ANTONYM frees block ANTONYM ANTONYM frees used ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/jni/Buffer.java,75
COMMENT table for hex to dec byte translation DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME int INDEX NAME dec INIT EXPR BLOCK EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR table for hex to dec byte translation root ROOT table case hex for nmod for table hex mark dec to acl to table dec compound translation byte dobj dec translation private JJ static JJ final JJ int NN dec NN,0,N/A,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,37
DECL STMT SPECIFIER private SPECIFIER static TYPE final boolean SPECIFIER final NAME boolean NAME boolean INDEX NAME is http protocol INIT new boolean array size EXPR new boolean array size NAME boolean array size NAME boolean INDEX array size EXPR array size NAME array size private JJ static JJ final JJ boolean NN is VBZ http JJ protocol NN root ROOT protocol cop protocol is amod protocol http new JJ boolean NN array NN size NN root ROOT size compound size array,1,D2,tomcat/java/org/apache/tomcat/util/http/parser/HttpParser.java,44
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME message section public NN static JJ final JJ string NN message NN section NN root ROOT section compound section message,0,N/A,tomcat/java/org/apache/catalina/manager/Constants.java,28
DECL STMT SPECIFIER protected TYPE input buffer NAME input buffer NAME ib protected VBN input NN buffer NN root ROOT buffer compound buffer input ib NN,0,N/A,tomcat/java/org/apache/catalina/connector/CoyoteInputStream.java,41
DECL STMT SPECIFIER static TYPE big decimal NAME big decimal NAME bytes INIT new big decimal EXPR new big decimal CALL big decimal NAME big decimal ARGUMENT LIST ARGUMENT EXPR static JJ big JJ decimal JJ root ROOT decimal amod decimal big bytes NNS new JJ big JJ decimal JJ root ROOT decimal amod decimal big,1,E1,tomcat/test/org/apache/catalina/tribes/test/transport/SocketValidateReceive.java,33
DECL STMT SPECIFIER private TYPE final char SPECIFIER final NAME char NAME char INDEX NAME expr private JJ final JJ char NN expr NN,1,D1,tomcat/java/org/apache/catalina/ssi/ExpressionTokenizer.java,41
COMMENT return the set of parameters for this operation FUNCTION SPECIFIER public TYPE parameter info NAME parameter info NAME parameter info INDEX NAME get signature PARAMETER LIST BLOCK DECL STMT TYPE lock NAME lock NAME read lock INIT parameters lock read lock EXPR parameters lock read lock CALL parameters lock read lock NAME parameters lock read lock NAME parameters lock NAME read lock ARGUMENT LIST EXPR read lock lock CALL read lock lock NAME read lock lock NAME read lock NAME lock ARGUMENT LIST TRY try return this parameters finally read lock unlock BLOCK RETURN return this parameters EXPR this parameters NAME this parameters NAME this NAME parameters FINALLY finally read lock unlock BLOCK EXPR read lock unlock CALL read lock unlock NAME read lock unlock NAME read lock NAME unlock ARGUMENT LIST return the set of parameters for this operation root ROOT return det set the dobj return set case parameters of nmod of set parameters case operation for det operation this nmod for set operation public NN parameter NN info NN root ROOT info compound info parameter get VB signature NN root ROOT get dobj get signature lock NN read VB lock NN root ROOT read dobj read lock parameters NNS lock VBP read VBN lock NN root ROOT lock nsubj lock parameters dep lock read dobj read lock read VB lock NN lock NN root ROOT read compound lock lock dobj read lock try VB return NN this DT parameters NNS finally RB read VB lock NN unlock NN root ROOT read compound unlock lock dobj read unlock,0,N/A,tomcat/java/org/apache/tomcat/util/modeler/OperationInfo.java,105
COMMENT set of all element and attribute prefixes used in this translation unit DECL STMT SPECIFIER private TYPE collection string NAME collection string NAME collection ARGUMENT LIST ARGUMENT NAME string NAME include prelude set of all element and attribute prefixes used in this translation unit root ROOT set case element of det element all nmod of set element cc element and compound prefixes attribute nmod of set prefixes conj and element prefixes acl element used case unit in det unit this compound unit translation nmod in used unit private JJ collection NN string NN include VBP prelude NN root ROOT include dobj include prelude,0,N/A,tomcat/java/org/apache/jasper/compiler/PageInfo.java,95
DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME closed INIT false EXPR false private JJ boolean NN closed VBN false JJ,0,N/A,tomcat/java/org/apache/jasper/runtime/JspWriterImpl.java,49
COMMENT back up idle sessions FUNCTION SPECIFIER protected TYPE void NAME void NAME process max idle backups PARAMETER LIST BLOCK IF if get state is available max idle backup return CONDITION get state is available max idle backup EXPR get state is available max idle backup CALL get state NAME get state ARGUMENT LIST CALL is available NAME is available ARGUMENT LIST NAME max idle backup THEN return BLOCK RETURN return DECL STMT TYPE session NAME session NAME sessions NAME sessions INDEX INIT find sessions EXPR find sessions CALL find sessions NAME find sessions ARGUMENT LIST COMMENT back up all sessions idle longer than max idle backup IF if max idle backup for int i i sessions length i standard session session standard session sessions i synchronized session if session is valid continue long last accessed time session get last accessed time internal long persisted last accessed time long session get note persisted last accessed time if persisted last accessed time null last accessed time persisted last accessed time long value continue int time idle int session get idle time internal l if time idle max idle backup if log is debug enabled log debug sm get string persistent manager backup max idle session get id internal integer value of time idle try write session session catch io exception e this is logged in write session session set note persisted last accessed time long value of last accessed time CONDITION max idle backup EXPR max idle backup NAME max idle backup THEN for int i i sessions length i standard session session standard session sessions i synchronized session if session is valid continue long last accessed time session get last accessed time internal long persisted last accessed time long session get note persisted last accessed time if persisted last accessed time null last accessed time persisted last accessed time long value continue int time idle int session get idle time internal l if time idle max idle backup if log is debug enabled log debug sm get string persistent manager backup max idle session get id internal integer value of time idle try write session session catch io exception e this is logged in write session session set note persisted last accessed time long value of last accessed time BLOCK FOR for int i i sessions length i standard session session standard session sessions i synchronized session if session is valid continue long last accessed time session get last accessed time internal long persisted last accessed time long session get note persisted last accessed time if persisted last accessed time null last accessed time persisted last accessed time long value continue int time idle int session get idle time internal l if time idle max idle backup if log is debug enabled log debug sm get string persistent manager backup max idle session get id internal integer value of time idle try write session session catch io exception e this is logged in write session session set note persisted last accessed time long value of last accessed time CONTROL int i i sessions length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i sessions length EXPR i sessions length NAME i NAME sessions length NAME sessions NAME length INCR i EXPR i NAME i BLOCK DECL STMT TYPE standard session NAME standard session NAME session INIT standard session sessions i EXPR standard session sessions i NAME standard session NAME sessions i NAME sessions INDEX i EXPR i NAME i SYNCHRONIZED synchronized session if session is valid continue long last accessed time session get last accessed time internal long persisted last accessed time long session get note persisted last accessed time if persisted last accessed time null last accessed time persisted last accessed time long value continue int time idle int session get idle time internal l if time idle max idle backup if log is debug enabled log debug sm get string persistent manager backup max idle session get id internal integer value of time idle try write session session catch io exception e this is logged in write session session set note persisted last accessed time long value of last accessed time INIT session EXPR session NAME session BLOCK IF if session is valid continue CONDITION session is valid EXPR session is valid CALL session is valid NAME session is valid NAME session NAME is valid ARGUMENT LIST THEN continue BLOCK CONTINUE continue DECL STMT TYPE long NAME long NAME last accessed time INIT session get last accessed time internal EXPR session get last accessed time internal CALL session get last accessed time internal NAME session get last accessed time internal NAME session NAME get last accessed time internal ARGUMENT LIST DECL STMT TYPE long NAME long NAME persisted last accessed time INIT long session get note persisted last accessed time EXPR long session get note persisted last accessed time NAME long CALL session get note persisted last accessed time NAME session get note NAME session NAME get note ARGUMENT LIST ARGUMENT EXPR persisted last accessed time NAME persisted last accessed time IF if persisted last accessed time null last accessed time persisted last accessed time long value continue CONDITION persisted last accessed time null last accessed time persisted last accessed time long value EXPR persisted last accessed time null last accessed time persisted last accessed time long value NAME persisted last accessed time NAME last accessed time CALL persisted last accessed time long value NAME persisted last accessed time long value NAME persisted last accessed time NAME long value ARGUMENT LIST THEN continue BLOCK CONTINUE continue DECL STMT TYPE int NAME int NAME time idle INIT int session get idle time internal l EXPR int session get idle time internal l CALL int session get idle time internal l NAME int ARGUMENT LIST ARGUMENT EXPR session get idle time internal l CALL session get idle time internal NAME session get idle time internal NAME session NAME get idle time internal ARGUMENT LIST IF if time idle max idle backup if log is debug enabled log debug sm get string persistent manager backup max idle session get id internal integer value of time idle try write session session catch io exception e this is logged in write session session set note persisted last accessed time long value of last accessed time CONDITION time idle max idle backup EXPR time idle max idle backup NAME time idle NAME max idle backup THEN if log is debug enabled log debug sm get string persistent manager backup max idle session get id internal integer value of time idle try write session session catch io exception e this is logged in write session session set note persisted last accessed time long value of last accessed time BLOCK IF if log is debug enabled log debug sm get string persistent manager backup max idle session get id internal integer value of time idle CONDITION log is debug enabled EXPR log is debug enabled CALL log is debug enabled NAME log is debug enabled NAME log NAME is debug enabled ARGUMENT LIST THEN log debug sm get string persistent manager backup max idle session get id internal integer value of time idle BLOCK EXPR log debug sm get string persistent manager backup max idle session get id internal integer value of time idle CALL log debug sm get string persistent manager backup max idle session get id internal integer value of time idle NAME log debug NAME log NAME debug ARGUMENT LIST ARGUMENT EXPR sm get string persistent manager backup max idle session get id internal integer value of time idle CALL sm get string persistent manager backup max idle session get id internal integer value of time idle NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR persistent manager backup max idle ARGUMENT EXPR session get id internal CALL session get id internal NAME session get id internal NAME session NAME get id internal ARGUMENT LIST ARGUMENT EXPR integer value of time idle CALL integer value of time idle NAME integer value of NAME integer NAME value of ARGUMENT LIST ARGUMENT EXPR time idle NAME time idle TRY try write session session catch io exception e this is logged in write session BLOCK EXPR write session session CALL write session session NAME write session ARGUMENT LIST ARGUMENT EXPR session NAME session CATCH catch io exception e this is logged in write session PARAMETER LIST io exception e PARAMETER io exception e TYPE io exception NAME io exception NAME e BLOCK COMMENT this is logged in write session EXPR session set note persisted last accessed time long value of last accessed time CALL session set note persisted last accessed time long value of last accessed time NAME session set note NAME session NAME set note ARGUMENT LIST ARGUMENT EXPR persisted last accessed time NAME persisted last accessed time ARGUMENT EXPR long value of last accessed time CALL long value of last accessed time NAME long value of NAME long NAME value of ARGUMENT LIST ARGUMENT EXPR last accessed time NAME last accessed time back up idle sessions root ROOT back case sessions up amod sessions idle nmod up back sessions protected VBN void NN process NN max NN idle JJ backups NNS root ROOT backups compound backups process compound backups max amod backups idle if IN get VB state NN root ROOT get dobj get state is VBZ available JJ root ROOT available cop available is max NN idle JJ backup NN root ROOT backup compound backup max amod backup idle return NN session NN sessions NNS find VB sessions NNS root ROOT find dobj find sessions back up all sessions idle longer than max idle backup root ROOT back case sessions up det sessions all nmod up back sessions amod sessions idle dep idle longer case backup than compound backup max amod backup idle nmod than longer backup if IN max NN idle JJ backup NN root ROOT backup compound backup max amod backup idle for IN int NN i LS i LS sessions NNS length NN root ROOT length compound length sessions i LS standard JJ session NN root ROOT session amod session standard session NN standard JJ session NN root ROOT session amod session standard sessions NNS i LS synchronized VBN session NN if IN session NN is VBZ valid JJ root ROOT valid nsubj valid session cop valid is continue VB long RB last JJ accessed VBN time NN root ROOT time amod time last amod time accessed session NN get VB last JJ accessed VBN time NN internal JJ root ROOT session acl session get amod time last amod time accessed nmod tmod get time amod time internal long RB persisted VBD last JJ accessed VBN time NN root ROOT persisted amod time last amod time accessed nmod tmod persisted time long RB session NN get VB note NN root ROOT get nsubj get session dobj get note persisted VBD last JJ accessed VBN time NN root ROOT persisted amod time last amod time accessed nmod tmod persisted time if IN persisted VBD last JJ accessed VBN time NN root ROOT persisted amod time last amod time accessed nmod tmod persisted time null JJ last JJ accessed VBN time NN root ROOT time amod time last amod time accessed persisted VBD last JJ accessed VBN time NN long JJ value NN root ROOT persisted amod time last amod time accessed dobj persisted time amod value long dep time value continue VB int NN time NN idle JJ root ROOT idle nmod npmod idle time int NN session NN get VB idle JJ time NN internal JJ root ROOT get nsubj get session amod time idle nmod npmod internal time xcomp get internal l NN if IN time NN idle JJ root ROOT idle nmod npmod idle time max NN idle JJ backup NN root ROOT backup compound backup max amod backup idle if IN log NN is VBZ debug NN enabled VBD root ROOT debug nsubj debug log cop debug is dep debug enabled log NN debug NN root ROOT debug compound debug log sm NN get VB string NN root ROOT get nsubj get sm dobj get string persistent JJ manager NN backup NN max NN idle JJ root ROOT idle amod max persistent compound max manager compound max backup nsubj idle max session NN get VB id JJ internal JJ root ROOT get nsubj get session amod internal id xcomp get internal integer NN value NN of IN root ROOT value compound value integer acl value of time NN idle JJ root ROOT idle nmod npmod idle time try VB write VB session NN root ROOT write dobj write session session NN catch NN io NN exception NN root ROOT exception compound exception io e SYM this is logged in write session root ROOT logged nsubjpass logged this auxpass logged is mark write in advcl in logged write dobj write session session NN set VBD note NN root ROOT set nsubj set session dobj set note persisted VBD last JJ accessed VBN time NN root ROOT persisted amod time last amod time accessed nmod tmod persisted time long RB value NN of IN last JJ accessed VBN time NN root ROOT time amod time last amod time accessed,0,N/A,tomcat/java/org/apache/catalina/session/PersistentManagerBase.java,989
FUNCTION SPECIFIER public TYPE int NAME int NAME get case count PARAMETER LIST THROWS throws interrupted exception ARGUMENT EXPR interrupted exception NAME interrupted exception BLOCK EXPR latch await CALL latch await NAME latch await NAME latch NAME await ARGUMENT LIST RETURN return case count EXPR case count NAME case count public NN int NN get VB case NN count NN root ROOT get compound count case dobj get count throws VBZ interrupted JJ exception NN root ROOT exception amod exception interrupted latch VB await VBP root ROOT await nsubj await latch return NN case NN count NN root ROOT count compound count case,0,N/A,tomcat/test/org/apache/tomcat/websocket/TesterWsClientAutobahn.java,128
DECL STMT SPECIFIER private TYPE volatile int SPECIFIER volatile NAME int NAME nr of invocations private JJ volatile JJ int NN nr NN of IN invocations NNS root ROOT nr case invocations of nmod of nr invocations,0,N/A,tomcat/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReport.java,329
COMMENT subclass friendly method to add error handling when a permit isn t granted param request the servlet request param response the servlet response throws io exception error writing output throws servlet exception other error FUNCTION SPECIFIER public TYPE void NAME void NAME permit denied PARAMETER LIST request request response response PARAMETER request request TYPE request NAME request NAME request PARAMETER response response TYPE response NAME response NAME response THROWS throws io exception servlet exception ARGUMENT EXPR io exception NAME io exception ARGUMENT EXPR servlet exception NAME servlet exception BLOCK COMMENT no op by default subclass friendly method to add error handling when a permit isn t root ROOT method compound method subclass amod method friendly mark add to acl to method add compound handling error dobj add handling dep add when det t a compound t permit compound t isn root when t granted param request the servlet request root ROOT request compound request param det request the amod request servlet dobj request request param response the servlet response root ROOT response compound response param det response the compound response servlet dobj response response throws io exception error writing output root ROOT throws compound error io compound error exception dobj throws error acl error writing dobj writing output throws servlet exception other error root ROOT throws amod exception servlet dobj throws exception amod error other dep exception error public NN void NN permit NN denied VBD root ROOT denied nsubj denied permit request NN request NN response NN response NN throws VBZ io NN exception NN root ROOT exception compound exception io servlet JJ exception NN root ROOT exception amod exception servlet no op by default root ROOT op neg op no case default by nmod by op default granted throws ANTONYM ANTONYM permit granted ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/valves/SemaphoreValve.java,193
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME get PARAMETER LIST long timeout time unit unit PARAMETER long timeout TYPE long NAME long NAME timeout PARAMETER time unit unit TYPE time unit NAME time unit NAME unit THROWS throws interrupted exception execution exception timeout exception ARGUMENT EXPR interrupted exception NAME interrupted exception ARGUMENT EXPR execution exception NAME execution exception ARGUMENT EXPR timeout exception NAME timeout exception BLOCK RETURN return null EXPR null override NN public NN void NN get VB long RB timeout NN time NN unit NN root ROOT unit compound unit time unit NN throws VBZ interrupted JJ exception NN root ROOT exception amod exception interrupted execution NN exception NN root ROOT exception compound exception execution timeout NN exception NN root ROOT exception compound exception timeout return NN null JJ get throws ANTONYM ANTONYM,1,B3,tomcat/java/org/apache/tomcat/websocket/AsyncChannelWrapperNonSecure.java,105
FUNCTION SPECIFIER public TYPE byte NAME byte NAME byte INDEX NAME get type PARAMETER LIST BLOCK IF if type null parse CONDITION type null EXPR type null NAME type THEN parse BLOCK EXPR parse CALL parse NAME parse ARGUMENT LIST RETURN return type EXPR type NAME type public NN byte NN get VB type NN root ROOT get dobj get type if IN type NN null JJ parse VB return NN type NN,1,A4,tomcat/java/org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,689
COMMENT domain if we want to filter based on domain DECL STMT SPECIFIER protected TYPE volatile byte SPECIFIER volatile NAME byte NAME byte INDEX NAME domain INIT new byte EXPR new byte NAME byte NAME byte INDEX EXPR domain if we want to filter based on domain root ROOT domain mark want if nsubj want we advcl if domain want case filter to nmod to want filter acl filter based case domain on nmod on based domain protected VBN volatile JJ byte NN domain NN new JJ byte NN,1,D1,tomcat/java/org/apache/catalina/tribes/membership/MemberImpl.java,109
COMMENT hsts DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME hsts preload INIT false EXPR false hsts private JJ boolean NN hsts NNS preload VBP root ROOT preload nsubj preload hsts false JJ,0,N/A,tomcat/java/org/apache/catalina/filters/HttpHeaderSecurityFilter.java,46
COMMENT information on the scripting objects created by this tag at runtime this is a convenience method on the associated tag extra info class param data tag data describing this action return if a tag extra info object is associated with this tag info the result of get tag extra info get variable info data otherwise null FUNCTION SPECIFIER public TYPE variable info NAME variable info NAME variable info INDEX NAME get variable info PARAMETER LIST tag data data PARAMETER tag data data TYPE tag data NAME tag data NAME data BLOCK DECL STMT TYPE variable info NAME variable info NAME variable info INDEX NAME result INIT null EXPR null DECL STMT TYPE tag extra info NAME tag extra info NAME tei INIT get tag extra info EXPR get tag extra info CALL get tag extra info NAME get tag extra info ARGUMENT LIST IF if tei null result tei get variable info data CONDITION tei null EXPR tei null NAME tei THEN result tei get variable info data BLOCK EXPR result tei get variable info data NAME result CALL tei get variable info data NAME tei get variable info NAME tei NAME get variable info ARGUMENT LIST ARGUMENT EXPR data NAME data RETURN return result EXPR result NAME result information on the scripting objects created by this tag at runtime root ROOT information case objects on det objects the amod objects scripting nmod on information objects acl objects created case tag by det tag this nmod by created tag case runtime at nmod at created runtime this is a convenience method on the associated tag extra info class root ROOT method nsubj method this cop method is det method a compound method convenience case class on det class the amod class associated compound class tag amod class extra compound class info nmod on method class param data tag data describing this action root ROOT tag compound data param nsubj tag data dobj tag data acl data describing det action this dobj describing action return if a tag extra info object is associated with this tag info the root ROOT return mark associated if det object a compound object tag amod object extra compound object info nsubjpass associated object auxpass associated is advcl if return associated case info with det info this compound info tag nmod with associated info dep associated the result of get tag extra info get variable info data otherwise root ROOT result mark get of acl of result get compound info tag amod info extra nsubj get info ccomp get get amod data variable compound data info dobj get data advmod get otherwise result of get tag extra info get variable info data otherwise root ROOT result mark get of acl of result get compound info tag amod info extra nsubj get info ccomp get get amod data variable compound data info dobj get data advmod get otherwise null public NN variable JJ info NN root ROOT info amod info variable get VB variable JJ info NN root ROOT get amod info variable dobj get info tag NN data NNS root ROOT data compound data tag data NNS variable JJ info NN root ROOT info amod info variable result NN null JJ tag NN extra JJ info NN root ROOT info compound info tag amod info extra tei NN get VB tag NN extra JJ info NN root ROOT get compound info tag amod info extra dobj get info if IN tei NN null JJ result NN tei NN get VB variable JJ info NN root ROOT get nsubj get tei amod info variable dobj get info data NNS return NN result NN associated class ANTONYM ANTONYM on associated ANTONYM ANTONYM return result ANTONYM ANTONYM,0,N/A,tomcat/java/javax/servlet/jsp/tagext/TagInfo.java,246
COMMENT coordination confirmation for blocking installations DECL STMT SPECIFIER protected SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME coord conf INIT new byte EXPR new byte NAME byte NAME byte INDEX BLOCK EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR coordination confirmation for blocking installations root ROOT confirmation compound confirmation coordination mark blocking for acl for confirmation blocking dobj blocking installations protected VBN static JJ final JJ byte NN coord NN conf NN root ROOT conf compound conf coord new JJ byte NN,1,D1,tomcat/java/org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,145
COMMENT the boundary which separates the various parts DECL STMT SPECIFIER private TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME boundary the boundary which separates the various parts root ROOT boundary det boundary the nsubj separates boundary ref boundary which acl relcl boundary separates det parts the amod parts various dobj separates parts private JJ final JJ byte NN boundary NN,1,D1,tomcat/java/org/apache/tomcat/util/http/fileupload/FileUploadBase.java,756
COMMENT x a ldr DECL STMT SPECIFIER protected TYPE member NAME member NAME member INDEX NAME view x a ldr root ROOT ldr case ldr x det ldr a protected VBN member NN view NN,1,D1,tomcat/java/org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,641
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME exposed headers INIT x custom header EXPR x custom header public NN static JJ final JJ string NN exposed VBN headers NNS root ROOT headers amod headers exposed x CC custom NN header NN root ROOT header compound header x compound header custom public exposed ANTONYM ANTONYM,1,E1,tomcat/test/org/apache/catalina/filters/TesterFilterConfigs.java,30
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME web inf tags INIT web inf tags EXPR web inf tags private JJ static JJ final JJ string NN web NN inf NN tags NNS root ROOT tags compound tags web compound tags inf web NN inf NN tags NNS root ROOT tags compound tags web compound tags inf,1,E1,tomcat/java/org/apache/jasper/compiler/ImplicitTagLibraryInfo.java,51
COMMENT two different forms for tls DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME ssl proto ss lv INIT ss lv EXPR ss lv two different forms for tls root ROOT forms nummod forms two amod forms different case tls for nmod for forms tls public NN static JJ final JJ string NN ssl NN proto NN ss VBP lv NN root ROOT ss compound proto ssl nsubj ss proto dobj ss lv ss NN lv NN root ROOT lv compound lv ss,0,N/A,tomcat/java/org/apache/tomcat/util/net/Constants.java,37
FUNCTION SPECIFIER public TYPE member NAME member NAME member INDEX NAME get view PARAMETER LIST BLOCK RETURN return view EXPR view NAME view public NN member NN get VB view NN root ROOT get dobj get view return NN view NN,1,A4,tomcat/java/org/apache/catalina/tribes/group/interceptors/SimpleCoordinator.java,105
COMMENT spnego authentication constants DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME default krb conf INIT conf krb ini EXPR conf krb ini spnego authentication constants root ROOT constants compound constants spnego compound constants authentication public NN static JJ final JJ string NN default NN krb NN conf NN root ROOT conf compound conf default compound conf krb conf NN krb NN root ROOT krb compound krb conf ini NNS,0,N/A,tomcat/java/org/apache/catalina/authenticator/Constants.java,35
COMMENT prefix codes for message types from container to server DECL STMT SPECIFIER public SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME jk ajp send body chunk INIT EXPR prefix codes for message types from container to server root ROOT codes compound codes prefix case types for compound types message nmod for codes types case container from nmod from types container case server to nmod to container server public NN static JJ final JJ byte NN jk NN ajp NN send VBP body NN chunk NN root ROOT send compound ajp jk nsubj send ajp compound chunk body dobj send chunk,0,N/A,tomcat/java/org/apache/coyote/ajp/Constants.java,37
COMMENT encodes the given string into a sequence of bytes using the utf charset storing the result into a new byte array param string the string to encode may be code null code return encoded bytes or code null code if the input string was code null code see a href http download oracle com javase docs api java nio charset charset html standard charsets a FUNCTION SPECIFIER public SPECIFIER static TYPE byte NAME byte NAME byte INDEX NAME get bytes utf PARAMETER LIST final string string PARAMETER final string string TYPE final string SPECIFIER final NAME string NAME string BLOCK RETURN return get bytes string standard charsets utf EXPR get bytes string standard charsets utf CALL get bytes string standard charsets utf NAME get bytes ARGUMENT LIST ARGUMENT EXPR string NAME string ARGUMENT EXPR standard charsets utf NAME standard charsets utf NAME standard charsets NAME utf encodes the given string into a sequence of bytes using the utf charset storing the result into a new byte root ROOT encodes det string the amod string given dobj encodes string case sequence into det sequence a nmod into encodes sequence case bytes of nmod of sequence bytes xcomp encodes using det charset the compound charset utf dobj using charset acl charset storing det result the dobj storing result case byte into det byte a amod byte new nmod into storing byte array param string root ROOT string compound string param the string to encode may be code null code root ROOT code det string the nsubj code string mark encode to acl to string encode aux code may cop code be compound code code amod code null return encoded bytes or code null code if the input string was code null code root ROOT encoded nsubj encoded return compound code bytes cc bytes or conj or bytes code compound code code amod code null dobj encoded code mark code if det string the compound string input nsubj code string cop code was compound code code amod code null advcl if encoded code see a href http download oracle com javase docs api java nio charset charset html standard charsets a root ROOT see det docs a compound docs href compound docs http compound docs download compound docs oracle compound docs com compound docs javase dobj see docs case charsets api compound charsets java compound charsets nio compound charsets charset compound charsets charset compound charsets html amod charsets standard nmod api docs charsets dep see a public NN static JJ byte NN get VB bytes NNS utf NN root ROOT get compound utf bytes dobj get utf final JJ string NN string NN return NN get VB bytes NNS root ROOT get dobj get bytes string NN standard JJ charsets NNS utf NN root ROOT utf amod charsets standard nsubj utf charsets given result ANTONYM ANTONYM given using ANTONYM ANTONYM result return ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/util/codec/binary/StringUtils.java,59
COMMENT sets the flag that controls if this cookie will be hidden from scripts on the client side param http only the new value of the flag since servlet FUNCTION SPECIFIER public TYPE void NAME void NAME set http only PARAMETER LIST boolean http only PARAMETER boolean http only TYPE boolean NAME boolean NAME http only BLOCK EXPR this http only http only NAME this http only NAME this NAME http only NAME http only sets the flag that controls if this cookie will be hidden from scripts on root ROOT sets det flag the dobj sets flag nsubj controls flag ref flag that acl relcl flag controls mark hidden if det cookie this nsubjpass hidden cookie aux hidden will auxpass hidden be advcl if controls hidden case scripts from nmod from hidden scripts nmod hidden on the client side root ROOT side det side the compound side client param http only the new value of the flag root ROOT http compound http param advmod value only det value the amod value new dep http value case flag of det flag the nmod of value flag since servlet root ROOT servlet case servlet since public NN void NN set VBN http NN only RB root ROOT set dobj set http advmod set only boolean NN http NN only RB root ROOT http advmod http only this DT http NN only RB http NN only RB root ROOT http advmod http only public hidden ANTONYM ANTONYM,0,N/A,tomcat/java/javax/servlet/http/Cookie.java,366
DECL STMT SPECIFIER private SPECIFIER static TYPE final synchronized stack el parser SPECIFIER final NAME synchronized stack el parser NAME synchronized stack ARGUMENT LIST ARGUMENT NAME el parser NAME parser cache INIT new synchronized stack EXPR new synchronized stack CALL synchronized stack NAME synchronized stack NAME synchronized stack ARGUMENT LIST ARGUMENT LIST private JJ static JJ final JJ synchronized VBN stack VBP root ROOT stack nsubj stack synchronized el NN parser NN root ROOT parser compound parser el parser NN cache NN root ROOT cache compound cache parser new JJ synchronized VBN stack VBP root ROOT stack nsubj stack synchronized,0,N/A,tomcat/java/org/apache/el/lang/ExpressionBuilder.java,51
COMMENT defaults DECL STMT TYPE map setting long NAME map setting long NAME map ARGUMENT LIST ARGUMENT NAME setting ARGUMENT NAME long NAME pending INIT new enum map setting class EXPR new enum map setting class CALL enum map setting class NAME enum map NAME enum map ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR setting class NAME setting class NAME setting NAME class defaults map NN setting VBG long RB pending VBG new JJ enum NN map NN root ROOT map compound map enum setting VBG class NN,1,D2,tomcat/java/org/apache/coyote/http2/ConnectionSettingsBase.java,49
COMMENT position in buffer DECL STMT SPECIFIER public TYPE int NAME int NAME bufpos INIT EXPR position in buffer root ROOT position case buffer in nmod in position buffer position in buffer root ROOT position case buffer in nmod in position buffer public NN int NN bufpos NNS,0,N/A,tomcat/java/org/apache/el/parser/SimpleCharStream.java,19
COMMENT assigns a new value to a cookie after the cookie is created if you use a binary value you may want to use base encoding p with version cookies values should not contain white space brackets parentheses equals signs commas double quotes slashes question marks at signs colons and semicolons empty values may not behave the same way on all browsers param new value a code string code specifying the new value see get value see cookie FUNCTION SPECIFIER public TYPE void NAME void NAME set value PARAMETER LIST string new value PARAMETER string new value TYPE string NAME string NAME new value BLOCK EXPR value new value NAME value NAME new value assigns a new value to a cookie after the cookie is created if you use a root ROOT assigns det value a amod value new dobj assigns value case cookie to det cookie a nmod to assigns cookie mark created after det cookie the nsubjpass created cookie auxpass created is advcl after assigns created mark use if nsubj use you advcl if created use dobj use a assigns a new value to a cookie after the cookie is created if you use a root ROOT assigns det value a amod value new dobj assigns value case cookie to det cookie a nmod to assigns cookie mark created after det cookie the nsubjpass created cookie auxpass created is advcl after assigns created mark use if nsubj use you advcl if created use dobj use a binary value you may want to use base encoding root ROOT value amod value binary nsubj want you nsubj xsubj use you aux want may acl relcl value want mark use to xcomp want use compound encoding base dobj use encoding p with version cookies values should not contain white space brackets root ROOT contain case values with compound values version compound values cookies nmod with contain values aux contain should neg contain not amod brackets white compound brackets space dobj contain brackets parentheses equals signs commas double quotes slashes question root ROOT equals nsubj equals parentheses compound slashes signs compound slashes commas amod slashes double compound slashes quotes dobj equals slashes dep equals question marks at signs colons and semicolons empty values may not behave the root ROOT behave nsubj behave marks case signs at nmod at marks signs compound values colons cc colons and conj and colons semicolons compound values semicolons amod values empty dep signs values aux behave may neg behave not dobj behave the marks at signs colons and semicolons empty values may not behave the root ROOT behave nsubj behave marks case signs at nmod at marks signs compound values colons cc colons and conj and colons semicolons compound values semicolons amod values empty dep signs values aux behave may neg behave not dobj behave the same way on all browsers root ROOT way amod way same case browsers on det browsers all nmod on way browsers param new value root ROOT param amod value new dobj param value a code string code specifying the new value root ROOT code det code a compound code code compound code string acl code specifying det value the amod value new dobj specifying value see get value root ROOT see ccomp see get dobj get value see cookie root ROOT see dobj see cookie public NN void NN set VBN value NN root ROOT set dobj set value string NN new JJ value NN root ROOT value amod value new value NN new JJ value NN root ROOT value amod value new contain behave ANTONYM ANTONYM contain marks ANTONYM ANTONYM contain see ANTONYM ANTONYM is contain ANTONYM ANTONYM marks see ANTONYM ANTONYM marks specifying ANTONYM ANTONYM new same ANTONYM ANTONYM specifying see ANTONYM ANTONYM binary double SYNONYM SYNONYM white void SYNONYM SYNONYM,0,N/A,tomcat/java/javax/servlet/http/Cookie.java,299
COMMENT next token DECL STMT SPECIFIER private TYPE token NAME token NAME jj scanpos next token root ROOT token amod token next next token root ROOT token amod token next private JJ token JJ jj NN scanpos NNS root ROOT scanpos compound scanpos jj,0,N/A,tomcat/java/org/apache/el/parser/ELParser.java,2847
DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME default iterations INIT EXPR public NN static JJ final JJ int NN default NN iterations NNS root ROOT iterations compound iterations default,0,N/A,tomcat/java/org/apache/catalina/realm/MessageDigestCredentialHandler.java,57
COMMENT maps prefix name to java lang method objects DECL STMT SPECIFIER private TYPE hash map string method NAME hash map string method NAME hash map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME method NAME fnmap INIT null EXPR null maps prefix name to java lang method objects root ROOT name compound name maps compound name prefix mark java to acl to name java compound objects lang compound objects method dobj java objects private JJ hash VB map NN root ROOT hash dobj hash map string NN method NN fnmap NN null JJ,0,N/A,tomcat/java/org/apache/jasper/runtime/ProtectedFunctionMapper.java,39
COMMENT hsts DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME hsts header name INIT strict transport security EXPR strict transport security hsts private JJ static JJ final JJ string NN hsts NNS header VBP name NN root ROOT header nsubj header hsts dobj header name strict JJ transport NN security NN root ROOT security amod security strict compound security transport,0,N/A,tomcat/java/org/apache/catalina/filters/HttpHeaderSecurityFilter.java,42
COMMENT we are in a unit test and don t need to paranoid DECL STMT SPECIFIER protected SPECIFIER static TYPE final boolean SPECIFIER final NAME boolean NAME server use cookies INIT true EXPR true we are in a unit test and don t need to paranoid root ROOT test nsubj test we nsubj don we cop test are case test in det test a compound test unit cc test and conj and test don compound need t dobj don need case paranoid to nmod to need paranoid protected VBN static JJ final JJ boolean NN server NN use NN cookies NNS root ROOT cookies compound cookies server compound cookies use true JJ,0,N/A,tomcat/test/org/apache/catalina/authenticator/TestFormAuthenticator.java,91
COMMENT swap idle sessions out to store if they are idle too long COMMENT protected methods FUNCTION SPECIFIER protected TYPE void NAME void NAME process max idle swaps PARAMETER LIST BLOCK IF if get state is available max idle swap return CONDITION get state is available max idle swap EXPR get state is available max idle swap CALL get state NAME get state ARGUMENT LIST CALL is available NAME is available ARGUMENT LIST NAME max idle swap THEN return BLOCK RETURN return DECL STMT TYPE session NAME session NAME sessions NAME sessions INDEX INIT find sessions EXPR find sessions CALL find sessions NAME find sessions ARGUMENT LIST COMMENT swap out all sessions idle longer than max idle swap IF if max idle swap for int i i sessions length i standard session session standard session sessions i synchronized session if session is valid continue int time idle int session get idle time internal l if time idle max idle swap time idle min idle swap if session access count null session access count get session is currently being accessed skip it continue if log is debug enabled log debug sm get string persistent manager swap max idle session get id internal integer value of time idle try swap out session catch io exception e this is logged in write session CONDITION max idle swap EXPR max idle swap NAME max idle swap THEN for int i i sessions length i standard session session standard session sessions i synchronized session if session is valid continue int time idle int session get idle time internal l if time idle max idle swap time idle min idle swap if session access count null session access count get session is currently being accessed skip it continue if log is debug enabled log debug sm get string persistent manager swap max idle session get id internal integer value of time idle try swap out session catch io exception e this is logged in write session BLOCK FOR for int i i sessions length i standard session session standard session sessions i synchronized session if session is valid continue int time idle int session get idle time internal l if time idle max idle swap time idle min idle swap if session access count null session access count get session is currently being accessed skip it continue if log is debug enabled log debug sm get string persistent manager swap max idle session get id internal integer value of time idle try swap out session catch io exception e this is logged in write session CONTROL int i i sessions length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i sessions length EXPR i sessions length NAME i NAME sessions length NAME sessions NAME length INCR i EXPR i NAME i BLOCK DECL STMT TYPE standard session NAME standard session NAME session INIT standard session sessions i EXPR standard session sessions i NAME standard session NAME sessions i NAME sessions INDEX i EXPR i NAME i SYNCHRONIZED synchronized session if session is valid continue int time idle int session get idle time internal l if time idle max idle swap time idle min idle swap if session access count null session access count get session is currently being accessed skip it continue if log is debug enabled log debug sm get string persistent manager swap max idle session get id internal integer value of time idle try swap out session catch io exception e this is logged in write session INIT session EXPR session NAME session BLOCK IF if session is valid continue CONDITION session is valid EXPR session is valid CALL session is valid NAME session is valid NAME session NAME is valid ARGUMENT LIST THEN continue BLOCK CONTINUE continue DECL STMT TYPE int NAME int NAME time idle INIT int session get idle time internal l EXPR int session get idle time internal l CALL int session get idle time internal l NAME int ARGUMENT LIST ARGUMENT EXPR session get idle time internal l CALL session get idle time internal NAME session get idle time internal NAME session NAME get idle time internal ARGUMENT LIST IF if time idle max idle swap time idle min idle swap if session access count null session access count get session is currently being accessed skip it continue if log is debug enabled log debug sm get string persistent manager swap max idle session get id internal integer value of time idle try swap out session catch io exception e this is logged in write session CONDITION time idle max idle swap time idle min idle swap EXPR time idle max idle swap time idle min idle swap NAME time idle NAME max idle swap NAME time idle NAME min idle swap THEN if session access count null session access count get session is currently being accessed skip it continue if log is debug enabled log debug sm get string persistent manager swap max idle session get id internal integer value of time idle try swap out session catch io exception e this is logged in write session BLOCK IF if session access count null session access count get session is currently being accessed skip it continue CONDITION session access count null session access count get EXPR session access count null session access count get NAME session access count NAME session NAME access count CALL session access count get NAME session access count get NAME session NAME access count NAME get ARGUMENT LIST THEN session is currently being accessed skip it continue BLOCK COMMENT session is currently being accessed skip it CONTINUE continue IF if log is debug enabled log debug sm get string persistent manager swap max idle session get id internal integer value of time idle CONDITION log is debug enabled EXPR log is debug enabled CALL log is debug enabled NAME log is debug enabled NAME log NAME is debug enabled ARGUMENT LIST THEN log debug sm get string persistent manager swap max idle session get id internal integer value of time idle BLOCK EXPR log debug sm get string persistent manager swap max idle session get id internal integer value of time idle CALL log debug sm get string persistent manager swap max idle session get id internal integer value of time idle NAME log debug NAME log NAME debug ARGUMENT LIST ARGUMENT EXPR sm get string persistent manager swap max idle session get id internal integer value of time idle CALL sm get string persistent manager swap max idle session get id internal integer value of time idle NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR persistent manager swap max idle ARGUMENT EXPR session get id internal CALL session get id internal NAME session get id internal NAME session NAME get id internal ARGUMENT LIST ARGUMENT EXPR integer value of time idle CALL integer value of time idle NAME integer value of NAME integer NAME value of ARGUMENT LIST ARGUMENT EXPR time idle NAME time idle TRY try swap out session catch io exception e this is logged in write session BLOCK EXPR swap out session CALL swap out session NAME swap out ARGUMENT LIST ARGUMENT EXPR session NAME session CATCH catch io exception e this is logged in write session PARAMETER LIST io exception e PARAMETER io exception e TYPE io exception NAME io exception NAME e BLOCK COMMENT this is logged in write session swap idle sessions out to store if they are idle too long root ROOT sessions compound sessions swap amod sessions idle advmod store out mark store to acl to sessions store mark idle if nsubj idle they cop idle are advcl if store idle advmod long too advmod idle long protected methods root ROOT methods amod methods protected protected VBN void NN process NN max NN idle JJ swaps NNS root ROOT swaps compound swaps process compound swaps max amod swaps idle if IN get VB state NN root ROOT get dobj get state is VBZ available JJ root ROOT available cop available is max NN idle JJ swap NN root ROOT swap compound swap max amod swap idle return NN session NN sessions NNS find VB sessions NNS root ROOT find dobj find sessions swap out all sessions idle longer than max idle swap root ROOT swap case sessions out det sessions all nmod out swap sessions amod sessions idle dep idle longer case swap than compound swap max amod swap idle nmod than longer swap if IN max NN idle JJ swap NN root ROOT swap compound swap max amod swap idle for IN int NN i LS i LS sessions NNS length NN root ROOT length compound length sessions i LS standard JJ session NN root ROOT session amod session standard session NN standard JJ session NN root ROOT session amod session standard sessions NNS i LS synchronized VBN session NN if IN session NN is VBZ valid JJ root ROOT valid nsubj valid session cop valid is continue VB int NN time NN idle JJ root ROOT idle nmod npmod idle time int NN session NN get VB idle JJ time NN internal JJ root ROOT get nsubj get session amod time idle nmod npmod internal time xcomp get internal l NN if IN time NN idle JJ root ROOT idle nmod npmod idle time max NN idle JJ swap NN root ROOT swap compound swap max amod swap idle time NN idle JJ root ROOT idle nmod npmod idle time min NN idle JJ swap NN root ROOT swap compound swap min amod swap idle if IN session NN access NN count NN root ROOT count compound count session compound count access null JJ session NN access NN count NN get VB root ROOT get compound count session compound count access nsubj get count session is currently being accessed skip it root ROOT accessed nsubjpass accessed session aux accessed is advmod accessed currently auxpass accessed being xcomp accessed skip dobj skip it continue VB if IN log NN is VBZ debug NN enabled VBD root ROOT debug nsubj debug log cop debug is dep debug enabled log NN debug NN root ROOT debug compound debug log sm NN get VB string NN root ROOT get nsubj get sm dobj get string persistent JJ manager NN swap NN max NN idle JJ root ROOT idle amod max persistent compound max manager compound max swap nsubj idle max session NN get VB id JJ internal JJ root ROOT get nsubj get session amod internal id xcomp get internal integer NN value NN of IN root ROOT value compound value integer acl value of time NN idle JJ root ROOT idle nmod npmod idle time try VB swap NN out IN root ROOT swap compound prt swap out session NN catch NN io NN exception NN root ROOT exception compound exception io e SYM this is logged in write session root ROOT logged nsubjpass logged this auxpass logged is mark write in advcl in logged write dobj write session out idle ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/session/PersistentManagerBase.java,896
COMMENT checks whether the supplied throwable is an instance of code invocation target exception code and returns the throwable that is wrapped by it if there is any param t the throwable to check return code t code or code t get cause code FUNCTION SPECIFIER public SPECIFIER static TYPE throwable NAME throwable NAME unwrap invocation target exception PARAMETER LIST throwable t PARAMETER throwable t TYPE throwable NAME throwable NAME t BLOCK IF if t instanceof invocation target exception t get cause null return t get cause CONDITION t instanceof invocation target exception t get cause null EXPR t instanceof invocation target exception t get cause null NAME t NAME invocation target exception CALL t get cause NAME t get cause NAME t NAME get cause ARGUMENT LIST THEN return t get cause BLOCK RETURN return t get cause EXPR t get cause CALL t get cause NAME t get cause NAME t NAME get cause ARGUMENT LIST RETURN return t EXPR t NAME t checks whether the supplied throwable is an instance of root ROOT checks mark instance whether det throwable the amod throwable supplied nsubj instance throwable cop instance is det instance an ccomp checks instance dep instance of code invocation target exception code and returns the throwable that is root ROOT code compound code code compound code invocation compound code target compound code exception cc code and conj and code returns det throwable the dobj returns throwable nsubj is that dep throwable is wrapped by it if there is any root ROOT wrapped case it by nmod by wrapped it mark is if expl is there advcl if wrapped is nsubj is any param t the throwable to check root ROOT t compound t param det throwable the dep t throwable mark check to acl to throwable check return code t code or code t get cause code root ROOT cause compound code return compound code code compound code t nsubj cause code cc code or compound t code conj or code t nsubj cause t aux cause get dobj cause code public NN static JJ throwable JJ unwrap JJ invocation NN target NN exception NN root ROOT exception amod exception unwrap compound exception invocation compound exception target throwable JJ t NN if IN t NN instanceof NN invocation NN target NN exception NN root ROOT exception compound exception invocation compound exception target t NN get VB cause VB root ROOT cause nsubj cause t aux cause get null JJ return NN t NN get VB cause VB root ROOT cause nsubj cause t aux cause get return NN t NN check return ANTONYM ANTONYM checks return ANTONYM ANTONYM checks returns ANTONYM ANTONYM returns check ANTONYM ANTONYM supplied return ANTONYM ANTONYM supplied returns ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/util/ExceptionUtils.java,54
COMMENT validate a jsp page this will get invoked once per unique tag library uri in the xml view this method will return null if the page is valid otherwise the method should return an array of validation message objects an array of length zero is also interpreted as no errors param prefix the first prefix with which the tag library is associated in the xml view note that some tags may use a different prefix if the namespace is redefined param uri the tag library s unique identifier param page the jsp data page object return a null object or zero length array if no errors an array of validation messages otherwise FUNCTION SPECIFIER public TYPE validation message NAME validation message NAME validation message INDEX NAME validate PARAMETER LIST string prefix string uri page data page PARAMETER string prefix TYPE string NAME string NAME prefix PARAMETER string uri TYPE string NAME string NAME uri PARAMETER page data page TYPE page data NAME page data NAME page BLOCK RETURN return null EXPR null validate a jsp page root ROOT validate det page a compound page jsp dobj validate page this will get invoked once per unique tag library uri in the root ROOT invoked nsubjpass invoked this aux invoked will auxpass invoked get advmod uri once case uri per amod uri unique compound uri tag compound uri library nmod per invoked uri case the in nmod in uri the xml view this method will return null if the page is valid otherwise root ROOT view compound view xml det method this nsubj return method aux return will acl relcl view return xcomp return null mark valid if det page the nsubj valid page cop valid is advcl if return valid advmod view otherwise xml view this method will return null if the page is valid otherwise root ROOT view compound view xml det method this nsubj return method aux return will acl relcl view return xcomp return null mark valid if det page the nsubj valid page cop valid is advcl if return valid advmod view otherwise the method should return an array of validation message objects root ROOT return det method the nsubj return method aux return should det qmod objects an mwe an array mwe an of compound objects validation compound objects message dobj return objects an array of length zero is also interpreted as no errors root ROOT interpreted det qmod length an mwe an array mwe an of nsubjpass interpreted length nummod length zero auxpass interpreted is advmod interpreted also case errors as neg errors no nmod as interpreted errors param prefix the first prefix with which the tag library is root ROOT prefix compound prefix param det prefix the amod prefix first dep prefix prefix nmod with is prefix case which with ref prefix which det library the compound library tag nsubj is library acl relcl prefix is associated in the xml view note that some tags may use root ROOT note csubj note associated case view in det view the compound view xml nmod in associated view mark use that det tags some nsubj use tags aux use may ccomp note use associated in the xml view note that some tags may use root ROOT note csubj note associated case view in det view the compound view xml nmod in associated view mark use that det tags some nsubj use tags aux use may ccomp note use a different prefix if the namespace is redefined root ROOT prefix det prefix a amod prefix different mark redefined if det namespace the nsubjpass redefined namespace auxpass redefined is dep prefix redefined param uri the tag library s unique identifier root ROOT uri compound uri param det library the compound library tag nsubj identifier library compound identifier s amod identifier unique acl relcl uri identifier param page the jsp data page object root ROOT page compound page param det object the compound object jsp compound object data compound object page dep page object return a null object or zero length array if no errors an array root ROOT return det object a amod object null dobj return object cc object or nummod array zero compound array length dobj return array conj or object array dep return if neg errors no root if errors det array an dep errors array of validation messages otherwise root ROOT messages case messages of compound messages validation advmod messages otherwise public NN validation NN message NN root ROOT message compound message validation validate VB string NN prefix NN string NN uri NN page NN data NNS root ROOT data compound data page page NN return NN null JJ get array ANTONYM ANTONYM get return ANTONYM ANTONYM get string ANTONYM ANTONYM get view ANTONYM ANTONYM get will ANTONYM ANTONYM is interpreted ANTONYM ANTONYM no some ANTONYM ANTONYM note tags ANTONYM ANTONYM null valid ANTONYM ANTONYM return interpreted ANTONYM ANTONYM tag note ANTONYM ANTONYM view interpreted ANTONYM ANTONYM zero some ANTONYM ANTONYM otherwise different SYNONYM SYNONYM unique different SYNONYM SYNONYM zero first SYNONYM SYNONYM,1,B1,tomcat/java/javax/servlet/jsp/tagext/TagLibraryValidator.java,129
DECL STMT SPECIFIER private TYPE int NAME int NAME num guesses private JJ int NN num NN guesses NNS root ROOT guesses compound guesses num,0,N/A,tomcat/webapps/examples/WEB-INF/classes/num/NumberGuessBean.java,33
COMMENT enable or disable caching of ssl sessions param enabled code true to enable caching code false to disable FUNCTION SPECIFIER public TYPE void NAME void NAME set session cache enabled PARAMETER LIST boolean enabled PARAMETER boolean enabled TYPE boolean NAME boolean NAME enabled BLOCK DECL STMT TYPE long NAME long NAME mode INIT enabled ssl ssl sess cache server ssl ssl sess cache off EXPR enabled ssl ssl sess cache server ssl ssl sess cache off TERNARY enabled ssl ssl sess cache server ssl ssl sess cache off CONDITION enabled EXPR enabled NAME enabled THEN ssl ssl sess cache server EXPR ssl ssl sess cache server NAME ssl ssl sess cache server NAME ssl NAME ssl sess cache server ELSE ssl ssl sess cache off EXPR ssl ssl sess cache off NAME ssl ssl sess cache off NAME ssl NAME ssl sess cache off EXPR ssl context set session cache mode context mode CALL ssl context set session cache mode context mode NAME ssl context set session cache mode NAME ssl context NAME set session cache mode ARGUMENT LIST ARGUMENT EXPR context NAME context ARGUMENT EXPR mode NAME mode enable or disable caching of ssl sessions root ROOT enable cc enable or conj or enable disable dobj enable caching case sessions of compound sessions ssl nmod of caching sessions param enabled code true to enable caching code false to disable root ROOT enabled nsubj enabled param dobj enabled code amod code true mark enable to xcomp true enable compound code caching dobj enable code amod code false mark disable to xcomp false disable public NN void NN set VBN session NN cache NN enabled VBD root ROOT enabled amod cache set compound cache session nsubj enabled cache boolean NN enabled VBD long RB mode NN enabled VBD ssl NN ssl NN root ROOT ssl compound ssl ssl sess NN cache NN server NN root ROOT server compound server sess compound server cache ssl NN ssl NN root ROOT ssl compound ssl ssl sess NN cache NN off IN root ROOT cache compound cache sess dep cache off ssl NN context NN set VBN session NN cache NN mode NN root ROOT set compound context ssl nsubj set context compound mode session compound mode cache dobj set mode context NN mode NN disable enabled ANTONYM ANTONYM enable disable ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/util/net/openssl/OpenSSLSessionContext.java,71
DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME rows INIT EXPR public NN static JJ final JJ int NN rows NNS,1,E1,tomcat/webapps/examples/WEB-INF/classes/cal/Entries.java,28
COMMENT constant that holds the name of the environment property for specifying the manner in which aliases should be dereferenced DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME deref aliases INIT java naming ldap deref aliases EXPR java naming ldap deref aliases constant that holds the name of the environment property for specifying root ROOT constant nsubj holds that ccomp constant holds det name the dobj holds name case property of det property the compound property environment nmod of name property mark specifying for advcl for holds specifying the manner in which aliases should be dereferenced root ROOT manner det manner the nmod in dereferenced manner case which in ref manner which nsubjpass dereferenced aliases aux dereferenced should auxpass dereferenced be acl relcl manner dereferenced public NN static JJ final JJ string NN deref NN aliases NNS root ROOT aliases compound aliases deref java NN naming VBG ldap NN deref NN aliases NNS root ROOT java acl java naming compound aliases ldap compound aliases deref dobj naming aliases be naming ANTONYM ANTONYM holds name ANTONYM ANTONYM holds naming ANTONYM ANTONYM name be ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/realm/JNDIRealm.java,234
COMMENT get the specific token FUNCTION SPECIFIER final SPECIFIER public TYPE token NAME token NAME get token PARAMETER LIST int index PARAMETER int index TYPE int NAME int NAME index BLOCK DECL STMT TYPE token NAME token NAME t INIT token EXPR token NAME token FOR for int i i index i if t next null t t next else t t next token source get next token CONTROL int i i index i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i index EXPR i index NAME i NAME index INCR i EXPR i NAME i BLOCK IF if t next null t t next else t t next token source get next token CONDITION t next null EXPR t next null NAME t next NAME t NAME next THEN t t next BLOCK EXPR t t next NAME t NAME t next NAME t NAME next ELSE else t t next token source get next token BLOCK EXPR t t next token source get next token NAME t NAME t next NAME t NAME next CALL token source get next token NAME token source get next token NAME token source NAME get next token ARGUMENT LIST RETURN return t EXPR t NAME t get the specific token root ROOT get det token the amod token specific dobj get token get the specific token root ROOT get det token the amod token specific dobj get token final JJ public NN token JJ get VB token JJ root ROOT get xcomp get token int NN index NN token JJ t NN token JJ for IN int NN i LS i LS index NN i LS if IN t NN next IN root ROOT t dep t next null JJ t NN t NN next IN root ROOT t dep t next else RB t NN t NN next IN root ROOT t dep t next token JJ source NN root ROOT source amod source token get VB next JJ token JJ root ROOT get amod token next xcomp get token return NN t NN,1,B7,tomcat/java/org/apache/el/parser/ELParser.java,3009
COMMENT cache for the tld locations DECL STMT SPECIFIER protected TYPE jsp config NAME jsp config NAME jsp config INIT null EXPR null cache for the tld locations root ROOT cache case locations for det locations the compound locations tld nmod for cache locations protected VBN jsp NN config NN root ROOT config compound config jsp jsp NN config NN root ROOT config compound config jsp null JJ,0,N/A,tomcat/java/org/apache/jasper/JspC.java,262
COMMENT a convenience method which can be overridden so that there s no need to call code super init config code p instead of overriding link init servlet config simply override this method and it will be called by code generic servlet init servlet config config code the code servlet config code object can still be retrieved via link get servlet config exception servlet exception if an exception occurs that interrupts the servlet s normal operation FUNCTION SPECIFIER public TYPE void NAME void NAME init PARAMETER LIST THROWS throws servlet exception ARGUMENT EXPR servlet exception NAME servlet exception BLOCK COMMENT noop by default a convenience method which can be overridden so that there s no need to root ROOT method det method a compound method convenience nsubjpass overridden method ref method which aux overridden can auxpass overridden be acl relcl method overridden mark s so mwe so that expl s there advcl so that overridden s neg need no nsubj s need dep need to call code super init config code root ROOT code compound code call compound code code amod code super compound code init compound code config p instead of overriding link init servlet config simply override this root ROOT override case config instead mwe instead of amod config overriding compound config link compound config init compound config servlet nmod instead of override config advmod override simply dobj override this method and it will be called by root ROOT called nsubjpass called method cc method and conj and method it nsubjpass called it aux called will auxpass called be compound prt called by code generic servlet init servlet config config code the root ROOT code compound config code amod config generic amod config servlet compound config init compound config servlet compound config config nsubj code config dobj code the code generic servlet init servlet config config code the root ROOT code compound config code amod config generic amod config servlet compound config init compound config servlet compound config config nsubj code config dobj code the code servlet config code object can still be retrieved via root ROOT retrieved compound object code amod object servlet compound object config compound object code nsubjpass retrieved object aux retrieved can advmod retrieved still auxpass retrieved be dep retrieved via link get servlet config root ROOT get nsubj get link amod config servlet dobj get config exception servlet exception root ROOT exception compound exception exception amod exception servlet if an exception occurs that interrupts the servlet s root ROOT occurs mark occurs if det exception an nsubj occurs exception nsubj interrupts that ccomp occurs interrupts det s the amod s servlet dobj interrupts s normal operation root ROOT operation amod operation normal public NN void NN init NN throws VBZ servlet JJ exception NN root ROOT exception amod exception servlet noop by default root ROOT noop case default by nmod by noop default,0,N/A,tomcat/java/javax/servlet/GenericServlet.java,175
COMMENT expiration time in seconds for the doc DECL STMT SPECIFIER protected TYPE long NAME long NAME expires INIT null EXPR null expiration time in seconds for the doc root ROOT time compound time expiration case seconds in nmod in time seconds case doc for det doc the nmod for seconds doc expiration time in seconds for the doc root ROOT time compound time expiration case seconds in nmod in time seconds case doc for det doc the nmod for seconds doc protected VBN long RB expires VBZ null JJ,1,D2,tomcat/java/org/apache/catalina/ssi/SSIFilter.java,52
COMMENT decodes a base string into octets p b note b this method seamlessly handles data encoded in url safe or normal mode p param base string string containing base data return array containing decoded data since FUNCTION SPECIFIER public SPECIFIER static TYPE byte NAME byte NAME byte INDEX NAME decode base PARAMETER LIST final string base string PARAMETER final string base string TYPE final string SPECIFIER final NAME string NAME base string BLOCK RETURN return new base decode base string EXPR new base decode base string CALL base NAME base ARGUMENT LIST CALL decode base string NAME decode ARGUMENT LIST ARGUMENT EXPR base string NAME base string decodes a base string into octets root ROOT decodes det string a compound string base dobj decodes string case octets into nmod into decodes octets p b note b this method seamlessly handles data encoded in url safe or normal mode root ROOT b compound b b compound b note det method this nsubj handles method advmod handles seamlessly acl relcl b handles dobj handles data acl data encoded case mode in compound mode url amod mode safe cc safe or conj or safe normal amod mode normal nmod in encoded mode p param base string root ROOT string compound string param compound string base string containing base data root ROOT string acl string containing compound data base dobj containing data return array containing decoded data root ROOT array compound array return acl array containing amod data decoded dobj containing data since public NN static JJ byte NN decode VB base NN root ROOT decode dobj decode base final JJ string NN base NN string NN root ROOT string compound string base return NN new JJ base NN decode VB base NN string NN root ROOT string compound string base containing return ANTONYM ANTONYM decodes encoded ANTONYM ANTONYM encoded decoded ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/util/codec/binary/Base64.java,675
COMMENT sets the flag if parameter names are to be converted to lower case when name value pairs are parsed param b code true if parameter names are to be converted to lower case when name value pairs are parsed code false otherwise FUNCTION SPECIFIER public TYPE void NAME void NAME set lower case names PARAMETER LIST boolean b PARAMETER boolean b TYPE boolean NAME boolean NAME b BLOCK EXPR this lower case names b NAME this lower case names NAME this NAME lower case names NAME b sets the flag if parameter names are to be converted to lower case when root ROOT sets det flag the dobj sets flag mark are if compound names parameter nsubj are names nsubjpass xsubj converted names advcl if sets are mark converted to auxpass converted be xcomp are converted case case to amod case lower nmod to converted case dep sets when name value pairs are parsed root ROOT parsed compound pairs name compound pairs value nsubjpass parsed pairs auxpass parsed are param b code true if parameter names are to be root ROOT code compound code param compound code b amod code true mark are if compound names parameter nsubj are names nsubj xsubj be names advcl if true are mark be to xcomp are be converted to lower case when name value pairs are parsed root ROOT converted case case to amod case lower nmod to converted case advmod parsed when compound pairs name compound pairs value nsubjpass parsed pairs auxpass parsed are advcl converted parsed code false otherwise root ROOT false nsubj false code advmod false otherwise public NN void NN set VBN lower JJR case NN names NNS root ROOT set amod names lower compound names case dobj set names boolean NN b NN this DT lower JJR case NN names NNS b NN are name ANTONYM ANTONYM be name ANTONYM ANTONYM lower name ANTONYM ANTONYM lower names ANTONYM ANTONYM names are ANTONYM ANTONYM names be ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/util/http/fileupload/ParameterParser.java,215
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE object NAME object NAME get value PARAMETER LIST el context context PARAMETER el context context TYPE el context NAME el context NAME context BLOCK EXPR context notify before evaluation get expression string CALL context notify before evaluation get expression string NAME context notify before evaluation NAME context NAME notify before evaluation ARGUMENT LIST ARGUMENT EXPR get expression string CALL get expression string NAME get expression string ARGUMENT LIST DECL STMT TYPE object NAME object NAME result IF if this expected type null result context convert to type this value this expected type else result this value CONDITION this expected type null EXPR this expected type null NAME this expected type NAME this NAME expected type THEN result context convert to type this value this expected type BLOCK EXPR result context convert to type this value this expected type NAME result CALL context convert to type this value this expected type NAME context convert to type NAME context NAME convert to type ARGUMENT LIST ARGUMENT EXPR this value NAME this value NAME this NAME value ARGUMENT EXPR this expected type NAME this expected type NAME this NAME expected type ELSE else result this value BLOCK EXPR result this value NAME result NAME this value NAME this NAME value EXPR context notify after evaluation get expression string CALL context notify after evaluation get expression string NAME context notify after evaluation NAME context NAME notify after evaluation ARGUMENT LIST ARGUMENT EXPR get expression string CALL get expression string NAME get expression string ARGUMENT LIST RETURN return result EXPR result NAME result override NN public NN object NN get VB value NN root ROOT get dobj get value el NN context NN root ROOT context compound context el context NN context NN notify VBP before IN evaluation NN root ROOT notify nsubj notify context case evaluation before nmod before notify evaluation get VB expression NN string NN root ROOT get compound string expression dobj get string object NN result NN if IN this DT expected VBN type NN null JJ result NN context NN convert VBP to TO type NN root ROOT convert nsubj convert context case type to nmod to convert type this DT value NN this DT expected VBN type NN else RB result NN this DT value NN context NN notify VB after IN evaluation NN root ROOT notify nsubj notify context case evaluation after nmod after notify evaluation get VB expression NN string NN root ROOT get compound string expression dobj get string return NN result NN,1,B7,tomcat/java/org/apache/el/ValueExpressionLiteral.java,51
COMMENT implementation is only concerned with the keys DECL STMT SPECIFIER private TYPE final map t t SPECIFIER final NAME map t t NAME map ARGUMENT LIST ARGUMENT NAME t ARGUMENT NAME t NAME cache implementation is only concerned with the keys root ROOT concerned nsubjpass concerned implementation auxpass concerned is advmod concerned only case keys with det keys the nmod with concerned keys private JJ final JJ map NN t NN t NN cache NN is map ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/filters/CsrfPreventionFilter.java,218
COMMENT do processing stats default off DECL STMT SPECIFIER protected TYPE long NAME long NAME nr of filter requests INIT EXPR do processing stats default off root ROOT do dobj do processing nsubj default stats ccomp processing default compound prt default off protected VBN long RB nr NN of IN filter NN requests NNS root ROOT nr case requests of compound requests filter nmod of nr requests,0,N/A,tomcat/java/org/apache/catalina/ha/tcp/ReplicationValve.java,100
COMMENT registry enums DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME key enumerate sub keys INIT x EXPR x registry enums root ROOT enums compound enums registry public NN static JJ final JJ int NN key JJ enumerate VB sub NN keys NNS root ROOT key dep key enumerate compound keys sub dobj enumerate keys x NN x key ANTONYM ANTONYM,1,E1,tomcat/java/org/apache/tomcat/jni/Registry.java,36
COMMENT cache for poller events DECL STMT SPECIFIER private TYPE synchronized stack poller event NAME synchronized stack poller event NAME synchronized stack ARGUMENT LIST ARGUMENT NAME poller event NAME event cache cache for poller events root ROOT cache case events for compound events poller nmod for cache events private JJ synchronized VBN stack VBP root ROOT stack nsubj stack synchronized poller NN event NN root ROOT event compound event poller event NN cache NN root ROOT cache compound cache event,0,N/A,tomcat/java/org/apache/tomcat/util/net/NioEndpoint.java,97
COMMENT configuration attributes DECL STMT SPECIFIER private TYPE volatile long SPECIFIER volatile NAME long NAME max wait millis INIT base object pool config default max wait millis EXPR base object pool config default max wait millis NAME base object pool config default max wait millis NAME base object pool config NAME default max wait millis configuration attributes root ROOT attributes compound attributes configuration private JJ volatile JJ long RB max NN wait NN millis NN root ROOT millis compound millis max compound millis wait base NN object NN pool NN config NN default NN max NN wait NN millis NN root ROOT millis compound millis max compound millis wait,0,N/A,tomcat/java/org/apache/tomcat/dbcp/pool2/impl/BaseGenericObjectPool.java,67
DECL STMT SPECIFIER public TYPE int NAME int NAME iterations public NN int NN iterations NNS,1,E1,tomcat/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/AlternateUsernameTest.java,92
COMMENT jsse and open ssl protocol names DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME ssl proto tl sv INIT tl sv EXPR tl sv jsse and open ssl protocol names root ROOT jsse cc jsse and amod names open compound names ssl compound names protocol conj and jsse names public NN static JJ final JJ string NN ssl NN proto NN tl NN sv NN root ROOT sv compound sv ssl compound sv proto compound sv tl tl NN sv NN root ROOT sv compound sv tl,0,N/A,tomcat/java/org/apache/tomcat/util/net/Constants.java,33
COMMENT return returns the unless condition FUNCTION SPECIFIER public TYPE string NAME string NAME get unless PARAMETER LIST BLOCK RETURN return unless condition EXPR unless condition NAME unless condition return returns the unless condition root ROOT returns nsubj returns return dobj returns the case condition unless nmod unless the condition public NN string NN get VB unless IN root ROOT get dep get unless return NN unless IN condition NN root ROOT condition case condition unless,0,N/A,tomcat/java/org/apache/catalina/ant/jmx/JMXAccessorCondition.java,136
DECL STMT SPECIFIER private TYPE char NAME char NAME char INDEX NAME password private JJ char NN password NN,1,D1,tomcat/java/javax/security/auth/message/callback/PasswordValidationCallback.java,32
DECL STMT SPECIFIER private TYPE final page info SPECIFIER final NAME page info NAME page info private JJ final JJ page NN info NN root ROOT info compound info page page NN info NN root ROOT info compound info page,0,N/A,tomcat/java/org/apache/jasper/compiler/PageDataImpl.java,107
COMMENT this method is invoked by a connection pool when the pool is closed interceptor classes can override this method if they keep static variables or other tracking means around b this method is only invoked on a single instance of the interceptor and not on every instance created b param pool the pool that is being closed FUNCTION SPECIFIER public TYPE void NAME void NAME pool closed PARAMETER LIST connection pool pool PARAMETER connection pool pool TYPE connection pool NAME connection pool NAME pool BLOCK COMMENT noop this method is invoked by a connection pool when the pool is closed root ROOT invoked det method this nsubjpass invoked method auxpass invoked is case pool by det pool a compound pool connection nmod agent invoked pool advmod closed when det pool the nsubjpass closed pool auxpass closed is advcl invoked closed interceptor classes can override this method if they keep static root ROOT override compound classes interceptor nsubj override classes aux override can det method this dobj override method mark keep if nsubj keep they advcl if override keep xcomp keep static variables or other tracking means around root ROOT means nsubj means variables cc variables or amod tracking other conj or variables tracking nsubj means tracking advmod means around b this method is only invoked on a single instance of the interceptor and not on every instance created b root ROOT b det method this nsubjpass invoked method nsubjpass invoked method auxpass invoked is advmod invoked only acl relcl b invoked acl relcl b invoked conj and invoked invoked case instance on det instance a amod instance single nmod on invoked instance case interceptor of det interceptor the nmod of instance interceptor cc invoked and neg instance not case instance on det instance every nmod on invoked instance acl instance created dobj created b b this method is only invoked on a single instance of the interceptor and not on every instance created b root ROOT b det method this nsubjpass invoked method nsubjpass invoked method auxpass invoked is advmod invoked only acl relcl b invoked acl relcl b invoked conj and invoked invoked case instance on det instance a amod instance single nmod on invoked instance case interceptor of det interceptor the nmod of instance interceptor cc invoked and neg instance not case instance on det instance every nmod on invoked instance acl instance created dobj created b param pool the pool that is being closed root ROOT pool compound pool param det pool the dep pool pool nsubjpass closed pool ref pool that aux closed is auxpass closed being acl relcl pool closed public NN void NN pool NN closed VBD root ROOT closed nsubj closed pool connection NN pool NN root ROOT pool compound pool connection pool NN noop single public ANTONYM ANTONYM,0,N/A,tomcat/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/JdbcInterceptor.java,224
COMMENT coordination request DECL STMT SPECIFIER protected SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME coord request INIT new byte EXPR new byte NAME byte NAME byte INDEX BLOCK EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR EXPR coordination request root ROOT request compound request coordination protected VBN static JJ final JJ byte NN coord NN request NN root ROOT request compound request coord new JJ byte NN,1,D1,tomcat/java/org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,141
COMMENT pool properties DECL STMT SPECIFIER private TYPE long NAME long NAME default soft min evictable idle time millis INIT base object pool config default soft min evictable idle time millis EXPR base object pool config default soft min evictable idle time millis NAME base object pool config default soft min evictable idle time millis NAME base object pool config NAME default soft min evictable idle time millis pool properties root ROOT properties compound properties pool private JJ long RB default NN soft JJ min NN evictable JJ idle JJ time NN millis IN root ROOT min compound min default amod min soft amod time evictable amod time idle dep min time dep min millis base NN object NN pool NN config NN default NN soft JJ min NN evictable JJ idle JJ time NN millis IN root ROOT min amod min soft amod time evictable amod time idle dep min time dep min millis soft idle ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/dbcp/dbcp2/datasources/InstanceKeyDataSource.java,144
COMMENT should tomcat attempt to terminate threads that have been started by the web application stopping threads is performed via the deprecated for good reason code thread stop code method and is likely to result in instability as such enabling this should be viewed as an option of last resort in a development environment and is not recommended in a production environment if not specified the default value of code false code will be used DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME clear references stop threads INIT false EXPR false should tomcat attempt to terminate threads that have been started by the root ROOT tomcat aux tomcat should dobj tomcat attempt mark terminate to acl to attempt terminate dobj terminate threads nsubjpass started threads ref threads that aux started have auxpass started been acl relcl threads started case the by nmod agent started the web application stopping threads is performed via the deprecated for root ROOT performed compound application web nsubjpass performed application acl application stopping dobj stopping threads auxpass performed is case deprecated via det deprecated the nmod via performed deprecated dep deprecated for web application stopping threads is performed via the deprecated for root ROOT performed compound application web nsubjpass performed application acl application stopping dobj stopping threads auxpass performed is case deprecated via det deprecated the nmod via performed deprecated dep deprecated for good reason code thread stop code method and is likely to result in root ROOT reason amod reason good compound thread code nsubj stop thread nsubj likely thread nsubj xsubj result thread acl relcl reason stop compound method code dobj stop method cc stop and cop likely is acl relcl reason likely conj and stop likely mark result to xcomp likely result dep result in instability as such enabling this should be viewed as an option of last root ROOT instability case enabling as amod enabling such nmod as instability enabling nsubjpass viewed this aux viewed should auxpass viewed be ccomp enabling viewed case option as det option an nmod as viewed option case last of nmod of option last instability as such enabling this should be viewed as an option of last root ROOT instability case enabling as amod enabling such nmod as instability enabling nsubjpass viewed this aux viewed should auxpass viewed be ccomp enabling viewed case option as det option an nmod as viewed option case last of nmod of option last resort in a development environment and is not recommended in a root ROOT resort case environment in det environment a compound environment development nmod in resort environment cc resort and auxpass recommended is neg recommended not conj and resort recommended case a in nmod in recommended a production environment if not specified the default value of root ROOT environment compound environment production mark specified if neg specified not acl if environment specified det value the compound value default dobj specified value dep value of production environment if not specified the default value of root ROOT environment compound environment production mark specified if neg specified not acl if environment specified det value the compound value default dobj specified value dep value of code false code will be used root ROOT used compound code code amod code false nsubjpass used code aux used will auxpass used be private JJ boolean NN clear JJ references NNS stop VBP threads NNS root ROOT stop amod references clear nsubj stop references dobj stop threads false JJ attempt started ANTONYM ANTONYM be last ANTONYM ANTONYM been last ANTONYM ANTONYM false good ANTONYM ANTONYM have started ANTONYM ANTONYM have viewed ANTONYM ANTONYM is last ANTONYM ANTONYM likely last ANTONYM ANTONYM result will ANTONYM ANTONYM started last ANTONYM ANTONYM started stop ANTONYM ANTONYM started stopping ANTONYM ANTONYM stop last ANTONYM ANTONYM stopping last ANTONYM ANTONYM terminate attempt ANTONYM ANTONYM terminate have ANTONYM ANTONYM terminate started ANTONYM ANTONYM terminate used ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/loader/WebappClassLoaderBase.java,337
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME get PARAMETER LIST long timeout time unit unit PARAMETER long timeout TYPE long NAME long NAME timeout PARAMETER time unit unit TYPE time unit NAME time unit NAME unit THROWS throws interrupted exception execution exception timeout exception ARGUMENT EXPR interrupted exception NAME interrupted exception ARGUMENT EXPR execution exception NAME execution exception ARGUMENT EXPR timeout exception NAME timeout exception BLOCK RETURN return null EXPR null override NN public NN void NN get VB long RB timeout NN time NN unit NN root ROOT unit compound unit time unit NN throws VBZ interrupted JJ exception NN root ROOT exception amod exception interrupted execution NN exception NN root ROOT exception compound exception execution timeout NN exception NN root ROOT exception compound exception timeout return NN null JJ get throws ANTONYM ANTONYM,1,B3,tomcat/java/org/apache/tomcat/websocket/AsyncChannelWrapperNonSecure.java,105
COMMENT see is fast fail validation param fast fail validation true means connections created by this factory will fast fail validation since DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME pool statements INIT false EXPR false see is fast fail validation root ROOT fast nsubj fast see cop fast is dep fast fail dobj fail validation param fast fail validation true means connections created by this factory will root ROOT fail nsubj fail param advmod fail fast compound connections validation amod connections true compound connections means dobj fail connections acl connections created case factory by det factory this nmod by created factory punct fail will fast fail validation root ROOT fail advmod fail fast dobj fail validation since private JJ boolean NN pool NN statements NNS root ROOT statements compound statements pool false JJ true false ANTONYM ANTONYM true fast SYNONYM SYNONYM,0,N/A,tomcat/java/org/apache/tomcat/dbcp/dbcp2/PoolableConnectionFactory.java,473
COMMENT validate the usage of security role names in the web application deployment descriptor if any problems are found issue warning messages for backwards compatibility and add the missing roles to make these problems fatal instead simply set the code ok code instance variable to code false code as well FUNCTION SPECIFIER protected TYPE void NAME void NAME validate security roles PARAMETER LIST BLOCK COMMENT check role names used in security constraint elements DECL STMT TYPE security constraint NAME security constraint NAME constraints NAME constraints INDEX INIT context find constraints EXPR context find constraints CALL context find constraints NAME context find constraints NAME context NAME find constraints ARGUMENT LIST FOR for int i i constraints length i string roles constraints i find auth roles for int j j roles length j if equals roles j context find security role roles j log warn sm get string context config role auth roles j context add security role roles j CONTROL int i i constraints length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i constraints length EXPR i constraints length NAME i NAME constraints length NAME constraints NAME length INCR i EXPR i NAME i BLOCK DECL STMT TYPE string NAME string NAME roles NAME roles INDEX INIT constraints i find auth roles EXPR constraints i find auth roles NAME constraints i NAME constraints INDEX i EXPR i NAME i CALL find auth roles NAME find auth roles ARGUMENT LIST FOR for int j j roles length j if equals roles j context find security role roles j log warn sm get string context config role auth roles j context add security role roles j CONTROL int j j roles length j INIT int j TYPE int NAME int NAME j INIT EXPR CONDITION j roles length EXPR j roles length NAME j NAME roles length NAME roles NAME length INCR j EXPR j NAME j BLOCK IF if equals roles j context find security role roles j log warn sm get string context config role auth roles j context add security role roles j CONDITION equals roles j context find security role roles j EXPR equals roles j context find security role roles j CALL equals roles j NAME equals ARGUMENT LIST ARGUMENT EXPR roles j NAME roles j NAME roles INDEX j EXPR j NAME j CALL context find security role roles j NAME context find security role NAME context NAME find security role ARGUMENT LIST ARGUMENT EXPR roles j NAME roles j NAME roles INDEX j EXPR j NAME j THEN log warn sm get string context config role auth roles j context add security role roles j BLOCK EXPR log warn sm get string context config role auth roles j CALL log warn sm get string context config role auth roles j NAME log warn NAME log NAME warn ARGUMENT LIST ARGUMENT EXPR sm get string context config role auth roles j CALL sm get string context config role auth roles j NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR context config role auth ARGUMENT EXPR roles j NAME roles j NAME roles INDEX j EXPR j NAME j EXPR context add security role roles j CALL context add security role roles j NAME context add security role NAME context NAME add security role ARGUMENT LIST ARGUMENT EXPR roles j NAME roles j NAME roles INDEX j EXPR j NAME j COMMENT check role names used in servlet elements DECL STMT TYPE container NAME container NAME wrappers NAME wrappers INDEX INIT context find children EXPR context find children CALL context find children NAME context find children NAME context NAME find children ARGUMENT LIST FOR for int i i wrappers length i wrapper wrapper wrapper wrappers i string run as wrapper get run as if run as null context find security role run as log warn sm get string context config role runas run as context add security role run as string names wrapper find security references for int j j names length j string link wrapper find security reference names j if link null context find security role link log warn sm get string context config role link link context add security role link CONTROL int i i wrappers length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i wrappers length EXPR i wrappers length NAME i NAME wrappers length NAME wrappers NAME length INCR i EXPR i NAME i BLOCK DECL STMT TYPE wrapper NAME wrapper NAME wrapper INIT wrapper wrappers i EXPR wrapper wrappers i NAME wrapper NAME wrappers i NAME wrappers INDEX i EXPR i NAME i DECL STMT TYPE string NAME string NAME run as INIT wrapper get run as EXPR wrapper get run as CALL wrapper get run as NAME wrapper get run as NAME wrapper NAME get run as ARGUMENT LIST IF if run as null context find security role run as log warn sm get string context config role runas run as context add security role run as CONDITION run as null context find security role run as EXPR run as null context find security role run as NAME run as CALL context find security role run as NAME context find security role NAME context NAME find security role ARGUMENT LIST ARGUMENT EXPR run as NAME run as THEN log warn sm get string context config role runas run as context add security role run as BLOCK EXPR log warn sm get string context config role runas run as CALL log warn sm get string context config role runas run as NAME log warn NAME log NAME warn ARGUMENT LIST ARGUMENT EXPR sm get string context config role runas run as CALL sm get string context config role runas run as NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR context config role runas ARGUMENT EXPR run as NAME run as EXPR context add security role run as CALL context add security role run as NAME context add security role NAME context NAME add security role ARGUMENT LIST ARGUMENT EXPR run as NAME run as DECL STMT TYPE string NAME string NAME names NAME names INDEX INIT wrapper find security references EXPR wrapper find security references CALL wrapper find security references NAME wrapper find security references NAME wrapper NAME find security references ARGUMENT LIST FOR for int j j names length j string link wrapper find security reference names j if link null context find security role link log warn sm get string context config role link link context add security role link CONTROL int j j names length j INIT int j TYPE int NAME int NAME j INIT EXPR CONDITION j names length EXPR j names length NAME j NAME names length NAME names NAME length INCR j EXPR j NAME j BLOCK DECL STMT TYPE string NAME string NAME link INIT wrapper find security reference names j EXPR wrapper find security reference names j CALL wrapper find security reference names j NAME wrapper find security reference NAME wrapper NAME find security reference ARGUMENT LIST ARGUMENT EXPR names j NAME names j NAME names INDEX j EXPR j NAME j IF if link null context find security role link log warn sm get string context config role link link context add security role link CONDITION link null context find security role link EXPR link null context find security role link NAME link CALL context find security role link NAME context find security role NAME context NAME find security role ARGUMENT LIST ARGUMENT EXPR link NAME link THEN log warn sm get string context config role link link context add security role link BLOCK EXPR log warn sm get string context config role link link CALL log warn sm get string context config role link link NAME log warn NAME log NAME warn ARGUMENT LIST ARGUMENT EXPR sm get string context config role link link CALL sm get string context config role link link NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR context config role link ARGUMENT EXPR link NAME link EXPR context add security role link CALL context add security role link NAME context add security role NAME context NAME add security role ARGUMENT LIST ARGUMENT EXPR link NAME link validate the usage of security role names in the web application root ROOT validate det usage the dobj validate usage case names of compound names security compound names role nmod of usage names case application in det application the compound application web nmod in usage application deployment descriptor if any problems are found issue warning root ROOT descriptor compound descriptor deployment mark found if det problems any nsubjpass found problems auxpass found are advcl if descriptor found compound warning issue dobj found warning deployment descriptor if any problems are found issue warning root ROOT descriptor compound descriptor deployment mark found if det problems any nsubjpass found problems auxpass found are advcl if descriptor found compound warning issue dobj found warning messages for backwards compatibility and add the missing roles root ROOT messages case compatibility for advmod compatibility backwards nmod for messages compatibility cc messages and conj and messages add det roles the amod roles missing dobj add roles to make these problems fatal instead simply set the code ok code root ROOT make mark make to det problems these nsubj fatal problems xcomp make fatal advmod set instead advmod set simply ccomp make set det code the compound code code compound code ok dobj set code instance variable to code false code as well root ROOT variable compound variable instance case code to compound code code amod code false nmod to variable code advmod variable as mwe as well protected VBN void NN validate VB security NN roles NNS root ROOT validate compound roles security dobj validate roles check role names used in security constraint elements root ROOT check compound names role dobj check names acl names used case elements in compound elements security compound elements constraint nmod in used elements security NN constraint NN root ROOT constraint compound constraint security constraints NNS context NN find VB constraints NNS root ROOT find nsubj find context dobj find constraints for IN int NN i LS i LS constraints NNS length NN root ROOT length compound length constraints i LS string NN roles NNS constraints NNS i LS find VB auth JJ roles NNS root ROOT find amod roles auth dobj find roles for IN int NN j NN j NN roles NNS length NN root ROOT length compound length roles j NN if IN equals VBZ roles NNS j NN context NN find VB security NN role NN root ROOT find nsubj find context compound role security dobj find role roles NNS j NN log NN warn VBP root ROOT warn nsubj warn log sm NN get VB string NN root ROOT get nsubj get sm dobj get string context NN config NN role NN auth IN root ROOT role compound role context compound role config dep role auth roles NNS j NN context NN add VB security NN role NN root ROOT add nsubj add context compound role security dobj add role roles NNS j NN check role names used in servlet elements root ROOT check compound names role dobj check names acl names used case elements in amod elements servlet nmod in used elements container NN wrappers NNS context NN find VB children NNS root ROOT find nsubj find context dobj find children for IN int NN i LS i LS wrappers NNS length NN root ROOT length compound length wrappers i LS wrapper NN wrapper NN wrapper NN wrappers NNS i LS string NN run VBN as IN root ROOT run dep run as wrapper NN get VB run VBN as IN root ROOT run nsubjpass run wrapper auxpass run get dep run as if IN run VBN as IN root ROOT run dep run as null JJ context NN find VB security NN role NN root ROOT find nsubj find context compound role security dobj find role run VBN as IN root ROOT run dep run as log NN warn VBP root ROOT warn nsubj warn log sm NN get VB string NN root ROOT get nsubj get sm dobj get string context NN config NN role NN runas NNS root ROOT runas compound runas context compound runas config compound runas role run VBN as IN root ROOT run dep run as context NN add VB security NN role NN root ROOT add nsubj add context compound role security dobj add role run VBN as IN root ROOT run dep run as string NN names NNS wrapper NN find VB security NN references NNS root ROOT find nsubj find wrapper compound references security dobj find references for IN int NN j NN j NN names NNS length NN root ROOT length compound length names j NN string NN link NN wrapper NN find VB security NN reference NN root ROOT find nsubj find wrapper compound reference security dobj find reference names NNS j NN if IN link NN null JJ context NN find VB security NN role NN root ROOT find nsubj find context compound role security dobj find role link NN log NN warn VBP root ROOT warn nsubj warn log sm NN get VB string NN root ROOT get nsubj get sm dobj get string context NN config NN role NN link NN root ROOT link compound link context compound link config compound link role link NN context NN add VB security NN role NN root ROOT add nsubj add context compound role security dobj add role link NN are found ANTONYM ANTONYM are make ANTONYM ANTONYM found make ANTONYM ANTONYM found missing ANTONYM ANTONYM found set ANTONYM ANTONYM issue add ANTONYM ANTONYM make set ANTONYM ANTONYM missing make ANTONYM ANTONYM names are ANTONYM ANTONYM names found ANTONYM ANTONYM usage role ANTONYM ANTONYM usage roles ANTONYM ANTONYM validate void ANTONYM ANTONYM false void SYNONYM SYNONYM,0,N/A,tomcat/java/org/apache/catalina/startup/ContextConfig.java,1026
FUNCTION SPECIFIER private TYPE string NAME string NAME get credentials PARAMETER LIST BLOCK RETURN return credentials EXPR credentials NAME credentials private JJ string NN get VB credentials NNS root ROOT get dobj get credentials return NN credentials NNS,1,B6,tomcat/test/org/apache/catalina/authenticator/TestSSOnonLoginAndBasicAuthenticator.java,683
COMMENT cache for char chunk DECL STMT SPECIFIER protected SPECIFIER static TYPE char entry NAME char entry NAME char entry INDEX NAME cc cache INIT null EXPR null cache for char chunk root ROOT cache case chunk for compound chunk char nmod for cache chunk protected VBN static JJ char NN entry NN root ROOT entry compound entry char cc NN cache NN root ROOT cache compound cache cc null JJ,0,N/A,tomcat/java/org/apache/tomcat/util/buf/StringCache.java,101
COMMENT a byte sequence that marks the end of code header part code code crlfcrlf code DECL STMT SPECIFIER protected SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME header separator INIT cr lf cr lf EXPR cr lf cr lf BLOCK EXPR cr NAME cr EXPR lf NAME lf EXPR cr NAME cr EXPR lf NAME lf a byte sequence that marks the end of code header part code root ROOT sequence det sequence a compound sequence byte nsubj marks sequence ref sequence that acl relcl sequence marks det end the dobj marks end case code of compound code code compound code header compound code part nmod of end code code crlfcrlf code root ROOT code compound code code compound code crlfcrlf protected VBN static JJ final JJ byte NN header NN separator NN root ROOT separator compound separator header cr NN lf NN cr NN lf NN end part ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/util/http/fileupload/MultipartStream.java,186
COMMENT apr feature macros DECL STMT SPECIFIER public SPECIFIER static TYPE boolean NAME boolean NAME apr has threads INIT false EXPR false apr feature macros root ROOT macros compound macros apr compound macros feature public NN static JJ boolean NN apr NN has VBZ threads NNS root ROOT has nsubj has apr dobj has threads false JJ,0,N/A,tomcat/java/org/apache/tomcat/jni/Library.java,123
DECL STMT SPECIFIER private TYPE byte buffer NAME byte buffer NAME bb INIT null EXPR null private JJ byte NN buffer NN root ROOT buffer compound buffer byte bb NN null JJ,0,N/A,tomcat/java/org/apache/tomcat/util/buf/C2BConverter.java,33
COMMENT enables the rmi target memory leak detection to be controlled this is necessary since the detection can only work on java if some of the modularity checks are disabled DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME clear references rmi targets INIT true EXPR true enables the rmi target memory leak detection to be controlled this is root ROOT enables det detection the compound detection rmi compound detection target compound detection memory compound detection leak dobj enables detection nsubjpass xsubj controlled detection mark controlled to auxpass controlled be xcomp enables controlled dobj controlled this dep enables is enables the rmi target memory leak detection to be controlled this is root ROOT enables det detection the compound detection rmi compound detection target compound detection memory compound detection leak dobj enables detection nsubjpass xsubj controlled detection mark controlled to auxpass controlled be xcomp enables controlled dobj controlled this dep enables is necessary since the detection can only work on java if some of the root ROOT necessary mark work since det detection the nsubj work detection aux work can advmod work only advcl since necessary work case java on nmod on work java advmod work if dep if some case the of nmod of some the modularity checks are disabled root ROOT disabled compound checks modularity nsubj disabled checks cop disabled are private JJ boolean NN clear JJ references NNS rmi VBP targets NNS root ROOT rmi amod references clear nsubj rmi references dobj rmi targets true JJ controlled work ANTONYM ANTONYM enables disabled ANTONYM ANTONYM target can ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/loader/WebappClassLoaderBase.java,326
COMMENT do processing stats default off DECL STMT SPECIFIER protected TYPE long NAME long NAME nr of cross context send requests INIT EXPR do processing stats default off root ROOT do dobj do processing nsubj default stats ccomp processing default compound prt default off protected VBN long RB nr NN of IN cross JJ context NN send VB requests NNS root ROOT send nsubj send nr case context of amod context cross nmod of nr context dobj send requests,0,N/A,tomcat/java/org/apache/catalina/ha/tcp/ReplicationValve.java,102
COMMENT second formatted in most recent invocation DECL STMT SPECIFIER private TYPE long NAME long NAME previous seconds INIT long min value EXPR long min value NAME long min value NAME long NAME min value second formatted in most recent invocation root ROOT formatted advmod formatted second case invocation in advmod recent most amod invocation recent nmod in formatted invocation private JJ long RB previous JJ seconds NNS root ROOT seconds amod seconds previous long RB min NN value NN second min ANTONYM ANTONYM,1,E1,tomcat/java/org/apache/juli/DateFormatCache.java,105
DECL STMT SPECIFIER private TYPE final string SPECIFIER final NAME string NAME bytes private JJ final JJ string NN bytes NNS,1,E1,tomcat/java/org/apache/tomcat/util/bcel/classfile/ConstantUtf8.java,33
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME default resource link factory INIT package resource link factory EXPR package resource link factory NAME package public NN static JJ final JJ string NN default NN resource NN link NN factory NN root ROOT factory compound factory default compound factory resource compound factory link package NN resource NN link NN factory NN root ROOT factory compound factory resource compound factory link,0,N/A,tomcat/java/org/apache/naming/factory/Constants.java,33
COMMENT x a ldr DECL STMT SPECIFIER protected TYPE byte NAME byte NAME byte INDEX NAME type x a ldr root ROOT ldr case ldr x det ldr a protected VBN byte NN type NN,1,D1,tomcat/java/org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,643
DECL STMT SPECIFIER private TYPE char NAME char NAME char INDEX NAME cb private JJ char NN cb NN,0,N/A,tomcat/java/org/apache/jasper/runtime/BodyContentImpl.java,45
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME var alias INIT the alias attribute of the variable directive EXPR the alias attribute of the variable directive private JJ static JJ final JJ string NN var NN alias NNS root ROOT alias compound alias var the DT alias IN attribute NN of IN the DT variable JJ directive NN,0,N/A,tomcat/java/org/apache/jasper/compiler/TagFileProcessor.java,126
DECL STMT SPECIFIER private TYPE final double SPECIFIER final NAME double NAME bytes private JJ final JJ double RB bytes NNS,1,E1,tomcat/java/org/apache/tomcat/util/bcel/classfile/ConstantDouble.java,33
COMMENT op codes DECL STMT SPECIFIER public SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME opcode ping INIT x EXPR x op codes root ROOT codes compound codes op public NN static JJ final JJ byte NN opcode NN ping NN root ROOT ping compound ping opcode x NN,0,N/A,tomcat/java/org/apache/tomcat/websocket/Constants.java,35
COMMENT the generated string for the roles prepared statement DECL STMT SPECIFIER private TYPE string NAME string NAME prepared roles INIT null EXPR null the generated string for the roles prepared statement root ROOT string det string the amod string generated case roles for det roles the nmod for string roles amod statement prepared dep roles statement private JJ string NN prepared JJ roles NNS root ROOT roles amod roles prepared null JJ,0,N/A,tomcat/java/org/apache/catalina/realm/DataSourceRealm.java,53
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME is mandatory INIT javax security auth message message policy is mandatory EXPR javax security auth message message policy is mandatory public NN static JJ final JJ string NN is VBZ mandatory JJ root ROOT mandatory cop mandatory is javax NN security NN auth NN message NN message NN policy NN is VBZ mandatory JJ root ROOT mandatory compound policy javax compound policy security compound policy auth compound policy message compound policy message nsubj mandatory policy cop mandatory is,1,D2,tomcat/java/org/apache/catalina/authenticator/jaspic/MessageInfoImpl.java,31
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE void NAME void NAME to string append fields PARAMETER LIST final string builder builder PARAMETER final string builder builder TYPE final string builder SPECIFIER final NAME string builder NAME builder BLOCK EXPR builder append closed CALL builder append closed NAME builder append NAME builder NAME append ARGUMENT LIST ARGUMENT EXPR closed EXPR builder append closed CALL builder append closed NAME builder append NAME builder NAME append ARGUMENT LIST ARGUMENT EXPR closed NAME closed override NN protected VBN void NN to TO string VB append NN fields NNS root ROOT string mark string to compound fields append dobj string fields final JJ string NN builder NN root ROOT builder compound builder string builder NN builder NN append IN root ROOT builder dep builder append closed VBN builder NN append IN root ROOT builder dep builder append closed VBN,1,B5,tomcat/java/org/apache/tomcat/dbcp/pool2/BaseObjectPool.java,120
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME host context xml INIT context xml default EXPR context xml default public NN static JJ final JJ string NN host NN context NN xml NN root ROOT xml compound xml host compound xml context context NN xml NN default NN,0,N/A,tomcat/java/org/apache/catalina/startup/Constants.java,33
COMMENT swap idle sessions out to store if too many are active FUNCTION SPECIFIER protected TYPE void NAME void NAME process max active swaps PARAMETER LIST BLOCK IF if get state is available get max active sessions return CONDITION get state is available get max active sessions EXPR get state is available get max active sessions CALL get state NAME get state ARGUMENT LIST CALL is available NAME is available ARGUMENT LIST CALL get max active sessions NAME get max active sessions ARGUMENT LIST THEN return BLOCK RETURN return DECL STMT TYPE session NAME session NAME sessions NAME sessions INDEX INIT find sessions EXPR find sessions CALL find sessions NAME find sessions ARGUMENT LIST COMMENT fixme smarter algorithm lru DECL STMT TYPE int NAME int NAME limit INIT int get max active sessions EXPR int get max active sessions CALL int get max active sessions NAME int ARGUMENT LIST ARGUMENT EXPR get max active sessions CALL get max active sessions NAME get max active sessions ARGUMENT LIST IF if limit sessions length return CONDITION limit sessions length EXPR limit sessions length NAME limit NAME sessions length NAME sessions NAME length THEN return BLOCK RETURN return IF if log is debug enabled log debug sm get string persistent manager too many active integer value of sessions length CONDITION log is debug enabled EXPR log is debug enabled CALL log is debug enabled NAME log is debug enabled NAME log NAME is debug enabled ARGUMENT LIST THEN log debug sm get string persistent manager too many active integer value of sessions length BLOCK EXPR log debug sm get string persistent manager too many active integer value of sessions length CALL log debug sm get string persistent manager too many active integer value of sessions length NAME log debug NAME log NAME debug ARGUMENT LIST ARGUMENT EXPR sm get string persistent manager too many active integer value of sessions length CALL sm get string persistent manager too many active integer value of sessions length NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR persistent manager too many active ARGUMENT EXPR integer value of sessions length CALL integer value of sessions length NAME integer value of NAME integer NAME value of ARGUMENT LIST ARGUMENT EXPR sessions length NAME sessions length NAME sessions NAME length DECL STMT TYPE int NAME int NAME toswap INIT sessions length limit EXPR sessions length limit NAME sessions length NAME sessions NAME length NAME limit FOR for int i i sessions length toswap i standard session session standard session sessions i synchronized session int time idle int session get idle time internal l if time idle min idle swap if session access count null session access count get session is currently being accessed skip it continue if log is debug enabled log debug sm get string persistent manager swap too many active session get id internal integer value of time idle try swap out session catch io exception e this is logged in write session toswap CONTROL int i i sessions length toswap i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i sessions length toswap EXPR i sessions length toswap NAME i sessions length toswap NAME i ARGUMENT LIST ARGUMENT NAME sessions length NAME sessions NAME length NAME toswap INCR i EXPR i NAME i BLOCK DECL STMT TYPE standard session NAME standard session NAME session INIT standard session sessions i EXPR standard session sessions i NAME standard session NAME sessions i NAME sessions INDEX i EXPR i NAME i SYNCHRONIZED synchronized session int time idle int session get idle time internal l if time idle min idle swap if session access count null session access count get session is currently being accessed skip it continue if log is debug enabled log debug sm get string persistent manager swap too many active session get id internal integer value of time idle try swap out session catch io exception e this is logged in write session toswap INIT session EXPR session NAME session BLOCK DECL STMT TYPE int NAME int NAME time idle INIT int session get idle time internal l EXPR int session get idle time internal l CALL int session get idle time internal l NAME int ARGUMENT LIST ARGUMENT EXPR session get idle time internal l CALL session get idle time internal NAME session get idle time internal NAME session NAME get idle time internal ARGUMENT LIST IF if time idle min idle swap if session access count null session access count get session is currently being accessed skip it continue if log is debug enabled log debug sm get string persistent manager swap too many active session get id internal integer value of time idle try swap out session catch io exception e this is logged in write session toswap CONDITION time idle min idle swap EXPR time idle min idle swap NAME time idle NAME min idle swap THEN if session access count null session access count get session is currently being accessed skip it continue if log is debug enabled log debug sm get string persistent manager swap too many active session get id internal integer value of time idle try swap out session catch io exception e this is logged in write session toswap BLOCK IF if session access count null session access count get session is currently being accessed skip it continue CONDITION session access count null session access count get EXPR session access count null session access count get NAME session access count NAME session NAME access count CALL session access count get NAME session access count get NAME session NAME access count NAME get ARGUMENT LIST THEN session is currently being accessed skip it continue BLOCK COMMENT session is currently being accessed skip it CONTINUE continue IF if log is debug enabled log debug sm get string persistent manager swap too many active session get id internal integer value of time idle CONDITION log is debug enabled EXPR log is debug enabled CALL log is debug enabled NAME log is debug enabled NAME log NAME is debug enabled ARGUMENT LIST THEN log debug sm get string persistent manager swap too many active session get id internal integer value of time idle BLOCK EXPR log debug sm get string persistent manager swap too many active session get id internal integer value of time idle CALL log debug sm get string persistent manager swap too many active session get id internal integer value of time idle NAME log debug NAME log NAME debug ARGUMENT LIST ARGUMENT EXPR sm get string persistent manager swap too many active session get id internal integer value of time idle CALL sm get string persistent manager swap too many active session get id internal integer value of time idle NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR persistent manager swap too many active ARGUMENT EXPR session get id internal CALL session get id internal NAME session get id internal NAME session NAME get id internal ARGUMENT LIST ARGUMENT EXPR integer value of time idle CALL integer value of time idle NAME integer value of NAME integer NAME value of ARGUMENT LIST ARGUMENT EXPR time idle NAME time idle TRY try swap out session catch io exception e this is logged in write session BLOCK EXPR swap out session CALL swap out session NAME swap out ARGUMENT LIST ARGUMENT EXPR session NAME session CATCH catch io exception e this is logged in write session PARAMETER LIST io exception e PARAMETER io exception e TYPE io exception NAME io exception NAME e BLOCK COMMENT this is logged in write session EXPR toswap NAME toswap swap idle sessions out to store if too many are active root ROOT sessions compound sessions swap amod sessions idle advmod store out mark store to acl to sessions store mark active if advmod many too nsubj active many cop active are advcl if store active protected VBN void NN process NN max NN active JJ swaps NNS root ROOT swaps compound swaps process compound swaps max amod swaps active if IN get VB state NN root ROOT get dobj get state is VBZ available JJ root ROOT available cop available is get VB max NN active JJ sessions NNS root ROOT get compound sessions max amod sessions active dobj get sessions return NN session NN sessions NNS find VB sessions NNS root ROOT find dobj find sessions fixme smarter algorithm lru root ROOT lru compound lru fixme amod lru smarter compound lru algorithm int NN limit NN int NN get VB max NN active JJ sessions NNS root ROOT get compound sessions max amod sessions active dobj get sessions if IN limit NN sessions NNS length NN root ROOT length compound length sessions return NN if IN log NN is VBZ debug NN enabled VBD root ROOT debug nsubj debug log cop debug is dep debug enabled log NN debug NN root ROOT debug compound debug log sm NN get VB string NN root ROOT get nsubj get sm dobj get string persistent JJ manager NN too RB many JJ active JJ root ROOT manager amod manager persistent advmod many too amod active many dep manager active integer NN value NN of IN root ROOT value compound value integer acl value of sessions NNS length NN root ROOT length compound length sessions int NN toswap NN sessions NNS length NN root ROOT length compound length sessions limit NN for IN int NN i LS i LS sessions NNS length NN root ROOT length compound length sessions toswap NN i LS standard JJ session NN root ROOT session amod session standard session NN standard JJ session NN root ROOT session amod session standard sessions NNS i LS synchronized VBN session NN int NN time NN idle JJ root ROOT idle nmod npmod idle time int NN session NN get VB idle JJ time NN internal JJ root ROOT get nsubj get session amod time idle nmod npmod internal time xcomp get internal l NN if IN time NN idle JJ root ROOT idle nmod npmod idle time min NN idle JJ swap NN root ROOT swap compound swap min amod swap idle if IN session NN access NN count NN root ROOT count compound count session compound count access null JJ session NN access NN count NN get VB root ROOT get compound count session compound count access nsubj get count session is currently being accessed skip it root ROOT accessed nsubjpass accessed session aux accessed is advmod accessed currently auxpass accessed being xcomp accessed skip dobj skip it continue VB if IN log NN is VBZ debug NN enabled VBD root ROOT debug nsubj debug log cop debug is dep debug enabled log NN debug NN root ROOT debug compound debug log sm NN get VB string NN root ROOT get nsubj get sm dobj get string persistent JJ manager NN swap NN too RB many JJ active JJ root ROOT swap amod swap persistent compound swap manager advmod many too amod active many dep swap active session NN get VB id JJ internal JJ root ROOT get nsubj get session amod internal id xcomp get internal integer NN value NN of IN root ROOT value compound value integer acl value of time NN idle JJ root ROOT idle nmod npmod idle time try VB swap NN out IN root ROOT swap compound prt swap out session NN catch NN io NN exception NN root ROOT exception compound exception io e SYM this is logged in write session root ROOT logged nsubjpass logged this auxpass logged is mark write in advcl in logged write dobj write session toswap NN active out ANTONYM ANTONYM idle active ANTONYM ANTONYM out idle ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/session/PersistentManagerBase.java,938
COMMENT max number of threads DECL STMT SPECIFIER protected TYPE int NAME int NAME max threads INIT EXPR max number of threads root ROOT number compound number max case threads of nmod of number threads protected VBN int NN max NN threads NNS root ROOT threads compound threads max,0,N/A,tomcat/java/org/apache/catalina/core/StandardThreadExecutor.java,54
COMMENT sets whether objects borrowed from the pool will be validated before being returned from the code borrow object code method validation is performed by the code validate object code method of the factory associated with the pool if the object fails to validate it will be removed from the pool and destroyed and a new attempt will be made to borrow an object from the pool param test on borrow code true code if objects should be validated before being returned from the code borrow object code method see get test on borrow FUNCTION SPECIFIER public SPECIFIER final TYPE void NAME void NAME set test on borrow PARAMETER LIST final boolean test on borrow PARAMETER final boolean test on borrow TYPE final boolean SPECIFIER final NAME boolean NAME test on borrow BLOCK EXPR this test on borrow test on borrow NAME this test on borrow NAME this NAME test on borrow NAME test on borrow sets whether objects borrowed from the pool will be validated before root ROOT sets mark validated whether nsubjpass validated objects acl objects borrowed case pool from det pool the nmod from borrowed pool aux validated will auxpass validated be ccomp sets validated advmod validated before being returned from the code borrow object code method validation is root ROOT is auxpass returned being csubj is returned case code from det code the nmod from returned code xcomp returned borrow compound validation object compound validation code compound validation method dobj borrow validation being returned from the code borrow object code method validation is root ROOT is auxpass returned being csubj is returned case code from det code the nmod from returned code xcomp returned borrow compound validation object compound validation code compound validation method dobj borrow validation performed by the code validate object code method of the factory root ROOT performed case method by det method the compound method code compound method validate compound method object compound method code nmod by performed method case factory of det factory the nmod of method factory associated with the pool if the object fails to validate it will be root ROOT associated case pool with det pool the nmod with associated pool mark fails if det object the nsubj fails object nsubj xsubj validate object advcl if associated fails mark validate to xcomp fails validate nsubj be it aux be will ccomp validate be associated with the pool if the object fails to validate it will be root ROOT associated case pool with det pool the nmod with associated pool mark fails if det object the nsubj fails object nsubj xsubj validate object advcl if associated fails mark validate to xcomp fails validate nsubj be it aux be will ccomp validate be removed from the pool and destroyed and a new attempt will be made to root ROOT removed case pool from det pool the nmod from removed pool cc removed and conj and removed destroyed cc destroyed and det attempt a amod attempt new nsubjpass made attempt aux made will auxpass made be conj and removed made conj and destroyed made nmod made to borrow an object from the pool root ROOT borrow det object an dobj borrow object case pool from det pool the nmod from borrow pool param test on borrow code true code if objects should be validated root ROOT test compound test param mark borrow on acl on test borrow compound code code amod code true dobj borrow code mark validated if nsubjpass validated objects aux validated should auxpass validated be advcl if borrow validated before being returned from the root ROOT returned mark returned before auxpass returned being case the from nmod from returned the code borrow object code method root ROOT borrow nsubj borrow code compound method object compound method code dobj borrow method see get test on borrow root ROOT see ccomp see get dobj get test mark borrow on acl on test borrow public NN final JJ void NN set VBN test NN on IN borrow VB root ROOT set dobj set test mark borrow on advcl on set borrow final JJ boolean NN test NN on IN borrow VB root ROOT test mark borrow on acl on test borrow this DT test NN on IN borrow VB test NN on IN borrow VB root ROOT test mark borrow on acl on test borrow be made ANTONYM ANTONYM being made ANTONYM ANTONYM fails returned ANTONYM ANTONYM is made ANTONYM ANTONYM made fails ANTONYM ANTONYM made see ANTONYM ANTONYM performed made ANTONYM ANTONYM removed made ANTONYM ANTONYM returned made ANTONYM ANTONYM sets made ANTONYM ANTONYM sets performed ANTONYM ANTONYM sets see ANTONYM ANTONYM validate void ANTONYM ANTONYM validated void ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/dbcp/pool2/impl/BaseGenericObjectPool.java,358
COMMENT returns the value of the attribute that has been added removed or replaced return if the attribute was added or bound this is the value of the attribute if the attribute was removed or unbound this is the value of the removed attribute if the attribute was replaced this is the old value of the attribute since FUNCTION SPECIFIER public TYPE object NAME object NAME get value PARAMETER LIST BLOCK RETURN return this value EXPR this value NAME this value NAME this NAME value returns the value of the attribute that has been added removed or root ROOT returns det value the dobj returns value case attribute of det attribute the nmod of value attribute nsubjpass added attribute ref attribute that aux added has auxpass added been acl relcl attribute added dep added removed cc removed or replaced return if the attribute was added or bound this is the value of the root ROOT return mark added if det attribute the nsubjpass added attribute nsubjpass bound attribute auxpass added was advcl if return added cc added or advcl if return bound conj or added bound nsubj value this cop value is det value the ccomp added value case the of nmod of value the attribute if the attribute was removed or unbound this is the root ROOT attribute mark removed if det attribute the nsubjpass removed attribute nsubj unbound attribute auxpass removed was dep attribute removed cc removed or dep attribute unbound conj or removed unbound nsubj the this cop the is dep removed the attribute if the attribute was removed or unbound this is the root ROOT attribute mark removed if det attribute the nsubjpass removed attribute nsubj unbound attribute auxpass removed was dep attribute removed cc removed or dep attribute unbound conj or removed unbound nsubj the this cop the is dep removed the value of the removed attribute if the attribute was replaced root ROOT value case attribute of det attribute the amod attribute removed nmod of value attribute mark replaced if det attribute the nsubjpass replaced attribute auxpass replaced was advcl if value replaced value of the removed attribute if the attribute was replaced root ROOT value case attribute of det attribute the amod attribute removed nmod of value attribute mark replaced if det attribute the nsubjpass replaced attribute auxpass replaced was advcl if value replaced this is the old value of the attribute root ROOT value nsubj value this cop value is det value the amod value old case attribute of det attribute the nmod of value attribute since public NN object NN get VB value NN root ROOT get dobj get value return NN this DT value NN added removed ANTONYM ANTONYM bound unbound ANTONYM ANTONYM has removed ANTONYM ANTONYM has return ANTONYM ANTONYM returns has ANTONYM ANTONYM,0,N/A,tomcat/java/javax/servlet/http/HttpSessionBindingEvent.java,116
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME get PARAMETER LIST THROWS throws interrupted exception execution exception ARGUMENT EXPR interrupted exception NAME interrupted exception ARGUMENT EXPR execution exception NAME execution exception BLOCK RETURN return null EXPR null override NN public NN void NN get VB throws VBZ interrupted JJ exception NN root ROOT exception amod exception interrupted execution NN exception NN root ROOT exception compound exception execution return NN null JJ get throws ANTONYM ANTONYM,1,B3,tomcat/java/org/apache/tomcat/websocket/AsyncChannelWrapperNonSecure.java,100
COMMENT a byte sequence that that follows a delimiter of the last encapsulation in the stream code code DECL STMT SPECIFIER protected SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME stream terminator INIT dash dash EXPR dash dash BLOCK EXPR dash NAME dash EXPR dash NAME dash a byte sequence that that follows a delimiter of the last root ROOT sequence det sequence a compound sequence byte mark follows that nsubj follows that ccomp sequence follows det delimiter a dobj follows delimiter case last of det last the nmod of delimiter last encapsulation in the stream code code root ROOT encapsulation case code in det code the compound code stream compound code code nmod in encapsulation code protected VBN static JJ final JJ byte NN stream NN terminator NN root ROOT terminator compound terminator stream dash NN dash NN,0,N/A,tomcat/java/org/apache/tomcat/util/http/fileupload/MultipartStream.java,198
DECL STMT SPECIFIER private SPECIFIER static TYPE final boolean SPECIFIER final NAME boolean NAME boolean INDEX NAME is control INIT new boolean array size EXPR new boolean array size NAME boolean array size NAME boolean INDEX array size EXPR array size NAME array size private JJ static JJ final JJ boolean NN is VBZ control NN root ROOT control cop control is new JJ boolean NN array NN size NN root ROOT size compound size array,1,D2,tomcat/java/org/apache/tomcat/util/http/parser/HttpParser.java,39
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME client max window bits INIT client max window bits EXPR client max window bits private JJ static JJ final JJ string NN client NN max NN window NN bits NNS root ROOT bits compound bits client compound bits max compound bits window client NN max NN window NN bits NNS root ROOT bits compound bits client compound bits max compound bits window,1,E1,tomcat/java/org/apache/tomcat/websocket/PerMessageDeflate.java,40
COMMENT define the ssl options DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME ssl opt stdenvvars INIT EXPR define the ssl options root ROOT define det options the compound options ssl dobj define options public NN static JJ final JJ int NN ssl NN opt VB stdenvvars NNS root ROOT opt nsubj opt ssl dobj opt stdenvvars,1,E1,tomcat/java/org/apache/tomcat/jni/SSL.java,60
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE web resource root NAME web resource root NAME get resources PARAMETER LIST BLOCK RETURN return null EXPR null override NN public NN web NN resource NN root NN root ROOT root compound root web compound root resource get VB resources NNS root ROOT get dobj get resources return NN null JJ,1,B6,tomcat/test/org/apache/tomcat/unittest/TesterContext.java,1110
FUNCTION SPECIFIER public TYPE string NAME string NAME get format PARAMETER LIST long time PARAMETER long time TYPE long NAME long NAME time BLOCK RETURN return cache get format time EXPR cache get format time CALL cache get format time NAME cache get format NAME cache NAME get format ARGUMENT LIST ARGUMENT EXPR time NAME time public NN string NN get VB format NN root ROOT get dobj get format long RB time NN return NN cache NN get VB format NN root ROOT get nsubj get cache dobj get format time NN,0,N/A,tomcat/java/org/apache/juli/DateFormatCache.java,94
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE m bean notification info NAME m bean notification info NAME m bean notification info INDEX NAME get notification info PARAMETER LIST BLOCK RETURN return notifier get notification info EXPR notifier get notification info CALL notifier get notification info NAME notifier get notification info NAME notifier NAME get notification info ARGUMENT LIST override NN public NN m NN bean NN notification NN info NN root ROOT info compound info m compound info bean compound info notification get VB notification NN info NN root ROOT get compound info notification dobj get info return NN notifier NN get VB notification NN info NN root ROOT get nsubj get notifier compound info notification dobj get info,0,N/A,tomcat/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReportJmx.java,80
COMMENT current sender socket DECL STMT SPECIFIER protected TYPE final x byte buffer SPECIFIER final NAME x byte buffer NAME ackbuf INIT new x byte buffer constants ack command length true EXPR new x byte buffer constants ack command length true CALL x byte buffer constants ack command length true NAME x byte buffer ARGUMENT LIST ARGUMENT EXPR constants ack command length NAME constants ack command length NAME constants NAME ack command NAME length ARGUMENT EXPR true current sender socket root ROOT socket amod socket current compound socket sender protected VBN final JJ x CC byte NN buffer NN root ROOT buffer compound buffer x compound buffer byte ackbuf NN new JJ x CC byte NN buffer NN root ROOT buffer compound buffer x compound buffer byte constants NNS ack IN root ROOT constants dep constants ack command NN length NN root ROOT length compound length command true JJ,0,N/A,tomcat/java/org/apache/catalina/tribes/transport/bio/BioSender.java,61
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE enumeration string NAME enumeration string NAME enumeration ARGUMENT LIST ARGUMENT NAME string NAME get headers PARAMETER LIST string name PARAMETER string name TYPE string NAME string NAME name BLOCK IF if request null throw new illegal state exception sm get string request facade null request CONDITION request null EXPR request null NAME request THEN throw new illegal state exception sm get string request facade null request BLOCK THROW throw new illegal state exception sm get string request facade null request EXPR new illegal state exception sm get string request facade null request CALL illegal state exception sm get string request facade null request NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR sm get string request facade null request CALL sm get string request facade null request NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR request facade null request IF if globals is security enabled return access controller do privileged new get headers privileged action name else return request get headers name CONDITION globals is security enabled EXPR globals is security enabled NAME globals is security enabled NAME globals NAME is security enabled THEN return access controller do privileged new get headers privileged action name BLOCK RETURN return access controller do privileged new get headers privileged action name EXPR access controller do privileged new get headers privileged action name CALL access controller do privileged new get headers privileged action name NAME access controller do privileged NAME access controller NAME do privileged ARGUMENT LIST ARGUMENT EXPR new get headers privileged action name CALL get headers privileged action name NAME get headers privileged action ARGUMENT LIST ARGUMENT EXPR name NAME name ELSE else return request get headers name BLOCK RETURN return request get headers name EXPR request get headers name CALL request get headers name NAME request get headers NAME request NAME get headers ARGUMENT LIST ARGUMENT EXPR name NAME name override NN public NN enumeration NN string NN get VB headers NNS root ROOT get dobj get headers string NN name NN if IN request NN null JJ throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state sm NN get VB string NN root ROOT get nsubj get sm dobj get string request NN facade NN null JJ request NN root ROOT request compound request request compound request facade amod request null if IN globals NNS is VBZ root ROOT is nsubj is globals security NN enabled VBD root ROOT enabled nsubj enabled security return NN access NN controller NN do VBP privileged JJ root ROOT do compound controller access nsubj do controller dobj do privileged new JJ get VB headers NNS privileged JJ action NN root ROOT get compound action headers amod action privileged dobj get action name NN else RB return NN request NN get VB headers NNS root ROOT get nsubj get request dobj get headers name NN,0,N/A,tomcat/java/org/apache/catalina/connector/RequestFacade.java,694
FUNCTION SPECIFIER public TYPE string NAME string NAME get class path PARAMETER LIST BLOCK IF if class path null return class path CONDITION class path null EXPR class path null NAME class path THEN return class path BLOCK RETURN return class path EXPR class path NAME class path RETURN return system get property java class path EXPR system get property java class path CALL system get property java class path NAME system get property NAME system NAME get property ARGUMENT LIST ARGUMENT EXPR java class path public NN string NN get VB class NN path NN root ROOT get compound path class dobj get path if IN class NN path NN root ROOT path compound path class null JJ return NN class NN path NN root ROOT path compound path class return NN system NN get VB property NN root ROOT get nsubj get system dobj get property java NN class NN path NN class path ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE string NAME string NAME is el ignored PARAMETER LIST BLOCK RETURN return el ignored EXPR el ignored NAME el ignored public NN string NN is VBZ el NN ignored VBN root ROOT ignored auxpass ignored is nsubjpass ignored el return NN el NN ignored VBD root ROOT ignored nsubj ignored el,1,a2,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE string NAME string NAME is scripting invalid PARAMETER LIST BLOCK RETURN return scripting invalid EXPR scripting invalid NAME scripting invalid public NN string NN is VBZ scripting VBG invalid JJ root ROOT scripting aux scripting is xcomp scripting invalid return NN scripting VBG invalid JJ root ROOT scripting xcomp scripting invalid,1,a2,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE string NAME string NAME is xml PARAMETER LIST BLOCK RETURN return is xml EXPR is xml NAME is xml public NN string NN is VBZ xml NN root ROOT xml cop xml is return NN is VBZ xml NN root ROOT xml cop xml is,1,a2,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION TYPE boolean NAME boolean NAME set value PARAMETER LIST object value scriptable owner scriptable start PARAMETER object value TYPE object NAME object NAME value PARAMETER scriptable owner TYPE scriptable NAME scriptable NAME owner PARAMETER scriptable start TYPE scriptable NAME scriptable NAME start BLOCK IF if setter null if getter null if context get context has feature context feature strict mode based on tc es draft of feb step we should throw a type error in this case throw script runtime type error msg set prop no setter name assignment to a property with only a getter defined the assignment is ignored see bug return true else context cx context get context if setter instanceof member box member box native setter member box setter class p types native setter arg types xxx cache tag since it is already calculated in define property class value type p types p types length int tag function object get type tag value type object actual arg function object convert arg cx start value tag object setter this object args if native setter delegate to null setter this start args new object actual arg else setter this native setter delegate to args new object start actual arg native setter invoke setter this args else if setter instanceof function function f function setter f call cx f get parent scope start new object value return true CONDITION setter null EXPR setter null NAME setter THEN if getter null if context get context has feature context feature strict mode based on tc es draft of feb step we should throw a type error in this case throw script runtime type error msg set prop no setter name assignment to a property with only a getter defined the assignment is ignored see bug return true BLOCK IF if getter null if context get context has feature context feature strict mode based on tc es draft of feb step we should throw a type error in this case throw script runtime type error msg set prop no setter name assignment to a property with only a getter defined the assignment is ignored see bug return true CONDITION getter null EXPR getter null NAME getter THEN if context get context has feature context feature strict mode based on tc es draft of feb step we should throw a type error in this case throw script runtime type error msg set prop no setter name assignment to a property with only a getter defined the assignment is ignored see bug return true BLOCK IF if context get context has feature context feature strict mode based on tc es draft of feb step we should throw a type error in this case throw script runtime type error msg set prop no setter name CONDITION context get context has feature context feature strict mode EXPR context get context has feature context feature strict mode CALL context get context NAME context get context NAME context NAME get context ARGUMENT LIST CALL has feature context feature strict mode NAME has feature ARGUMENT LIST ARGUMENT EXPR context feature strict mode NAME context feature strict mode NAME context NAME feature strict mode THEN based on tc es draft of feb step we should throw a type error in this case throw script runtime type error msg set prop no setter name BLOCK COMMENT based on tc es draft of feb step COMMENT we should throw a type error in this case THROW throw script runtime type error msg set prop no setter name EXPR script runtime type error msg set prop no setter name CALL script runtime type error msg set prop no setter name NAME script runtime type error NAME script runtime NAME type error ARGUMENT LIST ARGUMENT EXPR msg set prop no setter ARGUMENT EXPR name NAME name COMMENT assignment to a property with only a getter defined the COMMENT assignment is ignored see bug RETURN return true EXPR true ELSE else context cx context get context if setter instanceof member box member box native setter member box setter class p types native setter arg types xxx cache tag since it is already calculated in define property class value type p types p types length int tag function object get type tag value type object actual arg function object convert arg cx start value tag object setter this object args if native setter delegate to null setter this start args new object actual arg else setter this native setter delegate to args new object start actual arg native setter invoke setter this args else if setter instanceof function function f function setter f call cx f get parent scope start new object value return true BLOCK DECL STMT TYPE context NAME context NAME cx INIT context get context EXPR context get context CALL context get context NAME context get context NAME context NAME get context ARGUMENT LIST IF if setter instanceof member box member box native setter member box setter class p types native setter arg types xxx cache tag since it is already calculated in define property class value type p types p types length int tag function object get type tag value type object actual arg function object convert arg cx start value tag object setter this object args if native setter delegate to null setter this start args new object actual arg else setter this native setter delegate to args new object start actual arg native setter invoke setter this args else if setter instanceof function function f function setter f call cx f get parent scope start new object value CONDITION setter instanceof member box EXPR setter instanceof member box NAME setter NAME member box THEN member box native setter member box setter class p types native setter arg types xxx cache tag since it is already calculated in define property class value type p types p types length int tag function object get type tag value type object actual arg function object convert arg cx start value tag object setter this object args if native setter delegate to null setter this start args new object actual arg else setter this native setter delegate to args new object start actual arg native setter invoke setter this args BLOCK DECL STMT TYPE member box NAME member box NAME native setter INIT member box setter EXPR member box setter NAME member box NAME setter DECL STMT TYPE class NAME class NAME class ARGUMENT LIST ARGUMENT NAME NAME p types NAME p types INDEX INIT native setter arg types EXPR native setter arg types NAME native setter arg types NAME native setter NAME arg types COMMENT xxx cache tag since it is already calculated in COMMENT define property DECL STMT TYPE class NAME class NAME class ARGUMENT LIST ARGUMENT NAME NAME value type INIT p types p types length EXPR p types p types length NAME p types p types length NAME p types INDEX p types length EXPR p types length NAME p types length NAME p types NAME length DECL STMT TYPE int NAME int NAME tag INIT function object get type tag value type EXPR function object get type tag value type CALL function object get type tag value type NAME function object get type tag NAME function object NAME get type tag ARGUMENT LIST ARGUMENT EXPR value type NAME value type DECL STMT TYPE object NAME object NAME actual arg INIT function object convert arg cx start value tag EXPR function object convert arg cx start value tag CALL function object convert arg cx start value tag NAME function object convert arg NAME function object NAME convert arg ARGUMENT LIST ARGUMENT EXPR cx NAME cx ARGUMENT EXPR start NAME start ARGUMENT EXPR value NAME value ARGUMENT EXPR tag NAME tag DECL STMT TYPE object NAME object NAME setter this DECL STMT TYPE object NAME object NAME object INDEX NAME args IF if native setter delegate to null setter this start args new object actual arg else setter this native setter delegate to args new object start actual arg CONDITION native setter delegate to null EXPR native setter delegate to null NAME native setter delegate to NAME native setter NAME delegate to THEN setter this start args new object actual arg BLOCK EXPR setter this start NAME setter this NAME start EXPR args new object actual arg NAME args NAME object NAME object INDEX BLOCK EXPR actual arg NAME actual arg ELSE else setter this native setter delegate to args new object start actual arg BLOCK EXPR setter this native setter delegate to NAME setter this NAME native setter delegate to NAME native setter NAME delegate to EXPR args new object start actual arg NAME args NAME object NAME object INDEX BLOCK EXPR start NAME start EXPR actual arg NAME actual arg EXPR native setter invoke setter this args CALL native setter invoke setter this args NAME native setter invoke NAME native setter NAME invoke ARGUMENT LIST ARGUMENT EXPR setter this NAME setter this ARGUMENT EXPR args NAME args ELSEIF else if setter instanceof function function f function setter f call cx f get parent scope start new object value IF if setter instanceof function function f function setter f call cx f get parent scope start new object value CONDITION setter instanceof function EXPR setter instanceof function NAME setter NAME function THEN function f function setter f call cx f get parent scope start new object value BLOCK DECL STMT TYPE function NAME function NAME f INIT function setter EXPR function setter NAME function NAME setter EXPR f call cx f get parent scope start new object value CALL f call cx f get parent scope start new object value NAME f call NAME f NAME call ARGUMENT LIST ARGUMENT EXPR cx NAME cx ARGUMENT EXPR f get parent scope CALL f get parent scope NAME f get parent scope NAME f NAME get parent scope ARGUMENT LIST ARGUMENT EXPR start NAME start ARGUMENT EXPR new object value NAME object NAME object INDEX BLOCK EXPR value NAME value RETURN return true EXPR true RETURN return super set value value owner start EXPR super set value value owner start CALL super set value value owner start NAME super set value NAME super NAME set value ARGUMENT LIST ARGUMENT EXPR value NAME value ARGUMENT EXPR owner NAME owner ARGUMENT EXPR start NAME start boolean NN set VBN value NN root ROOT set dobj set value object NN value NN scriptable JJ owner NN scriptable JJ start NN if IN setter NN null JJ if IN getter NN null JJ if IN context NN get VB context NN root ROOT get nsubj get context dobj get context has VBZ feature NN root ROOT has dobj has feature context NN feature NN root ROOT feature compound feature context strict JJ mode NN root ROOT mode amod mode strict based on tc es draft of feb step root ROOT draft case draft based mwe based on compound draft tc compound draft es case step of amod step feb nmod of draft step we should throw a type error in this case root ROOT throw nsubj throw we aux throw should det error a compound error type dobj throw error case case in det case this nmod in throw case throw VB script NN runtime NN type NN error NN root ROOT error compound error script compound error runtime compound error type msg NN set NN prop VBP no DT setter NN root ROOT prop compound set msg nsubj prop set neg setter no dobj prop setter name NN assignment to a property with only a getter defined the root ROOT assignment case property to det property a nmod to assignment property case defined with advmod defined only det defined a advmod defined getter acl with assignment defined dep defined the assignment to a property with only a getter defined the root ROOT assignment case property to det property a nmod to assignment property case defined with advmod defined only det defined a advmod defined getter acl with assignment defined dep defined the assignment is ignored see bug root ROOT ignored nsubjpass ignored assignment auxpass ignored is ccomp ignored see dobj see bug assignment is ignored see bug root ROOT ignored nsubjpass ignored assignment auxpass ignored is ccomp ignored see dobj see bug return NN true JJ else RB context NN cx NN context NN get VB context NN root ROOT get nsubj get context dobj get context if IN setter NN instanceof NN member NN box NN root ROOT box compound box member member NN box NN root ROOT box compound box member native JJ setter NN root ROOT setter amod setter native member NN box NN root ROOT box compound box member setter NN class NN p NN types NNS root ROOT types compound types p native JJ setter NN arg NN types NNS root ROOT types amod types native compound types setter compound types arg xxx cache tag since it is already calculated in root ROOT tag compound tag xxx compound tag cache mark calculated since nsubjpass calculated it auxpass calculated is advmod calculated already acl since tag calculated dep calculated in define property root ROOT define dobj define property class NN value NN type NN root ROOT type compound type value p NN types NNS root ROOT types compound types p p NN types NNS length NN root ROOT types compound types p dep types length int NN tag NN function NN object NN get VB type NN tag NN root ROOT get compound object function nsubj get object compound tag type dobj get tag value NN type NN root ROOT type compound type value object NN actual JJ arg NN root ROOT arg amod arg actual function NN object NN convert VBP arg IN root ROOT convert compound object function nsubj convert object dobj convert arg cx NN start NN value NN tag NN object NN setter NN this DT root ROOT setter dobj setter this object NN args NNS if IN native JJ setter NN delegate NN to TO root ROOT delegate amod delegate native compound delegate setter dep delegate to null JJ setter NN this DT root ROOT setter dobj setter this start NN args NNS new JJ object NN actual JJ arg NN root ROOT arg amod arg actual else RB setter NN this DT root ROOT setter dobj setter this native JJ setter NN delegate NN to TO root ROOT delegate amod delegate native compound delegate setter dep delegate to args NNS new JJ object NN start NN actual JJ arg NN root ROOT arg amod arg actual native JJ setter NN invoke VBP root ROOT invoke amod setter native nsubj invoke setter setter NN this DT root ROOT setter dobj setter this args NNS else RB if IN setter NN instanceof NN function NN function NN f SYM function NN setter NN f LS call NN root ROOT f root f call cx NN f LS get VB parent NN scope NN root ROOT f root f get compound scope parent dobj get scope start NN new JJ object NN value NN return NN true JJ return NN super JJ set VBN value NN value NN owner NN start NN based defined ANTONYM ANTONYM based set ANTONYM ANTONYM feature throw ANTONYM ANTONYM ignored set ANTONYM ANTONYM ignored tag ANTONYM ANTONYM name invoke ANTONYM ANTONYM name is ANTONYM ANTONYM name see ANTONYM ANTONYM see calculated ANTONYM ANTONYM see call ANTONYM ANTONYM set defined ANTONYM ANTONYM set defined ANTONYM ANTONYM set see ANTONYM ANTONYM set tag ANTONYM ANTONYM start function ANTONYM ANTONYM strict set ANTONYM ANTONYM throw name ANTONYM ANTONYM throw return ANTONYM ANTONYM throw see ANTONYM ANTONYM based set SYNONYM SYNONYM cx xxx SYNONYM SYNONYM else new SYNONYM SYNONYM,1,a3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public SPECIFIER static TYPE object NAME object NAME set object index PARAMETER LIST object obj double dbl index object value context cx PARAMETER object obj TYPE object NAME object NAME obj PARAMETER double dbl index TYPE double NAME double NAME dbl index PARAMETER object value TYPE object NAME object NAME value PARAMETER context cx TYPE context NAME context NAME cx BLOCK RETURN return set object index obj dbl index value cx get top call scope cx EXPR set object index obj dbl index value cx get top call scope cx CALL set object index obj dbl index value cx get top call scope cx NAME set object index ARGUMENT LIST ARGUMENT EXPR obj NAME obj ARGUMENT EXPR dbl index NAME dbl index ARGUMENT EXPR value NAME value ARGUMENT EXPR cx NAME cx ARGUMENT EXPR get top call scope cx CALL get top call scope cx NAME get top call scope ARGUMENT LIST ARGUMENT EXPR cx NAME cx public NN static JJ object NN set VBN object NN index NN root ROOT set compound index object dobj set index object NN obj NN double RB dbl NN index NN root ROOT index compound index dbl object NN value NN context NN cx NN return NN set VBN object NN index NN root ROOT set compound index object dobj set index obj NN dbl NN index NN root ROOT index compound index dbl value NN cx NN get VB top JJ call NN scope NN root ROOT get amod scope top compound scope call dobj get scope cx NN,1,a3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE byte NAME byte NAME byte INDEX NAME get map context name PARAMETER LIST BLOCK RETURN return map context name EXPR map context name NAME map context name public NN byte NN get VB map VB context NN name NN root ROOT map aux map get compound name context dobj map name return NN map NN context NN name NN root ROOT name compound name map compound name context,1,a4,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME boolean INDEX NAME get param and var const PARAMETER LIST BLOCK IF if variable names null code bug CONDITION variable names null EXPR variable names null NAME variable names THEN code bug BLOCK EXPR code bug CALL code bug NAME code bug ARGUMENT LIST RETURN return is consts EXPR is consts NAME is consts public NN boolean NN get VB param NN and CC var NN const NN root ROOT get compound const param cc param and conj and param var compound const var dobj get const if IN variable JJ names NNS root ROOT names amod names variable null JJ code NN bug NN root ROOT bug compound bug code return NN is VBZ consts NNS root ROOT consts cop consts is,1,a4,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER protected TYPE void NAME void NAME check PARAMETER LIST BLOCK IF if host get auto deploy check for resources modification to trigger redeployment deployed application apps deployed values to array new deployed application for int i i apps length i if is serviced apps i name check resources apps i false check for old versions of applications that can now be undeployed if host get undeploy old versions check undeploy hotdeploy applications deploy apps CONDITION host get auto deploy EXPR host get auto deploy CALL host get auto deploy NAME host get auto deploy NAME host NAME get auto deploy ARGUMENT LIST THEN check for resources modification to trigger redeployment deployed application apps deployed values to array new deployed application for int i i apps length i if is serviced apps i name check resources apps i false check for old versions of applications that can now be undeployed if host get undeploy old versions check undeploy hotdeploy applications deploy apps BLOCK COMMENT check for resources modification to trigger redeployment DECL STMT TYPE deployed application NAME deployed application NAME deployed application INDEX NAME apps INIT deployed values to array new deployed application EXPR deployed values to array new deployed application CALL deployed values NAME deployed values NAME deployed NAME values ARGUMENT LIST CALL to array new deployed application NAME to array ARGUMENT LIST ARGUMENT EXPR new deployed application NAME deployed application NAME deployed application INDEX EXPR FOR for int i i apps length i if is serviced apps i name check resources apps i false CONTROL int i i apps length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i apps length EXPR i apps length NAME i NAME apps length NAME apps NAME length INCR i EXPR i NAME i BLOCK IF if is serviced apps i name check resources apps i false CONDITION is serviced apps i name EXPR is serviced apps i name CALL is serviced apps i name NAME is serviced ARGUMENT LIST ARGUMENT EXPR apps i name NAME apps i NAME apps INDEX i EXPR i NAME i NAME name THEN check resources apps i false BLOCK EXPR check resources apps i false CALL check resources apps i false NAME check resources ARGUMENT LIST ARGUMENT EXPR apps i NAME apps i NAME apps INDEX i EXPR i NAME i ARGUMENT EXPR false COMMENT check for old versions of applications that can now be undeployed IF if host get undeploy old versions check undeploy CONDITION host get undeploy old versions EXPR host get undeploy old versions CALL host get undeploy old versions NAME host get undeploy old versions NAME host NAME get undeploy old versions ARGUMENT LIST THEN check undeploy BLOCK EXPR check undeploy CALL check undeploy NAME check undeploy ARGUMENT LIST COMMENT hotdeploy applications EXPR deploy apps CALL deploy apps NAME deploy apps ARGUMENT LIST protected VBN void NN check NN if IN host NN get VB auto NN deploy NN root ROOT get nsubj get host compound deploy auto dobj get deploy check for resources modification to trigger redeployment root ROOT check case modification for compound modification resources nmod for check modification mark trigger to acl to check trigger dobj trigger redeployment deployed VBN application NN root ROOT application amod application deployed apps NNS deployed VBN values NNS root ROOT values amod values deployed to TO array NN root ROOT array case array to new JJ deployed VBN application NN root ROOT application amod application deployed for IN int NN i LS i LS apps NNS length NN root ROOT length compound length apps i LS if IN is VBZ serviced VBN root ROOT serviced auxpass serviced is apps NNS i LS name NN check NN resources NNS root ROOT resources compound resources check apps NNS i LS false JJ check for old versions of applications that can now be undeployed root ROOT check case versions for amod versions old nmod for check versions case applications of nmod of versions applications nsubj undeployed applications ref applications that aux undeployed can advmod undeployed now cop undeployed be acl relcl applications undeployed if IN host NN get VB undeploy JJ old JJ versions NNS root ROOT get nsubj get host amod versions undeploy amod versions old dobj get versions check NN undeploy NN root ROOT undeploy compound undeploy check hotdeploy applications root ROOT applications compound applications hotdeploy deploy VB apps NNS root ROOT deploy dobj deploy apps name be ANTONYM ANTONYM new old ANTONYM ANTONYM void false SYNONYM SYNONYM,1,b2,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER protected TYPE void NAME void NAME check expired PARAMETER LIST BLOCK SYNCHRONIZED synchronized expired mutex member expired membership expire time to expiration for int i i expired length i final member member expired i if log is debug enabled log debug mcast expire member expired i try runnable t new runnable override public void run string name thread current thread get name try thread current thread set name membership member expired service member disappeared member finally thread current thread set name name executor execute t catch exception x log error sm get string mcast service impl member disappeared failed x INIT expired mutex EXPR expired mutex NAME expired mutex BLOCK DECL STMT TYPE member NAME member NAME member INDEX NAME expired INIT membership expire time to expiration EXPR membership expire time to expiration CALL membership expire time to expiration NAME membership expire NAME membership NAME expire ARGUMENT LIST ARGUMENT EXPR time to expiration NAME time to expiration FOR for int i i expired length i final member member expired i if log is debug enabled log debug mcast expire member expired i try runnable t new runnable override public void run string name thread current thread get name try thread current thread set name membership member expired service member disappeared member finally thread current thread set name name executor execute t catch exception x log error sm get string mcast service impl member disappeared failed x CONTROL int i i expired length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i expired length EXPR i expired length NAME i NAME expired length NAME expired NAME length INCR i EXPR i NAME i BLOCK DECL STMT TYPE final member SPECIFIER final NAME member NAME member INIT expired i EXPR expired i NAME expired i NAME expired INDEX i EXPR i NAME i IF if log is debug enabled log debug mcast expire member expired i CONDITION log is debug enabled EXPR log is debug enabled CALL log is debug enabled NAME log is debug enabled NAME log NAME is debug enabled ARGUMENT LIST THEN log debug mcast expire member expired i BLOCK EXPR log debug mcast expire member expired i CALL log debug mcast expire member expired i NAME log debug NAME log NAME debug ARGUMENT LIST ARGUMENT EXPR mcast expire member expired i NAME expired i NAME expired INDEX i EXPR i NAME i TRY try runnable t new runnable override public void run string name thread current thread get name try thread current thread set name membership member expired service member disappeared member finally thread current thread set name name executor execute t catch exception x log error sm get string mcast service impl member disappeared failed x BLOCK DECL STMT TYPE runnable NAME runnable NAME t INIT new runnable override public void run string name thread current thread get name try thread current thread set name membership member expired service member disappeared member finally thread current thread set name name EXPR new runnable override public void run string name thread current thread get name try thread current thread set name membership member expired service member disappeared member finally thread current thread set name name CLASS runnable override public void run string name thread current thread get name try thread current thread set name membership member expired service member disappeared member finally thread current thread set name name SUPER runnable NAME runnable ARGUMENT LIST BLOCK FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME run PARAMETER LIST BLOCK DECL STMT TYPE string NAME string NAME name INIT thread current thread get name EXPR thread current thread get name CALL thread current thread NAME thread current thread NAME thread NAME current thread ARGUMENT LIST CALL get name NAME get name ARGUMENT LIST TRY try thread current thread set name membership member expired service member disappeared member finally thread current thread set name name BLOCK EXPR thread current thread set name membership member expired CALL thread current thread NAME thread current thread NAME thread NAME current thread ARGUMENT LIST CALL set name membership member expired NAME set name ARGUMENT LIST ARGUMENT EXPR membership member expired EXPR service member disappeared member CALL service member disappeared member NAME service member disappeared NAME service NAME member disappeared ARGUMENT LIST ARGUMENT EXPR member NAME member FINALLY finally thread current thread set name name BLOCK EXPR thread current thread set name name CALL thread current thread NAME thread current thread NAME thread NAME current thread ARGUMENT LIST CALL set name name NAME set name ARGUMENT LIST ARGUMENT EXPR name NAME name EXPR executor execute t CALL executor execute t NAME executor execute NAME executor NAME execute ARGUMENT LIST ARGUMENT EXPR t NAME t CATCH catch exception x log error sm get string mcast service impl member disappeared failed x PARAMETER LIST exception x PARAMETER exception x TYPE exception NAME exception NAME x BLOCK EXPR log error sm get string mcast service impl member disappeared failed x CALL log error sm get string mcast service impl member disappeared failed x NAME log error NAME log NAME error ARGUMENT LIST ARGUMENT EXPR sm get string mcast service impl member disappeared failed CALL sm get string mcast service impl member disappeared failed NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR mcast service impl member disappeared failed ARGUMENT EXPR x NAME x protected VBN void NN check NN expired VBD root ROOT expired nsubj expired check synchronized VBN expired VBD mutex NN root ROOT expired dobj expired mutex member NN expired VBD membership NN expire VBP root ROOT expire nsubj expire membership time NN to TO expiration NN root ROOT time case expiration to nmod to time expiration for IN int NN i LS i LS expired VBD length NN root ROOT expired dobj expired length i LS final JJ member NN member NN expired VBD i LS if IN log NN is VBZ debug NN enabled VBD root ROOT debug nsubj debug log cop debug is dep debug enabled log NN debug NN root ROOT debug compound debug log mcast NN expire VB member NN expired VBD i LS try VB runnable JJ t NN new JJ runnable JJ override NN public NN void NN run NN string NN name NN thread NN current JJ thread NN root ROOT thread compound thread thread amod thread current get VB name NN root ROOT get dobj get name try VB thread NN current JJ thread NN root ROOT thread compound thread thread amod thread current set VBN name NN root ROOT set dobj set name membership NN member NN expired VBD root ROOT expired compound member membership nsubj expired member service NN member NN disappeared VBD root ROOT disappeared compound member service nsubj disappeared member member NN finally RB thread NN current JJ thread NN root ROOT thread compound thread thread amod thread current set VBN name NN root ROOT set dobj set name name NN executor NN execute VB root ROOT execute nsubj execute executor t NN catch NN exception NN x NN log NN error NN root ROOT error compound error log sm NN get VB string NN root ROOT get nsubj get sm dobj get string mcast JJ service NN impl NN member NN disappeared VBD failed VBN root ROOT disappeared amod member mcast compound member service compound member impl nsubj disappeared member dep disappeared failed x NN expire failed ANTONYM ANTONYM expire run ANTONYM ANTONYM expired failed ANTONYM ANTONYM expired run ANTONYM ANTONYM run failed ANTONYM ANTONYM run string ANTONYM ANTONYM run thread ANTONYM ANTONYM i x SYNONYM SYNONYM,1,b2,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER private TYPE void NAME void NAME check popup PARAMETER LIST mouse event e PARAMETER mouse event e TYPE mouse event NAME mouse event NAME e BLOCK IF if e is popup trigger popup show this e get x e get y CONDITION e is popup trigger EXPR e is popup trigger CALL e is popup trigger NAME e is popup trigger NAME e NAME is popup trigger ARGUMENT LIST THEN popup show this e get x e get y BLOCK EXPR popup show this e get x e get y CALL popup show this e get x e get y NAME popup show NAME popup NAME show ARGUMENT LIST ARGUMENT EXPR this NAME this ARGUMENT EXPR e get x CALL e get x NAME e get x NAME e NAME get x ARGUMENT LIST ARGUMENT EXPR e get y CALL e get y NAME e get y NAME e NAME get y ARGUMENT LIST private JJ void NN check NN popup NN root ROOT popup compound popup check mouse NN event NN root ROOT event compound event mouse e SYM if IN e LS is VBZ popup NN trigger NN root ROOT trigger nsubj trigger e cop trigger is compound trigger popup popup NN show NN root ROOT show compound show popup this DT e LS get VB x CC root ROOT e root e get dobj get x e LS get VB y SYM root ROOT e root e get dobj get y,1,b2,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER protected TYPE void NAME void NAME has property PARAMETER LIST properties properties string name PARAMETER properties properties TYPE properties NAME properties NAME properties PARAMETER string name TYPE string NAME string NAME name BLOCK IF if properties get property name null throw new illegal argument exception sm get string mcast service missing property name CONDITION properties get property name null EXPR properties get property name null CALL properties get property name NAME properties get property NAME properties NAME get property ARGUMENT LIST ARGUMENT EXPR name NAME name THEN throw new illegal argument exception sm get string mcast service missing property name BLOCK THROW throw new illegal argument exception sm get string mcast service missing property name EXPR new illegal argument exception sm get string mcast service missing property name CALL illegal argument exception sm get string mcast service missing property name NAME illegal argument exception ARGUMENT LIST ARGUMENT EXPR sm get string mcast service missing property name CALL sm get string mcast service missing property name NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR mcast service missing property ARGUMENT EXPR name NAME name protected VBN void NN has VBZ property NN root ROOT has dobj has property properties NNS properties NNS string NN name NN if IN properties NNS get VBP property NN root ROOT get nsubj get properties dobj get property name NN null JJ throw VB new JJ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument sm NN get VB string NN root ROOT get nsubj get sm dobj get string mcast JJ service NN missing VBG property NN root ROOT property amod service mcast compound property service amod property missing name NN name throw ANTONYM ANTONYM throw missing ANTONYM ANTONYM,1,b4,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE void NAME void NAME has should be false for a new array PARAMETER LIST BLOCK EXPR assert that new native array has array is false CALL assert that new native array has array is false NAME assert that ARGUMENT LIST ARGUMENT EXPR new native array has array CALL native array NAME native array ARGUMENT LIST ARGUMENT EXPR CALL has array NAME has ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR array NAME array ARGUMENT EXPR is false CALL is false NAME is ARGUMENT LIST ARGUMENT EXPR false public NN void NN has VBZ should MD be VB false JJ for IN a DT new JJ array NN root ROOT false aux false has aux false should cop false be case array for det array a amod array new nmod for false array assert VB that DT root ROOT assert dobj assert that new JJ native JJ array NN root ROOT array amod array native has VBZ array NN is VBZ false JJ void false SYNONYM SYNONYM,1,b4,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER private TYPE void NAME void NAME to exponential format PARAMETER LIST int first digit int dec point PARAMETER int first digit TYPE int NAME int NAME first digit PARAMETER int dec point TYPE int NAME int NAME dec point BLOCK IF if end first digit insert decimal point if more than one digit was produced int dot first digit system arraycopy chars dot chars dot end dot chars dot end CONDITION end first digit EXPR end first digit NAME end NAME first digit THEN insert decimal point if more than one digit was produced int dot first digit system arraycopy chars dot chars dot end dot chars dot end BLOCK COMMENT insert decimal point if more than one digit was produced DECL STMT TYPE int NAME int NAME dot INIT first digit EXPR first digit NAME first digit EXPR system arraycopy chars dot chars dot end dot CALL system arraycopy chars dot chars dot end dot NAME system arraycopy NAME system NAME arraycopy ARGUMENT LIST ARGUMENT EXPR chars NAME chars ARGUMENT EXPR dot NAME dot ARGUMENT EXPR chars NAME chars ARGUMENT EXPR dot NAME dot ARGUMENT EXPR end dot NAME end NAME dot EXPR chars dot NAME chars dot NAME chars INDEX dot EXPR dot NAME dot EXPR end NAME end EXPR chars end e NAME chars end NAME chars INDEX end EXPR end NAME end DECL STMT TYPE char NAME char NAME sign INIT EXPR DECL STMT TYPE int NAME int NAME exp INIT dec point EXPR dec point NAME dec point IF if exp sign exp exp CONDITION exp EXPR exp NAME exp THEN sign exp exp BLOCK EXPR sign NAME sign EXPR exp exp NAME exp NAME exp EXPR chars end sign NAME chars end NAME chars INDEX end EXPR end NAME end NAME sign DECL STMT TYPE int NAME int NAME char pos INIT exp end exp end end EXPR exp end exp end end TERNARY exp end exp end end CONDITION exp EXPR exp NAME exp THEN end EXPR end NAME end ELSE exp end end EXPR exp end end TERNARY exp end end CONDITION exp EXPR exp NAME exp THEN end EXPR end NAME end ELSE end EXPR end NAME end EXPR end char pos NAME end NAME char pos COMMENT code below is needed because integer get chars is not public FOR for int r exp chars char pos digits r exp exp if exp break CONTROL INIT CONDITION INCR BLOCK DECL STMT TYPE int NAME int NAME r INIT exp EXPR exp NAME exp EXPR chars char pos digits r NAME chars char pos NAME chars INDEX char pos EXPR char pos NAME char pos NAME digits r NAME digits INDEX r EXPR r NAME r EXPR exp exp NAME exp NAME exp IF if exp break CONDITION exp EXPR exp NAME exp THEN break BLOCK BREAK break private JJ void NN to TO exponential JJ format NN root ROOT format case format to amod format exponential int NN first RB digit NN root ROOT digit advmod digit first int NN dec NN point NN root ROOT point compound point dec if IN end NN first RB digit NN root ROOT digit advmod digit first insert decimal point if more than one digit was produced root ROOT point compound point insert amod point decimal mark produced if advmod one more mwe more than nummod digit one nsubjpass produced digit auxpass produced was dep point produced int NN dot NN first RB digit NN root ROOT digit advmod digit first system NN arraycopy NN root ROOT arraycopy compound arraycopy system chars NNS dot NN chars NNS dot NN end NN dot NN chars NNS dot NN end NN chars NNS end NN e SYM char NN sign NN int NN exp NN dec NN point NN root ROOT point compound point dec if IN exp NN sign NN exp NN exp NN chars NNS end NN sign NN int NN char NN pos NNS root ROOT pos compound pos char exp NN end NN exp NN end NN end NN end NN char NN pos NNS root ROOT pos compound pos char code below is needed because integer get chars is not public root ROOT needed nsubjpass needed code advmod code below auxpass needed is mark get because nsubj get integer csubj public get dobj get chars cop public is neg public not ccomp needed public for IN int NN r NN exp NN chars NNS char NN pos NNS root ROOT pos compound pos char digits NNS r NN exp NN exp NN if IN exp NN break NN end break ANTONYM ANTONYM end produced ANTONYM ANTONYM point sign ANTONYM ANTONYM private public ANTONYM ANTONYM produced break ANTONYM ANTONYM,1,b5,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER final TYPE int NAME int NAME get attributes PARAMETER LIST int id PARAMETER int id TYPE int NAME int NAME id BLOCK EXPR ensure id id CALL ensure id id NAME ensure id ARGUMENT LIST ARGUMENT EXPR id NAME id RETURN return attribute array id EXPR attribute array id NAME attribute array id NAME attribute array INDEX id EXPR id NAME id final JJ int NN get VB attributes NNS root ROOT get dobj get attributes int NN id NN ensure VB id NN root ROOT ensure dobj ensure id id NN return NN attribute NN array NN root ROOT array compound array attribute id NN,1,b6,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE int NAME int NAME get attributes PARAMETER LIST string name PARAMETER string name TYPE string NAME string NAME name BLOCK RETURN return find attribute slot name slot query get attributes EXPR find attribute slot name slot query get attributes CALL find attribute slot name slot query NAME find attribute slot ARGUMENT LIST ARGUMENT EXPR name NAME name ARGUMENT EXPR ARGUMENT EXPR slot query NAME slot query CALL get attributes NAME get attributes ARGUMENT LIST public NN int NN get VB attributes NNS root ROOT get dobj get attributes string NN name NN return NN find VB attribute NN slot NN root ROOT find compound slot attribute dobj find slot name NN slot NN query NN root ROOT query compound query slot get VB attributes NNS root ROOT get dobj get attributes,1,b6,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE byte NAME byte NAME byte INDEX NAME name INIT null EXPR null private JJ byte NN name NN null JJ,1,d1,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private SPECIFIER static TYPE final list string SPECIFIER final NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME empty string INIT collections empty list EXPR collections empty list CALL collections empty list NAME collections empty list NAME collections NAME empty list ARGUMENT LIST private JJ static JJ final JJ list NN string NN empty JJ string NN root ROOT string amod string empty collections NNS empty JJ list NN root ROOT list compound list collections amod list empty,1,d1,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT TYPE string NAME string NAME is strict INIT org apache maven artifact repository metadata io is strict EXPR org apache maven artifact repository metadata io is strict string NN is VBZ strict JJ root ROOT strict cop strict is org NN apache NN maven NN artifact NN repository JJ metadata NN io NN is VBZ strict JJ root ROOT strict compound io org compound io apache compound io maven compound io artifact amod io repository compound io metadata nsubj strict io cop strict is,1,d2,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,768
DECL STMT SPECIFIER private TYPE short NAME short NAME its flags private JJ short RB its PRP$ flags NNS root ROOT flags nmod poss flags its,1,e1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER private TYPE final boolean SPECIFIER final NAME boolean NAME classes private JJ final JJ boolean NN classes NNS,1,e1,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private TYPE final boolean SPECIFIER final NAME boolean NAME methods private JJ final JJ boolean NN methods NNS,1,e1,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private TYPE int NAME int NAME successes INIT EXPR private JJ int NN successes NNS,1,e1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER private TYPE final string SPECIFIER final NAME string NAME args private JJ final JJ string NN args NNS,1,e1,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT will children be started automatically when they are added DECL STMT SPECIFIER protected TYPE boolean NAME boolean NAME start children INIT true EXPR true will children be started automatically when they are added root ROOT started aux started will nsubjpass started children auxpass started be advmod started automatically advmod added when nsubjpass added they auxpass added are advcl started added protected VBN boolean NN start VB children NNS root ROOT start dobj start children true JJ added started ANTONYM ANTONYM,0,n/a,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
COMMENT sets function name and sets its parent to this node param name function name code null for anonymous functions FUNCTION SPECIFIER public TYPE void NAME void NAME set function name PARAMETER LIST name name PARAMETER name name TYPE name NAME name NAME name BLOCK EXPR function name name NAME function name NAME name IF if name null name set parent this CONDITION name null EXPR name null NAME name THEN name set parent this BLOCK EXPR name set parent this CALL name set parent this NAME name set parent NAME name NAME set parent ARGUMENT LIST ARGUMENT EXPR this NAME this sets function name and sets its parent to this node root ROOT function nsubj function sets nsubj sets sets dobj function name cc function and conj and function sets nmod poss parent its dobj sets parent case node to det node this nmod to sets node param name function name code null for anonymous functions root ROOT null compound null param compound null name compound null function compound null name compound null code case functions for amod functions anonymous nmod for null functions public NN void NN set NN function NN name NN root ROOT name compound name set compound name function name NN name NN function NN name NN root ROOT name compound name function name NN if IN name NN null JJ name NN set VBD parent NN root ROOT set nsubj set name dobj set parent this DT name parent ANTONYM ANTONYM,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
FUNCTION SPECIFIER public TYPE name NAME name NAME get function name PARAMETER LIST BLOCK RETURN return function name EXPR function name NAME function name public NN name NN get VB function NN name NN root ROOT get compound name function dobj get name return NN function NN name NN root ROOT name compound name function,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE list ast node NAME list ast node NAME list ARGUMENT LIST ARGUMENT NAME ast node NAME params private JJ list NN ast IN node NN root ROOT node case node ast params NNS,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME is generator private JJ boolean NN is VBZ generator NN root ROOT generator cop generator is,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT returns whether this is a function closure FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME is expression closure PARAMETER LIST BLOCK RETURN return is expression closure EXPR is expression closure NAME is expression closure returns whether this is a function closure root ROOT returns mark function whether nsubj function this cop function is det function a ccomp returns function dobj function closure public NN boolean NN is VBZ expression NN closure NN root ROOT closure cop closure is compound closure expression return NN is VBZ expression NN closure NN root ROOT closure cop closure is compound closure expression,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT sets base starting line number for this script or function this is a one time operation and throws an exception if the line number has already been set FUNCTION SPECIFIER public TYPE void NAME void NAME set base lineno PARAMETER LIST int lineno PARAMETER int lineno TYPE int NAME int NAME lineno BLOCK IF if lineno this lineno code bug CONDITION lineno this lineno EXPR lineno this lineno NAME lineno NAME this lineno NAME this NAME lineno THEN code bug BLOCK EXPR code bug CALL code bug NAME code bug ARGUMENT LIST EXPR this lineno lineno NAME this lineno NAME this NAME lineno NAME lineno sets base starting line number for this script or function root ROOT number compound number sets compound number base amod number starting compound number line case script for det script this nmod for number script cc script or nmod for number function conj or script function this is a one time operation and throws an exception if the root ROOT operation nsubj operation this nsubj throws this cop operation is det operation a nummod operation one compound operation time cc operation and conj and operation throws det exception an dobj operation exception case the if nmod if exception the line number has already been set root ROOT set compound number line nsubjpass set number aux set has advmod set already auxpass set been public NN void NN set VBN base NN lineno NN root ROOT set compound lineno base dobj set lineno int NN lineno NN if IN lineno NN this DT lineno NN code NN bug NN root ROOT bug compound bug code this DT lineno NN lineno NN base set ANTONYM ANTONYM function operation ANTONYM ANTONYM number function ANTONYM ANTONYM or operation ANTONYM ANTONYM sets base ANTONYM ANTONYM starting function ANTONYM ANTONYM starting has ANTONYM ANTONYM,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT returns true if the named property is defined as a const on this object param name return true if the named property is defined as a const false otherwise FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME is const PARAMETER LIST string name PARAMETER string name TYPE string NAME string NAME name BLOCK DECL STMT TYPE slot NAME slot NAME slot INIT get slot name slot query EXPR get slot name slot query CALL get slot name slot query NAME get slot ARGUMENT LIST ARGUMENT EXPR name NAME name ARGUMENT EXPR ARGUMENT EXPR slot query NAME slot query IF if slot null return false CONDITION slot null EXPR slot null NAME slot THEN return false BLOCK RETURN return false EXPR false RETURN return slot get attributes permanent readonly permanent readonly EXPR slot get attributes permanent readonly permanent readonly CALL slot get attributes NAME slot get attributes NAME slot NAME get attributes ARGUMENT LIST NAME permanent NAME readonly NAME permanent NAME readonly returns true if the named property is defined as a const on this object root ROOT returns amod returns true mark defined if det property the amod property named nsubjpass defined property auxpass defined is advcl if true defined case const as det const a nmod as defined const case object on det object this nmod on const object param name root ROOT name compound name param return true if the named property is defined as a const false root ROOT return amod return true mark defined if det property the amod property named nsubjpass defined property auxpass defined is advcl if true defined case const as det const a nmod as defined const amod const false otherwise public NN boolean NN is VBZ const IN root ROOT const cop const is string NN name NN slot NN slot NN get VB slot NN root ROOT get dobj get slot name NN slot NN query NN root ROOT query compound query slot if IN slot NN null JJ return NN false JJ return NN slot NN get VB attributes NNS root ROOT get nsubj get slot dobj get attributes permanent JJ readonly RB permanent JJ readonly RB is name ANTONYM ANTONYM named is ANTONYM ANTONYM true false ANTONYM ANTONYM false null SYNONYM SYNONYM,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
DECL STMT SPECIFIER private TYPE int NAME int NAME syntax error count private JJ int NN syntax NN error NN count NN root ROOT count compound count syntax compound count error,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION SPECIFIER public TYPE void NAME void NAME inject authentication PARAMETER LIST repository system session session list artifact repository repositories PARAMETER repository system session session TYPE repository system session NAME repository system session NAME session PARAMETER list artifact repository repositories TYPE list artifact repository NAME list artifact repository NAME list ARGUMENT LIST ARGUMENT NAME artifact repository NAME repositories BLOCK IF if repositories null session null for artifact repository repository repositories repository set authentication get authentication session repository CONDITION repositories null session null EXPR repositories null session null NAME repositories NAME session THEN for artifact repository repository repositories repository set authentication get authentication session repository BLOCK FOR for artifact repository repository repositories repository set authentication get authentication session repository CONTROL artifact repository repository repositories INIT artifact repository repository repositories TYPE artifact repository NAME artifact repository NAME repository RANGE repositories EXPR repositories NAME repositories BLOCK EXPR repository set authentication get authentication session repository CALL repository set authentication get authentication session repository NAME repository set authentication NAME repository NAME set authentication ARGUMENT LIST ARGUMENT EXPR get authentication session repository CALL get authentication session repository NAME get authentication ARGUMENT LIST ARGUMENT EXPR session NAME session ARGUMENT EXPR repository NAME repository public NN void NN inject VB authentication NN root ROOT inject dobj inject authentication repository JJ system NN session NN root ROOT session amod session repository compound session system session NN list NN artifact NN repository NN root ROOT repository compound repository artifact repositories NNS if IN repositories NNS null JJ session NN null JJ for IN artifact NN repository NN root ROOT repository compound repository artifact repository NN repositories NNS repository JJ set NN authentication NN root ROOT authentication amod authentication repository compound authentication set get VB authentication NN root ROOT get dobj get authentication session NN repository NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT gets the dependencies that could not be resolved return the unresolved dependencies never code null FUNCTION DECL list dependency get unresolved dependencies TYPE list dependency NAME list dependency NAME list ARGUMENT LIST ARGUMENT NAME dependency NAME get unresolved dependencies PARAMETER LIST gets the dependencies that could not be resolved root ROOT gets det dependencies the dobj gets dependencies nsubjpass resolved dependencies ref dependencies that aux resolved could neg resolved not auxpass resolved be acl relcl dependencies resolved return the unresolved dependencies never code null root ROOT return det dependencies the amod dependencies unresolved nsubj code dependencies neg code never ccomp return code dobj code null list NN dependency NN get VB unresolved JJ dependencies NNS root ROOT get amod dependencies unresolved dobj get dependencies gets return ANTONYM ANTONYM resolved unresolved ANTONYM ANTONYM,0,n/a,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
DECL STMT SPECIFIER private TYPE maven metadata cache NAME maven metadata cache NAME cache private JJ maven NN metadata NN cache NN root ROOT cache compound cache maven compound cache metadata cache NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT nodes incident to this depend on me DECL STMT TYPE list metadata graph node NAME list metadata graph node NAME list ARGUMENT LIST ARGUMENT NAME metadata graph node NAME in nodes nodes incident to this depend on me root ROOT incident compound incident nodes mark depend to nsubj depend this acl to incident depend case me on nmod on depend me list NN metadata NN graph NN node NN root ROOT node compound node metadata compound node graph in IN nodes NNS root ROOT nodes case nodes in,0,n/a,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
FUNCTION SPECIFIER public TYPE int NAME int NAME hash code PARAMETER LIST BLOCK IF if metadata null return super hash code CONDITION metadata null EXPR metadata null NAME metadata THEN return super hash code BLOCK RETURN return super hash code EXPR super hash code CALL super hash code NAME super hash code NAME super NAME hash code ARGUMENT LIST RETURN return metadata to string hash code EXPR metadata to string hash code CALL metadata to string NAME metadata to string NAME metadata NAME to string ARGUMENT LIST CALL hash code NAME hash code ARGUMENT LIST public NN int NN hash VB code NN root ROOT hash dobj hash code if IN metadata NN null JJ return NN super JJ hash NN code NN return NN metadata NN to TO string NN root ROOT metadata case string to nmod to metadata string hash VB code NN root ROOT hash dobj hash code,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT checks the url to see if this repository refers to an external repository param original repository return true if external FUNCTION SPECIFIER static TYPE boolean NAME boolean NAME is external repo PARAMETER LIST artifact repository original repository PARAMETER artifact repository original repository TYPE artifact repository NAME artifact repository NAME original repository BLOCK TRY try url url new url original repository get url return url get host equals localhost url get host equals url get protocol equals file catch malformed url exception e bad url just skip it here it should have been validated already but the wagon lookup will deal with it return false BLOCK DECL STMT TYPE url NAME url NAME url INIT new url original repository get url EXPR new url original repository get url CALL url original repository get url NAME url ARGUMENT LIST ARGUMENT EXPR original repository get url CALL original repository get url NAME original repository get url NAME original repository NAME get url ARGUMENT LIST RETURN return url get host equals localhost url get host equals url get protocol equals file EXPR url get host equals localhost url get host equals url get protocol equals file CALL url get host NAME url get host NAME url NAME get host ARGUMENT LIST CALL equals localhost NAME equals ARGUMENT LIST ARGUMENT EXPR localhost CALL url get host NAME url get host NAME url NAME get host ARGUMENT LIST CALL equals NAME equals ARGUMENT LIST ARGUMENT EXPR CALL url get protocol NAME url get protocol NAME url NAME get protocol ARGUMENT LIST CALL equals file NAME equals ARGUMENT LIST ARGUMENT EXPR file CATCH catch malformed url exception e bad url just skip it here it should have been validated already but the wagon lookup will deal with it return false PARAMETER LIST malformed url exception e PARAMETER malformed url exception e TYPE malformed url exception NAME malformed url exception NAME e BLOCK COMMENT bad url just skip it here it should have been validated already but the wagon lookup will deal with it RETURN return false EXPR false checks the url to see if this repository refers to an external repository root ROOT checks det url the dobj checks url mark see to acl to url see mark refers if det repository this nsubj refers repository advcl if see refers case repository to det repository an amod repository external nmod to refers repository param original repository root ROOT repository compound repository param amod repository original return true if external root ROOT return amod return true mark external if advcl if true external static JJ boolean NN is VBZ external JJ repo NN root ROOT repo cop repo is amod repo external artifact NN repository NN root ROOT repository compound repository artifact original JJ repository NN root ROOT repository amod repository original try VB url NN url NN new JJ url NN original JJ repository JJ get VB url NN root ROOT get amod repository original nsubj get repository dobj get url return NN url NN get VB host NN root ROOT get nsubj get url dobj get host equals VBZ localhost NN url NN get VB host NN root ROOT get nsubj get url dobj get host equals VBZ url NN get VB protocol NN root ROOT get nsubj get url dobj get protocol equals VBZ file NN catch NN malformed JJ url NN exception NN root ROOT exception amod exception malformed compound exception url e SYM bad url just skip it here it should have been validated already but the wagon lookup will deal with it root ROOT skip amod url bad nsubj skip url advmod skip just dobj skip it advmod skip here nsubjpass validated it aux validated should aux validated have auxpass validated been dep skip validated advmod validated already cc validated but det lookup the compound lookup wagon nsubj deal lookup aux deal will dep skip deal conj but validated deal case it with nmod with deal it bad url just skip it here it should have been validated already but the wagon lookup will deal with it root ROOT skip amod url bad nsubj skip url advmod skip just dobj skip it advmod skip here nsubjpass validated it aux validated should aux validated have auxpass validated been dep skip validated advmod validated already cc validated but det lookup the compound lookup wagon nsubj deal lookup aux deal will dep skip deal conj but validated deal case it with nmod with deal it return NN false JJ bad just ANTONYM ANTONYM bad new ANTONYM ANTONYM bad true ANTONYM ANTONYM catch have ANTONYM ANTONYM checks catch ANTONYM ANTONYM checks catch ANTONYM ANTONYM checks equals ANTONYM ANTONYM checks have ANTONYM ANTONYM checks return ANTONYM ANTONYM equals catch ANTONYM ANTONYM have deal ANTONYM ANTONYM just new ANTONYM ANTONYM just true ANTONYM ANTONYM refers equals ANTONYM ANTONYM return have ANTONYM ANTONYM return try ANTONYM ANTONYM see deal ANTONYM ANTONYM see have ANTONYM ANTONYM see try ANTONYM ANTONYM true false ANTONYM ANTONYM bad false SYNONYM SYNONYM,0,n/a,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/AbstractMessageNotationUml.java,1691
FUNCTION SPECIFIER public TYPE void NAME void NAME set global update policy PARAMETER LIST string update policy PARAMETER string update policy TYPE string NAME string NAME update policy BLOCK EXPR global update policy update policy NAME global update policy NAME update policy public NN void NN set VBN global JJ update VBP policy NN root ROOT set xcomp set global dep set update dobj update policy string NN update VB policy NN root ROOT update dobj update policy global JJ update VBP policy NN root ROOT update nsubj update global dobj update policy update VB policy NN root ROOT update dobj update policy,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE void NAME void NAME set global checksum policy PARAMETER LIST string checksum policy PARAMETER string checksum policy TYPE string NAME string NAME checksum policy BLOCK EXPR global checksum policy checksum policy NAME global checksum policy NAME checksum policy public NN void NN set VBN global JJ checksum NN policy NN root ROOT set amod policy global compound policy checksum dobj set policy string NN checksum NN policy NN root ROOT policy compound policy checksum global JJ checksum NN policy NN root ROOT policy amod policy global compound policy checksum checksum NN policy NN root ROOT policy compound policy checksum,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE final set string SPECIFIER final NAME set string NAME set ARGUMENT LIST ARGUMENT NAME string NAME q names INIT new hash set EXPR new hash set CALL hash set NAME hash set NAME hash set ARGUMENT LIST ARGUMENT LIST private JJ final JJ set NN string NN q VB names NNS root ROOT q dobj q names new JJ hash JJ set NN root ROOT set amod set hash,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
FUNCTION SPECIFIER public TYPE void NAME void NAME clear PARAMETER LIST BLOCK EXPR q names clear CALL q names clear NAME q names clear NAME q names NAME clear ARGUMENT LIST EXPR super clear CALL super clear NAME super clear NAME super NAME clear ARGUMENT LIST public NN void NN clear JJ q VB names NNS clear JJ root ROOT q nsubj clear names xcomp q clear super JJ clear JJ public clear ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT first element of the queue DECL STMT SPECIFIER protected TYPE entry NAME entry NAME first first element of the queue root ROOT element amod element first case queue of det queue the nmod of element queue first element of the queue root ROOT element amod element first case queue of det queue the nmod of element queue protected VBN entry NN first RB,0,n/a,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/AbstractMessageNotationUml.java,1691
COMMENT maximum size of the queue DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME max size maximum size of the queue root ROOT size amod size maximum case queue of det queue the nmod of size queue private JJ final JJ int NN max NN size NN root ROOT size compound size max,0,n/a,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
FUNCTION SPECIFIER private SPECIFIER final TYPE entry NAME entry NAME get previous PARAMETER LIST BLOCK RETURN return previous EXPR previous NAME previous private JJ final JJ entry NN get VB previous JJ root ROOT get xcomp get previous return NN previous JJ,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE int NAME int NAME is valid PARAMETER LIST BLOCK DECL STMT TYPE final long SPECIFIER final NAME long NAME current time INIT system current time millis EXPR system current time millis CALL system current time millis NAME system current time millis NAME system NAME current time millis ARGUMENT LIST IF if current time this expires the delay has not passed yet assuming source is valid return source validity valid CONDITION current time this expires EXPR current time this expires NAME current time NAME this expires NAME this NAME expires THEN the delay has not passed yet assuming source is valid return source validity valid BLOCK COMMENT the delay has not passed yet assuming source is valid RETURN return source validity valid EXPR source validity valid NAME source validity valid NAME source validity NAME valid COMMENT the delay has passed prepare for the next interval EXPR this expires current time this delay NAME this expires NAME this NAME expires NAME current time NAME this delay NAME this NAME delay RETURN return this delegate is valid EXPR this delegate is valid CALL this delegate is valid NAME this delegate is valid NAME this NAME delegate NAME is valid ARGUMENT LIST public NN int NN is VBZ valid JJ root ROOT valid cop valid is final JJ long RB current JJ time NN root ROOT time amod time current system NN current JJ time NN millis IN root ROOT time compound time system amod time current dep time millis if IN current JJ time NN root ROOT time amod time current this DT expires VBZ the delay has not passed yet assuming source is valid root ROOT passed det delay the nsubjpass passed delay aux passed has neg passed not advmod assuming yet xcomp passed assuming nsubj valid source cop valid is ccomp assuming valid return NN source NN validity NN valid JJ root ROOT valid compound validity source nsubj valid validity the delay has passed prepare for the next interval root ROOT passed det delay the nsubj passed delay aux passed has dobj passed prepare case interval for det interval the amod interval next nmod for prepare interval this DT expires VBZ current JJ time NN root ROOT time amod time current this DT delay NN return NN this DT delegate NN is VBZ valid JJ expires return ANTONYM ANTONYM has assuming ANTONYM ANTONYM has passed ANTONYM ANTONYM has prepare ANTONYM ANTONYM has return ANTONYM ANTONYM,1,a2,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE dimension NAME dimension NAME set breadth PARAMETER LIST dimension target int source PARAMETER dimension target TYPE dimension NAME dimension NAME target PARAMETER int source TYPE int NAME int NAME source BLOCK IF if orientation vertical return new dimension source int target get height else return new dimension int target get width source CONDITION orientation vertical EXPR orientation vertical NAME orientation NAME vertical THEN return new dimension source int target get height BLOCK RETURN return new dimension source int target get height EXPR new dimension source int target get height CALL dimension source int target get height NAME dimension ARGUMENT LIST ARGUMENT EXPR source NAME source ARGUMENT EXPR int target get height NAME int CALL target get height NAME target get height NAME target NAME get height ARGUMENT LIST ELSE else return new dimension int target get width source BLOCK RETURN return new dimension int target get width source EXPR new dimension int target get width source CALL dimension int target get width source NAME dimension ARGUMENT LIST ARGUMENT EXPR int target get width NAME int CALL target get width NAME target get width NAME target NAME get width ARGUMENT LIST ARGUMENT EXPR source NAME source public NN dimension NN set VBN breadth NN root ROOT set dobj set breadth dimension NN target NN int NN source NN if IN orientation NN vertical JJ return NN new JJ dimension NN source NN int NN target NN get VB height NN root ROOT get nsubj get target dobj get height else RB return NN new JJ dimension NN int NN target NN get VB width NN root ROOT get nsubj get target dobj get width source NN new else SYNONYM SYNONYM,1,a3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE dimension NAME dimension NAME set length PARAMETER LIST dimension target dimension source PARAMETER dimension target TYPE dimension NAME dimension NAME target PARAMETER dimension source TYPE dimension NAME dimension NAME source BLOCK IF if orientation vertical return new dimension int target get width int source get height else return new dimension int source get width int target get height CONDITION orientation vertical EXPR orientation vertical NAME orientation NAME vertical THEN return new dimension int target get width int source get height BLOCK RETURN return new dimension int target get width int source get height EXPR new dimension int target get width int source get height CALL dimension int target get width int source get height NAME dimension ARGUMENT LIST ARGUMENT EXPR int target get width NAME int CALL target get width NAME target get width NAME target NAME get width ARGUMENT LIST ARGUMENT EXPR int source get height NAME int CALL source get height NAME source get height NAME source NAME get height ARGUMENT LIST ELSE else return new dimension int source get width int target get height BLOCK RETURN return new dimension int source get width int target get height EXPR new dimension int source get width int target get height CALL dimension int source get width int target get height NAME dimension ARGUMENT LIST ARGUMENT EXPR int source get width NAME int CALL source get width NAME source get width NAME source NAME get width ARGUMENT LIST ARGUMENT EXPR int target get height NAME int CALL target get height NAME target get height NAME target NAME get height ARGUMENT LIST public NN dimension NN set VBN length NN root ROOT set dobj set length dimension NN target NN dimension NN source NN if IN orientation NN vertical JJ return NN new JJ dimension NN int NN target NN get VB width NN root ROOT get nsubj get target dobj get width int NN source NN get VB height NN root ROOT get nsubj get source dobj get height else RB return NN new JJ dimension NN int NN source NN get VB width NN root ROOT get nsubj get source dobj get width int NN target NN get VB height NN root ROOT get nsubj get target dobj get height new else SYNONYM SYNONYM,1,a3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE dimension NAME dimension NAME set length PARAMETER LIST dimension target int source PARAMETER dimension target TYPE dimension NAME dimension NAME target PARAMETER int source TYPE int NAME int NAME source BLOCK IF if orientation vertical return new dimension int target get width source else return new dimension source int target get height CONDITION orientation vertical EXPR orientation vertical NAME orientation NAME vertical THEN return new dimension int target get width source BLOCK RETURN return new dimension int target get width source EXPR new dimension int target get width source CALL dimension int target get width source NAME dimension ARGUMENT LIST ARGUMENT EXPR int target get width NAME int CALL target get width NAME target get width NAME target NAME get width ARGUMENT LIST ARGUMENT EXPR source NAME source ELSE else return new dimension source int target get height BLOCK RETURN return new dimension source int target get height EXPR new dimension source int target get height CALL dimension source int target get height NAME dimension ARGUMENT LIST ARGUMENT EXPR source NAME source ARGUMENT EXPR int target get height NAME int CALL target get height NAME target get height NAME target NAME get height ARGUMENT LIST public NN dimension NN set VBN length NN root ROOT set dobj set length dimension NN target NN int NN source NN if IN orientation NN vertical JJ return NN new JJ dimension NN int NN target NN get VB width NN root ROOT get nsubj get target dobj get width source NN else RB return NN new JJ dimension NN source NN int NN target NN get VB height NN root ROOT get nsubj get target dobj get height new else SYNONYM SYNONYM,1,a3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE list NAME list NAME get expansion PARAMETER LIST BLOCK RETURN return f expansion EXPR f expansion NAME f expansion public NN list NN get VB expansion NN root ROOT get dobj get expansion return NN f LS expansion NN root ROOT f root f expansion,1,a4,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE void NAME void NAME check collision PARAMETER LIST string before string after PARAMETER string before TYPE string NAME string NAME before PARAMETER string after TYPE string NAME string NAME after BLOCK DECL STMT TYPE boolean NAME boolean NAME collision INIT before null before equals short name after null after equals short name EXPR before null before equals short name after null after equals short name NAME before CALL before equals short name NAME before equals NAME before NAME equals ARGUMENT LIST ARGUMENT EXPR short name NAME short name NAME after CALL after equals short name NAME after equals NAME after NAME equals ARGUMENT LIST ARGUMENT EXPR short name NAME short name IF if collision if long name null long name get long name display name long name CONDITION collision EXPR collision NAME collision THEN if long name null long name get long name display name long name BLOCK IF if long name null long name get long name CONDITION long name null EXPR long name null NAME long name THEN long name get long name BLOCK EXPR long name get long name NAME long name CALL get long name NAME get long name ARGUMENT LIST EXPR display name long name NAME display name NAME long name public NN void NN check NN collision NN root ROOT collision compound collision check string NN before IN string NN after IN boolean NN collision NN before IN null JJ before IN equals VBZ root ROOT equals mark equals before short JJ name NN root ROOT name amod name short after IN null JJ after IN equals VBZ root ROOT equals mark equals after short JJ name NN root ROOT name amod name short if IN collision NN if IN long RB name NN root ROOT name amod name long null JJ long RB name NN root ROOT name amod name long get VB long RB name NN root ROOT get amod name long dobj get name display NN name NN root ROOT name compound name display long RB name NN root ROOT name amod name long,1,b2,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER protected TYPE void NAME void NAME get method bodies PARAMETER LIST compilation unit declaration unit int place PARAMETER compilation unit declaration unit TYPE compilation unit declaration NAME compilation unit declaration NAME unit PARAMETER int place TYPE int NAME int NAME place BLOCK COMMENT fill the methods bodies in order for the code to be generated IF if unit ignore method bodies unit ignore further investigation true return if initial diet parse did not work no need to dig into method bodies CONDITION unit ignore method bodies EXPR unit ignore method bodies NAME unit ignore method bodies NAME unit NAME ignore method bodies THEN unit ignore further investigation true return if initial diet parse did not work no need to dig into method bodies BLOCK EXPR unit ignore further investigation true NAME unit ignore further investigation NAME unit NAME ignore further investigation RETURN return COMMENT if initial diet parse did not work no need to dig into method bodies IF if place parse threshold return CONDITION place parse threshold EXPR place parse threshold NAME place NAME parse threshold THEN return BLOCK RETURN return COMMENT work already done COMMENT real parse of the method EXPR parser scanner set source buffer unit compilation result compilation unit get contents CALL parser scanner set source buffer unit compilation result compilation unit get contents NAME parser scanner set source buffer NAME parser NAME scanner NAME set source buffer ARGUMENT LIST ARGUMENT EXPR unit compilation result compilation unit get contents CALL unit compilation result compilation unit get contents NAME unit compilation result compilation unit get contents NAME unit NAME compilation result NAME compilation unit NAME get contents ARGUMENT LIST IF if unit types null for int i unit types length i unit types i parse method parser unit CONDITION unit types null EXPR unit types null NAME unit types NAME unit NAME types THEN for int i unit types length i unit types i parse method parser unit BLOCK FOR for int i unit types length i unit types i parse method parser unit CONTROL int i unit types length i INIT int i unit types length TYPE int NAME int NAME i INIT unit types length EXPR unit types length NAME unit types length NAME unit NAME types NAME length CONDITION i EXPR i NAME i INCR BLOCK EXPR unit types i parse method parser unit NAME unit types i NAME unit NAME types INDEX i EXPR i NAME i CALL parse method parser unit NAME parse method ARGUMENT LIST ARGUMENT EXPR parser NAME parser ARGUMENT EXPR unit NAME unit protected VBN void NN get VB method NN bodies NNS root ROOT get compound bodies method dobj get bodies compilation NN unit NN declaration NN root ROOT declaration compound declaration compilation compound declaration unit unit NN int NN place NN fill the methods bodies in order for the code to be generated root ROOT fill det bodies the compound bodies methods dobj fill bodies mark generated in mwe in order mark generated for det code the nsubjpass generated code mark generated to auxpass generated be advcl in order fill generated if IN unit NN ignore VB method NN bodies NNS root ROOT ignore nsubj ignore unit compound bodies method dobj ignore bodies unit NN ignore VB further RB investigation NN root ROOT ignore nsubj ignore unit advmod ignore further dobj ignore investigation true JJ return NN if IN initial JJ diet NN parse VB did VBD not RB work NN no DT need NN to TO dig NN into IN method NN bodies NNS if IN place NN parse VB threshold NN root ROOT parse dobj parse threshold return NN work NN already RB done VBN real parse of the method root ROOT parse amod parse real case method of det method the nmod of parse method parser NN scanner NN set VBN source NN buffer NN root ROOT set compound scanner parser nsubj set scanner compound buffer source dobj set buffer unit NN compilation NN result VBP compilation NN unit NN get VB contents NNS root ROOT result compound compilation unit nsubj result compilation compound unit compilation nsubj get unit ccomp result get dobj get contents if IN unit NN types NNS root ROOT types compound types unit null JJ for IN int NN i LS unit NN types NNS length NN root ROOT length compound types unit nsubj length types i LS unit NN types NNS root ROOT types compound types unit i LS parse VB method NN root ROOT parse dobj parse method parser NN unit NN bodies be ANTONYM ANTONYM did work ANTONYM ANTONYM fill need ANTONYM ANTONYM fill void ANTONYM ANTONYM order did ANTONYM ANTONYM order done ANTONYM ANTONYM place did ANTONYM ANTONYM place done ANTONYM ANTONYM work done ANTONYM ANTONYM,1,b3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE void NAME void NAME is valid PARAMETER LIST object selection status info res PARAMETER object selection TYPE object NAME object NAME object INDEX NAME selection PARAMETER status info res TYPE status info NAME status info NAME res BLOCK COMMENT only single selection IF if selection length selection instanceof i file res set ok else res set error CONDITION selection length selection instanceof i file EXPR selection length selection instanceof i file NAME selection length NAME selection NAME length NAME selection NAME selection INDEX EXPR NAME i file THEN res set ok BLOCK EXPR res set ok CALL res set ok NAME res set ok NAME res NAME set ok ARGUMENT LIST ELSE else res set error BLOCK EXPR res set error CALL res set error NAME res set error NAME res NAME set error ARGUMENT LIST ARGUMENT EXPR COMMENT non nls public NN void NN is VBZ valid JJ root ROOT valid cop valid is object NN selection NN status NN info NN root ROOT info compound info status res NNS only single selection root ROOT selection advmod selection only amod selection single if IN selection NN length NN root ROOT length compound length selection selection NN instanceof NN i LS file NN root ROOT i root i file res JJ set NN ok NN root ROOT ok amod ok res compound ok set else RB res NNS set VBD error NN root ROOT set nsubj set res dobj set error non JJ nls NNS root ROOT nls amod nls non public single ANTONYM ANTONYM,1,b4,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE void NAME void NAME java to native PARAMETER LIST object object transfer data transfer data PARAMETER object object TYPE object NAME object NAME object PARAMETER transfer data transfer data TYPE transfer data NAME transfer data NAME transfer data BLOCK DECL STMT TYPE byte NAME byte NAME byte INDEX NAME check INIT type name get bytes EXPR type name get bytes CALL type name get bytes NAME type name get bytes NAME type name NAME get bytes ARGUMENT LIST EXPR super java to native check transfer data CALL super java to native check transfer data NAME super java to native NAME super NAME java to native ARGUMENT LIST ARGUMENT EXPR check NAME check ARGUMENT EXPR transfer data NAME transfer data public NN void NN java NN to TO native JJ root ROOT java case native to nmod to java native object NN object NN transfer NN data NNS root ROOT data compound data transfer transfer NN data NNS root ROOT data compound data transfer byte NN check NN type NN name NN root ROOT name compound name type get VB bytes NNS root ROOT get dobj get bytes super JJ java NN to TO native JJ check NN transfer NN data NNS root ROOT data compound data transfer,1,b5,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME get stats PARAMETER LIST BLOCK RETURN return stats EXPR stats NAME stats public NN boolean NN get VB stats NNS root ROOT get dobj get stats return NN stats NNS,1,b6,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT saves the current enable disable state of the given control and its descendents in the returned object the controls are all disabled param w the control return an object capturing the enable disable state FUNCTION SPECIFIER public SPECIFIER static TYPE control enable state NAME control enable state NAME disable PARAMETER LIST control w PARAMETER control w TYPE control NAME control NAME w BLOCK RETURN return new control enable state w EXPR new control enable state w CALL control enable state w NAME control enable state ARGUMENT LIST ARGUMENT EXPR w NAME w saves the current enable disable state of the given control root ROOT saves det state the amod state current amod state enable amod state disable dobj saves state case control of det control the amod control given nmod of state control and its descendents in the returned object the controls root ROOT controls cc controls and nmod poss descendents its conj and controls descendents case object in det object the amod object returned nmod in descendents object det controls the are all disabled root ROOT disabled cop disabled are det disabled all param w the control root ROOT w nsubj w param det control the dobj w control return an object capturing the enable disable state root ROOT return det object an dobj return object acl object capturing det state the amod state enable amod state disable dobj capturing state public NN static JJ control NN enable VBP state NN root ROOT enable nsubj enable control dobj enable state disable VB control NN w NN return NN new JJ control NN enable VBP state NN root ROOT enable nsubj enable control dobj enable state w NN enable disable ANTONYM ANTONYM enable disabled ANTONYM ANTONYM given control ANTONYM ANTONYM given controls ANTONYM ANTONYM saves return ANTONYM ANTONYM saves returned ANTONYM ANTONYM,1,c1,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT returns true if this listener has a target for a back navigation only one listener needs to return true for the back button to be enabled FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME is navigate forward enabled PARAMETER LIST BLOCK DECL STMT TYPE boolean NAME boolean NAME enabled INIT false EXPR false IF if is forward enabled enabled true else if is forward enabled enabled navigate forward false null CONDITION is forward enabled EXPR is forward enabled NAME is forward enabled THEN enabled true BLOCK EXPR enabled true NAME enabled ELSE else if is forward enabled enabled navigate forward false null BLOCK IF if is forward enabled enabled navigate forward false null CONDITION is forward enabled EXPR is forward enabled NAME is forward enabled THEN enabled navigate forward false null BLOCK EXPR enabled navigate forward false null NAME enabled CALL navigate forward false NAME navigate forward ARGUMENT LIST ARGUMENT EXPR false RETURN return enabled EXPR enabled NAME enabled returns true if this listener has a target for root ROOT returns amod returns true mark has if det listener this nsubj has listener advcl if true has det target a dobj has target acl target for a back navigation only one listener needs to root ROOT navigation det navigation a amod navigation back advmod one only nummod listener one nsubj needs listener acl relcl navigation needs nmod needs to a back navigation only one listener needs to root ROOT navigation det navigation a amod navigation back advmod one only nummod listener one nsubj needs listener acl relcl navigation needs nmod needs to return true for the back button to be enabled root ROOT return amod return true mark enabled for det button the amod button back nsubjpass enabled button mark enabled to auxpass enabled be advcl to true enabled public NN boolean NN is VBZ navigate VB forward RB enabled VBD root ROOT navigate aux navigate is advmod navigate forward dep navigate enabled boolean NN enabled VBD false JJ if IN is VBZ forward RB enabled VBN root ROOT enabled auxpass enabled is advmod enabled forward enabled VBD true JJ else RB if IN is VBZ forward RB enabled VBN root ROOT enabled auxpass enabled is advmod enabled forward enabled VBD navigate VB forward RB root ROOT navigate advmod navigate forward false JJ null JJ return NN enabled VBD has needs ANTONYM ANTONYM has return ANTONYM ANTONYM returns has ANTONYM ANTONYM true false ANTONYM ANTONYM false null SYNONYM SYNONYM,1,c2,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
DECL STMT TYPE vector NAME vector NAME target vector NN target NN,1,d1,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,768
DECL STMT TYPE int NAME int NAME int INDEX NAME is reached int NN is VBZ reached VBN root ROOT reached auxpass reached is,1,d2,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT TYPE m association end NAME m association end NAME start INIT null EXPR null m NN association NN end NN root ROOT end compound end m compound end association start NN null JJ,1,f1,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,768
COMMENT configuration default exclude pattern ie href action frame src DECL STMT SPECIFIER public TYPE final static string SPECIFIER final SPECIFIER static NAME string NAME include name default INIT href action frame src EXPR href action frame src configuration default exclude pattern root ROOT exclude compound default configuration nsubj exclude default dobj exclude pattern ie href action frame src root ROOT src compound src ie compound src href compound src action compound src frame ie href action frame src root ROOT src compound src ie compound src href compound src action compound src frame ie href action frame src root ROOT src compound src ie compound src href compound src action compound src frame public NN final JJ static JJ string NN include VBP name NN default NN root ROOT include compound default name dobj include default href NN action NN frame NN src NN configuration frame ANTONYM ANTONYM configuration pattern ANTONYM ANTONYM exclude include ANTONYM ANTONYM frame name ANTONYM ANTONYM pattern frame ANTONYM ANTONYM pattern name ANTONYM ANTONYM,1,f2,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/application/helpers/ResourceLoaderWrapper.java,88
DECL STMT TYPE int NAME int NAME references int NN references NNS,1,e1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT returns the list of sub keys DECL STMT TYPE bool NAME bool NAME get sub keys ARGUMENT LIST ARGUMENT EXPR c string list subkeys NAME c string list NAME subkeys bool NN get VB sub JJ keys NNS root ROOT get amod keys sub dobj get keys c NN string NN list NN root ROOT list compound list c compound list string subkeys NNS returns NNS the DT list NN of IN sub NN keys NNS list keys ANTONYM ANTONYM,1,B6,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
FUNCTION SPECIFIER public TYPE int NAME int NAME get rows PARAMETER LIST BLOCK RETURN return rows EXPR rows NAME rows public NN int NN get VB rows NNS root ROOT get dobj get rows return NN rows NNS,1,b6,javacv/src/main/java/org/bytedeco/javacv/Marker.java,167
DECL STMT SPECIFIER private TYPE string NAME string NAME types private JJ string NN types NNS,1,e1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION SPECIFIER public TYPE string NAME string NAME get types PARAMETER LIST BLOCK RETURN return types EXPR types NAME types public NN string NN get VB types NNS root ROOT get dobj get types return NN types NNS,1,b6,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE double NAME double NAME double INDEX NAME peak private JJ double RB peak NN,1,d1,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private TYPE int NAME int NAME nulls private JJ int NN nulls NNS,1,e1,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT TYPE final int SPECIFIER final NAME int NAME ord final JJ int NN ord NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT TYPE long NAME long NAME fp end long RB fp NN end NN root ROOT end compound end fp,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT TYPE byte NAME byte NAME byte INDEX NAME stat bytes INIT new byte EXPR new byte NAME byte NAME byte INDEX EXPR byte NN stat NN bytes NNS root ROOT bytes compound bytes stat new JJ byte NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT TYPE byte NAME byte NAME byte INDEX NAME floor data INIT new byte EXPR new byte NAME byte NAME byte INDEX EXPR byte NN floor NN data NNS root ROOT data compound data floor new JJ byte NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT TYPE byte NAME byte NAME byte INDEX NAME suffix bytes INIT new byte EXPR new byte NAME byte NAME byte INDEX EXPR byte NN suffix NN bytes NNS root ROOT bytes compound bytes suffix new JJ byte NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT TYPE int NAME int NAME prefix int NN prefix NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT true if all entries are terms DECL STMT TYPE boolean NAME boolean NAME is leaf block true if all entries are terms root ROOT true mark terms if det entries all nsubj terms entries cop terms are advcl if true terms boolean NN is VBZ leaf NN block NN root ROOT block cop block is compound block leaf,0,n/a,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,57
DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME version current INIT EXPR public NN static JJ final JJ int NN version NN current JJ root ROOT current compound current version,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER private TYPE int NAME int NAME bloom size private JJ int NN bloom NN size NN root ROOT size compound size bloom,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT records a value in the set the referenced bytes are hashed and then modulo n d where n is the chosen size of the internal bitset param value the key value to be hashed throws io exception if there is a low level i o error FUNCTION SPECIFIER public TYPE void NAME void NAME add value PARAMETER LIST bytes ref value PARAMETER bytes ref value TYPE bytes ref NAME bytes ref NAME value THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK DECL STMT TYPE int NAME int NAME hash INIT hash function hash value EXPR hash function hash value CALL hash function hash value NAME hash function hash NAME hash function NAME hash ARGUMENT LIST ARGUMENT EXPR value NAME value IF if hash hash hash CONDITION hash EXPR hash NAME hash THEN hash hash BLOCK EXPR hash hash NAME hash NAME hash COMMENT bitmasking using bloom size is effectively a modulo operation DECL STMT TYPE int NAME int NAME bloom pos INIT hash bloom size EXPR hash bloom size NAME hash NAME bloom size EXPR filter set bloom pos CALL filter set bloom pos NAME filter set NAME filter NAME set ARGUMENT LIST ARGUMENT EXPR bloom pos NAME bloom pos records a value in the set the referenced bytes are hashed and then modulo n d where n is the root ROOT records det value a dobj records value case set in det set the nmod in hashed set det bytes the amod bytes referenced nsubjpass hashed bytes auxpass hashed are dep value hashed cc hashed and advmod d then compound d modulo compound d n dep value d conj and hashed d advmod the where nsubj the n cop the is acl relcl d the records a value in the set the referenced bytes are hashed and then modulo n d where n is the root ROOT records det value a dobj records value case set in det set the nmod in hashed set det bytes the amod bytes referenced nsubjpass hashed bytes auxpass hashed are dep value hashed cc hashed and advmod d then compound d modulo compound d n dep value d conj and hashed d advmod the where nsubj the n cop the is acl relcl d the chosen size of the internal bitset root ROOT size amod size chosen case bitset of det bitset the amod bitset internal nmod of size bitset param value the key value to be hashed root ROOT value compound value param det value the amod value key dep value value mark hashed to auxpass hashed be acl to value hashed throws io exception if there is a low level i o error root ROOT throws compound exception io dobj throws exception mark is if expl is there advcl if throws is det level a amod level low nsubj is level compound error i compound error o dep level error public NN void NN add VB value NN root ROOT add dobj add value bytes NNS ref VBP root ROOT ref nsubj ref bytes value NN throws VBZ io NN exception NN root ROOT exception compound exception io int NN hash NN hash NN function NN hash VBP root ROOT hash compound function hash nsubj hash function value NN if IN hash NN hash NN hash NN bitmasking using bloom size is effectively a modulo operation root ROOT operation csubj operation bitmasking xcomp bitmasking using compound size bloom dobj using size cop operation is advmod operation effectively det operation a amod operation modulo int NN bloom NN pos NNS root ROOT pos compound pos bloom hash NN bloom NN size NN root ROOT size compound size bloom filter NN set NN root ROOT set compound set filter bloom NN pos NNS root ROOT pos compound pos bloom d key ANTONYM ANTONYM i key ANTONYM ANTONYM level set ANTONYM ANTONYM public internal ANTONYM ANTONYM d i SYNONYM SYNONYM,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
FUNCTION SPECIFIER public TYPE long NAME long NAME ram bytes used PARAMETER LIST BLOCK RETURN return ram usage estimator size of filter get bits EXPR ram usage estimator size of filter get bits CALL ram usage estimator size of filter get bits NAME ram usage estimator size of NAME ram usage estimator NAME size of ARGUMENT LIST ARGUMENT EXPR filter get bits CALL filter get bits NAME filter get bits NAME filter NAME get bits ARGUMENT LIST public NN long RB ram NN bytes NNS used VBN root ROOT used compound bytes ram nsubj used bytes return NN ram NN usage NN estimator NN size NN of IN root ROOT size compound size ram compound size usage compound size estimator acl size of filter NN get VB bits NNS root ROOT get nsubj get filter dobj get bits,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME is saturated PARAMETER LIST fuzzy set bloom filter field info field info PARAMETER fuzzy set bloom filter TYPE fuzzy set NAME fuzzy set NAME bloom filter PARAMETER field info field info TYPE field info NAME field info NAME field info BLOCK COMMENT don t bother saving bitsets if of bits are set we don t want to COMMENT throw any more memory at this problem RETURN return bloom filter get saturation f EXPR bloom filter get saturation f CALL bloom filter get saturation NAME bloom filter get saturation NAME bloom filter NAME get saturation ARGUMENT LIST public NN boolean NN is VBZ saturated VBN root ROOT saturated auxpass saturated is fuzzy JJ set NN root ROOT set amod set fuzzy bloom NN filter NN root ROOT filter compound filter bloom field NN info NN root ROOT info compound info field field NN info NN root ROOT info compound info field don t bother saving bitsets if of bits are set we don t want to root ROOT don nsubj bother t ccomp don bother xcomp bother saving dobj saving bitsets mark set if mwe if of nsubjpass set bits auxpass set are advcl if of bother set nsubj don we ccomp set don nsubj want t nsubj xsubj to t ccomp don want xcomp want to throw any more memory at this problem root ROOT throw det memory any amod memory more dobj throw memory case problem at det problem this nmod at throw problem return NN bloom NN filter NN get VB saturation NN root ROOT get compound filter bloom nsubj get filter dobj get saturation f SYM bother problem ANTONYM ANTONYM saving return ANTONYM ANTONYM throw return ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE int NAME int NAME size PARAMETER LIST BLOCK RETURN return fields size EXPR fields size CALL fields size NAME fields size NAME fields NAME size ARGUMENT LIST public NN int NN size NN return NN fields NNS size NN root ROOT size compound size fields,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE void NAME void NAME check integrity PARAMETER LIST THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK COMMENT term dictionary EXPR codec util checksum entire file in CALL codec util checksum entire file in NAME codec util checksum entire file NAME codec util NAME checksum entire file ARGUMENT LIST ARGUMENT EXPR in NAME in COMMENT postings EXPR postings reader check integrity CALL postings reader check integrity NAME postings reader check integrity NAME postings reader NAME check integrity ARGUMENT LIST public NN void NN check NN integrity NN root ROOT integrity compound integrity check throws VBZ io NN exception NN root ROOT exception compound exception io term dictionary root ROOT dictionary compound dictionary term codec NN util NN checksum NN entire JJ file NN root ROOT file compound file codec compound file util compound file checksum amod file entire in IN postings postings NNS reader NN check NN integrity NN root ROOT integrity compound integrity postings compound integrity reader compound integrity check,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE final list field meta data SPECIFIER final NAME list field meta data NAME list ARGUMENT LIST ARGUMENT NAME field meta data NAME fields INIT new array list EXPR new array list CALL array list NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST private JJ final JJ list NN field NN meta NN data NNS root ROOT data compound data field compound data meta fields NNS new JJ array NN list NN root ROOT list compound list array,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT reused in write blocks DECL STMT SPECIFIER private TYPE final list pending block SPECIFIER final NAME list pending block NAME list ARGUMENT LIST ARGUMENT NAME pending block NAME new blocks INIT new array list EXPR new array list CALL array list NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST reused in write blocks root ROOT reused mark write in advcl in reused write dobj write blocks private JJ final JJ list NN pending VBG block NN root ROOT block amod block pending new JJ blocks NNS root ROOT blocks amod blocks new new JJ array NN list NN root ROOT list compound list array,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
DECL STMT SPECIFIER private TYPE pending term NAME pending term NAME first pending term private JJ pending VBG term NN root ROOT term amod term pending first RB pending VBG term NN root ROOT term advmod term first amod term pending,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER private TYPE pending term NAME pending term NAME last pending term private JJ pending VBG term NN root ROOT term amod term pending last JJ pending JJ term NN root ROOT term amod term last amod term pending,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION SPECIFIER public TYPE void NAME void NAME finish doc PARAMETER LIST THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK IF if last doc id doc is deleted skip it return CONDITION last doc id EXPR last doc id NAME last doc id THEN doc is deleted skip it return BLOCK COMMENT doc is deleted skip it RETURN return IF if last position throw new illegal argument exception missing add position CONDITION last position EXPR last position NAME last position THEN throw new illegal argument exception missing add position BLOCK THROW throw new illegal argument exception missing add position EXPR new illegal argument exception missing add position CALL illegal argument exception missing add position NAME illegal argument exception ARGUMENT LIST ARGUMENT EXPR missing add position public NN void NN finish NN doc NN root ROOT doc compound doc finish throws VBZ io NN exception NN root ROOT exception compound exception io if IN last JJ doc NN id NN root ROOT id amod id last compound id doc doc is deleted skip it root ROOT deleted nsubjpass deleted doc auxpass deleted is xcomp deleted skip dobj skip it return NN if IN last JJ position NN root ROOT position amod position last throw VB new JJ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument missing VBG add VB position NN root ROOT add dobj add position return throw ANTONYM ANTONYM throw missing ANTONYM ANTONYM throws missing ANTONYM ANTONYM throws return ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE long NAME long NAME last encoded version private JJ long RB last JJ encoded VBN version NN root ROOT version amod version last amod version encoded,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION SPECIFIER public TYPE void NAME void NAME encode term PARAMETER LIST long longs data output out field info field info block term state state boolean absolute PARAMETER long longs TYPE long NAME long NAME long INDEX NAME longs PARAMETER data output out TYPE data output NAME data output NAME out PARAMETER field info field info TYPE field info NAME field info NAME field info PARAMETER block term state state TYPE block term state NAME block term state NAME state PARAMETER boolean absolute TYPE boolean NAME boolean NAME absolute THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK DECL STMT TYPE id version term state NAME id version term state NAME state INIT id version term state state EXPR id version term state state NAME id version term state NAME state EXPR out write v int state doc id CALL out write v int state doc id NAME out write v int NAME out NAME write v int ARGUMENT LIST ARGUMENT EXPR state doc id NAME state doc id NAME state NAME doc id IF if absolute out write v long state id version else long delta state id version last encoded version out write z long delta CONDITION absolute EXPR absolute NAME absolute THEN out write v long state id version BLOCK EXPR out write v long state id version CALL out write v long state id version NAME out write v long NAME out NAME write v long ARGUMENT LIST ARGUMENT EXPR state id version NAME state id version NAME state NAME id version ELSE else long delta state id version last encoded version out write z long delta BLOCK DECL STMT TYPE long NAME long NAME delta INIT state id version last encoded version EXPR state id version last encoded version NAME state id version NAME state NAME id version NAME last encoded version EXPR out write z long delta CALL out write z long delta NAME out write z long NAME out NAME write z long ARGUMENT LIST ARGUMENT EXPR delta NAME delta EXPR last encoded version state id version NAME last encoded version NAME state id version NAME state NAME id version public NN void NN encode VBP term NN root ROOT encode dobj encode term long RB longs NNS data NNS output NN root ROOT output compound output data out IN field NN info NN root ROOT info compound info field field NN info NN root ROOT info compound info field block NN term NN state NN root ROOT state compound state block compound state term state NN boolean NN absolute JJ throws VBZ io NN exception NN root ROOT exception compound exception io id NN version NN term NN state NN root ROOT state compound state id compound state version compound state term state NN id NN version NN term NN state NN root ROOT state compound state id compound state version compound state term state NN out IN write VB v LS int NN root ROOT write mark write out dobj write v root v int state NN doc NN id NN root ROOT id compound id state compound id doc if IN absolute JJ out IN write VB v LS long RB root ROOT write mark write out dobj write v advmod v long state NN id VBD version NN root ROOT id nsubj id state dobj id version else RB long RB delta NN state NN id VBD version NN root ROOT id nsubj id state dobj id version last JJ encoded VBN version NN root ROOT version amod version last amod version encoded out IN write VB z SYM long RB root ROOT write mark write out dep long z advmod write long delta NN last JJ encoded VBN version NN root ROOT version amod version last amod version encoded state NN id VBD version NN root ROOT id nsubj id state dobj id version,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME has freqs PARAMETER LIST BLOCK RETURN return field info get index options compare to index options docs and freqs EXPR field info get index options compare to index options docs and freqs CALL field info get index options NAME field info get index options NAME field info NAME get index options ARGUMENT LIST CALL compare to index options docs and freqs NAME compare to ARGUMENT LIST ARGUMENT EXPR index options docs and freqs NAME index options docs and freqs NAME index options NAME docs and freqs public NN boolean NN has VBZ freqs NNS root ROOT has dobj has freqs return NN field NN info NN get VB index NN options NNS root ROOT get compound info field nsubj get info compound options index dobj get options compare VB to TO root ROOT compare dep compare to index NN options NNS docs NNS root ROOT docs compound docs index compound docs options and CC freqs NNS root ROOT freqs cc freqs and,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE boolean NAME boolean NAME has offsets PARAMETER LIST BLOCK RETURN return field info get index options compare to index options docs and freqs and positions and offsets EXPR field info get index options compare to index options docs and freqs and positions and offsets CALL field info get index options NAME field info get index options NAME field info NAME get index options ARGUMENT LIST CALL compare to index options docs and freqs and positions and offsets NAME compare to ARGUMENT LIST ARGUMENT EXPR index options docs and freqs and positions and offsets NAME index options docs and freqs and positions and offsets NAME index options NAME docs and freqs and positions and offsets override NN public NN boolean NN has VBZ offsets NNS root ROOT has dobj has offsets return NN field NN info NN get VB index NN options NNS root ROOT get compound info field nsubj get info compound options index dobj get options compare VB to TO root ROOT compare dep compare to index NN options NNS docs NNS root ROOT docs compound docs index compound docs options and CC freqs NNS and CC positions NNS and CC offsets NNS root ROOT and dep and freqs cc freqs and dep and positions conj and freqs positions cc freqs and dep and offsets conj and freqs offsets,0,n/a,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,768
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE boolean NAME boolean NAME has positions PARAMETER LIST BLOCK RETURN return field info get index options compare to index options docs and freqs and positions EXPR field info get index options compare to index options docs and freqs and positions CALL field info get index options NAME field info get index options NAME field info NAME get index options ARGUMENT LIST CALL compare to index options docs and freqs and positions NAME compare to ARGUMENT LIST ARGUMENT EXPR index options docs and freqs and positions NAME index options docs and freqs and positions NAME index options NAME docs and freqs and positions override NN public NN boolean NN has VBZ positions NNS root ROOT has dobj has positions return NN field NN info NN get VB index NN options NNS root ROOT get compound info field nsubj get info compound options index dobj get options compare VB to TO root ROOT compare dep compare to index NN options NNS docs NNS root ROOT docs compound docs index compound docs options and CC freqs NNS and CC positions NNS root ROOT and dep and freqs cc freqs and dep and positions conj and freqs positions,0,n/a,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,768
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE boolean NAME boolean NAME has payloads PARAMETER LIST BLOCK RETURN return field info has payloads EXPR field info has payloads CALL field info has payloads NAME field info has payloads NAME field info NAME has payloads ARGUMENT LIST override NN public NN boolean NN has VBZ payloads NNS root ROOT has dobj has payloads return NN field NN info NN has VBZ payloads NNS root ROOT has compound info field nsubj has info dobj has payloads,0,n/a,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,768
FUNCTION SPECIFIER public TYPE long NAME long NAME get sum total term freq PARAMETER LIST BLOCK RETURN return sum total term freq EXPR sum total term freq NAME sum total term freq public NN long RB get VB sum NN total JJ term NN freq NN root ROOT get compound freq sum amod freq total compound freq term dobj get freq return NN sum NN total JJ term NN freq NN root ROOT freq compound freq sum amod freq total compound freq term,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE long NAME long NAME get sum doc freq PARAMETER LIST BLOCK RETURN return sum doc freq EXPR sum doc freq NAME sum doc freq public NN long RB get VB sum NN doc NN freq NN root ROOT get compound freq sum compound freq doc dobj get freq return NN sum NN doc NN freq NN root ROOT freq compound freq sum compound freq doc,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE int NAME int NAME get doc count PARAMETER LIST BLOCK RETURN return doc count EXPR doc count NAME doc count public NN int NN get VB doc NN count NN root ROOT get compound count doc dobj get count return NN doc NN count NN root ROOT count compound count doc,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE long NAME long NAME ram bytes used PARAMETER LIST BLOCK RETURN return index null index ram bytes used EXPR index null index ram bytes used TERNARY index null index ram bytes used CONDITION index null EXPR index null NAME index THEN index ram bytes used EXPR index ram bytes used CALL index ram bytes used NAME index ram bytes used NAME index NAME ram bytes used ARGUMENT LIST ELSE EXPR public NN long RB ram NN bytes NNS used VBN root ROOT used compound bytes ram nsubj used bytes return NN index NN null JJ index NN ram NN bytes NNS used VBN root ROOT used compound bytes index compound bytes ram nsubj used bytes,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE boolean NAME boolean NAME is new fragment PARAMETER LIST BLOCK DECL STMT TYPE boolean NAME boolean NAME is new frag INIT offset att end offset fragment size current num frags EXPR offset att end offset fragment size current num frags CALL offset att end offset NAME offset att end offset NAME offset att NAME end offset ARGUMENT LIST NAME fragment size NAME current num frags IF if is new frag current num frags CONDITION is new frag EXPR is new frag NAME is new frag THEN current num frags BLOCK EXPR current num frags NAME current num frags RETURN return is new frag EXPR is new frag NAME is new frag override NN public NN boolean NN is VBZ new JJ fragment NN root ROOT fragment cop fragment is amod fragment new boolean NN is VBZ new JJ frag NN root ROOT frag cop frag is amod frag new offset VBN att NN end NN offset VBP root ROOT offset amod end offset compound end att nsubj offset end fragment NN size NN root ROOT size compound size fragment current JJ num NN frags NNS root ROOT frags amod frags current compound frags num if IN is VBZ new JJ frag NN root ROOT frag cop frag is amod frag new current JJ num NN frags NNS root ROOT frags amod frags current compound frags num return NN is VBZ new JJ frag NN root ROOT frag cop frag is amod frag new,0,n/a,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,768
DECL STMT TYPE int NAME int NAME frag num int NN frag NN num NN root ROOT num compound num frag,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION TYPE void NAME void NAME set score PARAMETER LIST float score PARAMETER float score TYPE float NAME float NAME score BLOCK EXPR this score score NAME this score NAME this NAME score NAME score void NN set VBN score NN root ROOT set dobj set score float NN score NN this DT score NN score NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE float NAME float NAME get score PARAMETER LIST BLOCK RETURN return score EXPR score NAME score public NN float NN get VB score NN root ROOT get dobj get score return NN score NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT param frag fragment to be merged into this one FUNCTION SPECIFIER public TYPE void NAME void NAME merge PARAMETER LIST text fragment frag PARAMETER text fragment frag TYPE text fragment NAME text fragment NAME frag BLOCK EXPR text end pos frag text end pos NAME text end pos NAME frag text end pos NAME frag NAME text end pos EXPR score math max score frag score NAME score CALL math max score frag score NAME math max NAME math NAME max ARGUMENT LIST ARGUMENT EXPR score NAME score ARGUMENT EXPR frag score NAME frag score NAME frag NAME score param frag fragment to be merged into this one root ROOT fragment compound fragment param compound fragment frag mark merged to auxpass merged be acl to fragment merged case one into det one this nmod into merged one public NN void NN merge VB text NN fragment NN root ROOT fragment compound fragment text frag NN text NN end NN pos NNS root ROOT pos compound pos text compound pos end frag NN text NN end NN pos NNS root ROOT pos compound pos frag compound pos text compound pos end score NN math NN max NN root ROOT max compound max math score NN frag NN score NN root ROOT score compound score frag merged one SYNONYM SYNONYM,0,n/a,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/state/ui/FigStateVertex.java,169
COMMENT return the fragment sequence number FUNCTION SPECIFIER public TYPE int NAME int NAME get frag num PARAMETER LIST BLOCK RETURN return frag num EXPR frag num NAME frag num return the fragment sequence number root ROOT return det number the compound number fragment compound number sequence dobj return number public NN int NN get VB frag NN num NN root ROOT get compound num frag dobj get num return NN frag NN num NN root ROOT num compound num frag return number ANTONYM ANTONYM,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
DECL STMT SPECIFIER private TYPE list position span NAME list position span NAME list ARGUMENT LIST ARGUMENT NAME position span NAME position spans INIT new array list EXPR new array list CALL array list NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST private JJ list NN position NN span NN root ROOT span compound span position position NN spans NNS root ROOT spans compound spans position new JJ array NN list NN root ROOT list compound list array,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
CONSTRUCTOR public weighted span term float weight string term boolean position sensitive super weight term this position sensitive position sensitive SPECIFIER public NAME weighted span term PARAMETER LIST float weight string term boolean position sensitive PARAMETER float weight TYPE float NAME float NAME weight PARAMETER string term TYPE string NAME string NAME term PARAMETER boolean position sensitive TYPE boolean NAME boolean NAME position sensitive BLOCK EXPR super weight term CALL super weight term NAME super ARGUMENT LIST ARGUMENT EXPR weight NAME weight ARGUMENT EXPR term NAME term EXPR this position sensitive position sensitive NAME this position sensitive NAME this NAME position sensitive NAME position sensitive public NN weighted JJ span NN term NN root ROOT term amod term weighted compound term span float NN weight NN string NN term NN boolean NN position NN sensitive JJ root ROOT sensitive nmod npmod sensitive position super JJ weight NN term NN this DT position NN sensitive JJ position NN sensitive JJ root ROOT sensitive nmod npmod sensitive position,0,n/a,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
COMMENT checks to see if this term is valid at code position code param position to check against valid term positions return true iff this term is a hit at this position FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME check position PARAMETER LIST int position PARAMETER int position TYPE int NAME int NAME position BLOCK COMMENT there would probably be a slight speed improvement if position spans COMMENT where kept in some sort of priority queue that way this method COMMENT could COMMENT bail early without checking each position span DECL STMT TYPE iterator position span NAME iterator position span NAME iterator ARGUMENT LIST ARGUMENT NAME position span NAME position span it INIT position spans iterator EXPR position spans iterator CALL position spans iterator NAME position spans iterator NAME position spans NAME iterator ARGUMENT LIST WHILE while position span it has next position span pos span position span it next if position pos span start position pos span end return true CONDITION position span it has next EXPR position span it has next CALL position span it has next NAME position span it has next NAME position span it NAME has next ARGUMENT LIST BLOCK DECL STMT TYPE position span NAME position span NAME pos span INIT position span it next EXPR position span it next CALL position span it next NAME position span it next NAME position span it NAME next ARGUMENT LIST IF if position pos span start position pos span end return true CONDITION position pos span start position pos span end EXPR position pos span start position pos span end NAME position NAME pos span start NAME pos span NAME start NAME position NAME pos span end NAME pos span NAME end THEN return true BLOCK RETURN return true EXPR true RETURN return false EXPR false checks to see if this term is valid at code position code root ROOT checks mark see to acl to checks see mark valid if det term this nsubj valid term cop valid is advcl if see valid case code at compound code code compound code position nmod at valid code param position root ROOT position compound position param to check against valid term positions root ROOT check mark check to case positions against amod positions valid compound positions term nmod against check positions return true iff this term is a hit at this position root ROOT hit compound term return amod term true advmod term iff det term this nsubj hit term cop hit is det hit a case position at det position this nmod at hit position public NN boolean NN check NN position NN root ROOT position compound position check int NN position NN there would probably be a slight speed improvement if position spans root ROOT improvement nsubj improvement there aux improvement would advmod improvement probably cop improvement be det improvement a amod improvement slight compound improvement speed case spans if compound spans position nmod if improvement spans where kept in some sort of priority queue that way this method root ROOT kept advmod kept where case sort in det sort some nmod in kept sort case queue of compound queue priority nmod of sort queue det way that dep kept way det method this dep way method could bail early without checking each position span root ROOT bail advmod checking early mark checking without acl without bail checking det position each nsubj span position ccomp checking span iterator NN position NN span NN root ROOT span compound span position position NN span NN it PRP root ROOT span compound span position dep span it position NN spans VBZ iterator NN root ROOT spans nsubj spans position dobj spans iterator while IN position NN span NN it PRP has VBZ next JJ root ROOT span compound span position nsubj has it acl relcl span has advmod has next position NN span NN root ROOT span compound span position pos NNS span VBP root ROOT span nsubj span pos position NN span NN it PRP next IN root ROOT span compound span position dep span it det it next if IN position NN pos NNS span VBP start NN root ROOT span nsubj span pos dobj span start position NN pos NNS span VBP end NN root ROOT span nsubj span pos dobj span end return NN true JJ return NN false JJ check end ANTONYM ANTONYM check hit ANTONYM ANTONYM check kept ANTONYM ANTONYM check return ANTONYM ANTONYM checking end ANTONYM ANTONYM checks end ANTONYM ANTONYM checks hit ANTONYM ANTONYM checks kept ANTONYM ANTONYM checks return ANTONYM ANTONYM hit checking ANTONYM ANTONYM kept checking ANTONYM ANTONYM return checking ANTONYM ANTONYM see hit ANTONYM ANTONYM some each ANTONYM ANTONYM speed check ANTONYM ANTONYM speed checking ANTONYM ANTONYM speed checks ANTONYM ANTONYM start check ANTONYM ANTONYM start checking ANTONYM ANTONYM start checks ANTONYM ANTONYM start end ANTONYM ANTONYM start end ANTONYM ANTONYM true false ANTONYM ANTONYM valid false ANTONYM ANTONYM in next SYNONYM SYNONYM,0,n/a,ArgoUML0.34/argouml-java/src/org/argouml/language/java/generator/GeneratorJava.java,1289
FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME is position sensitive PARAMETER LIST BLOCK RETURN return position sensitive EXPR position sensitive NAME position sensitive public NN boolean NN is VBZ position NN sensitive JJ root ROOT sensitive cop sensitive is nmod npmod sensitive position return NN position NN sensitive JJ root ROOT sensitive nmod npmod sensitive position,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE void NAME void NAME set position sensitive PARAMETER LIST boolean position sensitive PARAMETER boolean position sensitive TYPE boolean NAME boolean NAME position sensitive BLOCK EXPR this position sensitive position sensitive NAME this position sensitive NAME this NAME position sensitive NAME position sensitive public NN void NN set VBN position NN sensitive JJ root ROOT set nmod npmod sensitive position xcomp set sensitive boolean NN position NN sensitive JJ root ROOT sensitive nmod npmod sensitive position this DT position NN sensitive JJ position NN sensitive JJ root ROOT sensitive nmod npmod sensitive position,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE list position span NAME list position span NAME list ARGUMENT LIST ARGUMENT NAME position span NAME get position spans PARAMETER LIST BLOCK RETURN return position spans EXPR position spans NAME position spans public NN list NN position NN span NN root ROOT span compound span position get VB position NN spans NNS root ROOT get compound spans position dobj get spans return NN position NN spans NNS root ROOT spans compound spans position,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT returns the total number of tokens for this field see terms get sum total term freq FUNCTION SPECIFIER public SPECIFIER final TYPE long NAME long NAME sum total term freq PARAMETER LIST BLOCK RETURN return sum total term freq EXPR sum total term freq NAME sum total term freq returns the total number of tokens for this field root ROOT returns det number the amod number total dobj returns number case tokens of nmod of number tokens case field for det field this nmod for number field see terms get sum total term freq root ROOT see nsubj get terms ccomp see get compound freq sum amod freq total compound freq term dobj get freq public NN final JJ long RB sum NN total JJ term NN freq NN root ROOT freq compound freq sum amod freq total compound freq term return NN sum NN total JJ term NN freq NN root ROOT freq compound freq sum amod freq total compound freq term number return ANTONYM ANTONYM returns number ANTONYM ANTONYM total final ANTONYM ANTONYM,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT returns the total number of postings for this field see terms get sum doc freq FUNCTION SPECIFIER public SPECIFIER final TYPE long NAME long NAME sum doc freq PARAMETER LIST BLOCK RETURN return sum doc freq EXPR sum doc freq NAME sum doc freq returns the total number of postings for this field root ROOT returns det number the amod number total dobj returns number case postings of nmod of number postings case field for det field this nmod for number field see terms get sum doc freq root ROOT see nsubj get terms ccomp see get compound freq sum compound freq doc dobj get freq public NN final JJ long RB sum NN doc NN freq NN root ROOT freq compound freq sum compound freq doc return NN sum NN doc NN freq NN root ROOT freq compound freq sum compound freq doc number return ANTONYM ANTONYM returns number ANTONYM ANTONYM total final ANTONYM ANTONYM,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
DECL STMT SPECIFIER private TYPE final disi priority queue SPECIFIER final NAME disi priority queue NAME sub scorers private JJ final JJ disi NN priority NN queue NN root ROOT queue compound queue disi compound queue priority sub NN scorers NNS root ROOT scorers compound scorers sub,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
FUNCTION SPECIFIER public TYPE int NAME int NAME compare bottom PARAMETER LIST int doc PARAMETER int doc TYPE int NAME int NAME doc THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK RETURN return integer compare bottom get value for doc doc EXPR integer compare bottom get value for doc doc CALL integer compare bottom get value for doc doc NAME integer compare NAME integer NAME compare ARGUMENT LIST ARGUMENT EXPR bottom NAME bottom ARGUMENT EXPR get value for doc doc CALL get value for doc doc NAME get value for doc ARGUMENT LIST ARGUMENT EXPR doc NAME doc public NN int NN compare VB bottom NN root ROOT compare dobj compare bottom int NN doc NN throws VBZ io NN exception NN root ROOT exception compound exception io return NN integer NN compare VB root ROOT compare nsubj compare integer bottom NN get VB value NN for IN doc NN root ROOT get dobj get value case doc for nmod for get doc doc NN throws return ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE void NAME void NAME set bottom PARAMETER LIST final int bottom PARAMETER final int bottom TYPE final int SPECIFIER final NAME int NAME bottom BLOCK EXPR this bottom values bottom NAME this bottom NAME this NAME bottom NAME values bottom NAME values INDEX bottom EXPR bottom NAME bottom public NN void NN set VBN bottom NN root ROOT set dobj set bottom final JJ int NN bottom NN this DT bottom NN values NNS bottom NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT returns the pattern term FUNCTION SPECIFIER public TYPE term NAME term NAME get term PARAMETER LIST BLOCK RETURN return term EXPR term NAME term returns the pattern term root ROOT returns det term the compound term pattern dobj returns term public NN term NN get VB term NN root ROOT get dobj get term return NN term NN,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
FUNCTION SPECIFIER public TYPE mutable value NAME mutable value NAME duplicate PARAMETER LIST BLOCK DECL STMT TYPE mutable value int NAME mutable value int NAME v INIT new mutable value int EXPR new mutable value int CALL mutable value int NAME mutable value int ARGUMENT LIST EXPR v value this value NAME v value NAME v NAME value NAME this value NAME this NAME value EXPR v exists this exists NAME v exists NAME v NAME exists NAME this exists NAME this NAME exists RETURN return v EXPR v NAME v public NN mutable JJ value NN root ROOT value amod value mutable duplicate VB mutable JJ value NN int NN root ROOT int amod int mutable compound int value v LS new JJ mutable JJ value NN int NN root ROOT int amod int mutable compound int value v LS value NN root ROOT value amod value v this DT value NN v LS exists VBZ root ROOT exists nsubj exists v this DT exists VBZ return NN v LS,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT convert to degrees param radians radians to convert to degrees return degrees FUNCTION SPECIFIER public SPECIFIER static TYPE double NAME double NAME to degrees PARAMETER LIST final double radians PARAMETER final double radians TYPE final double SPECIFIER final NAME double NAME radians BLOCK RETURN return radians to degrees EXPR radians to degrees NAME radians NAME to degrees convert to degrees root ROOT convert case degrees to nmod to convert degrees param radians radians to convert to degrees root ROOT radians compound radians param compound radians radians mark convert to acl to radians convert case degrees to nmod to convert degrees return degrees root ROOT degrees compound degrees return public NN static JJ double RB to TO degrees NNS root ROOT degrees case degrees to final JJ double RB radians NNS return NN radians NNS to TO degrees NNS root ROOT degrees case degrees to,0,n/a,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/cognitive/ui/ToDoPane.java,127
COMMENT this method returns the internal heap array as object lucene internal FUNCTION SPECIFIER protected SPECIFIER final TYPE object NAME object NAME object INDEX NAME get heap array PARAMETER LIST BLOCK RETURN return object heap EXPR object heap NAME object NAME object INDEX NAME heap this method returns the internal heap array as object root ROOT returns det method this nsubj returns method det array the amod array internal compound array heap dobj returns array case object as nmod as returns object lucene internal root ROOT internal nmod npmod internal lucene lucene internal root ROOT internal nmod npmod internal lucene protected VBN final JJ object NN get VB heap NN array NN root ROOT get compound array heap dobj get array return NN object NN heap NN,0,n/a,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,57
FUNCTION DECL public string is dependency resolution required SPECIFIER public TYPE string NAME string NAME is dependency resolution required PARAMETER LIST public NN string NN is VBZ dependency NN resolution NN required VBN root ROOT required auxpass required is compound resolution dependency nsubjpass required resolution,1,a2,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT returns a uuid unique for this member over all sessions if the member crashes and restarts the unique id will be different return byte FUNCTION DECL public byte get unique id SPECIFIER public TYPE byte NAME byte NAME byte INDEX NAME get unique id PARAMETER LIST returns a uuid unique for this member over all sessions root ROOT returns det unique a amod unique uuid dep returns unique case member for det member this nmod for unique member case sessions over det sessions all nmod over unique sessions if the member crashes and restarts the unique id will be different root ROOT different mark crashes if det member the nsubj crashes member nsubj restarts member csubj different crashes cc crashes and conj and crashes restarts csubj different restarts det id the amod id unique dobj restarts id aux different will cop different be return byte root ROOT byte compound byte return public NN byte NN get VB unique JJ id NN root ROOT get amod id unique dobj get id all over ANTONYM ANTONYM unique different SYNONYM SYNONYM,1,a4,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
FUNCTION SPECIFIER public TYPE byte NAME byte NAME byte INDEX NAME get command PARAMETER LIST BLOCK RETURN return command EXPR command NAME command public NN byte NN get VB command NN root ROOT get dobj get command return NN command NN,1,a4,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER protected SPECIFIER transient TYPE byte NAME byte NAME byte INDEX NAME map context name protected VBN transient JJ byte NN map NN context NN name NN root ROOT name compound name map compound name context,1,d1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT empty string collection to serve as the basis for empty enumerations DECL STMT SPECIFIER private SPECIFIER static TYPE final list string SPECIFIER final NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME empty string INIT collections empty list EXPR collections empty list CALL collections empty list NAME collections empty list NAME collections NAME empty list ARGUMENT LIST empty string collection to serve as the basis for empty enumerations root ROOT collection amod collection empty compound collection string mark serve to acl to collection serve case basis as det basis the nmod as serve basis case enumerations for amod enumerations empty nmod for basis enumerations private JJ static JJ final JJ list NN string NN empty JJ string NN root ROOT string amod string empty collections NNS empty JJ list NN root ROOT list compound list collections amod list empty,1,d1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,162
FUNCTION SPECIFIER public TYPE push builder NAME push builder NAME set header PARAMETER LIST string name string value PARAMETER string name TYPE string NAME string NAME name PARAMETER string value TYPE string NAME string NAME value BLOCK DECL STMT TYPE list string NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME values INIT headers get name EXPR headers get name CALL headers get name NAME headers get NAME headers NAME get ARGUMENT LIST ARGUMENT EXPR name NAME name IF if values null values new array list headers put name values else values clear CONDITION values null EXPR values null NAME values THEN values new array list headers put name values BLOCK EXPR values new array list NAME values CALL array list NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST EXPR headers put name values CALL headers put name values NAME headers put NAME headers NAME put ARGUMENT LIST ARGUMENT EXPR name NAME name ARGUMENT EXPR values NAME values ELSE else values clear BLOCK EXPR values clear CALL values clear NAME values clear NAME values NAME clear ARGUMENT LIST EXPR values add value CALL values add value NAME values add NAME values NAME add ARGUMENT LIST ARGUMENT EXPR value NAME value RETURN return this EXPR this NAME this public NN push NN builder NN root ROOT builder compound builder push set VBN header NN root ROOT set dobj set header string NN name NN string NN value NN list NN string NN values NNS headers NNS get VBP root ROOT get nsubj get headers name NN if IN values NNS null JJ values NNS new JJ array NN list NN root ROOT list compound list array headers NNS put VBD root ROOT put nsubj put headers name NN values NNS else RB values NNS clear JJ root ROOT clear nsubj clear values values NNS add VBP root ROOT add nsubj add values value NN return NN this DT clear return ANTONYM ANTONYM get add ANTONYM ANTONYM get clear ANTONYM ANTONYM get put ANTONYM ANTONYM get return ANTONYM ANTONYM name clear ANTONYM ANTONYM name get ANTONYM ANTONYM public clear ANTONYM ANTONYM string get ANTONYM ANTONYM new else SYNONYM SYNONYM,1,a3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE v NAME v NAME set value PARAMETER LIST v value PARAMETER v value TYPE v NAME v NAME value BLOCK DECL STMT TYPE v NAME v NAME old INIT this value EXPR this value NAME this value NAME this NAME value EXPR this value value NAME this value NAME this NAME value NAME value RETURN return old EXPR old NAME old public NN v LS set VBN value NN root ROOT set dobj set value v LS value NN v LS old JJ this DT value NN this DT value NN value NN return NN old JJ,1,a3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE k NAME k NAME set key PARAMETER LIST k key PARAMETER k key TYPE k NAME k NAME key BLOCK DECL STMT TYPE k NAME k NAME old INIT this key EXPR this key NAME this key NAME this NAME key EXPR this key key NAME this key NAME this NAME key NAME key RETURN return old EXPR old NAME old public NN k NN set VBN key NN root ROOT set dobj set key k NN key NN k NN old JJ this DT key NN this DT key NN key NN return NN old JJ k key ANTONYM ANTONYM,1,a3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE void NAME void NAME set max PARAMETER LIST int limit PARAMETER int limit TYPE int NAME int NAME limit BLOCK EXPR max limit NAME max NAME limit public NN void NN set VBN max NN root ROOT set dobj set max int NN limit NN max NN limit NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER public SPECIFIER static TYPE final storage level SPECIFIER final NAME storage level NAME none INIT create false false false false EXPR create false false false false CALL create false false false false NAME create ARGUMENT LIST ARGUMENT EXPR false ARGUMENT EXPR false ARGUMENT EXPR false ARGUMENT EXPR false ARGUMENT EXPR public NN static JJ final JJ storage NN level NN root ROOT level compound level storage none NN create VB false JJ false JJ false JJ false JJ,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER public SPECIFIER static TYPE final storage level SPECIFIER final NAME storage level NAME memory only INIT create false true false true EXPR create false true false true CALL create false true false true NAME create ARGUMENT LIST ARGUMENT EXPR false ARGUMENT EXPR true ARGUMENT EXPR false ARGUMENT EXPR true ARGUMENT EXPR public NN static JJ final JJ storage NN level NN root ROOT level compound level storage memory NN only RB root ROOT memory advmod memory only create VB false JJ true JJ false JJ true JJ false true ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION SPECIFIER public SPECIFIER static TYPE storage level NAME storage level NAME create PARAMETER LIST boolean use disk boolean use memory boolean use off heap boolean deserialized int replication PARAMETER boolean use disk TYPE boolean NAME boolean NAME use disk PARAMETER boolean use memory TYPE boolean NAME boolean NAME use memory PARAMETER boolean use off heap TYPE boolean NAME boolean NAME use off heap PARAMETER boolean deserialized TYPE boolean NAME boolean NAME deserialized PARAMETER int replication TYPE int NAME int NAME replication BLOCK RETURN return storage level apply use disk use memory use off heap deserialized replication EXPR storage level apply use disk use memory use off heap deserialized replication CALL storage level apply use disk use memory use off heap deserialized replication NAME storage level apply NAME storage level NAME apply ARGUMENT LIST ARGUMENT EXPR use disk NAME use disk ARGUMENT EXPR use memory NAME use memory ARGUMENT EXPR use off heap NAME use off heap ARGUMENT EXPR deserialized NAME deserialized ARGUMENT EXPR replication NAME replication public NN static JJ storage NN level NN root ROOT level compound level storage create VB boolean NN use NN disk NN root ROOT disk compound disk use boolean NN use NN memory NN root ROOT memory compound memory use boolean NN use VB off RP heap NN root ROOT use compound prt use off dobj use heap boolean NN deserialized VBN int NN replication NN return NN storage NN level NN apply VB root ROOT apply compound level storage nsubj apply level use NN disk NN root ROOT disk compound disk use use NN memory NN root ROOT memory compound memory use use VB off RP heap NN root ROOT use compound prt use off dobj use heap deserialized VBN replication NN return apply ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE int NAME int NAME compare PARAMETER LIST long b long a PARAMETER long b TYPE long NAME long NAME b PARAMETER long a TYPE long NAME long NAME a BLOCK RETURN return a b a b EXPR a b a b TERNARY a b a b CONDITION a b EXPR a b NAME a NAME b THEN EXPR ELSE a b EXPR a b TERNARY a b CONDITION a b EXPR a b NAME a NAME b THEN EXPR ELSE EXPR public NN int NN compare VB long RB b NN long RB a DT return NN a DT b NN a DT b NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE int NAME int NAME compare PARAMETER LIST long a prefix long b prefix PARAMETER long a prefix TYPE long NAME long NAME a prefix PARAMETER long b prefix TYPE long NAME long NAME b prefix BLOCK RETURN return unsigned longs compare a prefix b prefix EXPR unsigned longs compare a prefix b prefix CALL unsigned longs compare a prefix b prefix NAME unsigned longs compare NAME unsigned longs NAME compare ARGUMENT LIST ARGUMENT EXPR a prefix NAME a prefix ARGUMENT EXPR b prefix NAME b prefix public NN int NN compare VB long RB a DT prefix NN root ROOT prefix det prefix a long RB b NN prefix NN root ROOT prefix compound prefix b return NN unsigned JJ longs NNS compare VBP root ROOT compare amod longs unsigned nsubj compare longs a DT prefix NN root ROOT prefix det prefix a b NN prefix NN root ROOT prefix compound prefix b,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE final long SPECIFIER final NAME long NAME num elements for spill threshold private JJ final JJ long RB num NN elements NNS for IN spill NN threshold NN root ROOT elements compound elements num case threshold for compound threshold spill nmod for elements threshold,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private TYPE final linked list memory block SPECIFIER final NAME linked list memory block NAME linked list ARGUMENT LIST ARGUMENT NAME memory block NAME allocated pages INIT new linked list EXPR new linked list CALL linked list NAME linked list NAME linked list ARGUMENT LIST ARGUMENT LIST private JJ final JJ linked VBN list NN root ROOT list amod list linked memory NN block NN root ROOT block compound block memory allocated VBN pages NNS root ROOT pages amod pages allocated new JJ linked VBN list NN root ROOT list amod list linked,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private TYPE final linked list unsafe sorter spill writer SPECIFIER final NAME linked list unsafe sorter spill writer NAME linked list ARGUMENT LIST ARGUMENT NAME unsafe sorter spill writer NAME spill writers INIT new linked list EXPR new linked list CALL linked list NAME linked list NAME linked list ARGUMENT LIST ARGUMENT LIST private JJ final JJ linked VBN list NN root ROOT list amod list linked unsafe JJ sorter NN spill NN writer NN root ROOT writer amod writer unsafe compound writer sorter compound writer spill spill NN writers NNS root ROOT writers compound writers spill new JJ linked VBN list NN root ROOT list amod list linked,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT return the total number of bytes that has been spilled into disk so far FUNCTION SPECIFIER public TYPE long NAME long NAME get spill size PARAMETER LIST BLOCK RETURN return total spill bytes EXPR total spill bytes NAME total spill bytes return the total number of bytes that has been spilled into disk so far root ROOT return det number the amod number total dobj return number case bytes of nmod of number bytes nsubjpass spilled bytes ref bytes that aux spilled has auxpass spilled been acl relcl bytes spilled case disk into nmod into spilled disk advmod far so advmod spilled far public NN long RB get VB spill NN size NN root ROOT get compound size spill dobj get size return NN total JJ spill NN bytes NNS root ROOT bytes amod bytes total compound bytes spill return has ANTONYM ANTONYM return number ANTONYM ANTONYM,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT free this sorter s data pages return the number of bytes freed FUNCTION SPECIFIER private TYPE long NAME long NAME free memory PARAMETER LIST BLOCK EXPR update peak memory used CALL update peak memory used NAME update peak memory used ARGUMENT LIST DECL STMT TYPE long NAME long NAME memory freed INIT EXPR FOR for memory block block allocated pages memory freed block size free page block CONTROL memory block block allocated pages INIT memory block block allocated pages TYPE memory block NAME memory block NAME block RANGE allocated pages EXPR allocated pages NAME allocated pages BLOCK EXPR memory freed block size NAME memory freed CALL block size NAME block size NAME block NAME size ARGUMENT LIST EXPR free page block CALL free page block NAME free page ARGUMENT LIST ARGUMENT EXPR block NAME block EXPR allocated pages clear CALL allocated pages clear NAME allocated pages clear NAME allocated pages NAME clear ARGUMENT LIST EXPR current page null NAME current page EXPR page cursor NAME page cursor RETURN return memory freed EXPR memory freed NAME memory freed free this sorter s data pages root ROOT pages amod pages free det sorter this compound pages sorter compound pages s compound pages data return the number of bytes freed root ROOT return det number the dobj return number case bytes of nmod of number bytes acl number freed private JJ long RB free JJ memory NN root ROOT memory amod memory free update VB peak NN memory NN used VBN root ROOT update compound memory peak dobj update memory acl memory used long RB memory NN freed VBN root ROOT freed nsubj freed memory for IN memory NN block NN root ROOT block compound block memory block NN allocated VBN pages NNS root ROOT pages amod pages allocated memory NN freed VBN root ROOT freed nsubj freed memory block NN size NN root ROOT size compound size block free JJ page NN root ROOT page amod page free block NN allocated VBN pages NNS clear JJ root ROOT clear amod pages allocated nsubj clear pages current JJ page NN root ROOT page amod page current null JJ page NN cursor NN root ROOT cursor compound cursor page return NN memory NN freed VBN root ROOT freed nsubj freed memory block return ANTONYM ANTONYM free block ANTONYM ANTONYM free clear ANTONYM ANTONYM freed block ANTONYM ANTONYM freed clear ANTONYM ANTONYM private clear ANTONYM ANTONYM return clear ANTONYM ANTONYM return number ANTONYM ANTONYM freed clear SYNONYM SYNONYM,0,n/a,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/AbstractMessageNotationUml.java,1691
FUNCTION SPECIFIER public TYPE int NAME int NAME get num records PARAMETER LIST BLOCK RETURN return num records EXPR num records NAME num records public NN int NN get VB num NN records NNS root ROOT get compound records num dobj get records return NN num NN records NNS root ROOT records compound records num,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME has next PARAMETER LIST BLOCK RETURN return num records EXPR num records NAME num records public NN boolean NN has VBZ next JJ root ROOT has advmod has next return NN num NN records NNS root ROOT records compound records num,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE int NAME int NAME get record length PARAMETER LIST BLOCK RETURN return current get record length EXPR current get record length CALL current get record length NAME current get record length NAME current NAME get record length ARGUMENT LIST public NN int NN get VB record NN length NN root ROOT get compound length record dobj get length return NN current JJ get VB record NN length NN root ROOT current dep current get compound length record dobj get length,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE final prefix comparator SPECIFIER final NAME prefix comparator NAME prefix comparator private JJ final JJ prefix NN comparator NN root ROOT comparator compound comparator prefix prefix NN comparator NN root ROOT comparator compound comparator prefix,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT marks the current page as no more space available and as a result either allocate a new page or spill when we see the next record FUNCTION ANNOTATION visible for testing NAME visible for testing SPECIFIER public TYPE void NAME void NAME close current page PARAMETER LIST BLOCK IF if current page null page cursor current page get base offset current page size CONDITION current page null EXPR current page null NAME current page THEN page cursor current page get base offset current page size BLOCK EXPR page cursor current page get base offset current page size NAME page cursor CALL current page get base offset NAME current page get base offset NAME current page NAME get base offset ARGUMENT LIST CALL current page size NAME current page size NAME current page NAME size ARGUMENT LIST marks the current page as no more space available and as a result either allocate a root ROOT marks det page the amod page current dobj marks page case space as neg space no amod space more nmod as marks space amod space available cc marks and case result as det result a conj and marks result cc preconj allocate either acl result allocate dobj allocate a new page or spill when we see the next record root ROOT page amod page new cc page or conj or page spill advmod see when nsubj see we acl relcl page see det record the amod record next dobj see record visible JJ for IN testing NN root ROOT visible case testing for nmod for visible testing public NN void NN close RB current JJ page NN root ROOT page amod page close amod page current if IN current JJ page NN root ROOT page amod page current null JJ page NN cursor NN root ROOT cursor compound cursor page current JJ page NN get VB base JJ offset VBN root ROOT page amod page current acl page get xcomp get base dep base offset current JJ page NN size NN root ROOT size amod size current compound size page marks record ANTONYM ANTONYM marks see ANTONYM ANTONYM,0,n/a,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
FUNCTION SPECIFIER private TYPE void NAME void NAME update peak memory used PARAMETER LIST BLOCK DECL STMT TYPE long NAME long NAME mem INIT get memory usage EXPR get memory usage CALL get memory usage NAME get memory usage ARGUMENT LIST IF if mem peak memory used bytes peak memory used bytes mem CONDITION mem peak memory used bytes EXPR mem peak memory used bytes NAME mem NAME peak memory used bytes THEN peak memory used bytes mem BLOCK EXPR peak memory used bytes mem NAME peak memory used bytes NAME mem private JJ void NN update VB peak NN memory NN used VBN root ROOT update compound memory peak dobj update memory acl memory used long RB mem NN get VB memory NN usage NN root ROOT get compound usage memory dobj get usage if IN mem NN peak JJ memory NN used VBN bytes NNS root ROOT used amod memory peak nsubj used memory dobj used bytes peak JJ memory NN used VBN bytes NNS root ROOT used amod memory peak nsubj used memory dobj used bytes mem NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT specialization of sort at byte for key prefix arrays FUNCTION SPECIFIER private SPECIFIER static TYPE void NAME void NAME sort key prefix array at byte PARAMETER LIST long array array long num records long counts int byte idx long in index long out index boolean desc boolean signed PARAMETER long array array TYPE long array NAME long array NAME array PARAMETER long num records TYPE long NAME long NAME num records PARAMETER long counts TYPE long NAME long NAME long INDEX NAME counts PARAMETER int byte idx TYPE int NAME int NAME byte idx PARAMETER long in index TYPE long NAME long NAME in index PARAMETER long out index TYPE long NAME long NAME out index PARAMETER boolean desc TYPE boolean NAME boolean NAME desc PARAMETER boolean signed TYPE boolean NAME boolean NAME signed BLOCK ASSERT assert counts length EXPR counts length NAME counts length NAME counts NAME length DECL STMT TYPE long NAME long NAME long INDEX NAME offsets INIT transform counts to offsets counts num records array get base offset out index l desc signed EXPR transform counts to offsets counts num records array get base offset out index l desc signed CALL transform counts to offsets counts num records array get base offset out index l desc signed NAME transform counts to offsets ARGUMENT LIST ARGUMENT EXPR counts NAME counts ARGUMENT EXPR num records NAME num records ARGUMENT EXPR array get base offset out index l CALL array get base offset NAME array get base offset NAME array NAME get base offset ARGUMENT LIST NAME out index ARGUMENT EXPR ARGUMENT EXPR desc NAME desc ARGUMENT EXPR signed NAME signed DECL STMT TYPE object NAME object NAME base object INIT array get base object EXPR array get base object CALL array get base object NAME array get base object NAME array NAME get base object ARGUMENT LIST DECL STMT TYPE long NAME long NAME base offset INIT array get base offset in index l EXPR array get base offset in index l CALL array get base offset NAME array get base offset NAME array NAME get base offset ARGUMENT LIST NAME in index DECL STMT TYPE long NAME long NAME max offset INIT base offset num records l EXPR base offset num records l NAME base offset NAME num records FOR for long offset base offset offset max offset offset long key platform get long base object offset long prefix platform get long base object offset int bucket int prefix byte idx xff long dest offsets bucket platform put long base object dest key platform put long base object dest prefix offsets bucket CONTROL long offset base offset offset max offset offset INIT long offset base offset TYPE long NAME long NAME offset INIT base offset EXPR base offset NAME base offset CONDITION offset max offset EXPR offset max offset NAME offset NAME max offset INCR offset EXPR offset NAME offset BLOCK DECL STMT TYPE long NAME long NAME key INIT platform get long base object offset EXPR platform get long base object offset CALL platform get long base object offset NAME platform get long NAME platform NAME get long ARGUMENT LIST ARGUMENT EXPR base object NAME base object ARGUMENT EXPR offset NAME offset DECL STMT TYPE long NAME long NAME prefix INIT platform get long base object offset EXPR platform get long base object offset CALL platform get long base object offset NAME platform get long NAME platform NAME get long ARGUMENT LIST ARGUMENT EXPR base object NAME base object ARGUMENT EXPR offset NAME offset DECL STMT TYPE int NAME int NAME bucket INIT int prefix byte idx xff EXPR int prefix byte idx xff CALL int prefix byte idx xff NAME int ARGUMENT LIST ARGUMENT EXPR prefix byte idx xff NAME prefix NAME byte idx DECL STMT TYPE long NAME long NAME dest INIT offsets bucket EXPR offsets bucket NAME offsets bucket NAME offsets INDEX bucket EXPR bucket NAME bucket EXPR platform put long base object dest key CALL platform put long base object dest key NAME platform put long NAME platform NAME put long ARGUMENT LIST ARGUMENT EXPR base object NAME base object ARGUMENT EXPR dest NAME dest ARGUMENT EXPR key NAME key EXPR platform put long base object dest prefix CALL platform put long base object dest prefix NAME platform put long NAME platform NAME put long ARGUMENT LIST ARGUMENT EXPR base object NAME base object ARGUMENT EXPR dest NAME dest ARGUMENT EXPR prefix NAME prefix EXPR offsets bucket NAME offsets bucket NAME offsets INDEX bucket EXPR bucket NAME bucket specialization of sort at byte for key prefix arrays root ROOT specialization case sort of nmod of specialization sort case byte at nmod at specialization byte case arrays for amod arrays key compound arrays prefix nmod for byte arrays private JJ static JJ void NN sort NN key JJ prefix NN array NN at IN byte NN root ROOT array compound array sort amod array key compound array prefix case byte at nmod at array byte long RB array NN root ROOT array advmod array long array NN long RB num NN records NNS root ROOT records compound records num long RB counts NNS int NN byte NN idx NN root ROOT idx compound idx byte long RB in IN index NN root ROOT index case index in long RB out IN index NN root ROOT index case index out boolean NN desc NN boolean NN signed VBN assert VB counts NNS length NN root ROOT length compound length counts long RB offsets NNS transform VB counts NNS to TO offsets NNS root ROOT transform dobj transform counts case offsets to nmod to transform offsets counts NNS num NN records NNS root ROOT records compound records num array NN get VB base JJ offset VBN root ROOT array acl array get xcomp get base dep base offset out IN index NN root ROOT index case index out l NN desc NN signed VBN object NN base NN object NN root ROOT object compound object base array NN get VB base JJ object NN root ROOT get nsubj get array amod object base dobj get object long RB base NN offset VBD root ROOT offset nsubj offset base array NN get VB base JJ offset VBN root ROOT array acl array get xcomp get base dep base offset in IN index NN root ROOT index case index in l NN long RB max NN offset VBD root ROOT offset nsubj offset max base NN offset VBD root ROOT offset nsubj offset base num NN records NNS root ROOT records compound records num l NN for IN long RB offset VBN base NN offset VBD root ROOT offset nsubj offset base offset VBN max NN offset VBD root ROOT offset nsubj offset max offset VBN long RB key NN platform NN get VB long RB root ROOT get nsubj get platform advmod get long base NN object NN root ROOT object compound object base offset VBN long RB prefix NN platform NN get VB long RB root ROOT get nsubj get platform advmod get long base NN object NN root ROOT object compound object base offset VBN int NN bucket NN int NN prefix NN byte NN idx NN root ROOT idx compound idx byte xff NN long RB dest IN offsets NNS bucket NN platform NN put VBD long RB root ROOT put nsubj put platform advmod put long base NN object NN root ROOT object compound object base dest IN key NN platform NN put VBD long RB root ROOT put nsubj put platform advmod put long base NN object NN root ROOT object compound object base dest IN prefix NN offsets NNS bucket NN dest key ANTONYM ANTONYM l key ANTONYM ANTONYM l dest SYNONYM SYNONYM,1,b5,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
FUNCTION SPECIFIER public TYPE void NAME void NAME write PARAMETER LIST byte b int off int len PARAMETER byte b TYPE byte NAME byte NAME byte INDEX NAME b PARAMETER int off TYPE int NAME int NAME off PARAMETER int len TYPE int NAME int NAME len THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK DECL STMT TYPE final long SPECIFIER final NAME long NAME start time INIT system nano time EXPR system nano time CALL system nano time NAME system nano time NAME system NAME nano time ARGUMENT LIST EXPR output stream write b off len CALL output stream write b off len NAME output stream write NAME output stream NAME write ARGUMENT LIST ARGUMENT EXPR b NAME b ARGUMENT EXPR off NAME off ARGUMENT EXPR len NAME len EXPR write metrics inc write time system nano time start time CALL write metrics inc write time system nano time start time NAME write metrics inc write time NAME write metrics NAME inc write time ARGUMENT LIST ARGUMENT EXPR system nano time start time CALL system nano time NAME system nano time NAME system NAME nano time ARGUMENT LIST NAME start time public NN void NN write VB byte NN b NN int NN off IN int NN len NN throws VBZ io NN exception NN root ROOT exception compound exception io final JJ long RB start VB time NN root ROOT start dobj start time system NN nano JJ time NN root ROOT time compound time system amod time nano output NN stream NN write VB root ROOT write compound stream output nsubj write stream b NN off IN len NN write VB metrics NNS inc VB write VB time NN root ROOT write dobj write metrics acl metrics inc ccomp inc write dobj write time system NN nano JJ time NN root ROOT time compound time system amod time nano start VB time NN root ROOT start dobj start time,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE string NAME string NAME filename private JJ string NN filename NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER private TYPE print stream NAME print stream NAME output stream private JJ print NN stream NN root ROOT stream compound stream print output NN stream NN root ROOT stream compound stream output,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
CONSTRUCTOR public file stream sink task print stream output stream filename null this output stream output stream SPECIFIER public NAME file stream sink task PARAMETER LIST print stream output stream PARAMETER print stream output stream TYPE print stream NAME print stream NAME output stream BLOCK EXPR filename null NAME filename EXPR this output stream output stream NAME this output stream NAME this NAME output stream NAME output stream public NN file NN stream NN sink NN task NN root ROOT task compound task file compound task stream compound task sink print NN stream NN root ROOT stream compound stream print output NN stream NN root ROOT stream compound stream output filename NN null JJ this DT output NN stream NN output NN stream NN root ROOT stream compound stream output,0,n/a,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
FUNCTION SPECIFIER public TYPE void NAME void NAME start PARAMETER LIST map string string props PARAMETER map string string props TYPE map string string NAME map string string NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME string NAME props BLOCK EXPR filename props get file config NAME filename CALL props get file config NAME props get NAME props NAME get ARGUMENT LIST ARGUMENT EXPR file config NAME file config public NN void NN start NN map NN string NN string NN props NNS filename NN props NNS get VBP root ROOT get nsubj get props file NN config NN root ROOT config compound config file string get ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER private TYPE void NAME void NAME set timeout PARAMETER LIST BLOCK COMMENT set a reasonable minimum delay since this mock task may not actually consume any data from kafka it may only COMMENT see put calls triggered by wakeups for offset commits to make sure we aren t tied to the offset commit COMMENT interval we force a wakeup every ms or after the failure delay whichever is smaller this is not overly COMMENT aggressive but ensures any scheduled tasks this connector performs are reasonably close to the target time EXPR context timeout math min failure delay ms CALL context timeout math min failure delay ms NAME context timeout NAME context NAME timeout ARGUMENT LIST ARGUMENT EXPR math min failure delay ms CALL math min failure delay ms NAME math min NAME math NAME min ARGUMENT LIST ARGUMENT EXPR failure delay ms NAME failure delay ms ARGUMENT EXPR private JJ void NN set VBN timeout NN root ROOT set dobj set timeout set a reasonable minimum delay since this mock task may not actually consume any data from kafka it may only root ROOT set det delay a amod delay reasonable compound delay minimum dobj set delay mark consume since det task this amod task mock nsubj consume task aux consume may neg consume not advmod consume actually advcl since set consume det data any dobj consume data case kafka from nmod from only kafka nsubj only it aux only may dep data only set a reasonable minimum delay since this mock task may not actually consume any data from kafka it may only root ROOT set det delay a amod delay reasonable compound delay minimum dobj set delay mark consume since det task this amod task mock nsubj consume task aux consume may neg consume not advmod consume actually advcl since set consume det data any dobj consume data case kafka from nmod from only kafka nsubj only it aux only may dep data only see put calls triggered by wakeups for offset commits to make sure we aren t tied to the offset commit root ROOT commit csubj commit see amod calls put nsubj commits calls nsubj xsubj make calls acl calls triggered case wakeups by nmod by triggered wakeups case offset for nmod for wakeups offset ccomp see commits mark make to xcomp commits make xcomp make sure nsubj aren we ccomp sure aren dobj aren t acl t tied case offset to det offset the nmod to tied offset see put calls triggered by wakeups for offset commits to make sure we aren t tied to the offset commit root ROOT commit csubj commit see amod calls put nsubj commits calls nsubj xsubj make calls acl calls triggered case wakeups by nmod by triggered wakeups case offset for nmod for wakeups offset ccomp see commits mark make to xcomp commits make xcomp make sure nsubj aren we ccomp sure aren dobj aren t acl t tied case offset to det offset the nmod to tied offset interval we force a wakeup every ms or after the failure delay whichever is smaller this is not overly root ROOT interval nsubj force we acl relcl interval force det wakeup a dobj force wakeup det ms every dep wakeup ms cc ms or case delay after det delay the compound delay failure dep wakeup delay conj or ms delay nsubj smaller whichever cop smaller is acl relcl delay smaller nsubj overly this cop overly is neg overly not ccomp smaller overly interval we force a wakeup every ms or after the failure delay whichever is smaller this is not overly root ROOT interval nsubj force we acl relcl interval force det wakeup a dobj force wakeup det ms every dep wakeup ms cc ms or case delay after det delay the compound delay failure dep wakeup delay conj or ms delay nsubj smaller whichever cop smaller is acl relcl delay smaller nsubj overly this cop overly is neg overly not ccomp smaller overly aggressive but ensures any scheduled tasks this connector performs are reasonably close to the target time root ROOT time amod tasks aggressive cc aggressive but conj but aggressive ensures amod tasks ensures det tasks any amod tasks scheduled nsubj time tasks det connector this nsubj performs connector acl relcl tasks performs cop time are advmod time reasonably case time close mwe close to det time the compound time target context NN timeout NN root ROOT timeout compound timeout context math NN min NN root ROOT min compound min math failure NN delay NN ms NNS root ROOT ms compound ms failure compound ms delay calls make ANTONYM ANTONYM commit force ANTONYM ANTONYM commit target ANTONYM ANTONYM commits force ANTONYM ANTONYM commits make ANTONYM ANTONYM commits target ANTONYM ANTONYM consume make ANTONYM ANTONYM consume see ANTONYM ANTONYM delay ensures ANTONYM ANTONYM delay see ANTONYM ANTONYM make are ANTONYM ANTONYM make commit ANTONYM ANTONYM make force ANTONYM ANTONYM make is ANTONYM ANTONYM make performs ANTONYM ANTONYM make tied ANTONYM ANTONYM offset close ANTONYM ANTONYM put calls ANTONYM ANTONYM put target ANTONYM ANTONYM see calls ANTONYM ANTONYM see make ANTONYM ANTONYM set commit ANTONYM ANTONYM set commits ANTONYM ANTONYM set make ANTONYM ANTONYM set performs ANTONYM ANTONYM set see ANTONYM ANTONYM set target ANTONYM ANTONYM tied force ANTONYM ANTONYM triggered offset ANTONYM ANTONYM sure close SYNONYM SYNONYM tied close SYNONYM SYNONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE void NAME void NAME stop PARAMETER LIST BLOCK EXPR delegate stop CALL delegate stop NAME delegate stop NAME delegate NAME stop ARGUMENT LIST public NN void NN stop VB delegate NN stop NN root ROOT stop compound stop delegate,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER public SPECIFIER static TYPE final long SPECIFIER final NAME long NAME default failure delay ms INIT EXPR public NN static JJ final JJ long RB default NN failure NN delay NN ms NNS root ROOT ms compound ms default compound ms failure compound ms delay,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER private SPECIFIER static TYPE final logger SPECIFIER final NAME logger NAME log INIT logger factory get logger mock connector class EXPR logger factory get logger mock connector class CALL logger factory get logger mock connector class NAME logger factory get logger NAME logger factory NAME get logger ARGUMENT LIST ARGUMENT EXPR mock connector class NAME mock connector class NAME mock connector NAME class private JJ static JJ final JJ logger NN log NN logger NN factory NN get VB logger NN root ROOT get compound factory logger nsubj get factory dobj get logger mock JJ connector NN class NN,0,n/a,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT TYPE final string SPECIFIER final NAME string NAME transformation name final JJ string NN transformation NN name NN root ROOT name compound name transformation,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
CONSTRUCTOR private doc info string transformation name string overview config def config def this transformation name transformation name this overview overview this config def config def SPECIFIER private NAME doc info PARAMETER LIST string transformation name string overview config def config def PARAMETER string transformation name TYPE string NAME string NAME transformation name PARAMETER string overview TYPE string NAME string NAME overview PARAMETER config def config def TYPE config def NAME config def NAME config def BLOCK EXPR this transformation name transformation name NAME this transformation name NAME this NAME transformation name NAME transformation name EXPR this overview overview NAME this overview NAME this NAME overview NAME overview EXPR this config def config def NAME this config def NAME this NAME config def NAME config def private JJ doc NN info NN root ROOT info compound info doc string NN transformation NN name NN root ROOT name compound name transformation string NN overview NN config NN def NN root ROOT def compound def config config NN def NN root ROOT def compound def config this DT transformation NN name NN transformation NN name NN root ROOT name compound name transformation this DT overview NN overview NN this DT config NN def NN config NN def NN root ROOT def compound def config,0,n/a,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
FUNCTION SPECIFIER private SPECIFIER static TYPE void NAME void NAME print transformation html PARAMETER LIST print stream out doc info doc info PARAMETER print stream out TYPE print stream NAME print stream NAME out PARAMETER doc info doc info TYPE doc info NAME doc info NAME doc info BLOCK EXPR out println div id doc info transformation name CALL out println div id doc info transformation name NAME out println NAME out NAME println ARGUMENT LIST ARGUMENT EXPR div id doc info transformation name NAME doc info transformation name NAME doc info NAME transformation name EXPR out print h CALL out print h NAME out print NAME out NAME print ARGUMENT LIST ARGUMENT EXPR h EXPR out print doc info transformation name CALL out print doc info transformation name NAME out print NAME out NAME print ARGUMENT LIST ARGUMENT EXPR doc info transformation name NAME doc info transformation name NAME doc info NAME transformation name EXPR out println h CALL out println h NAME out println NAME out NAME println ARGUMENT LIST ARGUMENT EXPR h EXPR out println doc info overview CALL out println doc info overview NAME out println NAME out NAME println ARGUMENT LIST ARGUMENT EXPR doc info overview NAME doc info overview NAME doc info NAME overview EXPR out println p CALL out println p NAME out println NAME out NAME println ARGUMENT LIST ARGUMENT EXPR p EXPR out println doc info config def to html table CALL out println doc info config def to html table NAME out println NAME out NAME println ARGUMENT LIST ARGUMENT EXPR doc info config def to html table CALL doc info config def to html table NAME doc info config def to html table NAME doc info NAME config def NAME to html table ARGUMENT LIST EXPR out println div CALL out println div NAME out println NAME out NAME println ARGUMENT LIST ARGUMENT EXPR div private JJ static JJ void NN print NN transformation NN html NN root ROOT html compound html print compound html transformation print NN stream NN root ROOT stream compound stream print out IN doc NN info NN root ROOT info compound info doc doc NN info NN root ROOT info compound info doc out IN println NN root ROOT println case println out div NN id NN doc NN info NN transformation NN name NN root ROOT name compound name doc compound name info compound name transformation out IN print NN root ROOT print case print out h NN out IN print NN root ROOT print case print out doc NN info NN transformation NN name NN root ROOT name compound name doc compound name info compound name transformation out IN println NN root ROOT println case println out h NN out IN println NN root ROOT println case println out doc NN info NN overview NN root ROOT overview compound overview doc compound overview info out IN println NN root ROOT println case println out p NN out IN println NN root ROOT println case println out doc NN info NN config NN def NN to TO html NN table NN root ROOT def compound def doc compound def info compound def config case table to compound table html nmod to def table out IN println NN root ROOT println case println out div NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER private SPECIFIER static TYPE void NAME void NAME print html PARAMETER LIST print stream out PARAMETER print stream out TYPE print stream NAME print stream NAME out THROWS throws no such field exception illegal access exception instantiation exception ARGUMENT EXPR no such field exception NAME no such field exception ARGUMENT EXPR illegal access exception NAME illegal access exception ARGUMENT EXPR instantiation exception NAME instantiation exception BLOCK FOR for final doc info doc info transformations print transformation html out doc info CONTROL final doc info doc info transformations INIT final doc info doc info transformations TYPE final doc info SPECIFIER final NAME doc info NAME doc info RANGE transformations EXPR transformations NAME transformations BLOCK EXPR print transformation html out doc info CALL print transformation html out doc info NAME print transformation html ARGUMENT LIST ARGUMENT EXPR out NAME out ARGUMENT EXPR doc info NAME doc info private JJ static JJ void NN print NN html NN root ROOT html compound html print print NN stream NN root ROOT stream compound stream print out IN throws VBZ no DT such JJ field NN exception NN root ROOT field neg field no amod field such dep field exception illegal JJ access NN exception NN root ROOT exception amod exception illegal compound exception access instantiation NN exception NN root ROOT exception compound exception instantiation for IN final JJ doc NN info NN root ROOT info compound info doc doc NN info NN root ROOT info compound info doc transformations NNS print NN transformation NN html NN root ROOT html compound html print compound html transformation out IN doc NN info NN root ROOT info compound info doc,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public SPECIFIER static TYPE void NAME void NAME main PARAMETER LIST string args PARAMETER string args TYPE string NAME string MODIFIER NAME args THROWS throws exception ARGUMENT EXPR exception NAME exception BLOCK EXPR print html system out CALL print html system out NAME print html ARGUMENT LIST ARGUMENT EXPR system out NAME system out NAME system NAME out public NN static JJ void NN main JJ string NN args NNS throws VBZ exception NN print NN html NN root ROOT html compound html print system NN out RP root ROOT system compound prt system out,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE config def NAME config def NAME config PARAMETER LIST BLOCK RETURN return new config def EXPR new config def CALL config def NAME config def ARGUMENT LIST public NN config NN def NN root ROOT def compound def config config NN return NN new JJ config NN def NN root ROOT def compound def config,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE offset storage reader NAME offset storage reader NAME offset storage reader PARAMETER LIST BLOCK RETURN return reader EXPR reader NAME reader public NN offset VBN storage NN reader NN root ROOT reader amod reader offset compound reader storage offset VBN storage NN reader NN root ROOT reader amod reader offset compound reader storage return NN reader NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE final offset storage reader SPECIFIER final NAME offset storage reader NAME reader private JJ final JJ offset VBN storage NN reader NN root ROOT reader amod reader offset compound reader storage reader NN,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER protected TYPE final class loader SPECIFIER final NAME class loader NAME loader protected VBN final JJ class NN loader NN root ROOT loader compound loader class loader NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER protected TYPE final connector task id SPECIFIER final NAME connector task id NAME id protected VBN final JJ connector NN task NN id NN root ROOT id compound id connector compound id task id NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER private TYPE volatile target state SPECIFIER volatile NAME target state NAME target state private JJ volatile JJ target NN state NN root ROOT state compound state target target NN state NN root ROOT state compound state target,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT cancel this task this won t actually stop it but it will prevent the state from being updated when it eventually does shutdown FUNCTION SPECIFIER public TYPE void NAME void NAME cancel PARAMETER LIST BLOCK EXPR cancelled true NAME cancelled cancel this task this won t actually stop it but it will prevent the state from being root ROOT cancel det task this dobj cancel task nsubj won this dep cancel won dobj won t advmod stop actually dep won stop dobj stop it cc stop but nsubj prevent it aux prevent will dep won prevent conj but stop prevent det state the dobj prevent state mark being from advcl from prevent being cancel this task this won t actually stop it but it will prevent the state from being root ROOT cancel det task this dobj cancel task nsubj won this dep cancel won dobj won t advmod stop actually dep won stop dobj stop it cc stop but nsubj prevent it aux prevent will dep won prevent conj but stop prevent det state the dobj prevent state mark being from advcl from prevent being updated when it eventually does shutdown root ROOT updated advmod does when nsubj does it advmod does eventually advcl updated does dobj does shutdown public NN void NN cancel VB cancelled VBN true JJ cancel void ANTONYM ANTONYM stop shutdown ANTONYM ANTONYM void cancelled ANTONYM ANTONYM,0,n/a,ArgoUML0.34/argouml-idl/src/org/argouml/uml/reveng/idl/ParameterDeclaration.java,73
CONSTRUCTOR public pane info tracker timer internals timer internals this timer internals timer internals SPECIFIER public NAME pane info tracker PARAMETER LIST timer internals timer internals PARAMETER timer internals timer internals TYPE timer internals NAME timer internals NAME timer internals BLOCK EXPR this timer internals timer internals NAME this timer internals NAME this NAME timer internals NAME timer internals public NN pane NN info NN tracker NN root ROOT tracker compound tracker pane compound tracker info timer NN internals NNS root ROOT internals compound internals timer timer NN internals NNS root ROOT internals compound internals timer this DT timer NN internals NNS timer NN internals NNS root ROOT internals compound internals timer,0,n/a,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME is empty PARAMETER LIST BLOCK RETURN return views is empty EXPR views is empty CALL views is empty NAME views is empty NAME views NAME is empty ARGUMENT LIST public NN boolean NN is VBZ empty JJ root ROOT empty cop empty is return NN views NNS is VBZ empty JJ root ROOT empty nsubj empty views cop empty is,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE set p collection view NAME set p collection view NAME set ARGUMENT LIST ARGUMENT NAME p collection view NAME p collection view ARGUMENT LIST ARGUMENT NAME NAME views private JJ set NN p NN collection NN view NN root ROOT view compound view p compound view collection views NNS,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION SPECIFIER public TYPE void NAME void NAME delete timer PARAMETER LIST instant timestamp time domain time domain PARAMETER instant timestamp TYPE instant NAME instant NAME timestamp PARAMETER time domain time domain TYPE time domain NAME time domain NAME time domain BLOCK EXPR timer internals delete timer timer data of namespace timestamp time domain CALL timer internals delete timer timer data of namespace timestamp time domain NAME timer internals delete timer NAME timer internals NAME delete timer ARGUMENT LIST ARGUMENT EXPR timer data of namespace timestamp time domain CALL timer data of namespace timestamp time domain NAME timer data of NAME timer data NAME of ARGUMENT LIST ARGUMENT EXPR namespace NAME namespace ARGUMENT EXPR timestamp NAME timestamp ARGUMENT EXPR time domain NAME time domain public NN void NN delete VB timer NN root ROOT delete dobj delete timer instant NN timestamp NN time NN domain NN root ROOT domain compound domain time time NN domain NN root ROOT domain compound domain time timer NN internals NNS delete VBP timer NN root ROOT delete compound internals timer nsubj delete internals dobj delete timer timer NN data NNS of IN root ROOT data compound data timer acl data of namespace NN timestamp NN time NN domain NN root ROOT domain compound domain time,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE void NAME void NAME set timer PARAMETER LIST instant timestamp time domain time domain PARAMETER instant timestamp TYPE instant NAME instant NAME timestamp PARAMETER time domain time domain TYPE time domain NAME time domain NAME time domain BLOCK EXPR timer internals set timer timer data of namespace timestamp time domain CALL timer internals set timer timer data of namespace timestamp time domain NAME timer internals set timer NAME timer internals NAME set timer ARGUMENT LIST ARGUMENT EXPR timer data of namespace timestamp time domain CALL timer data of namespace timestamp time domain NAME timer data of NAME timer data NAME of ARGUMENT LIST ARGUMENT EXPR namespace NAME namespace ARGUMENT EXPR timestamp NAME timestamp ARGUMENT EXPR time domain NAME time domain public NN void NN set VBN timer NN root ROOT set dobj set timer instant NN timestamp NN time NN domain NN root ROOT domain compound domain time time NN domain NN root ROOT domain compound domain time timer NN internals NNS set VBN timer NN root ROOT set compound internals timer nsubj set internals dobj set timer timer NN data NNS of IN root ROOT data compound data timer acl data of namespace NN timestamp NN time NN domain NN root ROOT domain compound domain time,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER protected TYPE final active window set w SPECIFIER final NAME active window set w NAME active window set ARGUMENT LIST ARGUMENT NAME w NAME active windows protected VBN final JJ active JJ window NN set NN root ROOT set amod set active compound set window w NN active JJ windows NNS root ROOT windows amod windows active,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER protected TYPE final state context w SPECIFIER final NAME state context w NAME state context ARGUMENT LIST ARGUMENT NAME w NAME context protected VBN final JJ state NN context NN root ROOT context compound context state w NN context NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER protected TYPE final state internals SPECIFIER final NAME state internals NAME state internals protected VBN final JJ state NN internals NNS root ROOT internals compound internals state state NN internals NNS root ROOT internals compound internals state,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION SPECIFIER public TYPE k NAME k NAME key PARAMETER LIST BLOCK RETURN return key EXPR key NAME key public NN k NN key NN return NN key NN k key ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT add an end of window hold or if too late for that a garbage collection hold if required return the link instant at which hold was added or literal null if no hold was added FUNCTION ANNOTATION nullable NAME nullable SPECIFIER private TYPE instant NAME instant NAME add end of window or garbage collection holds PARAMETER LIST reduce fn w context context boolean pane is empty PARAMETER reduce fn w context context TYPE reduce fn w context NAME reduce fn w context NAME reduce fn w NAME reduce fn ARGUMENT LIST ARGUMENT NAME ARGUMENT NAME ARGUMENT NAME ARGUMENT NAME w NAME context NAME context PARAMETER boolean pane is empty TYPE boolean NAME boolean NAME pane is empty BLOCK DECL STMT TYPE instant NAME instant NAME hold INIT add end of window hold context pane is empty EXPR add end of window hold context pane is empty CALL add end of window hold context pane is empty NAME add end of window hold ARGUMENT LIST ARGUMENT EXPR context NAME context ARGUMENT EXPR pane is empty NAME pane is empty IF if hold null hold add garbage collection hold context pane is empty CONDITION hold null EXPR hold null NAME hold THEN hold add garbage collection hold context pane is empty BLOCK EXPR hold add garbage collection hold context pane is empty NAME hold CALL add garbage collection hold context pane is empty NAME add garbage collection hold ARGUMENT LIST ARGUMENT EXPR context NAME context ARGUMENT EXPR pane is empty NAME pane is empty RETURN return hold EXPR hold NAME hold add an end of window hold or if too late for that a garbage collection hold if required root ROOT add det end an dobj add end case hold of compound hold window nmod of end hold cc add or case late if advmod late too conj or add late mark hold for mark hold that det collection a compound collection garbage nsubj hold collection dep late hold mark required if advcl if hold required return the link instant at which hold was added or literal null if no hold was added root ROOT return det instant the compound instant link dobj return instant nmod at added instant case which at ref instant which aux added hold auxpass added was acl relcl instant added cc added or amod null literal acl relcl instant null conj or added null mark added if neg hold no nsubjpass added hold auxpass added was dep added added nullable JJ private JJ instant NN add VB end NN of IN window NN or CC garbage NN collection NN holds VBZ root ROOT holds csubj holds add dobj add end case window of nmod of end window cc window or compound collection garbage nmod of end collection conj or window collection reduce VB fn NN root ROOT reduce dobj reduce fn w NN context NN context NN boolean NN pane NN is VBZ empty JJ root ROOT empty nsubj empty pane cop empty is instant NN hold NN add VB end NN of IN window NN hold NN root ROOT add dobj add end case hold of compound hold window nmod of end hold context NN pane NN is VBZ empty JJ root ROOT empty nsubj empty pane cop empty is if IN hold NN null JJ hold NN add VB garbage NN collection NN hold VBP root ROOT hold csubj hold add compound collection garbage dobj add collection context NN pane NN is VBZ empty JJ root ROOT empty nsubj empty pane cop empty is return NN hold NN hold required ANTONYM ANTONYM hold return ANTONYM ANTONYM,0,n/a,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/DetailsPane.java,196
COMMENT prefetch watermark holds in preparation for merging FUNCTION SPECIFIER public TYPE void NAME void NAME prefetch on merge PARAMETER LIST merging state accessor w state PARAMETER merging state accessor w state TYPE merging state accessor w NAME merging state accessor w NAME merging state accessor ARGUMENT LIST ARGUMENT NAME ARGUMENT NAME w NAME state BLOCK EXPR state merging prefetch watermarks state element hold tag CALL state merging prefetch watermarks state element hold tag NAME state merging prefetch watermarks NAME state merging NAME prefetch watermarks ARGUMENT LIST ARGUMENT EXPR state NAME state ARGUMENT EXPR element hold tag NAME element hold tag prefetch watermark holds in preparation for merging root ROOT holds compound watermark prefetch nsubj holds watermark case preparation in nmod in holds preparation mark merging for advcl for holds merging public NN void NN prefetch NN on IN merge VBP root ROOT merge nsubj merge prefetch acl prefetch on merging VBG state NN accessor NN root ROOT merging compound accessor state dobj merging accessor w NN state NN state NN merging VBG prefetch NN watermarks NNS root ROOT state acl state merging compound watermarks prefetch dobj merging watermarks state NN element NN hold VBP tag NN root ROOT hold nsubj hold element dobj hold tag,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
FUNCTION SPECIFIER public TYPE string NAME string NAME string key PARAMETER LIST BLOCK RETURN return global string EXPR global string NAME global string public NN string NN string NN key NN root ROOT key compound key string return NN global JJ string NN root ROOT string amod string global,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME equals PARAMETER LIST object obj PARAMETER object obj TYPE object NAME object NAME obj BLOCK RETURN return obj this obj instanceof global namespace EXPR obj this obj instanceof global namespace NAME obj NAME this NAME obj NAME global namespace public NN boolean NN equals VBZ object NN obj NN return NN obj NN this DT obj NN instanceof NN global JJ namespace NN root ROOT namespace amod namespace global,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE int NAME int NAME hash code PARAMETER LIST BLOCK RETURN return objects hash namespace global EXPR objects hash namespace global CALL objects hash namespace global NAME objects hash NAME objects NAME hash ARGUMENT LIST ARGUMENT EXPR namespace global NAME namespace global NAME namespace NAME global public NN int NN hash VB code NN root ROOT hash dobj hash code return NN objects NNS hash VBP root ROOT hash nsubj hash objects namespace NN global JJ root ROOT global nmod npmod global namespace,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE string NAME string NAME to string PARAMETER LIST BLOCK RETURN return global EXPR global public NN string NN to TO string VB root ROOT string mark string to return NN global JJ,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME window format INIT s EXPR s private JJ static JJ final JJ string NN window NN format NN root ROOT format compound format window s NNS,0,n/a,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
FUNCTION SPECIFIER public TYPE w NAME w NAME get window PARAMETER LIST BLOCK RETURN return window EXPR window NAME window public NN w NN get VB window NN root ROOT get dobj get window return NN window NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE final duration SPECIFIER final NAME duration NAME allowed lateness private JJ final JJ duration NN allowed VBN lateness NN root ROOT allowed dobj allowed lateness,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private TYPE final boolean SPECIFIER final NAME boolean NAME observes window private JJ final JJ boolean NN observes VBZ window NN root ROOT observes dobj observes window,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private TYPE final side input reader SPECIFIER final NAME side input reader NAME side input reader private JJ final JJ side NN input NN reader NN root ROOT reader compound reader side compound reader input side NN input NN reader NN root ROOT reader compound reader side compound reader input,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT the set of known output tags DECL STMT SPECIFIER private TYPE final set tuple tag SPECIFIER final NAME set tuple tag NAME set ARGUMENT LIST ARGUMENT NAME tuple tag NAME tuple tag ARGUMENT LIST ARGUMENT NAME NAME output tags the set of known output tags root ROOT set det set the case tags of amod tags known compound tags output nmod of set tags the set of known output tags root ROOT set det set the case tags of amod tags known compound tags output nmod of set tags private JJ final JJ set NN tuple NN tag NN root ROOT tag compound tag tuple output NN tags NNS root ROOT tags compound tags output set tags ANTONYM ANTONYM,0,n/a,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,64
FUNCTION SPECIFIER public TYPE void NAME void NAME start bundle PARAMETER LIST BLOCK COMMENT this can contain user code wrap it in case it throws an exception TRY try invoker invoke start bundle new do fn start bundle context catch throwable t exception in user code throw wrap user code exception t BLOCK EXPR invoker invoke start bundle new do fn start bundle context CALL invoker invoke start bundle new do fn start bundle context NAME invoker invoke start bundle NAME invoker NAME invoke start bundle ARGUMENT LIST ARGUMENT EXPR new do fn start bundle context CALL do fn start bundle context NAME do fn start bundle context ARGUMENT LIST CATCH catch throwable t exception in user code throw wrap user code exception t PARAMETER LIST throwable t PARAMETER throwable t TYPE throwable NAME throwable NAME t BLOCK COMMENT exception in user code THROW throw wrap user code exception t EXPR wrap user code exception t CALL wrap user code exception t NAME wrap user code exception ARGUMENT LIST ARGUMENT EXPR t NAME t public NN void NN start VB bundle NN root ROOT start dobj start bundle this can contain user code wrap it in case it throws an exception root ROOT contain nsubj contain this aux contain can compound code user nsubj wrap code ccomp contain wrap dobj wrap it mark throws in mwe in case nsubj throws it advcl in case wrap throws det exception an dobj throws exception this can contain user code wrap it in case it throws an exception root ROOT contain nsubj contain this aux contain can compound code user nsubj wrap code ccomp contain wrap dobj wrap it mark throws in mwe in case nsubj throws it advcl in case wrap throws det exception an dobj throws exception try VB invoker NN invoke VBP start NN bundle NN root ROOT invoke nsubj invoke invoker compound bundle start dobj invoke bundle new JJ do VB fn NN start NN bundle NN context NN root ROOT do compound context fn compound context start compound context bundle dobj do context catch NN throwable JJ t NN exception in user code root ROOT exception case code in compound code user nmod in exception code throw VB wrap VB user NN code NN exception NN root ROOT wrap compound exception user compound exception code dobj wrap exception t NN contain catch ANTONYM ANTONYM contain throw ANTONYM ANTONYM contain throws ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE void NAME void NAME process element PARAMETER LIST windowed value input t compressed elem PARAMETER windowed value input t compressed elem TYPE windowed value input t NAME windowed value input t NAME windowed value ARGUMENT LIST ARGUMENT NAME input t NAME compressed elem BLOCK IF if observes window for windowed value input t elem compressed elem explode windows invoke process element elem else invoke process element compressed elem CONDITION observes window EXPR observes window NAME observes window THEN for windowed value input t elem compressed elem explode windows invoke process element elem BLOCK FOR for windowed value input t elem compressed elem explode windows invoke process element elem CONTROL windowed value input t elem compressed elem explode windows INIT windowed value input t elem compressed elem explode windows TYPE windowed value input t NAME windowed value input t NAME windowed value ARGUMENT LIST ARGUMENT NAME input t NAME elem RANGE compressed elem explode windows EXPR compressed elem explode windows CALL compressed elem explode windows NAME compressed elem explode windows NAME compressed elem NAME explode windows ARGUMENT LIST BLOCK EXPR invoke process element elem CALL invoke process element elem NAME invoke process element ARGUMENT LIST ARGUMENT EXPR elem NAME elem ELSE else invoke process element compressed elem BLOCK EXPR invoke process element compressed elem CALL invoke process element compressed elem NAME invoke process element ARGUMENT LIST ARGUMENT EXPR compressed elem NAME compressed elem public NN void NN process NN element NN root ROOT element compound element process windowed JJ value NN root ROOT value amod value windowed input NN t NN root ROOT t compound t input compressed VBN elem NN root ROOT elem amod elem compressed if IN observes VBZ window NN root ROOT observes dobj observes window for IN windowed JJ value NN root ROOT value amod value windowed input NN t NN root ROOT t compound t input elem NN compressed VBN elem NN explode VBP windows NNS root ROOT explode amod elem compressed nsubj explode elem dobj explode windows invoke VB process NN element NN root ROOT invoke compound element process dobj invoke element elem NN else RB invoke VB process NN element NN root ROOT invoke compound element process dobj invoke element compressed VBN elem NN root ROOT elem amod elem compressed,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE pipeline options NAME pipeline options NAME get pipeline options PARAMETER LIST BLOCK RETURN return options EXPR options NAME options public NN pipeline NN options NNS root ROOT options compound options pipeline get VB pipeline NN options NNS root ROOT get compound options pipeline dobj get options return NN options NNS,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE bounded window NAME bounded window NAME window PARAMETER LIST BLOCK THROW throw new unsupported operation exception cannot access window outside of process element and on timer methods EXPR new unsupported operation exception cannot access window outside of process element and on timer methods CALL unsupported operation exception cannot access window outside of process element and on timer methods NAME unsupported operation exception ARGUMENT LIST ARGUMENT EXPR cannot access window outside of process element and on timer methods public NN bounded VBN window NN root ROOT window amod window bounded window NN throw VB new JJ unsupported JJ operation NN exception NN root ROOT exception amod exception unsupported compound exception operation can MD not RB access NN window NN outside IN of IN process NN element NN root ROOT element compound element process and CC on IN timer NN root ROOT timer case timer on methods NNS,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE void NAME void NAME output PARAMETER LIST output t output PARAMETER output t output TYPE output t NAME output t NAME output BLOCK EXPR output main output tag output CALL output main output tag output NAME output ARGUMENT LIST ARGUMENT EXPR main output tag NAME main output tag ARGUMENT EXPR output NAME output public NN void NN output NN output NN t NN root ROOT t compound t output output NN output NN main JJ output NN tag NN root ROOT tag amod tag main compound tag output output NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE state NAME state NAME state PARAMETER LIST string state id PARAMETER string state id TYPE string NAME string NAME state id BLOCK TRY try state spec spec state spec signature state declarations get state id field get fn return step context state internals state get namespace state tags tag for spec state id state spec spec catch illegal access exception e throw new runtime exception e BLOCK DECL STMT TYPE state spec NAME state spec NAME state spec ARGUMENT LIST ARGUMENT NAME NAME spec INIT state spec signature state declarations get state id field get fn EXPR state spec signature state declarations get state id field get fn TERNARY state spec CONDITION state spec EXPR state spec NAME state spec NAME state spec ARGUMENT LIST ARGUMENT NAME CALL signature state declarations NAME signature state declarations NAME signature NAME state declarations ARGUMENT LIST CALL get state id NAME get ARGUMENT LIST ARGUMENT EXPR state id NAME state id CALL field NAME field ARGUMENT LIST CALL get fn NAME get ARGUMENT LIST ARGUMENT EXPR fn NAME fn RETURN return step context state internals state get namespace state tags tag for spec state id state spec spec EXPR step context state internals state get namespace state tags tag for spec state id state spec spec CALL step context state internals NAME step context state internals NAME step context NAME state internals ARGUMENT LIST CALL state get namespace state tags tag for spec state id state spec spec NAME state ARGUMENT LIST ARGUMENT EXPR get namespace CALL get namespace NAME get namespace ARGUMENT LIST ARGUMENT EXPR state tags tag for spec state id state spec spec CALL state tags tag for spec state id state spec spec NAME state tags tag for spec NAME state tags NAME tag for spec ARGUMENT LIST ARGUMENT EXPR state id NAME state id ARGUMENT EXPR state spec spec NAME state spec NAME spec CATCH catch illegal access exception e throw new runtime exception e PARAMETER LIST illegal access exception e PARAMETER illegal access exception e TYPE illegal access exception NAME illegal access exception NAME e BLOCK THROW throw new runtime exception e EXPR new runtime exception e CALL runtime exception e NAME runtime exception ARGUMENT LIST ARGUMENT EXPR e NAME e public NN state NN state NN string NN state NN id NN root ROOT id compound id state try VB state NN spec NN root ROOT spec compound spec state spec NN state NN spec NN root ROOT spec compound spec state signature NN state NN declarations NNS root ROOT declarations compound declarations signature compound declarations state get VB state NN id NN root ROOT id compound id state field NN get VB fn NN return NN step NN context NN root ROOT context compound context step state NN internals NNS root ROOT internals compound internals state state NN get VB namespace NN root ROOT get dobj get namespace state NN tags NNS tag NN for IN spec NN root ROOT tag compound tag state compound tag tags case spec for nmod for tag spec state NN id NN root ROOT id compound id state state NN spec NN root ROOT spec compound spec state spec NN catch NN illegal JJ access NN exception NN root ROOT exception amod exception illegal compound exception access e SYM throw VB new JJ runtime NN exception NN root ROOT exception compound exception runtime e SYM get return ANTONYM ANTONYM get throw ANTONYM ANTONYM return throw ANTONYM ANTONYM string get ANTONYM ANTONYM try return ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT the state namespace for this context p any call to this method when more than one window is present will crash this represents a bug in the runner or the link do fn signature since values must be in exactly one window when state or timers are relevant FUNCTION SPECIFIER private TYPE state namespace NAME state namespace NAME get namespace PARAMETER LIST BLOCK IF if namespace null namespace state namespaces window window coder window CONDITION namespace null EXPR namespace null NAME namespace THEN namespace state namespaces window window coder window BLOCK EXPR namespace state namespaces window window coder window NAME namespace CALL state namespaces window window coder window NAME state namespaces window NAME state namespaces NAME window ARGUMENT LIST ARGUMENT EXPR window coder NAME window coder ARGUMENT EXPR window NAME window RETURN return namespace EXPR namespace NAME namespace the state namespace for this context root ROOT namespace det namespace the compound namespace state case context for det context this nmod for namespace context p any call to this method when more than one window is present will crash this root ROOT crash dep crash p det call any nsubj crash call case method to det method this nmod to call method advmod present when advmod one more mwe more than nummod window one nsubj present window cop present is acl relcl call present aux crash will dobj crash this represents a bug in the runner or the link do fn signature since values must be in exactly root ROOT represents det bug a dobj represents bug case runner in det runner the nmod in bug runner cc runner or det link the nmod in bug link conj or runner link dep represents do compound signature fn dobj do signature mark exactly since nsubj exactly values aux exactly must cop exactly be case exactly in advcl since do exactly one window when state or timers are relevant root ROOT window nummod window one advmod relevant when nsubj relevant state cc state or conj or state timers nsubj relevant timers cop relevant are acl relcl window relevant private JJ state NN namespace NN root ROOT namespace compound namespace state get VB namespace NN root ROOT get dobj get namespace if IN namespace NN null JJ namespace NN state NN namespaces NNS window NN root ROOT window compound window state compound window namespaces window NN coder NN root ROOT coder compound coder window window NN return NN namespace NN is present ANTONYM ANTONYM present are ANTONYM ANTONYM present be ANTONYM ANTONYM present return ANTONYM ANTONYM state present ANTONYM ANTONYM,0,n/a,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,64
DECL STMT SPECIFIER private TYPE duration NAME duration NAME period INIT duration zero EXPR duration zero NAME duration zero NAME duration NAME zero private JJ duration NN period NN duration NN zero CD root ROOT duration nummod duration zero,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private TYPE duration NAME duration NAME offset INIT duration zero EXPR duration zero NAME duration zero NAME duration NAME zero private JJ duration NN offset VBN duration NN zero CD root ROOT duration nummod duration zero,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME set relative PARAMETER LIST BLOCK DECL STMT TYPE instant NAME instant NAME target DECL STMT TYPE instant NAME instant NAME now INIT get current time EXPR get current time CALL get current time NAME get current time ARGUMENT LIST IF if period equals duration zero target now plus offset else long millis since start now plus offset get millis period get millis target millis since start now now plus period minus millis since start CONDITION period equals duration zero EXPR period equals duration zero CALL period equals duration zero NAME period equals NAME period NAME equals ARGUMENT LIST ARGUMENT EXPR duration zero NAME duration zero NAME duration NAME zero THEN target now plus offset BLOCK EXPR target now plus offset NAME target CALL now plus offset NAME now plus NAME now NAME plus ARGUMENT LIST ARGUMENT EXPR offset NAME offset ELSE else long millis since start now plus offset get millis period get millis target millis since start now now plus period minus millis since start BLOCK DECL STMT TYPE long NAME long NAME millis since start INIT now plus offset get millis period get millis EXPR now plus offset get millis period get millis CALL now plus offset NAME now plus NAME now NAME plus ARGUMENT LIST ARGUMENT EXPR offset NAME offset CALL get millis NAME get millis ARGUMENT LIST CALL period get millis NAME period get millis NAME period NAME get millis ARGUMENT LIST EXPR target millis since start now now plus period minus millis since start NAME target TERNARY millis since start now now plus period minus millis since start CONDITION millis since start EXPR millis since start NAME millis since start THEN now EXPR now NAME now ELSE now plus period minus millis since start EXPR now plus period minus millis since start CALL now plus period NAME now plus NAME now NAME plus ARGUMENT LIST ARGUMENT EXPR period NAME period CALL minus millis since start NAME minus ARGUMENT LIST ARGUMENT EXPR millis since start NAME millis since start EXPR target min target and gc time target NAME target CALL min target and gc time target NAME min target and gc time ARGUMENT LIST ARGUMENT EXPR target NAME target EXPR set underlying timer target CALL set underlying timer target NAME set underlying timer ARGUMENT LIST ARGUMENT EXPR target NAME target override NN public NN void NN set NN relative JJ root ROOT set dep set relative instant NN target NN instant NN now RB get VB current JJ time NN root ROOT get amod time current dobj get time if IN period NN equals VBZ root ROOT equals nsubj equals period duration NN zero CD root ROOT duration nummod duration zero target NN now RB plus CC root ROOT plus advmod plus now offset VBN else RB long RB millis NN since IN start NN root ROOT millis case start since nmod since millis start now RB plus CC root ROOT plus advmod plus now offset VBN get VB millis FW root ROOT get dobj get millis period NN get VB millis JJ root ROOT period acl period get xcomp get millis target NN millis NN since IN start NN root ROOT millis case start since nmod since millis start now RB now RB plus CC root ROOT plus advmod plus now period NN minus CC millis NN since IN start NN root ROOT millis case start since nmod since millis start target NN min NN target NN and CC gc NN time NN root ROOT target compound target min cc target and compound time gc conj and target time target NN set VBN underlying VBG timer NN root ROOT set xcomp set underlying dobj underlying timer target NN plus minus ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT sets the timer for the target time without checking anything about whether it is a reasonable thing to do for example absolute processing time timers are not really sensible since the user has no way to compute a good choice of time FUNCTION SPECIFIER private TYPE void NAME void NAME set underlying timer PARAMETER LIST instant target PARAMETER instant target TYPE instant NAME instant NAME target BLOCK EXPR timer internals set timer namespace timer id target spec get time domain CALL timer internals set timer namespace timer id target spec get time domain NAME timer internals set timer NAME timer internals NAME set timer ARGUMENT LIST ARGUMENT EXPR namespace NAME namespace ARGUMENT EXPR timer id NAME timer id ARGUMENT EXPR target NAME target ARGUMENT EXPR spec get time domain CALL spec get time domain NAME spec get time domain NAME spec NAME get time domain ARGUMENT LIST sets the timer for the target time without checking anything about whether it is root ROOT sets det timer the dobj sets timer case time for det time the compound time target nmod for timer time mark checking without advcl without sets checking dobj checking anything mark is about mark is whether nsubj is it acl whether anything is a reasonable thing to do for example absolute processing time timers are not root ROOT thing det thing a amod thing reasonable mark do to acl to thing do case timers for compound timers example amod timers absolute compound timers processing compound timers time nmod for do timers dep thing are neg are not a reasonable thing to do for example absolute processing time timers are not root ROOT thing det thing a amod thing reasonable mark do to acl to thing do case timers for compound timers example amod timers absolute compound timers processing compound timers time nmod for do timers dep thing are neg are not really sensible since the user has no way to compute a good choice of time root ROOT sensible advmod sensible really mark has since det user the nsubj has user advcl since sensible has neg way no dobj has way mark compute to acl to way compute det choice a amod choice good dobj compute choice case time of nmod of choice time private JJ void NN set VBN underlying VBG timer NN root ROOT set xcomp set underlying dobj underlying timer instant NN target NN timer NN internals NNS set VBN timer NN root ROOT set compound internals timer nsubj set internals dobj set timer namespace NN timer NN id NN root ROOT id compound id timer target NN spec NN get VB time NN domain NN root ROOT get nsubj get spec compound domain time dobj get domain checking has ANTONYM ANTONYM do has ANTONYM ANTONYM do processing ANTONYM ANTONYM reasonable good ANTONYM ANTONYM sensible good ANTONYM ANTONYM sets checking ANTONYM ANTONYM sets target ANTONYM ANTONYM void good ANTONYM ANTONYM absolute good SYNONYM SYNONYM,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
CONSTRUCTOR public peeking reiterator reiterator t iterator this iterator check not null iterator SPECIFIER public NAME peeking reiterator PARAMETER LIST reiterator t iterator PARAMETER reiterator t iterator TYPE reiterator t NAME reiterator t NAME reiterator ARGUMENT LIST ARGUMENT NAME t NAME iterator BLOCK EXPR this iterator check not null iterator NAME this iterator NAME this NAME iterator CALL check not null iterator NAME check not null ARGUMENT LIST ARGUMENT EXPR iterator NAME iterator public NN peeking VBG reiterator NN root ROOT peeking dobj peeking reiterator reiterator NN t NN iterator NN this DT iterator NN check NN not RB null JJ root ROOT check neg null not dep check null iterator NN,0,n/a,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
FUNCTION SPECIFIER public TYPE t NAME t NAME next PARAMETER LIST BLOCK DECL STMT TYPE t NAME t NAME result INIT peek EXPR peek CALL peek NAME peek ARGUMENT LIST EXPR next element computed false NAME next element computed RETURN return result EXPR result NAME result public NN t NN next IN t NN result NN peek NN next JJ element NN computed VBD root ROOT computed amod element next nsubj computed element false JJ return NN result NN result return ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER private TYPE void NAME void NAME compute next PARAMETER LIST BLOCK IF if next element computed return CONDITION next element computed EXPR next element computed NAME next element computed THEN return BLOCK RETURN return IF if iterator has next return CONDITION iterator has next EXPR iterator has next CALL iterator has next NAME iterator has next NAME iterator NAME has next ARGUMENT LIST THEN return BLOCK RETURN return EXPR next element iterator next NAME next element CALL iterator next NAME iterator next NAME iterator NAME next ARGUMENT LIST EXPR next element computed true NAME next element computed private JJ void NN compute VB next IN root ROOT compute advmod compute next if IN next JJ element NN computed VBD root ROOT computed amod element next nsubj computed element return NN if IN iterator NN has VBZ next JJ root ROOT has nsubj has iterator advmod has next return NN next JJ element NN root ROOT element amod element next iterator NN next IN root ROOT iterator dep iterator next next JJ element NN computed VBD root ROOT computed amod element next nsubj computed element true JJ,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE final metric name SPECIFIER final NAME metric name NAME name private JJ final JJ metric JJ name NN root ROOT name amod name metric name NN,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
FUNCTION SPECIFIER public TYPE metric name NAME metric name NAME get name PARAMETER LIST BLOCK RETURN return name EXPR name NAME name public NN metric JJ name NN root ROOT name amod name metric get VB name NN root ROOT get dobj get name return NN name NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE dirty state NAME dirty state NAME get dirty PARAMETER LIST BLOCK RETURN return dirty EXPR dirty NAME dirty public NN dirty JJ state NN root ROOT state amod state dirty get VB dirty JJ root ROOT get xcomp get dirty return NN dirty JJ,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT generally runners should construct instances using the methods in link metrics container impl unless they need to define their own version of link metrics container these constructors are only public so runners can instantiate CONSTRUCTOR internal public distribution cell metric name name this name name ANNOTATION internal NAME internal SPECIFIER public NAME distribution cell PARAMETER LIST metric name name PARAMETER metric name name TYPE metric name NAME metric name NAME name BLOCK EXPR this name name NAME this name NAME this NAME name NAME name generally runners should construct instances using the methods in root ROOT construct advmod runners generally nsubj construct runners aux construct should dobj construct instances xcomp construct using det methods the dobj using methods dep using in link metrics container impl unless they need to define their own version of root ROOT impl compound impl link compound impl metrics compound impl container mark need unless nsubj need they nsubj xsubj define they advcl unless impl need mark define to xcomp need define nmod poss version their amod version own dobj define version acl version of link metrics container these constructors are only public so runners can instantiate root ROOT container compound container link compound container metrics det constructors these nsubj public constructors cop public are advmod public only acl relcl container public mark instantiate so nsubj instantiate runners aux instantiate can advcl so public instantiate link metrics container these constructors are only public so runners can instantiate root ROOT container compound container link compound container metrics det constructors these nsubj public constructors cop public are advmod public only acl relcl container public mark instantiate so nsubj instantiate runners aux instantiate can advcl so public instantiate internal JJ public NN distribution NN cell NN root ROOT cell compound cell distribution metric JJ name NN root ROOT name amod name metric name NN this DT name NN name NN are name ANTONYM ANTONYM can using ANTONYM ANTONYM construct name ANTONYM ANTONYM public internal ANTONYM ANTONYM,0,n/a,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/AbstractMessageNotationUml.java,1691
COMMENT return an iterable over the values in the current link metrics map FUNCTION SPECIFIER public TYPE iterable t NAME iterable t NAME iterable ARGUMENT LIST ARGUMENT NAME t NAME values PARAMETER LIST BLOCK RETURN return iterables unmodifiable iterable metrics values EXPR iterables unmodifiable iterable metrics values CALL iterables unmodifiable iterable metrics values NAME iterables unmodifiable iterable NAME iterables NAME unmodifiable iterable ARGUMENT LIST ARGUMENT EXPR metrics values CALL metrics values NAME metrics values NAME metrics NAME values ARGUMENT LIST return an iterable over the values in the current link metrics map root ROOT map csubj map return det iterable an dobj return iterable case values over det values the nmod over iterable values case metrics in det metrics the amod metrics current compound metrics link nmod in iterable metrics public NN iterable JJ t NN values NNS return NN iterables NNS unmodifiable JJ iterable JJ root ROOT iterables amod iterable unmodifiable dep iterables iterable metrics NNS values NNS root ROOT values compound values metrics,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string INDEX NAME odt file private JJ static JJ final JJ string NN odt NN file NN root ROOT file compound file odt private JJ static JJ final JJ string NN odt NN file NN root ROOT file compound file odt,1,D1,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string INDEX NAME odt file with metadata private JJ static JJ final JJ string NN odt NN file NN with IN metadata NN root ROOT file compound file odt case metadata with nmod with file metadata,1,d1,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string INDEX NAME odt file with min text len private JJ static JJ final JJ string NN odt NN file NN with IN min NN text NN len NN root ROOT file compound file odt case len with compound len min compound len text nmod with file len,1,D1,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string INDEX NAME pdf zip file private JJ static JJ final JJ string NN pdf NN zip NN file NN root ROOT file compound file pdf compound file zip,1,D1,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string INDEX NAME pdf file private JJ static JJ final JJ string NN pdf NN file NN root ROOT file compound file pdf,1,D1,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER private SPECIFIER static TYPE final list string SPECIFIER final NAME list string NAME list ARGUMENT LIST ARGUMENT NAME string NAME odt file private JJ static JJ final JJ list NN string NN odt NN file NN root ROOT file compound file odt,1,D1,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
FUNCTION DECL abstract builder k v set configuration serializable configuration configuration SPECIFIER abstract TYPE builder k v NAME builder k v NAME builder ARGUMENT LIST ARGUMENT NAME k ARGUMENT NAME v NAME set configuration PARAMETER LIST serializable configuration configuration PARAMETER serializable configuration configuration TYPE serializable configuration NAME serializable configuration NAME configuration abstract JJ builder NN k NN v LS set VBN configuration NN root ROOT set dobj set configuration serializable JJ configuration NN root ROOT configuration amod configuration serializable configuration NN k v SYNONYM SYNONYM,1,A3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION DECL abstract builder k v set key translation function simple function k function SPECIFIER abstract TYPE builder k v NAME builder k v NAME builder ARGUMENT LIST ARGUMENT NAME k ARGUMENT NAME v NAME set key translation function PARAMETER LIST simple function k function PARAMETER simple function k function TYPE simple function k NAME simple function k NAME simple function ARGUMENT LIST ARGUMENT NAME ARGUMENT NAME k NAME function abstract JJ builder NN k NN v LS set VBN key JJ translation NN function NN root ROOT set amod function key compound function translation dobj set function simple JJ function NN root ROOT function amod function simple k NN function NN k v SYNONYM SYNONYM,1,A3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION DECL abstract builder k v set value translation function simple function v function SPECIFIER abstract TYPE builder k v NAME builder k v NAME builder ARGUMENT LIST ARGUMENT NAME k ARGUMENT NAME v NAME set value translation function PARAMETER LIST simple function v function PARAMETER simple function v function TYPE simple function v NAME simple function v NAME simple function ARGUMENT LIST ARGUMENT NAME ARGUMENT NAME v NAME function abstract JJ builder NN k NN v LS set VBN value NN translation NN function NN root ROOT set compound function value compound function translation dobj set function simple JJ function NN root ROOT function amod function simple v LS function NN k v SYNONYM SYNONYM,1,A3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION DECL abstract builder k v set key type descriptor type descriptor k key type descriptor SPECIFIER abstract TYPE builder k v NAME builder k v NAME builder ARGUMENT LIST ARGUMENT NAME k ARGUMENT NAME v NAME set key type descriptor PARAMETER LIST type descriptor k key type descriptor PARAMETER type descriptor k key type descriptor TYPE type descriptor k NAME type descriptor k NAME type descriptor ARGUMENT LIST ARGUMENT NAME k NAME key type descriptor abstract JJ builder NN k NN v LS set VBN key JJ type NN descriptor NN root ROOT set amod descriptor key compound descriptor type dobj set descriptor type NN descriptor NN root ROOT descriptor compound descriptor type k NN key JJ type NN descriptor NN root ROOT descriptor amod descriptor key compound descriptor type k v SYNONYM SYNONYM,1,A3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION DECL abstract builder k v set value type descriptor type descriptor v value type descriptor SPECIFIER abstract TYPE builder k v NAME builder k v NAME builder ARGUMENT LIST ARGUMENT NAME k ARGUMENT NAME v NAME set value type descriptor PARAMETER LIST type descriptor v value type descriptor PARAMETER type descriptor v value type descriptor TYPE type descriptor v NAME type descriptor v NAME type descriptor ARGUMENT LIST ARGUMENT NAME v NAME value type descriptor abstract JJ builder NN k NN v LS set VBN value NN type NN descriptor NN root ROOT set compound descriptor value compound descriptor type dobj set descriptor type NN descriptor NN root ROOT descriptor compound descriptor type v LS value NN type NN descriptor NN root ROOT descriptor compound descriptor value compound descriptor type k v SYNONYM SYNONYM,1,A3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION DECL abstract builder k v set input format class type descriptor input format class SPECIFIER abstract TYPE builder k v NAME builder k v NAME builder ARGUMENT LIST ARGUMENT NAME k ARGUMENT NAME v NAME set input format class PARAMETER LIST type descriptor input format class PARAMETER type descriptor input format class TYPE type descriptor NAME type descriptor NAME type descriptor ARGUMENT LIST ARGUMENT NAME NAME input format class abstract JJ builder NN k NN v LS set VBN input NN format NN class NN root ROOT set compound class input compound class format dobj set class type NN descriptor NN root ROOT descriptor compound descriptor type input NN format NN class NN root ROOT class compound class input compound class format k v SYNONYM SYNONYM,1,A3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION DECL abstract builder k v set input format key class type descriptor input format key class SPECIFIER abstract TYPE builder k v NAME builder k v NAME builder ARGUMENT LIST ARGUMENT NAME k ARGUMENT NAME v NAME set input format key class PARAMETER LIST type descriptor input format key class PARAMETER type descriptor input format key class TYPE type descriptor NAME type descriptor NAME type descriptor ARGUMENT LIST ARGUMENT NAME NAME input format key class abstract JJ builder NN k NN v LS set VBN input NN format NN key JJ class NN root ROOT set compound class input compound class format amod class key dobj set class type NN descriptor NN root ROOT descriptor compound descriptor type input NN format NN key JJ class NN root ROOT class compound class input compound class format amod class key k v SYNONYM SYNONYM,1,A3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION DECL abstract builder k v set input format value class type descriptor input format value class SPECIFIER abstract TYPE builder k v NAME builder k v NAME builder ARGUMENT LIST ARGUMENT NAME k ARGUMENT NAME v NAME set input format value class PARAMETER LIST type descriptor input format value class PARAMETER type descriptor input format value class TYPE type descriptor NAME type descriptor NAME type descriptor ARGUMENT LIST ARGUMENT NAME NAME input format value class abstract JJ builder NN k NN v LS set VBN input NN format NN value NN class NN root ROOT set compound class input compound class format compound class value dobj set class type NN descriptor NN root ROOT descriptor compound descriptor type input NN format NN value NN class NN root ROOT class compound class input compound class format compound class value k v SYNONYM SYNONYM,1,A3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION DECL abstract read k v build SPECIFIER abstract TYPE read k v NAME read k v NAME read ARGUMENT LIST ARGUMENT NAME k ARGUMENT NAME v NAME build PARAMETER LIST abstract JJ read VB k NN v LS build VB k v SYNONYM SYNONYM,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE configuration NAME configuration NAME get PARAMETER LIST BLOCK RETURN return conf EXPR conf NAME conf public NN configuration NN get VB return NN conf NN get return ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
CONSTRUCTOR public serializable configuration configuration conf if conf null throw new null pointer exception configuration must not be null this conf conf SPECIFIER public NAME serializable configuration PARAMETER LIST configuration conf PARAMETER configuration conf TYPE configuration NAME configuration NAME conf BLOCK IF if conf null throw new null pointer exception configuration must not be null CONDITION conf null EXPR conf null NAME conf THEN throw new null pointer exception configuration must not be null BLOCK THROW throw new null pointer exception configuration must not be null EXPR new null pointer exception configuration must not be null CALL null pointer exception configuration must not be null NAME null pointer exception ARGUMENT LIST ARGUMENT EXPR configuration must not be null EXPR this conf conf NAME this conf NAME this NAME conf NAME conf public NN serializable JJ configuration NN root ROOT configuration amod configuration serializable configuration NN conf NN if IN conf NN null JJ throw VB new JJ null JJ pointer NN exception NN root ROOT exception amod exception null compound exception pointer configuration NN must MD not RB be VB null JJ this DT conf NN conf NN,0,n/a,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER private SPECIFIER transient TYPE configuration NAME configuration NAME conf private JJ transient JJ configuration NN conf NN,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private SPECIFIER static TYPE final long SPECIFIER final NAME long NAME serial version uid INIT l EXPR l private JJ static JJ final JJ long RB serial JJ version NN uid NN root ROOT uid amod uid serial compound uid version l NN,0,n/a,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
COMMENT sets the link table reference project id of the provided table reference to the id of the default project if the table reference does not have a project id specified FUNCTION SPECIFIER private TYPE table reference NAME table reference NAME set default project if absent PARAMETER LIST big query options bq options table reference table reference PARAMETER big query options bq options TYPE big query options NAME big query options NAME bq options PARAMETER table reference table reference TYPE table reference NAME table reference NAME table reference BLOCK IF if strings is null or empty table reference get project id check state strings is null or empty bq options get project no project id set in s or s cannot construct a complete s table reference class get simple name big query options class get simple name table reference class get simple name log info project id not set in using default project from table reference class get simple name big query options class get simple name table reference set project id bq options get project CONDITION strings is null or empty table reference get project id EXPR strings is null or empty table reference get project id CALL strings is null or empty table reference get project id NAME strings is null or empty NAME strings NAME is null or empty ARGUMENT LIST ARGUMENT EXPR table reference get project id CALL table reference get project id NAME table reference get project id NAME table reference NAME get project id ARGUMENT LIST THEN check state strings is null or empty bq options get project no project id set in s or s cannot construct a complete s table reference class get simple name big query options class get simple name table reference class get simple name log info project id not set in using default project from table reference class get simple name big query options class get simple name table reference set project id bq options get project BLOCK EXPR check state strings is null or empty bq options get project no project id set in s or s cannot construct a complete s table reference class get simple name big query options class get simple name table reference class get simple name CALL check state strings is null or empty bq options get project no project id set in s or s cannot construct a complete s table reference class get simple name big query options class get simple name table reference class get simple name NAME check state ARGUMENT LIST ARGUMENT EXPR strings is null or empty bq options get project CALL strings is null or empty bq options get project NAME strings is null or empty NAME strings NAME is null or empty ARGUMENT LIST ARGUMENT EXPR bq options get project CALL bq options get project NAME bq options get project NAME bq options NAME get project ARGUMENT LIST ARGUMENT EXPR no project id set in s or s cannot construct a complete s ARGUMENT EXPR table reference class get simple name CALL table reference class get simple name NAME table reference class get simple name NAME table reference NAME class get simple name NAME class NAME get simple name ARGUMENT LIST ARGUMENT EXPR big query options class get simple name CALL big query options class get simple name NAME big query options class get simple name NAME big query options NAME class get simple name NAME class NAME get simple name ARGUMENT LIST ARGUMENT EXPR table reference class get simple name CALL table reference class get simple name NAME table reference class get simple name NAME table reference NAME class get simple name NAME class NAME get simple name ARGUMENT LIST EXPR log info project id not set in using default project from table reference class get simple name big query options class get simple name CALL log info project id not set in using default project from table reference class get simple name big query options class get simple name NAME log info NAME log NAME info ARGUMENT LIST ARGUMENT EXPR project id not set in using default project from ARGUMENT EXPR table reference class get simple name CALL table reference class get simple name NAME table reference class get simple name NAME table reference NAME class get simple name NAME class NAME get simple name ARGUMENT LIST ARGUMENT EXPR big query options class get simple name CALL big query options class get simple name NAME big query options class get simple name NAME big query options NAME class get simple name NAME class NAME get simple name ARGUMENT LIST EXPR table reference set project id bq options get project CALL table reference set project id bq options get project NAME table reference set project id NAME table reference NAME set project id ARGUMENT LIST ARGUMENT EXPR bq options get project CALL bq options get project NAME bq options get project NAME bq options NAME get project ARGUMENT LIST RETURN return table reference EXPR table reference NAME table reference private JJ table NN reference NN root ROOT reference compound reference table set VBN default NN project NN if IN absent JJ root ROOT project amod project set compound project default mark absent if dep project absent,1,A3,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
FUNCTION DECL abstract builder t set max files per bundle integer max files per bundle SPECIFIER abstract TYPE builder t NAME builder t NAME builder ARGUMENT LIST ARGUMENT NAME t NAME set max files per bundle PARAMETER LIST integer max files per bundle PARAMETER integer max files per bundle TYPE integer NAME integer NAME max files per bundle abstract JJ builder NN t NN set VBN max NN files NNS per IN bundle NN root ROOT set compound files max dobj set files case bundle per nmod per files bundle integer NN max NN files NNS per IN bundle NN root ROOT files compound files max case bundle per nmod per files bundle,1,A3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION DECL abstract builder t set method method method SPECIFIER abstract TYPE builder t NAME builder t NAME builder ARGUMENT LIST ARGUMENT NAME t NAME set method PARAMETER LIST method method PARAMETER method method TYPE method NAME method NAME method abstract JJ builder NN t NN set NN method NN root ROOT method compound method set method NN method NN,1,A3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME gearpump serializers INIT gearpump serializers EXPR gearpump serializers private JJ static JJ final JJ string NN gearpump NN serializers NNS root ROOT serializers compound serializers gearpump gearpump NN serializers NNS root ROOT serializers compound serializers gearpump,1,E1,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME default appname INIT beam gearpump app EXPR beam gearpump app private JJ static JJ final JJ string NN default NN appname NN root ROOT appname compound appname default beam NN gearpump NN app NN root ROOT app compound app beam compound app gearpump,0,n/a,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER static TYPE final string SPECIFIER final NAME string NAME string INDEX NAME expected result static JJ final JJ string NN expected VBN result NN root ROOT result amod result expected,1,D1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER protected TYPE string NAME string NAME result path protected VBN string NN result NN path NN root ROOT path compound path result,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER protected SPECIFIER static TYPE final list serializable function instant instant SPECIFIER final NAME list serializable function instant instant NAME list ARGUMENT LIST ARGUMENT NAME serializable function instant instant NAME serializable function ARGUMENT LIST ARGUMENT NAME instant ARGUMENT NAME instant NAME identity INIT immutable list serializable function instant instant of EXPR immutable list serializable function instant instant of NAME immutable list NAME immutable list NAME serializable function instant instant NAME serializable function ARGUMENT LIST ARGUMENT NAME instant ARGUMENT NAME instant CALL of NAME of ARGUMENT LIST protected VBN static JJ final JJ list NN serializable JJ function NN root ROOT function amod function serializable instant NN instant NN identity NN immutable JJ list NN root ROOT list amod list immutable serializable JJ function NN root ROOT function amod function serializable instant NN instant NN of IN,1,d1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER private TYPE final instant SPECIFIER final NAME instant NAME offset private JJ final JJ instant NN offset VBN,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
FUNCTION SPECIFIER public TYPE string NAME string NAME to string PARAMETER LIST BLOCK RETURN return period formatter print delay to period EXPR period formatter print delay to period CALL period formatter print delay to period NAME period formatter print NAME period formatter NAME print ARGUMENT LIST ARGUMENT EXPR delay to period CALL delay to period NAME delay to period NAME delay NAME to period ARGUMENT LIST public NN string NN to TO string VB root ROOT string mark string to return NN period NN formatter NN root ROOT formatter compound formatter period print NN delay NN to TO period NN root ROOT delay case period to nmod to delay period,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
CONSTRUCTOR public delay fn duration delay this delay delay SPECIFIER public NAME delay fn PARAMETER LIST duration delay PARAMETER duration delay TYPE duration NAME duration NAME delay BLOCK EXPR this delay delay NAME this delay NAME this NAME delay NAME delay public NN delay NN fn NN root ROOT fn compound fn delay duration NN delay NN this DT delay NN delay NN,0,n/a,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
FUNCTION SPECIFIER public TYPE void NAME void NAME clear PARAMETER LIST trigger context c PARAMETER trigger context c TYPE trigger context NAME trigger context NAME c THROWS throws exception ARGUMENT EXPR exception NAME exception BLOCK EXPR c state access delayed until tag clear CALL c state NAME c state NAME c NAME state ARGUMENT LIST CALL access delayed until tag NAME access ARGUMENT LIST ARGUMENT EXPR delayed until tag NAME delayed until tag CALL clear NAME clear ARGUMENT LIST public NN void NN clear JJ trigger NN context NN root ROOT context compound context trigger c NN throws VBZ exception NN c NN state NN root ROOT state compound state c access NN delayed VBN until IN tag NN root ROOT delayed case tag until nmod until delayed tag clear JJ clear throws ANTONYM ANTONYM public clear ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT called when a new or active window is now known to be active ensure that if it is new then it becomes active with itself as its only state address window FUNCTION DECL void ensure window is active w window TYPE void NAME void NAME ensure window is active PARAMETER LIST w window PARAMETER w window TYPE w NAME w NAME window called when a new or active window is now known to be active root ROOT called advmod known when det window a amod window new cc new or conj or new active amod window active nsubjpass known window nsubj xsubj active window auxpass known is advmod known now advcl called known mark active to cop active be xcomp known active ensure that if it is new then it becomes active with itself as its only state address root ROOT ensure mark becomes that mark new if nsubj new it cop new is advcl if becomes new advmod becomes then nsubj becomes it ccomp ensure becomes xcomp becomes active case itself with nmod with active itself case address as nmod poss address its amod address only compound address state nmod as becomes address window void NN ensure VB window NN is VBZ active JJ root ROOT active csubj active ensure dobj ensure window cop active is w NN window NN is known ANTONYM ANTONYM known be ANTONYM ANTONYM,1,B2,ArgoUML0.34/argouml-documentation/src/docbook-setup/docbook-xsl/extensions/saxon643/com/nwalsh/saxon/ColumnUpdateEmitter.java,43
COMMENT called when an incoming element indicates it is a member of code window but before we have started processing that element if code window is not already known to be active then add it as new FUNCTION DECL void ensure window exists w window TYPE void NAME void NAME ensure window exists PARAMETER LIST w window PARAMETER w window TYPE w NAME w NAME window called when an incoming element indicates it is a member of code window but before we root ROOT called advmod indicates when det element an amod element incoming nsubj indicates element advcl called indicates nsubj member it cop member is det member a ccomp indicates member case window of compound window code nmod of member window cc indicates but case we before advcl called we conj but indicates we have started processing that element if code window is not already known to be active root ROOT started aux started have xcomp started processing det element that dobj processing element mark known if compound window code nsubjpass known window nsubj xsubj active window auxpass known is neg known not advmod known already advcl if started known mark active to cop active be xcomp known active have started processing that element if code window is not already known to be active root ROOT started aux started have xcomp started processing det element that dobj processing element mark known if compound window code nsubjpass known window nsubj xsubj active window auxpass known is neg known not advmod known already advcl if started known mark active to cop active be xcomp known active then add it as new root ROOT add advmod add then dobj add it case new as advcl as add new void NN ensure VB window NN exists VBZ root ROOT exists csubj exists ensure dobj ensure window w NN window NN add started ANTONYM ANTONYM have known ANTONYM ANTONYM have started ANTONYM ANTONYM is known ANTONYM ANTONYM known be ANTONYM ANTONYM,1,B2,ArgoUML0.34/argouml-cpp/src/org/argouml/language/cpp/generator/GeneratorCpp.java,1410
COMMENT return the state address window of active code window into which all new state should be written always one of the results of link read state addresses FUNCTION DECL w write state address w window TYPE w NAME w NAME write state address PARAMETER LIST w window PARAMETER w window TYPE w NAME w NAME window return the state address window of active code window into which all new state should be root ROOT return det window the compound window state compound window address dobj return window case window of amod window active compound window code nmod of window window nmod into be window case which into ref window which det state all amod state new nsubj be state aux be should acl relcl window be written always one of the results of link read state addresses root ROOT read csubj read written advmod one always det qmod results one mwe one of det results the dobj written results case link of nmod of results link compound addresses state dobj read addresses written always one of the results of link read state addresses root ROOT read csubj read written advmod one always det qmod results one mwe one of det results the dobj written results case link of nmod of results link compound addresses state dobj read addresses w NN write VB state NN address NN root ROOT write compound address state dobj write address w NN window NN return results ANTONYM ANTONYM,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
DECL STMT SPECIFIER private TYPE in memory timer internals NAME in memory timer internals NAME timer internals private JJ in IN memory NN timer NN internals NNS root ROOT internals case internals in compound internals memory compound internals timer timer NN internals NNS root ROOT internals compound internals timer,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
FUNCTION SPECIFIER public TYPE void NAME void NAME close PARAMETER LIST THROWS throws exception ARGUMENT EXPR exception NAME exception BLOCK EXPR tester close CALL tester close NAME tester close NAME tester NAME close ARGUMENT LIST public NN void NN close RB throws VBZ exception NN tester NN close NN root ROOT close compound close tester public close ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE final metric update t SPECIFIER final NAME metric update t NAME metric update ARGUMENT LIST ARGUMENT NAME t NAME committed private JJ final JJ metric JJ update VBP root ROOT update nsubj update metric t NN committed VBN,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
FUNCTION SPECIFIER public TYPE string NAME string NAME step PARAMETER LIST BLOCK RETURN return step EXPR step NAME step public NN string NN step NN return NN step NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
CONSTRUCTOR private accumulated metric result metric name name string step t attempted t committed boolean is committed supported this name name this step step this attempted attempted this committed committed this is committed supported is committed supported SPECIFIER private NAME accumulated metric result PARAMETER LIST metric name name string step t attempted t committed boolean is committed supported PARAMETER metric name name TYPE metric name NAME metric name NAME name PARAMETER string step TYPE string NAME string NAME step PARAMETER t attempted TYPE t NAME t NAME attempted PARAMETER t committed TYPE t NAME t NAME committed PARAMETER boolean is committed supported TYPE boolean NAME boolean NAME is committed supported BLOCK EXPR this name name NAME this name NAME this NAME name NAME name EXPR this step step NAME this step NAME this NAME step NAME step EXPR this attempted attempted NAME this attempted NAME this NAME attempted NAME attempted EXPR this committed committed NAME this committed NAME this NAME committed NAME committed EXPR this is committed supported is committed supported NAME this is committed supported NAME this NAME is committed supported NAME is committed supported private JJ accumulated VBN metric JJ result NN root ROOT result amod result accumulated amod result metric metric JJ name NN root ROOT name amod name metric name NN string NN step NN t NN attempted VBN t NN committed VBN boolean NN is VBZ committed VBN supported VBN root ROOT committed auxpass committed is dep committed supported this DT name NN name NN this DT step NN step NN this DT attempted VBN attempted VBN this DT committed VBN committed VBN this DT is VBZ committed VBN supported VBN is VBZ committed VBN supported VBN root ROOT committed auxpass committed is dep committed supported,0,n/a,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
COMMENT return an iterable over the entries in the current link metrics map FUNCTION SPECIFIER public TYPE iterable map entry k t NAME iterable map entry k t NAME iterable ARGUMENT LIST ARGUMENT NAME map entry k t NAME map NAME entry k t NAME entry ARGUMENT LIST ARGUMENT NAME k ARGUMENT NAME t NAME entries PARAMETER LIST BLOCK RETURN return iterables unmodifiable iterable metrics entry set EXPR iterables unmodifiable iterable metrics entry set CALL iterables unmodifiable iterable metrics entry set NAME iterables unmodifiable iterable NAME iterables NAME unmodifiable iterable ARGUMENT LIST ARGUMENT EXPR metrics entry set CALL metrics entry set NAME metrics entry set NAME metrics NAME entry set ARGUMENT LIST return an iterable over the entries in the current link metrics map root ROOT map csubj map return det iterable an dobj return iterable case entries over det entries the nmod over iterable entries case metrics in det metrics the amod metrics current compound metrics link nmod in entries metrics public NN iterable JJ map NN entry NN root ROOT entry compound entry map k NN t NN entries NNS return NN iterables NNS unmodifiable JJ iterable JJ root ROOT iterables amod iterable unmodifiable dep iterables iterable metrics NNS entry NN set NN root ROOT set compound set metrics compound set entry,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT return an iterable over the values in the current link metrics map FUNCTION SPECIFIER public TYPE iterable t NAME iterable t NAME iterable ARGUMENT LIST ARGUMENT NAME t NAME values PARAMETER LIST BLOCK RETURN return iterables unmodifiable iterable metrics values EXPR iterables unmodifiable iterable metrics values CALL iterables unmodifiable iterable metrics values NAME iterables unmodifiable iterable NAME iterables NAME unmodifiable iterable ARGUMENT LIST ARGUMENT EXPR metrics values CALL metrics values NAME metrics values NAME metrics NAME values ARGUMENT LIST return an iterable over the values in the current link metrics map root ROOT map csubj map return det iterable an dobj return iterable case values over det values the nmod over iterable values case metrics in det metrics the amod metrics current compound metrics link nmod in iterable metrics public NN iterable JJ t NN values NNS return NN iterables NNS unmodifiable JJ iterable JJ root ROOT iterables amod iterable unmodifiable dep iterables iterable metrics NNS values NNS root ROOT values compound values metrics,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME proto extension hosts INIT proto extension hosts EXPR proto extension hosts private JJ static JJ final JJ string NN proto NN extension NN hosts NNS root ROOT hosts compound hosts proto compound hosts extension proto NN extension NN hosts NNS root ROOT hosts compound hosts proto compound hosts extension,1,e1,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
COMMENT transient fields that are lazy initialized and then memoized DECL STMT SPECIFIER private SPECIFIER transient TYPE extension registry NAME extension registry NAME memoized extension registry transient fields that are lazy initialized and then memoized root ROOT memoized amod fields transient nsubjpass initialized fields nsubj memoized fields ref fields that auxpass initialized are advmod initialized lazy acl relcl fields initialized cc initialized and advmod initialized then private JJ transient JJ extension NN registry NN root ROOT registry compound registry extension memoized JJ extension NN registry NN root ROOT registry amod registry memoized compound registry extension,0,n/a,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,57
DECL STMT SPECIFIER static TYPE final type descriptor message SPECIFIER final NAME type descriptor message NAME type descriptor ARGUMENT LIST ARGUMENT NAME message NAME message type INIT new type descriptor message EXPR new type descriptor message CLASS type descriptor message SUPER type descriptor message NAME type descriptor message NAME type descriptor ARGUMENT LIST ARGUMENT NAME message ARGUMENT LIST BLOCK static JJ final JJ type NN descriptor NN root ROOT descriptor compound descriptor type message NN message NN type NN root ROOT type compound type message new JJ type NN descriptor NN root ROOT descriptor compound descriptor type message NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION SPECIFIER public TYPE set class NAME set class NAME set ARGUMENT LIST ARGUMENT NAME class NAME class ARGUMENT LIST ARGUMENT NAME NAME get extension hosts PARAMETER LIST BLOCK RETURN return extension host classes EXPR extension host classes NAME extension host classes public NN set NN class NN get VB extension NN hosts NNS root ROOT get compound hosts extension dobj get hosts return NN extension NN host NN classes NNS root ROOT classes compound classes extension compound classes host,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE object NAME object NAME to object PARAMETER LIST BLOCK ASSERT assert exists value EXPR exists value NAME exists NAME value RETURN return exists value null EXPR exists value null TERNARY exists value null CONDITION exists EXPR exists NAME exists THEN value EXPR value NAME value ELSE null EXPR null public NN object NN to TO object VB root ROOT object mark object to assert VB exists VBZ value NN return NN exists VBZ value NN null JJ,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER public TYPE int NAME int NAME value public NN int NN value NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION SPECIFIER public SPECIFIER final TYPE int NAME int NAME doc id PARAMETER LIST BLOCK RETURN return sub scorers top doc EXPR sub scorers top doc CALL sub scorers top NAME sub scorers top NAME sub scorers NAME top ARGUMENT LIST NAME doc public NN final JJ int NN doc NN id NN root ROOT id compound id doc return NN sub NN scorers NNS top JJ root ROOT top compound scorers sub nsubj top scorers doc NN return top ANTONYM ANTONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE final disjunction disi approximation SPECIFIER final NAME disjunction disi approximation NAME approximation private JJ final JJ disjunction NN disi NN approximation NN root ROOT approximation compound approximation disjunction compound approximation disi approximation NN,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT escape character DECL STMT SPECIFIER public SPECIFIER static TYPE final char SPECIFIER final NAME char NAME wildcard escape INIT EXPR escape character root ROOT escape dobj escape character public NN static JJ final JJ char NN wildcard NN escape NN root ROOT escape compound escape wildcard,0,n/a,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,190
COMMENT auto prefix terms DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME version auto prefix terms INIT EXPR auto prefix terms root ROOT terms compound terms auto compound terms prefix auto prefix terms root ROOT terms compound terms auto compound terms prefix public NN static JJ final JJ int NN version NN auto NN prefix NN terms NNS root ROOT terms compound terms version compound terms auto compound terms prefix,1,e1,Lucene/lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader.java,104
DECL STMT TYPE final boolean SPECIFIER final NAME boolean NAME any auto prefix terms final JJ boolean NN any DT auto NN prefix NN terms NNS root ROOT terms det terms any compound terms auto compound terms prefix,1,e1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT starting term ord for this frame used to reset term ord in rewind DECL STMT TYPE long NAME long NAME term ord orig starting term ord for this frame used to reset term ord in rewind root ROOT starting compound ord term dobj starting ord case frame for det frame this nmod for ord frame acl frame used mark reset to xcomp used reset compound ord term dobj reset ord case rewind in nmod in reset rewind long RB term NN ord NN orig NN root ROOT orig compound orig term compound orig ord,0,n/a,tomcat/test/org/apache/catalina/authenticator/TestFormAuthenticator.java,98
COMMENT placeholder for missing offset that means all values are missing DECL STMT SPECIFIER static TYPE final int SPECIFIER final NAME int NAME all missing INIT EXPR placeholder for missing offset that means all values are missing root ROOT placeholder case missing for nmod for placeholder missing acl missing offset nsubj means that ccomp offset means det values all nsubj missing values aux missing are ccomp means missing static JJ final JJ int NN all DT missing VBG root ROOT missing dep missing all,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
DECL STMT SPECIFIER static TYPE final int SPECIFIER final NAME int NAME sorted single valued INIT EXPR static JJ final JJ int NN sorted VBN single JJ valued VBN root ROOT sorted xcomp sorted single dep single valued,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT build reverse index from every th term DECL STMT SPECIFIER static TYPE final int SPECIFIER final NAME int NAME reverse interval shift INIT EXPR build reverse index from every th term root ROOT build amod index reverse dobj build index case term from det term every det term th nmod from build term static JJ final JJ int NN reverse JJ interval NN shift NN root ROOT shift amod shift reverse compound shift interval,0,N/A,ArgoUML0.34/argouml-cpp/src/org/argouml/language/cpp/generator/GeneratorCpp.java,205
DECL STMT SPECIFIER private TYPE final terms enum with slice SPECIFIER final NAME terms enum with slice NAME terms enum with slice INDEX NAME top private JJ final JJ terms NNS enum VBP with IN slice NN root ROOT enum nsubj enum terms case slice with nmod with enum slice top NN,1,D1,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT TYPE final int SPECIFIER final NAME int NAME int INDEX NAME stack final JJ int NN stack VB,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
CONSTRUCTOR public terms enum with slice int index reader slice sub slice this sub slice sub slice this index index assert sub slice length length sub slice length SPECIFIER public NAME terms enum with slice PARAMETER LIST int index reader slice sub slice PARAMETER int index TYPE int NAME int NAME index PARAMETER reader slice sub slice TYPE reader slice NAME reader slice NAME sub slice BLOCK EXPR this sub slice sub slice NAME this sub slice NAME this NAME sub slice NAME sub slice EXPR this index index NAME this index NAME this NAME index NAME index ASSERT assert sub slice length length sub slice length EXPR sub slice length length sub slice length NAME sub slice length NAME sub slice NAME length NAME sub slice length NAME sub slice NAME length public NN terms NNS enum VBP with IN slice NN root ROOT enum nsubj enum terms case slice with nmod with enum slice int NN index NN reader NN slice NN root ROOT slice compound slice reader sub NN slice NN root ROOT slice compound slice sub this DT sub NN slice NN sub NN slice NN root ROOT slice compound slice sub this DT index NN index NN assert VB sub NN slice NN length NN root ROOT length compound length sub compound length slice length NN sub NN slice NN length NN root ROOT length compound length sub compound length slice,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
COMMENT minimum per dim values packed DECL STMT SPECIFIER protected TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME min packed value minimum per dim values packed root ROOT packed nsubj packed minimum case values per compound values dim nmod per minimum values protected VBN final JJ byte NN min NN packed VBD value NN root ROOT packed nsubj packed min dobj packed value,1,D1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT maximum per dim values packed DECL STMT SPECIFIER protected TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME max packed value maximum per dim values packed root ROOT packed nsubj packed maximum case values per compound values dim nmod per maximum values protected VBN final JJ byte NN max NN packed VBD value NN root ROOT packed nsubj packed max dobj packed value,1,D1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
DECL STMT TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME scratch final JJ byte NN scratch NN,1,D1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT default maximum number of point in each leaf block DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME default max points in leaf node INIT EXPR default maximum number of point in each leaf block root ROOT number compound number default compound number maximum case point of nmod of number point case block in det block each compound block leaf nmod in number block public NN static JJ final JJ int NN default NN max NN points NNS in IN leaf NN node NN root ROOT points compound points default compound points max case node in compound node leaf nmod in points node block points ANTONYM ANTONYM point block ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/persistence/UmlFilePersister.java,680
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME bytes per doc private JJ final JJ int NN bytes NNS per IN doc NN root ROOT bytes case doc per nmod per bytes doc,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT writes the bkd tree to the provided link index output and returns the file offset where index was written FUNCTION SPECIFIER public TYPE long NAME long NAME finish PARAMETER LIST index output out PARAMETER index output out TYPE index output NAME index output NAME out THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK COMMENT system out println n bkd tree writer finish point count point count out out heap writer heap point writer COMMENT todo specialize the d case it s much faster at indexing time no partitioning on recurse COMMENT catch user silliness IF if heap point writer null temp input null throw new illegal state exception already finished CONDITION heap point writer null temp input null EXPR heap point writer null temp input null NAME heap point writer NAME temp input THEN throw new illegal state exception already finished BLOCK THROW throw new illegal state exception already finished EXPR new illegal state exception already finished CALL illegal state exception already finished NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR already finished IF if offline point writer null offline point writer close CONDITION offline point writer null EXPR offline point writer null NAME offline point writer THEN offline point writer close BLOCK EXPR offline point writer close CALL offline point writer close NAME offline point writer close NAME offline point writer NAME close ARGUMENT LIST IF if point count throw new illegal state exception must index at least one point CONDITION point count EXPR point count NAME point count THEN throw new illegal state exception must index at least one point BLOCK THROW throw new illegal state exception must index at least one point EXPR new illegal state exception must index at least one point CALL illegal state exception must index at least one point NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR must index at least one point DECL STMT TYPE long bit set NAME long bit set NAME ord bit set IF if num dims if single value per doc ord bit set new long bit set max doc else ord bit set new long bit set point count else ord bit set null CONDITION num dims EXPR num dims NAME num dims THEN if single value per doc ord bit set new long bit set max doc else ord bit set new long bit set point count BLOCK IF if single value per doc ord bit set new long bit set max doc else ord bit set new long bit set point count CONDITION single value per doc EXPR single value per doc NAME single value per doc THEN ord bit set new long bit set max doc BLOCK EXPR ord bit set new long bit set max doc NAME ord bit set CALL long bit set max doc NAME long bit set ARGUMENT LIST ARGUMENT EXPR max doc NAME max doc ELSE else ord bit set new long bit set point count BLOCK EXPR ord bit set new long bit set point count NAME ord bit set CALL long bit set point count NAME long bit set ARGUMENT LIST ARGUMENT EXPR point count NAME point count ELSE else ord bit set null BLOCK EXPR ord bit set null NAME ord bit set DECL STMT TYPE long NAME long NAME count per leaf INIT point count EXPR point count NAME point count DECL STMT TYPE long NAME long NAME inner node count INIT EXPR WHILE while count per leaf max points in leaf node count per leaf count per leaf inner node count CONDITION count per leaf max points in leaf node EXPR count per leaf max points in leaf node NAME count per leaf NAME max points in leaf node BLOCK EXPR count per leaf count per leaf NAME count per leaf NAME count per leaf EXPR inner node count NAME inner node count DECL STMT TYPE int NAME int NAME num leaves INIT int inner node count EXPR int inner node count NAME int NAME inner node count EXPR check max leaf node count num leaves CALL check max leaf node count num leaves NAME check max leaf node count ARGUMENT LIST ARGUMENT EXPR num leaves NAME num leaves COMMENT note we could save the here to use a bit less heap at search time but then we d need a somewhat costly check at each COMMENT step of the recursion to recompute the split dim COMMENT indexed by node id but first root node id is we do because the lead byte at each recursion says which dim we split on DECL STMT TYPE byte NAME byte NAME byte INDEX NAME split packed values INIT new byte math to int exact num leaves bytes per dim EXPR new byte math to int exact num leaves bytes per dim NAME byte math to int exact num leaves bytes per dim NAME byte INDEX math to int exact num leaves bytes per dim EXPR math to int exact num leaves bytes per dim CALL math to int exact num leaves bytes per dim NAME math to int exact NAME math NAME to int exact ARGUMENT LIST ARGUMENT EXPR num leaves bytes per dim NAME num leaves NAME bytes per dim COMMENT because leaf count is power of e g and inner node count is power of minus e g DECL STMT TYPE long NAME long NAME long INDEX NAME leaf block f ps INIT new long num leaves EXPR new long num leaves NAME long num leaves NAME long INDEX num leaves EXPR num leaves NAME num leaves COMMENT make sure the math above worked ASSERT assert point count num leaves max points in leaf node point count point count num leaves num leaves max points in leaf node max points in leaf node EXPR point count num leaves max points in leaf node point count point count num leaves num leaves max points in leaf node max points in leaf node NAME point count NAME num leaves NAME max points in leaf node NAME point count NAME num leaves NAME max points in leaf node COMMENT sort all docs once by each dimension DECL STMT TYPE path slice NAME path slice NAME path slice INDEX NAME sorted point writers INIT new path slice num dims EXPR new path slice num dims NAME path slice num dims NAME path slice INDEX num dims EXPR num dims NAME num dims COMMENT this is only used on exception on normal code paths we close all files we opened DECL STMT TYPE list closeable NAME list closeable NAME list ARGUMENT LIST ARGUMENT NAME closeable NAME to close heroically INIT new array list EXPR new array list CALL array list NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST DECL STMT TYPE boolean NAME boolean NAME success INIT false EXPR false TRY try long t system nano time for int dim dim num dims dim sorted point writers dim new path slice sort dim point count long t system nano time system out println sort time t t msec if temp input null temp dir delete file temp input get name temp input null else assert heap point writer null heap point writer null final int parent splits new int num dims build num leaves sorted point writers ord bit set out min packed value max packed value parent splits split packed values leaf block f ps to close heroically assert arrays equals parent splits new int num dims for path slice slice sorted point writers slice writer destroy if no exception we should have cleaned everything up assert temp dir get created files is empty long t system nano time system out println write time t t msec success true finally if success false io utils delete files ignoring exceptions temp dir temp dir get created files io utils close while handling exception to close heroically BLOCK COMMENT long t system nano time FOR for int dim dim num dims dim sorted point writers dim new path slice sort dim point count CONTROL int dim dim num dims dim INIT int dim TYPE int NAME int NAME dim INIT EXPR CONDITION dim num dims EXPR dim num dims NAME dim NAME num dims INCR dim EXPR dim NAME dim BLOCK EXPR sorted point writers dim new path slice sort dim point count NAME sorted point writers dim NAME sorted point writers INDEX dim EXPR dim NAME dim CALL path slice sort dim point count NAME path slice ARGUMENT LIST ARGUMENT EXPR sort dim CALL sort dim NAME sort ARGUMENT LIST ARGUMENT EXPR dim NAME dim ARGUMENT EXPR ARGUMENT EXPR point count NAME point count COMMENT long t system nano time COMMENT system out println sort time t t msec IF if temp input null temp dir delete file temp input get name temp input null else assert heap point writer null heap point writer null CONDITION temp input null EXPR temp input null NAME temp input THEN temp dir delete file temp input get name temp input null BLOCK EXPR temp dir delete file temp input get name CALL temp dir delete file temp input get name NAME temp dir delete file NAME temp dir NAME delete file ARGUMENT LIST ARGUMENT EXPR temp input get name CALL temp input get name NAME temp input get name NAME temp input NAME get name ARGUMENT LIST EXPR temp input null NAME temp input ELSE else assert heap point writer null heap point writer null BLOCK ASSERT assert heap point writer null EXPR heap point writer null NAME heap point writer EXPR heap point writer null NAME heap point writer DECL STMT TYPE final int SPECIFIER final NAME int NAME int INDEX NAME parent splits INIT new int num dims EXPR new int num dims NAME int num dims NAME int INDEX num dims EXPR num dims NAME num dims EXPR build num leaves sorted point writers ord bit set out min packed value max packed value parent splits split packed values leaf block f ps to close heroically CALL build num leaves sorted point writers ord bit set out min packed value max packed value parent splits split packed values leaf block f ps to close heroically NAME build ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR num leaves NAME num leaves ARGUMENT EXPR sorted point writers NAME sorted point writers ARGUMENT EXPR ord bit set NAME ord bit set ARGUMENT EXPR out NAME out ARGUMENT EXPR min packed value NAME min packed value ARGUMENT EXPR max packed value NAME max packed value ARGUMENT EXPR parent splits NAME parent splits ARGUMENT EXPR split packed values NAME split packed values ARGUMENT EXPR leaf block f ps NAME leaf block f ps ARGUMENT EXPR to close heroically NAME to close heroically ASSERT assert arrays equals parent splits new int num dims EXPR arrays equals parent splits new int num dims CALL arrays equals parent splits new int num dims NAME arrays equals NAME arrays NAME equals ARGUMENT LIST ARGUMENT EXPR parent splits NAME parent splits ARGUMENT EXPR new int num dims NAME int num dims NAME int INDEX num dims EXPR num dims NAME num dims FOR for path slice slice sorted point writers slice writer destroy CONTROL path slice slice sorted point writers INIT path slice slice sorted point writers TYPE path slice NAME path slice NAME slice RANGE sorted point writers EXPR sorted point writers NAME sorted point writers BLOCK EXPR slice writer destroy CALL slice writer destroy NAME slice writer destroy NAME slice NAME writer NAME destroy ARGUMENT LIST COMMENT if no exception we should have cleaned everything up ASSERT assert temp dir get created files is empty EXPR temp dir get created files is empty CALL temp dir get created files NAME temp dir get created files NAME temp dir NAME get created files ARGUMENT LIST CALL is empty NAME is empty ARGUMENT LIST COMMENT long t system nano time COMMENT system out println write time t t msec EXPR success true NAME success FINALLY finally if success false io utils delete files ignoring exceptions temp dir temp dir get created files io utils close while handling exception to close heroically BLOCK IF if success false io utils delete files ignoring exceptions temp dir temp dir get created files io utils close while handling exception to close heroically CONDITION success false EXPR success false NAME success THEN io utils delete files ignoring exceptions temp dir temp dir get created files io utils close while handling exception to close heroically BLOCK EXPR io utils delete files ignoring exceptions temp dir temp dir get created files CALL io utils delete files ignoring exceptions temp dir temp dir get created files NAME io utils delete files ignoring exceptions NAME io utils NAME delete files ignoring exceptions ARGUMENT LIST ARGUMENT EXPR temp dir NAME temp dir ARGUMENT EXPR temp dir get created files CALL temp dir get created files NAME temp dir get created files NAME temp dir NAME get created files ARGUMENT LIST EXPR io utils close while handling exception to close heroically CALL io utils close while handling exception to close heroically NAME io utils close while handling exception NAME io utils NAME close while handling exception ARGUMENT LIST ARGUMENT EXPR to close heroically NAME to close heroically writes the bkd tree to the provided link index output and returns the file offset where index was written root ROOT writes det tree the compound tree bkd dobj writes tree case output to det output the amod output provided compound output link compound output index nmod to writes output cc writes and conj and writes returns det file the nsubj offset file ccomp returns offset advmod written where nsubjpass written index auxpass written was advcl offset written writes the bkd tree to the provided link index output and returns the file offset where index was written root ROOT writes det tree the compound tree bkd dobj writes tree case output to det output the amod output provided compound output link compound output index nmod to writes output cc writes and conj and writes returns det file the nsubj offset file ccomp returns offset advmod written where nsubjpass written index auxpass written was advcl offset written public NN long RB finish NN index NN output NN root ROOT output compound output index out IN throws VBZ io NN exception NN root ROOT exception compound exception io system out println n bkd tree writer finish point count point count out out heap writer heap point writer root ROOT system case count out compound count println compound count n compound count bkd compound count tree compound count writer compound count finish compound count point compound count count compound count point nmod out system count case writer out case writer out compound writer heap compound writer writer compound writer heap compound writer point nmod out system writer todo specialize the d case it s much faster at indexing time no partitioning on recurse root ROOT specialize nsubj specialize todo det case the compound case d dobj specialize case nsubj s it acl relcl case s advmod faster much advmod s faster case time at compound time indexing nmod at s time neg partitioning no dobj s partitioning case recurse on nmod on partitioning recurse todo specialize the d case it s much faster at indexing time no partitioning on recurse root ROOT specialize nsubj specialize todo det case the compound case d dobj specialize case nsubj s it acl relcl case s advmod faster much advmod s faster case time at compound time indexing nmod at s time neg partitioning no dobj s partitioning case recurse on nmod on partitioning recurse catch user silliness root ROOT silliness compound silliness catch compound silliness user if IN heap NN point NN writer NN root ROOT writer compound writer heap compound writer point null JJ temp NN input NN root ROOT input compound input temp null JJ throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state already RB finished VBN if IN offline JJ point NN writer NN root ROOT writer amod writer offline compound writer point null JJ offline JJ point NN writer NN close NN root ROOT close amod writer offline compound writer point nsubj close writer if IN point NN count NN root ROOT count compound count point throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state must MD index NN at IN least JJS one CD point NN long RB bit RB set VBN root ROOT set advmod bit long advmod set bit ord NN bit NN set NN root ROOT set compound set ord compound set bit if IN num NN dims VBZ root ROOT dims nsubj dims num if IN single JJ value NN per IN doc NN root ROOT value amod value single case doc per nmod per value doc ord NN bit NN set NN root ROOT set compound set ord compound set bit new JJ long RB bit RB set VBN root ROOT set advmod bit long advmod set bit max NN doc NN root ROOT doc compound doc max else RB ord NN bit NN set NN root ROOT set compound set ord compound set bit new JJ long RB bit RB set VBN root ROOT set advmod bit long advmod set bit point NN count NN root ROOT count compound count point else RB ord NN bit NN set NN root ROOT set compound set ord compound set bit null JJ long RB count NN per IN leaf NN root ROOT count case leaf per nmod per count leaf point NN count NN root ROOT count compound count point long RB inner JJ node NN count NN root ROOT count amod count inner compound count node while IN count NN per IN leaf NN root ROOT count case leaf per nmod per count leaf max NN points NNS in IN leaf NN node NN root ROOT points compound points max case node in compound node leaf nmod in points node count NN per IN leaf NN root ROOT count case leaf per nmod per count leaf count NN per IN leaf NN root ROOT count case leaf per nmod per count leaf inner JJ node NN count NN root ROOT count amod count inner compound count node int NN num NN leaves VBZ root ROOT leaves nsubj leaves num int NN inner JJ node NN count NN root ROOT count amod count inner compound count node check NN max NN leaf NN node NN count NN root ROOT count compound count check compound count max compound count leaf compound count node num NN leaves VBZ root ROOT leaves nsubj leaves num note we could save the here to use a bit less heap at search time but then we d need a somewhat costly check at each root ROOT note nsubj save we nsubj xsubj use we aux save could acl relcl note save det here the advmod save here mark use to xcomp save use det bit a nmod npmod less bit amod heap less dobj use heap case time at compound time search nmod at use time cc note but advmod need then dep need we nsubj need d conj but note need det check a advmod costly somewhat amod check costly dobj need check case each at nmod at need each step of the recursion to recompute the split dim root ROOT step case recursion of det recursion the nmod of step recursion mark recompute to acl to step recompute det dim the amod dim split dobj recompute dim indexed by node id but first root node id is we do because the lead byte at each recursion says which dim we split on root ROOT do csubj do indexed case id by compound id node nmod by indexed id cc id but amod id first compound id root compound id node nmod by indexed id conj but id id aux do is nsubj do we mark says because det byte the compound byte lead nsubj says byte case recursion at det recursion each nmod at byte recursion advcl because do says nsubj dim which ccomp says dim nsubj split we ccomp dim split nmod split on indexed by node id but first root node id is we do because the lead byte at each recursion says which dim we split on root ROOT do csubj do indexed case id by compound id node nmod by indexed id cc id but amod id first compound id root compound id node nmod by indexed id conj but id id aux do is nsubj do we mark says because det byte the compound byte lead nsubj says byte case recursion at det recursion each nmod at byte recursion advcl because do says nsubj dim which ccomp says dim nsubj split we ccomp dim split nmod split on byte NN split JJ packed JJ values NNS root ROOT values amod values split amod values packed new JJ byte NN math NN to TO int VB exact JJ root ROOT math mark int to acl to math int xcomp int exact num NN leaves VBZ root ROOT leaves nsubj leaves num bytes NNS per IN dim NN root ROOT bytes case dim per nmod per bytes dim because leaf count is power of e g and inner node count is power of minus e g root ROOT power mark power because compound count leaf nsubj power count cop power is csubj power power case count of amod count e compound count g cc g and conj and g inner compound count inner compound count node nmod of power count cop power is case g of dep g minus dep g e nmod of power g long RB leaf NN block NN f FW ps FW root ROOT block compound block leaf compound ps f dep block ps new JJ long RB num NN leaves VBZ root ROOT leaves nsubj leaves num make sure the math above worked root ROOT make xcomp make sure det math the dep sure math mark worked above acl above math worked assert VB point NN count NN root ROOT count compound count point num NN leaves VBZ root ROOT leaves nsubj leaves num max NN points NNS in IN leaf NN node NN root ROOT points compound points max case node in compound node leaf nmod in points node point NN count NN root ROOT count compound count point point NN count NN root ROOT count compound count point num NN leaves VBZ root ROOT leaves nsubj leaves num num NN leaves VBZ root ROOT leaves nsubj leaves num max NN points NNS in IN leaf NN node NN root ROOT points compound points max case node in compound node leaf nmod in points node max NN points NNS in IN leaf NN node NN root ROOT points compound points max case node in compound node leaf nmod in points node sort all docs once by each dimension root ROOT docs compound docs sort det docs all advmod dimension once case dimension by det dimension each nmod by docs dimension path NN slice NN root ROOT slice compound slice path sorted VBN point NN writers NNS root ROOT writers amod writers sorted compound writers point new JJ path NN slice NN root ROOT slice compound slice path num NN dims VBZ root ROOT dims nsubj dims num this is only used on exception on normal code paths we close all files we opened root ROOT used nsubjpass used this auxpass used is advmod used only case exception on nmod on files exception case paths on amod paths normal compound paths code nmod on exception paths nsubj files we advmod files close det files all nmod used files nsubj opened we acl relcl files opened list NN closeable JJ to TO close VB heroically RB root ROOT close mark close to advmod close heroically new JJ array NN list NN root ROOT list compound list array boolean NN success NN false JJ try VB long t system nano time root ROOT system advmod system long compound system t amod time nano dep system time for IN int NN dim NN dim NN num NN dims VBZ root ROOT dims nsubj dims num dim NN sorted VBN point NN writers NNS root ROOT writers amod writers sorted compound writers point dim NN new JJ path NN slice NN root ROOT slice compound slice path sort NN dim NN point NN count NN root ROOT count compound count point long t system nano time root ROOT system advmod system long compound system t amod time nano dep system time system out println sort time t t msec root ROOT system case msec out compound msec println compound msec sort compound msec time compound msec t compound msec t nmod out system msec if IN temp NN input NN root ROOT input compound input temp null JJ temp NN dir NN delete VB file NN root ROOT delete compound dir temp nsubj delete dir dobj delete file temp NN input NN get VB name NN root ROOT get compound input temp nsubj get input dobj get name temp NN input NN root ROOT input compound input temp null JJ else RB assert VB heap NN point NN writer NN root ROOT writer compound writer heap compound writer point null JJ heap NN point NN writer NN root ROOT writer compound writer heap compound writer point null JJ final JJ int NN parent NN splits VBZ root ROOT splits nsubj splits parent new JJ int NN num NN dims VBZ root ROOT dims nsubj dims num build VB num NN leaves VBZ root ROOT leaves nsubj leaves num sorted VBN point NN writers NNS root ROOT writers amod writers sorted compound writers point ord NN bit NN set NN root ROOT set compound set ord compound set bit out IN min NN packed VBD value NN root ROOT packed nsubj packed min dobj packed value max NN packed VBD value NN root ROOT packed nsubj packed max dobj packed value parent NN splits VBZ root ROOT splits nsubj splits parent split JJ packed JJ values NNS root ROOT values amod values split amod values packed leaf NN block NN f FW ps FW root ROOT block compound block leaf compound ps f dep block ps to TO close VB heroically RB root ROOT close mark close to advmod close heroically assert VB arrays NNS equals VBZ root ROOT equals nsubj equals arrays parent NN splits VBZ root ROOT splits nsubj splits parent new JJ int NN num NN dims VBZ root ROOT dims nsubj dims num for IN path NN slice NN root ROOT slice compound slice path slice NN sorted VBN point NN writers NNS root ROOT writers amod writers sorted compound writers point slice NN writer NN destroy VBP root ROOT destroy compound writer slice nsubj destroy writer if no exception we should have cleaned everything up root ROOT if neg exception no root if exception nsubj cleaned we aux cleaned should aux cleaned have acl relcl exception cleaned dobj cleaned everything advmod exception up assert VB temp NN dir NN get VB created VBN files NNS root ROOT created compound dir temp nsubjpass created dir auxpass created get dobj created files is VBZ empty JJ root ROOT empty cop empty is long t system nano time root ROOT system advmod system long compound system t amod time nano dep system time system out println write time t t msec root ROOT system compound prt system out nsubj write println ccomp system write compound msec time compound msec t compound msec t dobj write msec success NN true JJ finally RB if IN success NN false JJ io NN utils NNS delete VBP files NNS ignoring VBG exceptions NNS root ROOT delete compound utils io nsubj delete utils dobj delete files acl files ignoring dobj ignoring exceptions temp NN dir SYM root ROOT temp dep temp dir temp NN dir NN get VB created VBN files NNS root ROOT created compound dir temp nsubjpass created dir auxpass created get dobj created files io NN utils NNS close RB while IN handling VBG exception NN root ROOT utils compound utils io advmod handling close mark handling while acl while utils handling dobj handling exception to TO close VB heroically RB root ROOT close mark close to advmod close heroically all only ANTONYM ANTONYM bit check ANTONYM ANTONYM bit slice ANTONYM ANTONYM build have ANTONYM ANTONYM catch bit ANTONYM ANTONYM catch check ANTONYM ANTONYM catch check ANTONYM ANTONYM catch equals ANTONYM ANTONYM catch have ANTONYM ANTONYM catch make ANTONYM ANTONYM catch point ANTONYM ANTONYM check equals ANTONYM ANTONYM check have ANTONYM ANTONYM check lead ANTONYM ANTONYM check make ANTONYM ANTONYM check split ANTONYM ANTONYM close opened ANTONYM ANTONYM count list ANTONYM ANTONYM do build ANTONYM ANTONYM do have ANTONYM ANTONYM do used ANTONYM ANTONYM do worked ANTONYM ANTONYM false true ANTONYM ANTONYM faster close ANTONYM ANTONYM faster dim ANTONYM ANTONYM file point ANTONYM ANTONYM finish check ANTONYM ANTONYM finish first ANTONYM ANTONYM finish root ANTONYM ANTONYM finished check ANTONYM ANTONYM first close ANTONYM ANTONYM first final ANTONYM ANTONYM first root ANTONYM ANTONYM is make ANTONYM ANTONYM lead have ANTONYM ANTONYM lead is ANTONYM ANTONYM lead make ANTONYM ANTONYM lead paths ANTONYM ANTONYM lead was ANTONYM ANTONYM lead worked ANTONYM ANTONYM long close ANTONYM ANTONYM make list ANTONYM ANTONYM make opened ANTONYM ANTONYM make split ANTONYM ANTONYM need have ANTONYM ANTONYM need lead ANTONYM ANTONYM need make ANTONYM ANTONYM new used ANTONYM ANTONYM no all ANTONYM ANTONYM no each ANTONYM ANTONYM note check ANTONYM ANTONYM note step ANTONYM ANTONYM offset close ANTONYM ANTONYM offset finish ANTONYM ANTONYM offset root ANTONYM ANTONYM on split ANTONYM ANTONYM opened have ANTONYM ANTONYM out by ANTONYM ANTONYM point bit ANTONYM ANTONYM point check ANTONYM ANTONYM point files ANTONYM ANTONYM point lead ANTONYM ANTONYM point lead ANTONYM ANTONYM provided lead ANTONYM ANTONYM provided returns ANTONYM ANTONYM provided try ANTONYM ANTONYM public close ANTONYM ANTONYM public opened ANTONYM ANTONYM returns check ANTONYM ANTONYM returns have ANTONYM ANTONYM returns lead ANTONYM ANTONYM returns make ANTONYM ANTONYM returns opened ANTONYM ANTONYM returns save ANTONYM ANTONYM returns throw ANTONYM ANTONYM returns throws ANTONYM ANTONYM returns try ANTONYM ANTONYM s bit ANTONYM ANTONYM save have ANTONYM ANTONYM says assert ANTONYM ANTONYM search count ANTONYM ANTONYM search try ANTONYM ANTONYM sort build ANTONYM ANTONYM split link ANTONYM ANTONYM split sort ANTONYM ANTONYM sure false ANTONYM ANTONYM throw build ANTONYM ANTONYM throw check ANTONYM ANTONYM throw do ANTONYM ANTONYM throw leaf ANTONYM ANTONYM throw opened ANTONYM ANTONYM throw worked ANTONYM ANTONYM throws build ANTONYM ANTONYM throws check ANTONYM ANTONYM throws do ANTONYM ANTONYM throws leaf ANTONYM ANTONYM throws opened ANTONYM ANTONYM throws worked ANTONYM ANTONYM use do ANTONYM ANTONYM was make ANTONYM ANTONYM while bit ANTONYM ANTONYM while slice ANTONYM ANTONYM worked build ANTONYM ANTONYM worked have ANTONYM ANTONYM close sure SYNONYM SYNONYM close true SYNONYM SYNONYM d one SYNONYM SYNONYM faster true SYNONYM SYNONYM new else SYNONYM SYNONYM null false SYNONYM SYNONYM,0,n/a,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER private TYPE final fixed bit set SPECIFIER final NAME fixed bit set NAME result private JJ final JJ fixed VBN bit NN set NN root ROOT set amod set fixed compound set bit result NN,1,D1,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private TYPE term iterator NAME term iterator NAME iterator private JJ term NN iterator NN root ROOT iterator compound iterator term iterator NN,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION SPECIFIER public TYPE void NAME void NAME visit PARAMETER LIST int doc id PARAMETER int doc id TYPE int NAME int NAME doc id BLOCK THROW throw new illegal state exception shouldn t get here since cell inside query isn t emitted EXPR new illegal state exception shouldn t get here since cell inside query isn t emitted CALL illegal state exception shouldn t get here since cell inside query isn t emitted NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR shouldn t get here since cell inside query isn t emitted public NN void NN visit NN int NN doc NN id NN root ROOT id compound id doc throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state should MD n NN t NN root ROOT t compound t n get VB here RB since IN cell NN inside IN query NN root ROOT cell case query inside nmod inside cell query is VBZ n NN t NN root ROOT t compound t n emitted VBN throw get ANTONYM ANTONYM,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public SPECIFIER final TYPE boolean NAME boolean NAME equals PARAMETER LIST object other PARAMETER object other TYPE object NAME object NAME other BLOCK RETURN return same class as other equals to get class cast other EXPR same class as other equals to get class cast other CALL same class as other NAME same class as ARGUMENT LIST ARGUMENT EXPR other NAME other CALL equals to get class cast other NAME equals to ARGUMENT LIST ARGUMENT EXPR get class cast other CALL get class NAME get class ARGUMENT LIST CALL cast other NAME cast ARGUMENT LIST ARGUMENT EXPR other NAME other public NN final JJ boolean NN equals VBZ object NN other JJ return NN same JJ class NN as IN root ROOT class amod class same dep class as other JJ equals VBZ to TO root ROOT equals dep equals to get VB class NN root ROOT get dobj get class cast NN other JJ,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT TYPE byte NAME byte NAME byte INDEX NAME point bytes INIT new byte bytes per dim EXPR new byte bytes per dim NAME byte bytes per dim NAME byte INDEX bytes per dim EXPR bytes per dim NAME bytes per dim byte NN point NN bytes NNS root ROOT bytes compound bytes point new JJ byte NN bytes NNS per IN dim NN root ROOT bytes case dim per nmod per bytes dim,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION SPECIFIER protected TYPE list query node NAME list query node NAME list ARGUMENT LIST ARGUMENT NAME query node NAME set children order PARAMETER LIST list query node children PARAMETER list query node children TYPE list query node NAME list query node NAME list ARGUMENT LIST ARGUMENT NAME query node NAME children THROWS throws query node exception ARGUMENT EXPR query node exception NAME query node exception BLOCK RETURN return children EXPR children NAME children protected VBN list NN query NN node NN root ROOT node compound node query set VBN children NNS order NN root ROOT set compound order children dobj set order list NN query NN node NN root ROOT node compound node query children NNS throws VBZ query NN node NN exception NN root ROOT exception compound exception query compound exception node return NN children NNS throws return ANTONYM ANTONYM,1,A3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER private TYPE boolean NAME boolean NAME is wildcard PARAMETER LIST char sequence text PARAMETER char sequence text TYPE char sequence NAME char sequence NAME text BLOCK IF if text null text length return false CONDITION text null text length EXPR text null text length NAME text CALL text length NAME text length NAME text NAME length ARGUMENT LIST THEN return false BLOCK RETURN return false EXPR false COMMENT if a un escaped or if found return true COMMENT start at the end since it s more common to put wildcards at the end FOR for int i text length i i if text char at i text char at i unescaped char sequence was escaped text i return true CONTROL int i text length i i INIT int i text length TYPE int NAME int NAME i INIT text length EXPR text length CALL text length NAME text length NAME text NAME length ARGUMENT LIST CONDITION i EXPR i NAME i INCR i EXPR i NAME i BLOCK IF if text char at i text char at i unescaped char sequence was escaped text i return true CONDITION text char at i text char at i unescaped char sequence was escaped text i EXPR text char at i text char at i unescaped char sequence was escaped text i CALL text char at i NAME text char at NAME text NAME char at ARGUMENT LIST ARGUMENT EXPR i NAME i CALL text char at i NAME text char at NAME text NAME char at ARGUMENT LIST ARGUMENT EXPR i NAME i CALL unescaped char sequence was escaped text i NAME unescaped char sequence was escaped NAME unescaped char sequence NAME was escaped ARGUMENT LIST ARGUMENT EXPR text NAME text ARGUMENT EXPR i NAME i THEN return true BLOCK RETURN return true EXPR true RETURN return false EXPR false private JJ boolean NN is VBZ wildcard NN root ROOT wildcard cop wildcard is char NN sequence NN root ROOT sequence compound sequence char text NN if IN text NN null JJ text NN length NN root ROOT length compound length text return NN false JJ if a un escaped or if found return true root ROOT escaped mark escaped if det un a nsubj escaped un nsubj found un cc escaped or mark found if conj or escaped found nmod npmod true return xcomp found true if a un escaped or if found return true root ROOT escaped mark escaped if det un a nsubj escaped un nsubj found un cc escaped or mark found if conj or escaped found nmod npmod true return xcomp found true start at the end since it s more common to put wildcards at the end root ROOT start case end at det end the nmod at start end mark common since nsubj common it nsubj xsubj put it cop common s advmod common more advcl since start common mark put to xcomp common put dobj put wildcards case end at det end the nmod at put end for IN int NN i LS text NN length NN root ROOT length compound length text i LS i LS if IN text NN char NN at IN root ROOT char compound char text dep char at i LS text NN char NN at IN root ROOT char compound char text dep char at i LS unescaped JJ char NN sequence NN was VBD escaped VBN root ROOT escaped amod sequence unescaped compound sequence char nsubjpass escaped sequence auxpass escaped was text NN i LS return NN true JJ return NN false JJ false true ANTONYM ANTONYM found put ANTONYM ANTONYM start end ANTONYM ANTONYM start end ANTONYM ANTONYM null false SYNONYM SYNONYM,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE double metaphone filter NAME double metaphone filter NAME create PARAMETER LIST token stream input PARAMETER token stream input TYPE token stream NAME token stream NAME input BLOCK RETURN return new double metaphone filter input max code length inject EXPR new double metaphone filter input max code length inject CALL double metaphone filter input max code length inject NAME double metaphone filter ARGUMENT LIST ARGUMENT EXPR input NAME input ARGUMENT EXPR max code length NAME max code length ARGUMENT EXPR inject NAME inject public NN double JJ metaphone NN filter NN root ROOT filter amod filter double compound filter metaphone create VB token JJ stream NN root ROOT stream amod stream token input NN return NN new JJ double JJ metaphone NN filter NN root ROOT filter amod filter double compound filter metaphone input NN max NN code NN length NN root ROOT length compound length max compound length code inject VB,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT creates a new double metaphone filter factory CONSTRUCTOR public double metaphone filter factory map string string args super args inject get boolean args inject true max code length get int args max code length default max code length if args is empty throw new illegal argument exception unknown parameters args SPECIFIER public NAME double metaphone filter factory PARAMETER LIST map string string args PARAMETER map string string args TYPE map string string NAME map string string NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME string NAME args BLOCK EXPR super args CALL super args NAME super ARGUMENT LIST ARGUMENT EXPR args NAME args EXPR inject get boolean args inject true NAME inject CALL get boolean args inject true NAME get boolean ARGUMENT LIST ARGUMENT EXPR args NAME args ARGUMENT EXPR inject NAME inject ARGUMENT EXPR true EXPR max code length get int args max code length default max code length NAME max code length CALL get int args max code length default max code length NAME get int ARGUMENT LIST ARGUMENT EXPR args NAME args ARGUMENT EXPR max code length NAME max code length ARGUMENT EXPR default max code length NAME default max code length IF if args is empty throw new illegal argument exception unknown parameters args CONDITION args is empty EXPR args is empty CALL args is empty NAME args is empty NAME args NAME is empty ARGUMENT LIST THEN throw new illegal argument exception unknown parameters args BLOCK THROW throw new illegal argument exception unknown parameters args EXPR new illegal argument exception unknown parameters args CALL illegal argument exception unknown parameters args NAME illegal argument exception ARGUMENT LIST ARGUMENT EXPR unknown parameters args NAME args creates a new double metaphone filter factory root ROOT creates det factory a amod factory new amod factory double compound factory metaphone compound factory filter dobj creates factory public NN double JJ metaphone NN filter NN factory NN root ROOT factory amod factory double compound factory metaphone compound factory filter map NN string NN string NN args NNS super JJ args NNS inject VB get VB boolean JJ root ROOT get xcomp get boolean args NNS inject VB true JJ max NN code NN length NN root ROOT length compound length max compound length code get VB int NN root ROOT get dobj get int args NNS max NN code NN length NN root ROOT length compound length max compound length code default NN max NN code NN length NN root ROOT length compound length default compound length max compound length code if IN args NNS is VBZ empty JJ root ROOT empty nsubj empty args cop empty is throw VB new JJ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument unknown JJ parameters NNS args NNS creates throw ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/members/EventNode.java,18
FUNCTION SPECIFIER protected TYPE void NAME void NAME initialize iterator PARAMETER LIST THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK TRY try analyze input catch analysis engine process exception resource initialization exception e throw new io exception e BLOCK EXPR analyze input CALL analyze input NAME analyze input ARGUMENT LIST CATCH catch analysis engine process exception resource initialization exception e throw new io exception e PARAMETER LIST analysis engine process exception resource initialization exception e PARAMETER analysis engine process exception resource initialization exception e TYPE analysis engine process exception NAME analysis engine process exception TYPE resource initialization exception NAME resource initialization exception NAME e BLOCK THROW throw new io exception e EXPR new io exception e CALL io exception e NAME io exception ARGUMENT LIST ARGUMENT EXPR e NAME e EXPR final offset correct offset cas get document text length NAME final offset CALL correct offset cas get document text length NAME correct offset ARGUMENT LIST ARGUMENT EXPR cas get document text length CALL cas get document text NAME cas get document text NAME cas NAME get document text ARGUMENT LIST CALL length NAME length ARGUMENT LIST DECL STMT TYPE type NAME type NAME token type INIT cas get type system get type token type string EXPR cas get type system get type token type string CALL cas get type system NAME cas get type system NAME cas NAME get type system ARGUMENT LIST CALL get type token type string NAME get type ARGUMENT LIST ARGUMENT EXPR token type string NAME token type string EXPR iterator cas get annotation index token type iterator NAME iterator CALL cas get annotation index token type NAME cas get annotation index NAME cas NAME get annotation index ARGUMENT LIST ARGUMENT EXPR token type NAME token type CALL iterator NAME iterator ARGUMENT LIST protected VBN void NN initialize VB iterator NN root ROOT initialize dobj initialize iterator throws VBZ io NN exception NN root ROOT exception compound exception io try VB analyze VB input NN root ROOT analyze dobj analyze input catch NN analysis NN engine NN process NN exception NN root ROOT exception compound exception analysis compound exception engine compound exception process resource NN initialization NN exception NN root ROOT exception compound exception resource compound exception initialization e SYM throw VB new JJ io NN exception NN root ROOT exception compound exception io e SYM final JJ offset VBN root ROOT offset advmod offset final correct JJ offset VBN root ROOT correct dep correct offset cas NNS get VBP document NN text NN root ROOT get nsubj get cas compound text document dobj get text length NN type NN token JJ type NN root ROOT type amod type token cas NNS get VBP type NN system NN root ROOT get nsubj get cas compound system type dobj get system get VB type NN root ROOT get dobj get type token JJ type NN string NN root ROOT string amod string token compound string type iterator NN cas NNS get VBP annotation JJ index NN root ROOT get nsubj get cas amod index annotation dobj get index token JJ type NN root ROOT type amod type token iterator NN,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private TYPE int NAME int NAME final offset INIT EXPR private JJ int NN final JJ offset VBN root ROOT offset advmod offset final,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private TYPE final offset attribute SPECIFIER final NAME offset attribute NAME offset attr private JJ final JJ offset VBN attribute NN root ROOT attribute amod attribute offset offset VBN attr NN root ROOT offset dobj offset attr,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private TYPE final char term attribute SPECIFIER final NAME char term attribute NAME term attr private JJ final JJ char NN term NN attribute NN root ROOT attribute compound attribute char compound attribute term term NN attr NN root ROOT attr compound attr term,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER protected TYPE final bit set SPECIFIER final NAME bit set NAME is internal edges protected VBN final JJ bit NN set NN root ROOT set compound set bit is VBZ internal JJ edges NNS root ROOT edges cop edges is amod edges internal,1,D2,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT the list of holes if a point is in the hole it is not in the polygon DECL STMT SPECIFIER protected TYPE final list geo polygon SPECIFIER final NAME list geo polygon NAME list ARGUMENT LIST ARGUMENT NAME geo polygon NAME holes the list of holes if a point is in the hole it is not in the polygon root ROOT list det list the case holes of nmod of list holes mark hole if det point a nsubj hole point cop hole is case hole in det hole the dep list hole nsubj polygon it cop polygon is neg polygon not case polygon in det polygon the ccomp hole polygon the list of holes if a point is in the hole it is not in the polygon root ROOT list det list the case holes of nmod of list holes mark hole if det point a nsubj hole point cop hole is case hole in det hole the dep list hole nsubj polygon it cop polygon is neg polygon not case polygon in det polygon the ccomp hole polygon protected VBN final JJ list NN geo NN polygon NN root ROOT polygon compound polygon geo holes NNS,0,N/A,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,64
COMMENT the list of polygon points DECL STMT SPECIFIER protected TYPE final list geo point SPECIFIER final NAME list geo point NAME list ARGUMENT LIST ARGUMENT NAME geo point NAME points the list of polygon points root ROOT list det list the case points of compound points polygon nmod of list points protected VBN final JJ list NN geo NN point NN root ROOT point compound point geo points NNS,0,N/A,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,64
COMMENT check if a point is within the provided holes param point point to check return true if the point is within any of the holes FUNCTION SPECIFIER protected TYPE boolean NAME boolean NAME is within holes PARAMETER LIST final geo point point PARAMETER final geo point point TYPE final geo point SPECIFIER final NAME geo point NAME point BLOCK IF if holes null for final geo polygon hole holes if hole is within point return true CONDITION holes null EXPR holes null NAME holes THEN for final geo polygon hole holes if hole is within point return true BLOCK FOR for final geo polygon hole holes if hole is within point return true CONTROL final geo polygon hole holes INIT final geo polygon hole holes TYPE final geo polygon SPECIFIER final NAME geo polygon NAME hole RANGE holes EXPR holes NAME holes BLOCK IF if hole is within point return true CONDITION hole is within point EXPR hole is within point CALL hole is within point NAME hole is within NAME hole NAME is within ARGUMENT LIST ARGUMENT EXPR point NAME point THEN return true BLOCK RETURN return true EXPR true RETURN return false EXPR false check if a point is within the provided holes root ROOT check mark holes if det point a nsubj holes point cop holes is case holes within det holes the amod holes provided advcl within check holes param point point to check root ROOT point compound point param compound point point mark check to acl to point check return true if the point is within any of the holes root ROOT return amod return true mark any if det point the nsubj any point cop any is case any within advcl within true any case holes of det holes the nmod of any holes protected VBN boolean NN is VBZ within IN holes NNS root ROOT holes cop holes is case holes within final JJ geo NN point NN root ROOT point compound point geo point NN if IN holes NNS null JJ for IN final JJ geo NN polygon NN root ROOT polygon compound polygon geo hole NN holes NNS if IN hole NN is VBZ within IN root ROOT within nsubj within hole cop within is point NN return NN true JJ return NN false JJ check point ANTONYM ANTONYM check return ANTONYM ANTONYM provided return ANTONYM ANTONYM true false ANTONYM ANTONYM null false SYNONYM SYNONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/NotationUtilityUml.java,97
FUNCTION SPECIFIER protected TYPE boolean NAME boolean NAME local is within PARAMETER LIST final vector v PARAMETER final vector v TYPE final vector SPECIFIER final NAME vector NAME v BLOCK RETURN return local is within v x v y v z EXPR local is within v x v y v z CALL local is within v x v y v z NAME local is within ARGUMENT LIST ARGUMENT EXPR v x NAME v x NAME v NAME x ARGUMENT EXPR v y NAME v y NAME v NAME y ARGUMENT EXPR v z NAME v z NAME v NAME z protected VBN boolean NN local JJ is VBZ within IN root ROOT within nsubj within local cop within is final JJ vector NN v LS return NN local JJ is VBZ within IN root ROOT within nsubj within local cop within is v LS x CC root ROOT x dep x v v LS y SYM root ROOT v root v y v LS z SYM root ROOT v root v z v x SYNONYM SYNONYM,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE geo point NAME geo point NAME geo point INDEX NAME get edge points PARAMETER LIST BLOCK RETURN return edge points EXPR edge points NAME edge points public NN geo NN point NN root ROOT point compound point geo get VB edge NN points NNS root ROOT get compound points edge dobj get points return NN edge NN points NNS root ROOT points compound points edge,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE string NAME string NAME to string PARAMETER LIST BLOCK RETURN return geo concave polygon planetmodel planet model points points internal edges is internal edges holes null holes holes EXPR geo concave polygon planetmodel planet model points points internal edges is internal edges holes null holes holes NAME planet model NAME points NAME is internal edges TERNARY holes null holes holes CONDITION holes null EXPR holes null NAME holes THEN EXPR ELSE holes holes EXPR holes holes NAME holes public NN string NN to TO string VB root ROOT string mark string to return NN geo NN concave NN polygon NN root ROOT polygon compound polygon geo compound polygon concave planetmodel NN planet NN model NN root ROOT model compound model planet points NNS points NNS internal JJ edges NNS root ROOT edges amod edges internal is VBZ internal JJ edges NNS root ROOT edges cop edges is amod edges internal holes NNS null JJ holes NNS holes NNS,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME is internal key name INIT is internal EXPR is internal private JJ static JJ final JJ string NN is VBZ internal JJ key JJ name NN root ROOT name cop name is amod name internal amod name key is VBZ internal JJ root ROOT internal cop internal is is name ANTONYM ANTONYM internal private SYNONYM SYNONYM,1,D2,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME brokers key name INIT brokers EXPR brokers private JJ static JJ final JJ string NN brokers NNS key JJ name NN root ROOT name compound name brokers amod name key brokers NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
CONSTRUCTOR public metadata response int throttle time ms list node brokers string cluster id int controller id list topic metadata topic metadata this throttle time ms throttle time ms this brokers brokers this controller get controller node controller id brokers this topic metadata topic metadata this cluster id cluster id SPECIFIER public NAME metadata response PARAMETER LIST int throttle time ms list node brokers string cluster id int controller id list topic metadata topic metadata PARAMETER int throttle time ms TYPE int NAME int NAME throttle time ms PARAMETER list node brokers TYPE list node NAME list node NAME list ARGUMENT LIST ARGUMENT NAME node NAME brokers PARAMETER string cluster id TYPE string NAME string NAME cluster id PARAMETER int controller id TYPE int NAME int NAME controller id PARAMETER list topic metadata topic metadata TYPE list topic metadata NAME list topic metadata NAME list ARGUMENT LIST ARGUMENT NAME topic metadata NAME topic metadata BLOCK EXPR this throttle time ms throttle time ms NAME this throttle time ms NAME this NAME throttle time ms NAME throttle time ms EXPR this brokers brokers NAME this brokers NAME this NAME brokers NAME brokers EXPR this controller get controller node controller id brokers NAME this controller NAME this NAME controller CALL get controller node controller id brokers NAME get controller node ARGUMENT LIST ARGUMENT EXPR controller id NAME controller id ARGUMENT EXPR brokers NAME brokers EXPR this topic metadata topic metadata NAME this topic metadata NAME this NAME topic metadata NAME topic metadata EXPR this cluster id cluster id NAME this cluster id NAME this NAME cluster id NAME cluster id public NN metadata NN response NN root ROOT response compound response metadata int NN throttle NN time NN ms NNS root ROOT ms compound ms throttle compound ms time list NN node NN brokers NNS string NN cluster NN id NN root ROOT id compound id cluster int NN controller NN id NN root ROOT id compound id controller list NN topic NN metadata NN root ROOT metadata compound metadata topic topic NN metadata NN root ROOT metadata compound metadata topic this DT throttle NN time NN ms NNS throttle NN time NN ms NNS root ROOT ms compound ms throttle compound ms time this DT brokers NNS brokers NNS this DT controller NN get VB controller NN node NN root ROOT get compound node controller dobj get node controller NN id NN root ROOT id compound id controller brokers NNS this DT topic NN metadata NN topic NN metadata NN root ROOT metadata compound metadata topic this DT cluster NN id NN cluster NN id NN root ROOT id compound id cluster,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER private TYPE final static string SPECIFIER final SPECIFIER static NAME string NAME creations INIT creations EXPR creations private JJ final JJ static JJ string NN creations NNS creations NNS,1,E1,kafka/clients/src/main/java/org/apache/kafka/common/requests/CreateAclsRequest.java,32
FUNCTION SPECIFIER public TYPE list acl creation NAME list acl creation NAME list ARGUMENT LIST ARGUMENT NAME acl creation NAME acl creations PARAMETER LIST BLOCK RETURN return acl creations EXPR acl creations NAME acl creations public NN list NN acl NN creation NN root ROOT creation compound creation acl acl NN creations NNS root ROOT creations compound creations acl return NN acl NN creations NNS root ROOT creations compound creations acl,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE long NAME long NAME get clicks PARAMETER LIST BLOCK RETURN return clicks EXPR clicks NAME clicks public NN long RB get VB clicks NNS root ROOT get dobj get clicks return NN clicks NNS,1,B6,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private SPECIFIER static TYPE final long SPECIFIER final NAME long NAME commit interval ms INIT l EXPR l private JJ static JJ final JJ long RB commit VB interval NN ms NNS root ROOT commit compound ms interval dobj commit ms l NN,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
COMMENT the number of milliseconds until the next timeout DECL STMT SPECIFIER private TYPE int NAME int NAME next timeout ms the number of milliseconds until the next timeout root ROOT number det number the case milliseconds of nmod of number milliseconds case timeout until det timeout the amod timeout next nmod until number timeout private JJ int NN next JJ timeout NN ms NNS root ROOT ms amod ms next compound ms timeout,0,n/a,kafka/clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java,581
COMMENT check for calls which have timed out timed out calls will be removed and failed the remaining milliseconds until the next timeout will be updated param calls the collection of calls return the number of calls which were timed out FUNCTION TYPE int NAME int NAME handle timeouts PARAMETER LIST collection call calls string msg PARAMETER collection call calls TYPE collection call NAME collection call NAME collection ARGUMENT LIST ARGUMENT NAME call NAME calls PARAMETER string msg TYPE string NAME string NAME msg BLOCK DECL STMT TYPE int NAME int NAME num timed out INIT EXPR FOR for iterator call iter calls iterator iter has next call call iter next int remaining ms calc timeout ms remaining as int now call deadline ms if remaining ms call fail now new timeout exception msg iter remove num timed out else next timeout ms math min next timeout ms remaining ms CONTROL iterator call iter calls iterator iter has next INIT iterator call iter calls iterator TYPE iterator call NAME iterator call NAME iterator ARGUMENT LIST ARGUMENT NAME call NAME iter INIT calls iterator EXPR calls iterator CALL calls iterator NAME calls iterator NAME calls NAME iterator ARGUMENT LIST CONDITION iter has next EXPR iter has next CALL iter has next NAME iter has next NAME iter NAME has next ARGUMENT LIST INCR BLOCK DECL STMT TYPE call NAME call NAME call INIT iter next EXPR iter next CALL iter next NAME iter next NAME iter NAME next ARGUMENT LIST DECL STMT TYPE int NAME int NAME remaining ms INIT calc timeout ms remaining as int now call deadline ms EXPR calc timeout ms remaining as int now call deadline ms CALL calc timeout ms remaining as int now call deadline ms NAME calc timeout ms remaining as int ARGUMENT LIST ARGUMENT EXPR now NAME now ARGUMENT EXPR call deadline ms NAME call deadline ms NAME call NAME deadline ms IF if remaining ms call fail now new timeout exception msg iter remove num timed out else next timeout ms math min next timeout ms remaining ms CONDITION remaining ms EXPR remaining ms NAME remaining ms THEN call fail now new timeout exception msg iter remove num timed out BLOCK EXPR call fail now new timeout exception msg CALL call fail now new timeout exception msg NAME call fail NAME call NAME fail ARGUMENT LIST ARGUMENT EXPR now NAME now ARGUMENT EXPR new timeout exception msg CALL timeout exception msg NAME timeout exception ARGUMENT LIST ARGUMENT EXPR msg NAME msg EXPR iter remove CALL iter remove NAME iter remove NAME iter NAME remove ARGUMENT LIST EXPR num timed out NAME num timed out ELSE else next timeout ms math min next timeout ms remaining ms BLOCK EXPR next timeout ms math min next timeout ms remaining ms NAME next timeout ms CALL math min next timeout ms remaining ms NAME math min NAME math NAME min ARGUMENT LIST ARGUMENT EXPR next timeout ms NAME next timeout ms ARGUMENT EXPR remaining ms NAME remaining ms RETURN return num timed out EXPR num timed out NAME num timed out check for calls which have timed out root ROOT check case calls for nmod for check calls nsubj timed calls ref calls which aux timed have acl relcl calls timed compound prt timed out timed out calls will be removed and failed root ROOT removed amod calls timed compound prt timed out nsubjpass removed calls nsubjpass failed calls aux removed will auxpass removed be cc removed and conj and removed failed the remaining milliseconds until the next timeout will be updated root ROOT milliseconds det milliseconds the amod milliseconds remaining mark updated until det timeout the amod timeout next nsubjpass updated timeout aux updated will auxpass updated be dep milliseconds updated param calls the collection of calls root ROOT calls nsubj calls param det collection the dobj calls collection case calls of nmod of collection calls return the number of calls which were timed out root ROOT return det number the dobj return number case calls of nmod of number calls nsubjpass timed calls ref calls which auxpass timed were acl relcl calls timed compound prt timed out int NN handle VB timeouts NNS root ROOT handle dobj handle timeouts collection NN call NN calls NNS string NN msg NN int NN num NN timed VBD out RP root ROOT timed nsubj timed num compound prt timed out for IN iterator NN call NN iter NN calls NNS iterator NN root ROOT iterator compound iterator calls iter NN has VBZ next JJ root ROOT has nsubj has iter advmod has next call NN call NN iter NN next IN root ROOT iter dep iter next int NN remaining VBG ms NNS root ROOT ms amod ms remaining calc NN timeout NN ms NNS remaining VBG as IN int NN root ROOT ms compound ms calc compound ms timeout acl ms remaining case int as nmod as remaining int now RB call VB deadline NN ms NNS root ROOT call compound ms deadline dobj call ms if IN remaining VBG ms NNS root ROOT ms amod ms remaining call NN fail VBP root ROOT fail nsubj fail call now RB new JJ timeout NN exception NN root ROOT exception compound exception timeout msg NN iter NN remove VB root ROOT remove nsubj remove iter num NN timed VBD out RP root ROOT timed nsubj timed num compound prt timed out else RB next JJ timeout NN ms NNS root ROOT ms amod ms next compound ms timeout math NN min NN root ROOT min compound min math next JJ timeout NN ms NNS root ROOT ms amod ms next compound ms timeout remaining VBG ms NNS root ROOT ms amod ms remaining return NN num NN timed VBD out RP root ROOT timed nsubj timed num compound prt timed out check fail ANTONYM ANTONYM check failed ANTONYM ANTONYM check have ANTONYM ANTONYM check return ANTONYM ANTONYM fail return ANTONYM ANTONYM failed return ANTONYM ANTONYM have remove ANTONYM ANTONYM have removed ANTONYM ANTONYM have return ANTONYM ANTONYM next removed ANTONYM ANTONYM return number ANTONYM ANTONYM new else SYNONYM SYNONYM out failed SYNONYM SYNONYM,0,n/a,ArgoUML0.34/argouml-java/src/org/argouml/language/java/reveng/ParameterDeclaration.java,73
FUNCTION SPECIFIER private TYPE resource NAME resource NAME config resource to resource PARAMETER LIST config resource config resource PARAMETER config resource config resource TYPE config resource NAME config resource NAME config resource BLOCK DECL STMT TYPE resource type NAME resource type NAME resource type SWITCH switch config resource type case topic resource type resource type topic break case broker resource type resource type broker break default throw new illegal argument exception unexpected resource type config resource type CONDITION config resource type EXPR config resource type CALL config resource type NAME config resource type NAME config resource NAME type ARGUMENT LIST BLOCK CASE case topic EXPR topic NAME topic EXPR resource type resource type topic NAME resource type NAME resource type topic NAME resource type NAME topic BREAK break CASE case broker EXPR broker NAME broker EXPR resource type resource type broker NAME resource type NAME resource type broker NAME resource type NAME broker BREAK break DEFAULT default THROW throw new illegal argument exception unexpected resource type config resource type EXPR new illegal argument exception unexpected resource type config resource type CALL illegal argument exception unexpected resource type config resource type NAME illegal argument exception ARGUMENT LIST ARGUMENT EXPR unexpected resource type config resource type CALL config resource type NAME config resource type NAME config resource NAME type ARGUMENT LIST RETURN return new resource resource type config resource name EXPR new resource resource type config resource name CALL resource resource type config resource name NAME resource ARGUMENT LIST ARGUMENT EXPR resource type NAME resource type ARGUMENT EXPR config resource name CALL config resource name NAME config resource name NAME config resource NAME name ARGUMENT LIST private JJ resource NN config NN resource NN to TO resource NN root ROOT resource compound resource config case resource to nmod to resource resource config NN resource NN root ROOT resource compound resource config config NN resource NN root ROOT resource compound resource config resource NN type NN root ROOT type compound type resource resource NN type NN root ROOT type compound type resource switch NN config NN resource NN type NN root ROOT type compound type config compound type resource case NN topic NN resource NN type NN root ROOT type compound type resource resource NN type NN topic NN root ROOT topic compound topic resource compound topic type break NN case NN broker NN resource NN type NN root ROOT type compound type resource resource NN type NN broker NN root ROOT broker compound broker resource compound broker type break NN default NN throw VB new JJ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument unexpected JJ resource NN type NN config NN resource NN type NN root ROOT type compound type config compound type resource return NN new JJ resource NN resource NN type NN root ROOT type compound type resource config NN resource NN name NN root ROOT name compound name config compound name resource break name ANTONYM ANTONYM break return ANTONYM ANTONYM break throw ANTONYM ANTONYM case topic ANTONYM ANTONYM switch break ANTONYM ANTONYM throw name ANTONYM ANTONYM throw return ANTONYM ANTONYM topic return ANTONYM ANTONYM,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT create a self signed x certificate from http bfo com blog odds and ends creating a new x certificate html param dn the x distinguished name eg cn test l london c gb param pair the key pair param days how many days from now the certificate is valid for param algorithm the signing algorithm eg sha with rsa return the self signed certificate throws certificate exception thrown if a security error or an io error occurred FUNCTION SPECIFIER public SPECIFIER static TYPE x certificate NAME x certificate NAME generate certificate PARAMETER LIST string dn key pair pair int days string algorithm PARAMETER string dn TYPE string NAME string NAME dn PARAMETER key pair pair TYPE key pair NAME key pair NAME pair PARAMETER int days TYPE int NAME int NAME days PARAMETER string algorithm TYPE string NAME string NAME algorithm THROWS throws certificate exception ARGUMENT EXPR certificate exception NAME certificate exception BLOCK RETURN return new certificate builder days algorithm generate dn pair EXPR new certificate builder days algorithm generate dn pair CALL certificate builder days algorithm NAME certificate builder ARGUMENT LIST ARGUMENT EXPR days NAME days ARGUMENT EXPR algorithm NAME algorithm CALL generate dn pair NAME generate ARGUMENT LIST ARGUMENT EXPR dn NAME dn ARGUMENT EXPR pair NAME pair create a self signed x certificate root ROOT create det self a nsubj signed self ccomp create signed cc signed x ccomp create certificate conj x signed certificate from http bfo com blog odds and ends creating a new x certificate html root ROOT odds case odds from amod odds http compound odds bfo compound odds com compound odds blog cc odds and aux creating ends conj and odds creating det html a amod html new compound html x compound html certificate dobj creating html param dn the x distinguished name eg cn test l london c gb root ROOT dn nsubj dn param det x the dobj dn x amod name distinguished dep x name compound gb eg compound gb cn compound gb test compound gb l compound gb london compound gb c dep name gb param pair the key pair root ROOT pair compound pair param det pair the amod pair key dep pair pair param days how many days from now the certificate is valid for root ROOT days compound days param advmod many how amod days many dobj valid days case now from nmod from valid now det certificate the nsubj valid certificate cop valid is dep days valid dep valid for param algorithm the signing algorithm eg sha with rsa root ROOT algorithm compound algorithm param det algorithm the compound algorithm signing nsubj sha algorithm advmod sha eg acl relcl algorithm sha case rsa with nmod with sha rsa return the self signed certificate root ROOT signed csubj signed return det self the dobj return self dobj signed certificate throws certificate exception thrown if a security error or an io error occurred root ROOT throws compound exception certificate dobj throws exception acl exception thrown mark occurred if det error a compound error security nsubj occurred error cc error or det error an compound error io conj or error error nsubj occurred error advcl if thrown occurred public NN static JJ x CC certificate NN root ROOT certificate compound certificate x generate VB certificate NN root ROOT generate dobj generate certificate string NN dn NN key JJ pair NN root ROOT pair amod pair key pair NN int NN days NNS string NN algorithm NN throws VBZ certificate NN exception NN root ROOT exception compound exception certificate return NN new JJ certificate NN builder NN root ROOT builder compound builder certificate days NNS algorithm NN generate VB dn NN pair NN create name ANTONYM ANTONYM create thrown ANTONYM ANTONYM create throws ANTONYM ANTONYM creating name ANTONYM ANTONYM creating thrown ANTONYM ANTONYM creating throws ANTONYM ANTONYM distinguished signing ANTONYM ANTONYM ends generate ANTONYM ANTONYM name is ANTONYM ANTONYM name thrown ANTONYM ANTONYM name throws ANTONYM ANTONYM return occurred ANTONYM ANTONYM return thrown ANTONYM ANTONYM return throws ANTONYM ANTONYM signed distinguished ANTONYM ANTONYM thrown generate ANTONYM ANTONYM throws generate ANTONYM ANTONYM l c SYNONYM SYNONYM x c SYNONYM SYNONYM x l SYNONYM SYNONYM,0,n/a,ArgoUML0.34/argouml-cpp/src/org/argouml/language/cpp/generator/GeneratorCpp.java,181
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME days private JJ final JJ int NN days NNS,1,E1,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER public SPECIFIER static TYPE final type SPECIFIER final NAME type NAME records INIT new type override public boolean is nullable return true EXPR new type override public boolean is nullable return true CLASS type override public boolean is nullable return true SUPER type NAME type ARGUMENT LIST BLOCK FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE boolean NAME boolean NAME is nullable PARAMETER LIST BLOCK RETURN return true EXPR true public NN static JJ final JJ type NN records NNS new JJ type NN override NN public NN boolean NN is VBZ nullable JJ root ROOT nullable cop nullable is return NN true JJ,1,E1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER public SPECIFIER static TYPE final type SPECIFIER final NAME type NAME nullable string INIT new type override public boolean is nullable return true EXPR new type override public boolean is nullable return true CLASS type override public boolean is nullable return true SUPER type NAME type ARGUMENT LIST BLOCK FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE boolean NAME boolean NAME is nullable PARAMETER LIST BLOCK RETURN return true EXPR true public NN static JJ final JJ type NN nullable JJ string NN root ROOT string amod string nullable new JJ type NN override NN public NN boolean NN is VBZ nullable JJ root ROOT nullable cop nullable is return NN true JJ,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION SPECIFIER public TYPE long NAME long NAME validate PARAMETER LIST object item PARAMETER object item TYPE object NAME object NAME item BLOCK IF if item instanceof long return long item CONDITION item instanceof long EXPR item instanceof long NAME item NAME long THEN return long item BLOCK RETURN return long item EXPR long item NAME long NAME item THROW throw new schema exception item is not a long EXPR new schema exception item is not a long CALL schema exception item is not a long NAME schema exception ARGUMENT LIST ARGUMENT EXPR item is not a long NAME item public NN long RB validate VB object NN item NN if IN item NN instanceof NN long RB return NN long RB item NN throw VB new JJ schema NN exception NN root ROOT exception compound exception schema item NN is VBZ not RB a DT long RB return throw ANTONYM ANTONYM,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE long NAME long NAME read PARAMETER LIST byte buffer buffer PARAMETER byte buffer buffer TYPE byte buffer NAME byte buffer NAME buffer BLOCK RETURN return byte utils read varlong buffer EXPR byte utils read varlong buffer CALL byte utils read varlong buffer NAME byte utils read varlong NAME byte utils NAME read varlong ARGUMENT LIST ARGUMENT EXPR buffer NAME buffer public NN long RB read VB byte NN buffer NN root ROOT buffer compound buffer byte buffer NN return NN byte NN utils NNS read VBP varlong NN root ROOT read compound utils byte nsubj read utils dobj read varlong buffer NN,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE integer NAME integer NAME validate PARAMETER LIST object item PARAMETER object item TYPE object NAME object NAME item BLOCK IF if item instanceof integer return integer item CONDITION item instanceof integer EXPR item instanceof integer NAME item NAME integer THEN return integer item BLOCK RETURN return integer item EXPR integer item NAME integer NAME item THROW throw new schema exception item is not an integer EXPR new schema exception item is not an integer CALL schema exception item is not an integer NAME schema exception ARGUMENT LIST ARGUMENT EXPR item is not an integer NAME item public NN integer NN validate VB object NN item NN if IN item NN instanceof NN integer NN return NN integer NN item NN throw VB new JJ schema NN exception NN root ROOT exception compound exception schema item NN is VBZ not RB an DT integer NN return throw ANTONYM ANTONYM,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT check whether there are any batches which haven t been drained FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME has undrained PARAMETER LIST BLOCK FOR for map entry topic partition deque producer batch entry this batches entry set deque producer batch deque entry get value synchronized deque if deque is empty return true CONTROL map entry topic partition deque producer batch entry this batches entry set INIT map entry topic partition deque producer batch entry this batches entry set TYPE map entry topic partition deque producer batch NAME map entry topic partition deque producer batch NAME map NAME entry topic partition deque producer batch NAME entry ARGUMENT LIST ARGUMENT NAME topic partition ARGUMENT NAME deque producer batch NAME deque ARGUMENT LIST ARGUMENT NAME producer batch NAME entry RANGE this batches entry set EXPR this batches entry set CALL this batches entry set NAME this batches entry set NAME this NAME batches NAME entry set ARGUMENT LIST BLOCK DECL STMT TYPE deque producer batch NAME deque producer batch NAME deque ARGUMENT LIST ARGUMENT NAME producer batch NAME deque INIT entry get value EXPR entry get value CALL entry get value NAME entry get value NAME entry NAME get value ARGUMENT LIST SYNCHRONIZED synchronized deque if deque is empty return true INIT deque EXPR deque NAME deque BLOCK IF if deque is empty return true CONDITION deque is empty EXPR deque is empty CALL deque is empty NAME deque is empty NAME deque NAME is empty ARGUMENT LIST THEN return true BLOCK RETURN return true EXPR true RETURN return false EXPR false check whether there are any batches which haven t been drained root ROOT check mark are whether expl are there ccomp check are det batches any nsubj are batches dobj drained batches ref batches which compound t haven nsubjpass drained t auxpass drained been acl relcl batches drained public NN boolean NN has VBZ undrained VBN root ROOT undrained aux undrained has for IN map NN entry NN root ROOT entry compound entry map topic NN partition NN root ROOT partition compound partition topic deque NN producer NN batch NN root ROOT batch compound batch producer entry NN this DT batches NNS entry NN set NN deque NN producer NN batch NN root ROOT batch compound batch producer deque NN entry NN get VB value NN root ROOT get nsubj get entry dobj get value synchronized VBN deque NN if IN deque NN is VBZ empty JJ root ROOT empty nsubj empty deque cop empty is return NN true JJ return NN false JJ are map ANTONYM ANTONYM been map ANTONYM ANTONYM check return ANTONYM ANTONYM true false ANTONYM ANTONYM,0,n/a,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/nodes/expressions/primitive/BooleanPrimitive.java,17
COMMENT are there any threads currently waiting on a flush package private for test FUNCTION TYPE boolean NAME boolean NAME flush in progress PARAMETER LIST BLOCK RETURN return flushes in progress get EXPR flushes in progress get CALL flushes in progress get NAME flushes in progress get NAME flushes in progress NAME get ARGUMENT LIST are there any threads currently waiting on a flush root ROOT are expl are there det threads any nsubj are threads advmod waiting currently acl threads waiting case flush on det flush a nmod on waiting flush package private for test root ROOT package amod package private case test for nmod for private test boolean NN flush NN in IN progress NN root ROOT flush case progress in nmod in flush progress return NN flushes NNS in IN progress NN get VBP root ROOT get nsubj get flushes case progress in nmod in flushes progress return get ANTONYM ANTONYM threads get ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,130
COMMENT abort any batches which have not been drained FUNCTION TYPE void NAME void NAME abort undrained batches PARAMETER LIST runtime exception reason PARAMETER runtime exception reason TYPE runtime exception NAME runtime exception NAME reason BLOCK FOR for producer batch batch incomplete copy all deque producer batch dq get deque batch topic partition boolean aborted false synchronized dq if batch is closed aborted true batch abort record appends dq remove batch if aborted batch abort reason deallocate batch CONTROL producer batch batch incomplete copy all INIT producer batch batch incomplete copy all TYPE producer batch NAME producer batch NAME batch RANGE incomplete copy all EXPR incomplete copy all CALL incomplete copy all NAME incomplete copy all NAME incomplete NAME copy all ARGUMENT LIST BLOCK DECL STMT TYPE deque producer batch NAME deque producer batch NAME deque ARGUMENT LIST ARGUMENT NAME producer batch NAME dq INIT get deque batch topic partition EXPR get deque batch topic partition CALL get deque batch topic partition NAME get deque ARGUMENT LIST ARGUMENT EXPR batch topic partition NAME batch topic partition NAME batch NAME topic partition DECL STMT TYPE boolean NAME boolean NAME aborted INIT false EXPR false SYNCHRONIZED synchronized dq if batch is closed aborted true batch abort record appends dq remove batch INIT dq EXPR dq NAME dq BLOCK IF if batch is closed aborted true batch abort record appends dq remove batch CONDITION batch is closed EXPR batch is closed CALL batch is closed NAME batch is closed NAME batch NAME is closed ARGUMENT LIST THEN aborted true batch abort record appends dq remove batch BLOCK EXPR aborted true NAME aborted EXPR batch abort record appends CALL batch abort record appends NAME batch abort record appends NAME batch NAME abort record appends ARGUMENT LIST EXPR dq remove batch CALL dq remove batch NAME dq remove NAME dq NAME remove ARGUMENT LIST ARGUMENT EXPR batch NAME batch IF if aborted batch abort reason deallocate batch CONDITION aborted EXPR aborted NAME aborted THEN batch abort reason deallocate batch BLOCK EXPR batch abort reason CALL batch abort reason NAME batch abort NAME batch NAME abort ARGUMENT LIST ARGUMENT EXPR reason NAME reason EXPR deallocate batch CALL deallocate batch NAME deallocate ARGUMENT LIST ARGUMENT EXPR batch NAME batch abort any batches which have not been drained root ROOT abort det batches any dobj abort batches nsubjpass drained batches ref batches which aux drained have neg drained not auxpass drained been acl relcl batches drained void NN abort VB undrained JJ batches NNS root ROOT abort amod batches undrained dobj abort batches runtime NN exception NN root ROOT exception compound exception runtime reason NN for IN producer NN batch NN root ROOT batch compound batch producer batch NN incomplete JJ copy NN all DT root ROOT copy amod copy incomplete dep copy all deque NN producer NN batch NN root ROOT batch compound batch producer dq NN get VB deque NN root ROOT get dobj get deque batch NN topic NN partition NN root ROOT partition compound partition batch compound partition topic boolean NN aborted JJ false JJ synchronized VBN dq NN if IN batch NN is VBZ closed VBN root ROOT closed nsubjpass closed batch auxpass closed is aborted JJ true JJ batch NN abort NN record NN appends VBZ root ROOT appends compound record batch compound record abort nsubj appends record dq NN remove VB root ROOT remove nsubj remove dq batch NN if IN aborted JJ batch NN abort NN root ROOT abort compound abort batch reason NN deallocate NN batch NN false true ANTONYM ANTONYM have remove ANTONYM ANTONYM void false SYNONYM SYNONYM,0,n/a,ArgoUML0.34/argouml-csharp/src/org/argouml/language/csharp/importer/csparser/statements/ForStatement.java,14
COMMENT close this accumulator and force all the record buffers to be drained FUNCTION SPECIFIER public TYPE void NAME void NAME close PARAMETER LIST BLOCK EXPR this closed true NAME this closed NAME this NAME closed close this accumulator and force all the record buffers to be drained root ROOT accumulator advmod accumulator close det accumulator this cc accumulator and conj and accumulator force det predet buffers all det buffers the compound buffers record dobj force buffers nsubjpass xsubj drained buffers mark drained to auxpass drained be xcomp force drained public NN void NN close RB this DT closed VBD true JJ close public ANTONYM ANTONYM closed close ANTONYM ANTONYM close true SYNONYM SYNONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/ui/LabelledLayout.java,170
COMMENT disconnects the connection to a particular node if there is one any pending client requests for this connection will receive disconnections param node id the id of the node FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME disconnect PARAMETER LIST string node id PARAMETER string node id TYPE string NAME string NAME node id BLOCK EXPR selector close node id CALL selector close node id NAME selector close NAME selector NAME close ARGUMENT LIST ARGUMENT EXPR node id NAME node id DECL STMT TYPE list api keys NAME list api keys NAME list ARGUMENT LIST ARGUMENT NAME api keys NAME request types INIT new array list EXPR new array list CALL array list NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST DECL STMT TYPE long NAME long NAME now INIT time milliseconds EXPR time milliseconds CALL time milliseconds NAME time milliseconds NAME time NAME milliseconds ARGUMENT LIST FOR for in flight request request in flight requests clear all node id if request is internal request if request header api key api keys metadata id metadata updater handle disconnection request destination else request types add api keys for id request header api key aborted sends add new client response request header request callback request destination request created time ms now true null null CONTROL in flight request request in flight requests clear all node id INIT in flight request request in flight requests clear all node id TYPE in flight request NAME in flight request NAME request RANGE in flight requests clear all node id EXPR in flight requests clear all node id CALL in flight requests clear all node id NAME in flight requests clear all NAME in flight requests NAME clear all ARGUMENT LIST ARGUMENT EXPR node id NAME node id BLOCK IF if request is internal request if request header api key api keys metadata id metadata updater handle disconnection request destination else request types add api keys for id request header api key aborted sends add new client response request header request callback request destination request created time ms now true null null CONDITION request is internal request EXPR request is internal request NAME request is internal request NAME request NAME is internal request THEN if request header api key api keys metadata id metadata updater handle disconnection request destination BLOCK IF if request header api key api keys metadata id metadata updater handle disconnection request destination CONDITION request header api key api keys metadata id EXPR request header api key api keys metadata id CALL request header api key NAME request header api key NAME request NAME header NAME api key ARGUMENT LIST NAME api keys metadata id NAME api keys NAME metadata NAME id THEN metadata updater handle disconnection request destination BLOCK EXPR metadata updater handle disconnection request destination CALL metadata updater handle disconnection request destination NAME metadata updater handle disconnection NAME metadata updater NAME handle disconnection ARGUMENT LIST ARGUMENT EXPR request destination NAME request destination NAME request NAME destination ELSE else request types add api keys for id request header api key aborted sends add new client response request header request callback request destination request created time ms now true null null BLOCK EXPR request types add api keys for id request header api key CALL request types add api keys for id request header api key NAME request types add NAME request types NAME add ARGUMENT LIST ARGUMENT EXPR api keys for id request header api key CALL api keys for id request header api key NAME api keys for id NAME api keys NAME for id ARGUMENT LIST ARGUMENT EXPR request header api key CALL request header api key NAME request header api key NAME request NAME header NAME api key ARGUMENT LIST EXPR aborted sends add new client response request header request callback request destination request created time ms now true null null CALL aborted sends add new client response request header request callback request destination request created time ms now true null null NAME aborted sends add NAME aborted sends NAME add ARGUMENT LIST ARGUMENT EXPR new client response request header request callback request destination request created time ms now true null null CALL client response request header request callback request destination request created time ms now true null null NAME client response ARGUMENT LIST ARGUMENT EXPR request header NAME request header NAME request NAME header ARGUMENT EXPR request callback NAME request callback NAME request NAME callback ARGUMENT EXPR request destination NAME request destination NAME request NAME destination ARGUMENT EXPR request created time ms NAME request created time ms NAME request NAME created time ms ARGUMENT EXPR now NAME now ARGUMENT EXPR true ARGUMENT EXPR null ARGUMENT EXPR null EXPR connection states disconnected node id now CALL connection states disconnected node id now NAME connection states disconnected NAME connection states NAME disconnected ARGUMENT LIST ARGUMENT EXPR node id NAME node id ARGUMENT EXPR now NAME now IF if log is debug enabled log debug manually disconnected from removed requests node id utils join request types CONDITION log is debug enabled EXPR log is debug enabled CALL log is debug enabled NAME log is debug enabled NAME log NAME is debug enabled ARGUMENT LIST THEN log debug manually disconnected from removed requests node id utils join request types BLOCK EXPR log debug manually disconnected from removed requests node id utils join request types CALL log debug manually disconnected from removed requests node id utils join request types NAME log debug NAME log NAME debug ARGUMENT LIST ARGUMENT EXPR manually disconnected from removed requests ARGUMENT EXPR node id NAME node id ARGUMENT EXPR utils join request types CALL utils join request types NAME utils join NAME utils NAME join ARGUMENT LIST ARGUMENT EXPR request types NAME request types ARGUMENT EXPR disconnects the connection to a particular node if there is one root ROOT disconnects det connection the dobj disconnects connection case node to det node a amod node particular nmod to connection node mark is if expl is there advcl if disconnects is nsubj is one any pending client requests for this connection will receive disconnections root ROOT receive det requests any amod requests pending compound requests client nsubj receive requests case connection for det connection this nmod for requests connection aux receive will dobj receive disconnections param node id the id of the node root ROOT id compound node param nsubj id node det id the dobj id id case node of det node the nmod of id node override NN public NN void NN disconnect VB string NN node NN id NN root ROOT id compound id node selector NN close NN root ROOT close compound close selector node NN id NN root ROOT id compound id node list NN api RB keys NNS root ROOT keys advmod keys api request NN types NNS root ROOT types compound types request new JJ array NN list NN root ROOT list compound list array long RB now RB time NN milliseconds NNS root ROOT milliseconds compound milliseconds time for IN in IN flight NN request NN root ROOT request case request in compound request flight request NN in IN flight NN requests NNS clear JJ all DT root ROOT requests case requests in compound requests flight amod requests clear dep clear all node NN id NN root ROOT id compound id node if IN request NN is VBZ internal JJ request NN root ROOT request nsubj request request cop request is amod request internal if IN request NN header NN api NN key NN root ROOT key compound key request compound key header compound key api api NN keys NNS metadata JJ id NN root ROOT keys compound keys api amod id metadata dep keys id metadata NN updater NN handle VBP disconnection NN root ROOT handle compound updater metadata nsubj handle updater dobj handle disconnection request NN destination NN root ROOT destination compound destination request else RB request NN types NNS add VBP root ROOT add compound types request nsubj add types api RB keys NNS for IN id NN root ROOT keys advmod keys api case id for nmod for keys id request NN header NN api NN key NN root ROOT key compound key request compound key header compound key api aborted JJ sends VBZ add VB root ROOT add amod sends aborted nsubj add sends new JJ client NN response NN root ROOT response compound response client request NN header NN root ROOT header compound header request request NN callback NN root ROOT callback compound callback request request NN destination NN root ROOT destination compound destination request request NN created VBD time NN ms NNS root ROOT created nsubj created request compound ms time dobj created ms now RB true JJ null JJ null JJ connection NN states NNS disconnected VBD root ROOT disconnected compound states connection nsubj disconnected states node NN id NN root ROOT id compound id node now RB if IN log NN is VBZ debug NN enabled VBD root ROOT debug nsubj debug log cop debug is dep debug enabled log NN debug NN root ROOT debug compound debug log manually RB disconnected VBN from IN removed VBN requests NNS node NN id NN root ROOT id compound id node utils NNS join VBP root ROOT join nsubj join utils request NN types NNS root ROOT types compound types request add removed ANTONYM ANTONYM close destination ANTONYM ANTONYM close long ANTONYM ANTONYM close removed ANTONYM ANTONYM connection disconnect ANTONYM ANTONYM connection disconnections ANTONYM ANTONYM connection disconnects ANTONYM ANTONYM disconnect join ANTONYM ANTONYM disconnected join ANTONYM ANTONYM disconnects join ANTONYM ANTONYM public close ANTONYM ANTONYM close true SYNONYM SYNONYM new else SYNONYM SYNONYM particular close SYNONYM SYNONYM,0,n/a,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/profile/Profile.java,114
COMMENT closes the connection to a particular node if there is one all requests on the connection will be cleared client request callbacks will not be invoked for the cleared requests nor will they be returned from poll param node id the id of the node FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME close PARAMETER LIST string node id PARAMETER string node id TYPE string NAME string NAME node id BLOCK EXPR selector close node id CALL selector close node id NAME selector close NAME selector NAME close ARGUMENT LIST ARGUMENT EXPR node id NAME node id FOR for in flight request request in flight requests clear all node id if request is internal request request header api key api keys metadata id metadata updater handle disconnection request destination CONTROL in flight request request in flight requests clear all node id INIT in flight request request in flight requests clear all node id TYPE in flight request NAME in flight request NAME request RANGE in flight requests clear all node id EXPR in flight requests clear all node id CALL in flight requests clear all node id NAME in flight requests clear all NAME in flight requests NAME clear all ARGUMENT LIST ARGUMENT EXPR node id NAME node id BLOCK IF if request is internal request request header api key api keys metadata id metadata updater handle disconnection request destination CONDITION request is internal request request header api key api keys metadata id EXPR request is internal request request header api key api keys metadata id NAME request is internal request NAME request NAME is internal request CALL request header api key NAME request header api key NAME request NAME header NAME api key ARGUMENT LIST NAME api keys metadata id NAME api keys NAME metadata NAME id THEN metadata updater handle disconnection request destination BLOCK EXPR metadata updater handle disconnection request destination CALL metadata updater handle disconnection request destination NAME metadata updater handle disconnection NAME metadata updater NAME handle disconnection ARGUMENT LIST ARGUMENT EXPR request destination NAME request destination NAME request NAME destination EXPR connection states remove node id CALL connection states remove node id NAME connection states remove NAME connection states NAME remove ARGUMENT LIST ARGUMENT EXPR node id NAME node id closes the connection to a particular node if there is one root ROOT closes det connection the dobj closes connection case node to det node a amod node particular nmod to connection node mark is if expl is there advcl if closes is nsubj is one all requests on the connection will be cleared client request callbacks will not be invoked root ROOT cleared det requests all nsubjpass cleared requests case connection on det connection the nmod on requests connection aux cleared will auxpass cleared be compound callbacks client compound callbacks request nsubjpass invoked callbacks aux invoked will neg invoked not auxpass invoked be ccomp cleared invoked all requests on the connection will be cleared client request callbacks will not be invoked root ROOT cleared det requests all nsubjpass cleared requests case connection on det connection the nmod on requests connection aux cleared will auxpass cleared be compound callbacks client compound callbacks request nsubjpass invoked callbacks aux invoked will neg invoked not auxpass invoked be ccomp cleared invoked for the cleared requests nor will they be returned from poll root ROOT requests case requests for det requests the amod requests cleared cc requests nor aux returned will nsubjpass returned they auxpass returned be conj nor requests returned case poll from nmod from returned poll param node id the id of the node root ROOT id compound node param nsubj id node det id the dobj id id case node of det node the nmod of id node override NN public NN void NN close RB string NN node NN id NN root ROOT id compound id node selector NN close NN root ROOT close compound close selector node NN id NN root ROOT id compound id node for IN in IN flight NN request NN root ROOT request case request in compound request flight request NN in IN flight NN requests NNS clear JJ all DT root ROOT requests case requests in compound requests flight amod requests clear dep clear all node NN id NN root ROOT id compound id node if IN request NN is VBZ internal JJ request NN root ROOT request nsubj request request cop request is amod request internal request NN header NN api NN key NN root ROOT key compound key request compound key header compound key api api NN keys NNS metadata JJ id NN root ROOT keys compound keys api amod id metadata dep keys id metadata NN updater NN handle VBP disconnection NN root ROOT handle compound updater metadata nsubj handle updater dobj handle disconnection request NN destination NN root ROOT destination compound destination request connection NN states NNS remove VB root ROOT remove compound states connection nsubj remove states node NN id NN root ROOT id compound id node cleared returned ANTONYM ANTONYM close destination ANTONYM ANTONYM closes destination ANTONYM ANTONYM public close ANTONYM ANTONYM particular close SYNONYM SYNONYM,0,N/A,tomcat/java/org/apache/catalina/connector/CoyoteAdapter.java,78
COMMENT check if the node with the given id is ready to send more requests param node the node param now the current time in ms return true if the node is ready FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE boolean NAME boolean NAME is ready PARAMETER LIST node node long now PARAMETER node node TYPE node NAME node NAME node PARAMETER long now TYPE long NAME long NAME now BLOCK COMMENT if we need to update our metadata now declare all requests unready to make metadata requests first COMMENT priority RETURN return metadata updater is update due now can send request node id string EXPR metadata updater is update due now can send request node id string CALL metadata updater is update due now NAME metadata updater is update due NAME metadata updater NAME is update due ARGUMENT LIST ARGUMENT EXPR now NAME now CALL can send request node id string NAME can send request ARGUMENT LIST ARGUMENT EXPR node id string CALL node id string NAME node id string NAME node NAME id string ARGUMENT LIST check if the node with the given id is ready to send more requests root ROOT check mark ready if det node the nsubj ready node nsubj xsubj send node case id with det id the amod id given nmod with node id cop ready is advcl if check ready mark send to xcomp ready send amod requests more dobj send requests param node the node root ROOT node compound node param det node the dep node node param now the current time in ms root ROOT time nsubj time param advmod time now det time the amod time current case ms in nmod in time ms return true if the node is ready root ROOT return amod return true mark ready if det node the nsubj ready node cop ready is advcl if true ready override NN public NN boolean NN is VBZ ready JJ root ROOT ready cop ready is node NN node NN long RB now RB if we need to update our metadata now declare all requests unready to make metadata requests first root ROOT need mark need if nsubj need we nsubj xsubj update we mark update to xcomp need update nmod poss metadata our dobj update metadata advmod declare now dep update declare det requests all dobj declare requests amod requests unready mark make to xcomp unready make compound requests metadata dobj make requests advmod make first priority return NN metadata NN updater NN is VBZ update VB due JJ root ROOT update compound updater metadata nsubj update updater aux update is xcomp update due now RB can MD send VB request NN root ROOT send aux send can dobj send request node NN id NN string NN root ROOT string compound string node compound string id check declare ANTONYM ANTONYM check given ANTONYM ANTONYM check make ANTONYM ANTONYM check return ANTONYM ANTONYM declare make ANTONYM ANTONYM given declare ANTONYM ANTONYM given need ANTONYM ANTONYM given ready ANTONYM ANTONYM given send ANTONYM ANTONYM is make ANTONYM ANTONYM need make ANTONYM ANTONYM ready unready ANTONYM ANTONYM requests need ANTONYM ANTONYM return make ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/filters/HttpHeaderSecurityFilter.java,44
COMMENT queue up the given request for sending requests can only be sent out to ready nodes param request the request param now the current timestamp FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME send PARAMETER LIST client request request long now PARAMETER client request request TYPE client request NAME client request NAME request PARAMETER long now TYPE long NAME long NAME now BLOCK EXPR do send request false now CALL do send request false now NAME do send ARGUMENT LIST ARGUMENT EXPR request NAME request ARGUMENT EXPR false ARGUMENT EXPR now NAME now queue up the given request for sending requests can only be sent out to ready nodes root ROOT sent csubjpass sent queue compound prt queue up det request the amod request given dobj queue request mark sending for acl for request sending dobj sending requests aux sent can advmod sent only auxpass sent be compound prt sent out case nodes to amod nodes ready nmod to sent nodes queue up the given request for sending requests can only be sent out to ready nodes root ROOT sent csubjpass sent queue compound prt queue up det request the amod request given dobj queue request mark sending for acl for request sending dobj sending requests aux sent can advmod sent only auxpass sent be compound prt sent out case nodes to amod nodes ready nmod to sent nodes param request the request root ROOT request compound request param det request the dobj request request param now the current timestamp root ROOT timestamp compound timestamp param advmod timestamp now det timestamp the amod timestamp current override NN public NN void NN send VB client NN request NN root ROOT request compound request client request NN long RB now RB do VB send VB root ROOT send aux send do request NN false JJ now RB given false ANTONYM ANTONYM given ready ANTONYM ANTONYM given send ANTONYM ANTONYM given sending ANTONYM ANTONYM given sent ANTONYM ANTONYM up ready SYNONYM SYNONYM void false SYNONYM SYNONYM,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT handle any disconnected connections param responses the list of responses that completed with the disconnection param now the current time FUNCTION SPECIFIER private TYPE void NAME void NAME handle disconnections PARAMETER LIST list client response responses long now PARAMETER list client response responses TYPE list client response NAME list client response NAME list ARGUMENT LIST ARGUMENT NAME client response NAME responses PARAMETER long now TYPE long NAME long NAME now BLOCK FOR for map entry string channel state entry this selector disconnected entry set string node entry get key log debug node disconnected node process disconnection responses node now entry get value CONTROL map entry string channel state entry this selector disconnected entry set INIT map entry string channel state entry this selector disconnected entry set TYPE map entry string channel state NAME map entry string channel state NAME map NAME entry string channel state NAME entry ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME channel state NAME entry RANGE this selector disconnected entry set EXPR this selector disconnected entry set CALL this selector disconnected NAME this selector disconnected NAME this NAME selector NAME disconnected ARGUMENT LIST CALL entry set NAME entry set ARGUMENT LIST BLOCK DECL STMT TYPE string NAME string NAME node INIT entry get key EXPR entry get key CALL entry get key NAME entry get key NAME entry NAME get key ARGUMENT LIST EXPR log debug node disconnected node CALL log debug node disconnected node NAME log debug NAME log NAME debug ARGUMENT LIST ARGUMENT EXPR node disconnected ARGUMENT EXPR node NAME node EXPR process disconnection responses node now entry get value CALL process disconnection responses node now entry get value NAME process disconnection ARGUMENT LIST ARGUMENT EXPR responses NAME responses ARGUMENT EXPR node NAME node ARGUMENT EXPR now NAME now ARGUMENT EXPR entry get value CALL entry get value NAME entry get value NAME entry NAME get value ARGUMENT LIST COMMENT we got a disconnect so we should probably refresh our metadata and see if that broker is dead IF if this selector disconnected size metadata updater request update CONDITION this selector disconnected size EXPR this selector disconnected size CALL this selector disconnected NAME this selector disconnected NAME this NAME selector NAME disconnected ARGUMENT LIST CALL size NAME size ARGUMENT LIST THEN metadata updater request update BLOCK EXPR metadata updater request update CALL metadata updater request update NAME metadata updater request update NAME metadata updater NAME request update ARGUMENT LIST handle any disconnected connections root ROOT handle det connections any amod connections disconnected dobj handle connections param responses the list of responses that completed with the disconnection root ROOT responses compound responses param det list the dep responses list case responses of nmod of list responses nsubj completed responses ref responses that acl relcl responses completed case disconnection with det disconnection the nmod with completed disconnection param now the current time root ROOT time nsubj time param advmod time now det time the amod time current private JJ void NN handle VB disconnections NNS root ROOT handle dobj handle disconnections list NN client NN response NN root ROOT response compound response client responses NNS long RB now RB for IN map NN entry NN root ROOT entry compound entry map string NN channel NN state NN root ROOT state compound state channel entry NN this DT selector NN disconnected VBD entry NN set NN root ROOT set compound set entry string NN node NN entry NN get VB key JJ root ROOT get nsubj get entry xcomp get key log NN debug NN root ROOT debug compound debug log node NN disconnected VBN node NN process NN disconnection NN root ROOT disconnection compound disconnection process responses NNS node NN now RB entry NN get VB value NN root ROOT get nsubj get entry dobj get value we got a disconnect so we should probably refresh our metadata and see if that broker is dead root ROOT got nsubj got we det disconnect a dobj got disconnect mark refresh so nsubj refresh we nsubj see we aux refresh should advmod refresh probably advcl so disconnect refresh nmod poss metadata our dobj refresh metadata cc refresh and advcl so disconnect see conj and refresh see mark dead if det broker that nsubj dead broker cop dead is advcl if see dead if IN this DT selector NN disconnected VBD size NN metadata NN updater NN request NN update VBP root ROOT update compound request metadata compound request updater nsubj update request connections disconnect ANTONYM ANTONYM connections disconnection ANTONYM ANTONYM current dead ANTONYM ANTONYM got see ANTONYM ANTONYM map is ANTONYM ANTONYM string got ANTONYM ANTONYM completed dead SYNONYM SYNONYM,0,n/a,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
FUNCTION SPECIFIER public TYPE isolation level NAME isolation level NAME isolation level PARAMETER LIST BLOCK RETURN return isolation level EXPR isolation level NAME isolation level public NN isolation NN level NN root ROOT level compound level isolation isolation NN level NN root ROOT level compound level isolation return NN isolation NN level NN root ROOT level compound level isolation,0,n/a,kafka/clients/src/main/java/org/apache/kafka/common/requests/ListOffsetRequest.java,250
COMMENT request and partition level name DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME max bytes key name INIT max bytes EXPR max bytes request and partition level name root ROOT name compound name request cc request and conj and request partition compound name partition compound name level private JJ static JJ final JJ string NN max NN bytes NNS key JJ name NN root ROOT name compound name max compound name bytes amod name key max NN bytes NNS root ROOT bytes compound bytes max,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT partition level field names DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME partition key name INIT partition EXPR partition partition level field names root ROOT names compound names partition compound names level compound names field private JJ static JJ final JJ string NN partition NN key JJ name NN root ROOT name compound name partition amod name key partition NN,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/state/ui/FigStateVertex.java,169
CONSTRUCTOR public partition data long fetch offset long log start offset int max bytes this fetch offset fetch offset this log start offset log start offset this max bytes max bytes SPECIFIER public NAME partition data PARAMETER LIST long fetch offset long log start offset int max bytes PARAMETER long fetch offset TYPE long NAME long NAME fetch offset PARAMETER long log start offset TYPE long NAME long NAME log start offset PARAMETER int max bytes TYPE int NAME int NAME max bytes BLOCK EXPR this fetch offset fetch offset NAME this fetch offset NAME this NAME fetch offset NAME fetch offset EXPR this log start offset log start offset NAME this log start offset NAME this NAME log start offset NAME log start offset EXPR this max bytes max bytes NAME this max bytes NAME this NAME max bytes NAME max bytes public NN partition NN data NNS root ROOT data compound data partition long RB fetch VB offset VBN root ROOT fetch dep fetch offset long RB log NN start NN offset VBP root ROOT offset compound start log nsubj offset start int NN max NN bytes NNS root ROOT bytes compound bytes max this DT fetch VB offset VBN fetch VB offset VBN root ROOT fetch dep fetch offset this DT log NN start NN offset VBP log NN start NN offset VBP root ROOT offset compound start log nsubj offset start this DT max NN bytes NNS max NN bytes NNS root ROOT bytes compound bytes max,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
FUNCTION SPECIFIER private TYPE k stream builder NAME k stream builder NAME setup topology with intermediate user topic PARAMETER LIST final string output topic PARAMETER final string output topic TYPE final string SPECIFIER final NAME string NAME output topic BLOCK DECL STMT TYPE final k stream builder SPECIFIER final NAME k stream builder NAME builder INIT new k stream builder EXPR new k stream builder CALL k stream builder NAME k stream builder ARGUMENT LIST DECL STMT TYPE final k stream long string SPECIFIER final NAME k stream long string NAME k stream ARGUMENT LIST ARGUMENT NAME long ARGUMENT NAME string NAME input INIT builder stream input topic EXPR builder stream input topic CALL builder stream input topic NAME builder stream NAME builder NAME stream ARGUMENT LIST ARGUMENT EXPR input topic NAME input topic COMMENT use map to trigger internal re partitioning before group by key EXPR input map new key value mapper long string key value long string override public key value long string apply final long key final string value return new key value key value group by key count global count to serdes long serdes long output topic CALL input map new key value mapper long string key value long string override public key value long string apply final long key final string value return new key value key value NAME input map NAME input NAME map ARGUMENT LIST ARGUMENT EXPR new key value mapper long string key value long string override public key value long string apply final long key final string value return new key value key value CLASS key value mapper long string key value long string override public key value long string apply final long key final string value return new key value key value SUPER key value mapper long string key value long string NAME key value mapper long string key value long string NAME key value mapper ARGUMENT LIST ARGUMENT NAME long ARGUMENT NAME string ARGUMENT NAME key value long string NAME key value ARGUMENT LIST ARGUMENT NAME long ARGUMENT NAME string ARGUMENT LIST BLOCK FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE key value long string NAME key value long string NAME key value ARGUMENT LIST ARGUMENT NAME long ARGUMENT NAME string NAME apply PARAMETER LIST final long key final string value PARAMETER final long key TYPE final long SPECIFIER final NAME long NAME key PARAMETER final string value TYPE final string SPECIFIER final NAME string NAME value BLOCK RETURN return new key value key value EXPR new key value key value CALL key value key value NAME key value NAME key value ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR key NAME key ARGUMENT EXPR value NAME value CALL group by key NAME group by key ARGUMENT LIST CALL count global count NAME count ARGUMENT LIST ARGUMENT EXPR global count CALL to serdes long serdes long output topic NAME to ARGUMENT LIST ARGUMENT EXPR serdes long CALL serdes long NAME serdes long NAME serdes NAME long ARGUMENT LIST ARGUMENT EXPR serdes long CALL serdes long NAME serdes long NAME serdes NAME long ARGUMENT LIST ARGUMENT EXPR output topic NAME output topic EXPR input through intermediate user topic group by key count time windows of advance by count to stream map new key value mapper windowed long long key value long long override public key value long long apply final windowed long key final long value return new key value key window start key window end value to serdes long serdes long output topic CALL input through intermediate user topic NAME input through NAME input NAME through ARGUMENT LIST ARGUMENT EXPR intermediate user topic NAME intermediate user topic CALL group by key NAME group by key ARGUMENT LIST CALL count time windows of advance by count NAME count ARGUMENT LIST ARGUMENT EXPR time windows of advance by CALL time windows of NAME time windows of NAME time windows NAME of ARGUMENT LIST ARGUMENT EXPR CALL advance by NAME advance by ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR count CALL to stream NAME to stream ARGUMENT LIST CALL map new key value mapper windowed long long key value long long override public key value long long apply final windowed long key final long value return new key value key window start key window end value NAME map ARGUMENT LIST ARGUMENT EXPR new key value mapper windowed long long key value long long override public key value long long apply final windowed long key final long value return new key value key window start key window end value CLASS key value mapper windowed long long key value long long override public key value long long apply final windowed long key final long value return new key value key window start key window end value SUPER key value mapper windowed long long key value long long NAME key value mapper windowed long long key value long long NAME key value mapper ARGUMENT LIST ARGUMENT NAME windowed long NAME windowed ARGUMENT LIST ARGUMENT NAME long ARGUMENT NAME long ARGUMENT NAME key value long long NAME key value ARGUMENT LIST ARGUMENT NAME long ARGUMENT NAME long ARGUMENT LIST BLOCK FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE key value long long NAME key value long long NAME key value ARGUMENT LIST ARGUMENT NAME long ARGUMENT NAME long NAME apply PARAMETER LIST final windowed long key final long value PARAMETER final windowed long key TYPE final windowed long SPECIFIER final NAME windowed long NAME windowed ARGUMENT LIST ARGUMENT NAME long NAME key PARAMETER final long value TYPE final long SPECIFIER final NAME long NAME value BLOCK RETURN return new key value key window start key window end value EXPR new key value key window start key window end value CALL key value key window start key window end value NAME key value NAME key value ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR key window start key window end CALL key window NAME key window NAME key NAME window ARGUMENT LIST CALL start NAME start ARGUMENT LIST CALL key window NAME key window NAME key NAME window ARGUMENT LIST CALL end NAME end ARGUMENT LIST ARGUMENT EXPR value NAME value CALL to serdes long serdes long output topic NAME to ARGUMENT LIST ARGUMENT EXPR serdes long CALL serdes long NAME serdes long NAME serdes NAME long ARGUMENT LIST ARGUMENT EXPR serdes long CALL serdes long NAME serdes long NAME serdes NAME long ARGUMENT LIST ARGUMENT EXPR output topic NAME output topic RETURN return builder EXPR builder NAME builder private JJ k NN stream NN builder NN root ROOT builder compound builder k compound builder stream setup NN topology NN with IN intermediate JJ user NN topic NN root ROOT topology compound topology setup case topic with amod topic intermediate compound topic user nmod with topology topic final JJ string NN output NN topic NN root ROOT topic compound topic output final JJ k NN stream NN builder NN root ROOT builder compound builder k compound builder stream builder NN new JJ k NN stream NN builder NN root ROOT builder compound builder k compound builder stream final JJ k NN stream NN root ROOT stream compound stream k long RB string NN input NN builder NN stream NN root ROOT stream compound stream builder input NN topic NN root ROOT topic compound topic input use map to trigger internal re partitioning before group by key root ROOT map compound map use mark trigger to acl to map trigger amod partitioning internal compound partitioning re dobj trigger partitioning case group before nmod before trigger group case key by nmod by trigger key input NN map NN root ROOT map compound map input new JJ key JJ value NN mapper NN root ROOT mapper amod mapper key compound mapper value long RB string NN key JJ value NN root ROOT value amod value key long RB string NN override NN public NN key JJ value NN root ROOT value amod value key long RB string NN apply VB final JJ long RB key NN final JJ string NN value NN return NN new JJ key JJ value NN root ROOT value amod value key key NN value NN group NN by IN key NN root ROOT group case key by nmod by group key count NN global JJ count NN root ROOT count amod count global to TO serdes NNS long RB serdes NNS long RB output NN topic NN root ROOT topic compound topic output input NN through IN root ROOT input dep input through intermediate JJ user NN topic NN root ROOT topic amod topic intermediate compound topic user group NN by IN key NN root ROOT group case key by nmod by group key count NN time NN windows NNS of IN root ROOT windows compound windows time acl windows of advance NN by IN root ROOT advance dep advance by count NN to TO stream NN root ROOT stream case stream to map NN new JJ key JJ value NN mapper NN root ROOT mapper amod mapper key compound mapper value windowed JJ long RB long RB key JJ value NN root ROOT value amod value key long RB long RB override NN public NN key JJ value NN root ROOT value amod value key long RB long RB apply VB final JJ windowed JJ long RB key NN final JJ long RB value NN return NN new JJ key JJ value NN root ROOT value amod value key key JJ window NN root ROOT window amod window key start NN key JJ window NN root ROOT window amod window key end NN value NN to TO serdes NNS long RB serdes NNS long RB output NN topic NN root ROOT topic compound topic output return NN builder NN apply return ANTONYM ANTONYM global internal ANTONYM ANTONYM intermediate final ANTONYM ANTONYM private public ANTONYM ANTONYM public internal ANTONYM ANTONYM return output ANTONYM ANTONYM start end ANTONYM ANTONYM start end ANTONYM ANTONYM topic return ANTONYM ANTONYM trigger start ANTONYM ANTONYM internal private SYNONYM SYNONYM,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT validate that the partition exists on the cluster param topic partition partition to validate param store name name of the store the partition is for throws org apache kafka streams errors streams exception if partition doesn t exist FUNCTION DECL void validate partition exists final topic partition topic partition final string store name TYPE void NAME void NAME validate partition exists PARAMETER LIST final topic partition topic partition final string store name PARAMETER final topic partition topic partition TYPE final topic partition SPECIFIER final NAME topic partition NAME topic partition PARAMETER final string store name TYPE final string SPECIFIER final NAME string NAME store name validate that the partition exists on the cluster root ROOT validate mark exists that det partition the nsubj exists partition ccomp validate exists case cluster on det cluster the nmod on exists cluster param topic partition partition to validate root ROOT partition compound partition param compound partition topic compound partition partition mark validate to acl to partition validate param store name name of the store the partition is for root ROOT name compound name param compound name store compound name name case store of det store the nmod of name store det partition the nsubj for partition cop for is acl relcl store for throws org apache kafka streams errors streams exception if partition doesn t exist root ROOT throws advmod apache org amod exception apache compound exception kafka compound exception streams compound exception errors compound exception streams dobj throws exception mark exist if compound t partition compound t doesn nsubj exist t advcl if throws exist void NN validate VB partition NN exists VBZ root ROOT exists csubj exists validate dobj validate partition final JJ topic NN partition NN root ROOT partition compound partition topic topic NN partition NN root ROOT partition compound partition topic final JJ string NN store NN name NN root ROOT name compound name store name is ANTONYM ANTONYM name throws ANTONYM ANTONYM validate void ANTONYM ANTONYM,1,B2,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,57
DECL STMT SPECIFIER private TYPE final map string list partition info SPECIFIER final NAME map string list partition info NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME list partition info NAME list ARGUMENT LIST ARGUMENT NAME partition info NAME available partitions by topic private JJ final JJ map NN string NN list NN partition NN info NN root ROOT info compound info partition available JJ partitions NNS by IN topic NN root ROOT partitions amod partitions available case topic by nmod by partitions topic,0,n/a,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private TYPE final map string list partition info SPECIFIER final NAME map string list partition info NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME list partition info NAME list ARGUMENT LIST ARGUMENT NAME partition info NAME partitions by topic private JJ final JJ map NN string NN list NN partition NN info NN root ROOT info compound info partition partitions NNS by IN topic NN root ROOT partitions case topic by nmod by partitions topic,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private TYPE final set string SPECIFIER final NAME set string NAME set ARGUMENT LIST ARGUMENT NAME string NAME internal topics private JJ final JJ set NN string NN internal JJ topics NNS root ROOT topics amod topics internal,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT create an empty cluster instance with no nodes and no topic partitions FUNCTION SPECIFIER public SPECIFIER static TYPE cluster NAME cluster NAME empty PARAMETER LIST BLOCK RETURN return new cluster null new array list node new array list partition info collections string empty set collections string empty set null EXPR new cluster null new array list node new array list partition info collections string empty set collections string empty set null CALL cluster null new array list node new array list partition info collections string empty set collections string empty set null NAME cluster ARGUMENT LIST ARGUMENT EXPR null ARGUMENT EXPR new array list node CALL array list node NAME array list node NAME array list ARGUMENT LIST ARGUMENT NAME node ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR new array list partition info CALL array list partition info NAME array list partition info NAME array list ARGUMENT LIST ARGUMENT NAME partition info ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR collections string empty set NAME collections NAME collections NAME string CALL empty set NAME empty set ARGUMENT LIST ARGUMENT EXPR collections string empty set NAME collections NAME collections NAME string CALL empty set NAME empty set ARGUMENT LIST ARGUMENT EXPR null create an empty cluster instance with no nodes and no topic partitions root ROOT create det instance an amod instance empty compound instance cluster dobj create instance case nodes with neg nodes no nmod with instance nodes cc nodes and neg partitions no compound partitions topic nmod with instance partitions conj and nodes partitions public NN static JJ cluster NN empty JJ return NN new JJ cluster NN null JJ new JJ array NN list NN root ROOT list compound list array node NN new JJ array NN list NN root ROOT list compound list array partition NN info NN root ROOT info compound info partition collections NNS string NN empty JJ set NN root ROOT set amod set empty collections NNS string NN empty JJ set NN root ROOT set amod set empty null JJ empty null ANTONYM ANTONYM topic return ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/el/parser/JJTELParserState.java,106
COMMENT return a copy of this cluster combined with partitions FUNCTION SPECIFIER public TYPE cluster NAME cluster NAME with partitions PARAMETER LIST map topic partition partition info partitions PARAMETER map topic partition partition info partitions TYPE map topic partition partition info NAME map topic partition partition info NAME map ARGUMENT LIST ARGUMENT NAME topic partition ARGUMENT NAME partition info NAME partitions BLOCK DECL STMT TYPE map topic partition partition info NAME map topic partition partition info NAME map ARGUMENT LIST ARGUMENT NAME topic partition ARGUMENT NAME partition info NAME combined partitions INIT new hash map this partitions by topic partition EXPR new hash map this partitions by topic partition CALL hash map this partitions by topic partition NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR this partitions by topic partition NAME this partitions by topic partition NAME this NAME partitions by topic partition EXPR combined partitions put all partitions CALL combined partitions put all partitions NAME combined partitions put all NAME combined partitions NAME put all ARGUMENT LIST ARGUMENT EXPR partitions NAME partitions RETURN return new cluster cluster resource cluster id this nodes combined partitions values new hash set this unauthorized topics new hash set this internal topics this controller EXPR new cluster cluster resource cluster id this nodes combined partitions values new hash set this unauthorized topics new hash set this internal topics this controller CALL cluster cluster resource cluster id this nodes combined partitions values new hash set this unauthorized topics new hash set this internal topics this controller NAME cluster ARGUMENT LIST ARGUMENT EXPR cluster resource cluster id CALL cluster resource cluster id NAME cluster resource cluster id NAME cluster resource NAME cluster id ARGUMENT LIST ARGUMENT EXPR this nodes NAME this nodes NAME this NAME nodes ARGUMENT EXPR combined partitions values CALL combined partitions values NAME combined partitions values NAME combined partitions NAME values ARGUMENT LIST ARGUMENT EXPR new hash set this unauthorized topics CALL hash set this unauthorized topics NAME hash set NAME hash set ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR this unauthorized topics NAME this unauthorized topics NAME this NAME unauthorized topics ARGUMENT EXPR new hash set this internal topics CALL hash set this internal topics NAME hash set NAME hash set ARGUMENT LIST ARGUMENT LIST ARGUMENT EXPR this internal topics NAME this internal topics NAME this NAME internal topics ARGUMENT EXPR this controller NAME this controller NAME this NAME controller return a copy of this cluster combined with partitions root ROOT return det copy a dobj return copy case cluster of det cluster this nmod of copy cluster acl copy combined case partitions with nmod with combined partitions public NN cluster NN with IN partitions NNS root ROOT partitions case partitions with map NN topic NN partition NN root ROOT partition compound partition topic partition NN info NN root ROOT info compound info partition partitions NNS map NN topic NN partition NN root ROOT partition compound partition topic partition NN info NN root ROOT info compound info partition combined VBN partitions NNS root ROOT partitions amod partitions combined new JJ hash VB map NN root ROOT hash dobj hash map this DT partitions NNS by IN topic NN partition NN combined VBN partitions NNS put VBD all DT root ROOT put amod partitions combined nsubj put partitions dobj put all partitions NNS return NN new JJ cluster NN cluster NN resource NN cluster NN id NN root ROOT id compound id cluster compound id resource compound id cluster this DT nodes NNS combined JJ partitions NNS values NNS root ROOT values amod values combined compound values partitions new JJ hash JJ set NN root ROOT set amod set hash this DT unauthorized JJ topics NNS new JJ hash JJ set NN root ROOT set amod set hash this DT internal JJ topics NNS this DT controller NN,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT return the known set of nodes FUNCTION SPECIFIER public TYPE list node NAME list node NAME list ARGUMENT LIST ARGUMENT NAME node NAME nodes PARAMETER LIST BLOCK RETURN return this nodes EXPR this nodes NAME this nodes NAME this NAME nodes return the known set of nodes root ROOT return det set the amod set known dobj return set case nodes of nmod of set nodes public NN list NN node NN nodes NNS return NN this DT nodes NNS,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
FUNCTION SPECIFIER public TYPE set string NAME set string NAME set ARGUMENT LIST ARGUMENT NAME string NAME internal topics PARAMETER LIST BLOCK RETURN return internal topics EXPR internal topics NAME internal topics public NN set NN string NN internal JJ topics NNS root ROOT topics amod topics internal return NN internal JJ topics NNS root ROOT topics amod topics internal,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE node NAME node NAME controller PARAMETER LIST BLOCK RETURN return controller EXPR controller NAME controller public NN node NN controller NN return NN controller NN,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER protected TYPE void NAME void NAME update PARAMETER LIST sample sample metric config config double value long now PARAMETER sample sample TYPE sample NAME sample NAME sample PARAMETER metric config config TYPE metric config NAME metric config NAME config PARAMETER double value TYPE double NAME double NAME value PARAMETER long now TYPE long NAME long NAME now BLOCK EXPR sample value NAME sample value NAME sample NAME value protected VBN void NN update VB sample NN sample NN metric JJ config NN root ROOT config amod config metric config NN double RB value NN long RB now RB sample NN value NN root ROOT value compound value sample,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE double NAME double NAME combine PARAMETER LIST list sample samples metric config config long now PARAMETER list sample samples TYPE list sample NAME list sample NAME list ARGUMENT LIST ARGUMENT NAME sample NAME samples PARAMETER metric config config TYPE metric config NAME metric config NAME config PARAMETER long now TYPE long NAME long NAME now BLOCK DECL STMT TYPE double NAME double NAME total INIT EXPR FOR for sample sample samples total sample value CONTROL sample sample samples INIT sample sample samples TYPE sample NAME sample NAME sample RANGE samples EXPR samples NAME samples BLOCK EXPR total sample value NAME total NAME sample value NAME sample NAME value RETURN return total EXPR total NAME total public NN double RB combine VB list NN sample NN samples NNS metric JJ config NN root ROOT config amod config metric config NN long RB now RB double RB total NN for IN sample NN sample NN samples NNS total NN sample NN value NN root ROOT value compound value sample return NN total NN list total ANTONYM ANTONYM,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
CONSTRUCTOR public count super SPECIFIER public NAME count PARAMETER LIST BLOCK EXPR super CALL super NAME super ARGUMENT LIST ARGUMENT EXPR public NN count NN super JJ,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
CONSTRUCTOR public record metadata topic partition topic partition long base offset long relative offset long timestamp long checksum int serialized key size int serialized value size ignore the relative offset if the base offset is since this indicates the offset is unknown this offset base offset base offset base offset relative offset this timestamp timestamp this checksum checksum this serialized key size serialized key size this serialized value size serialized value size this topic partition topic partition SPECIFIER public NAME record metadata PARAMETER LIST topic partition topic partition long base offset long relative offset long timestamp long checksum int serialized key size int serialized value size PARAMETER topic partition topic partition TYPE topic partition NAME topic partition NAME topic partition PARAMETER long base offset TYPE long NAME long NAME base offset PARAMETER long relative offset TYPE long NAME long NAME relative offset PARAMETER long timestamp TYPE long NAME long NAME timestamp PARAMETER long checksum TYPE long NAME long NAME checksum PARAMETER int serialized key size TYPE int NAME int NAME serialized key size PARAMETER int serialized value size TYPE int NAME int NAME serialized value size BLOCK COMMENT ignore the relative offset if the base offset is COMMENT since this indicates the offset is unknown EXPR this offset base offset base offset base offset relative offset NAME this offset NAME this NAME offset TERNARY base offset base offset base offset relative offset CONDITION base offset EXPR base offset NAME base offset THEN base offset EXPR base offset NAME base offset ELSE base offset relative offset EXPR base offset relative offset NAME base offset NAME relative offset EXPR this timestamp timestamp NAME this timestamp NAME this NAME timestamp NAME timestamp EXPR this checksum checksum NAME this checksum NAME this NAME checksum NAME checksum EXPR this serialized key size serialized key size NAME this serialized key size NAME this NAME serialized key size NAME serialized key size EXPR this serialized value size serialized value size NAME this serialized value size NAME this NAME serialized value size NAME serialized value size EXPR this topic partition topic partition NAME this topic partition NAME this NAME topic partition NAME topic partition public NN record NN metadata NN root ROOT metadata compound metadata record topic NN partition NN root ROOT partition compound partition topic topic NN partition NN root ROOT partition compound partition topic long RB base NN offset VBD root ROOT offset nsubj offset base long RB relative JJ offset VBN root ROOT relative dep relative offset long RB timestamp NN long RB checksum NN int NN serialized VBN key JJ size NN root ROOT serialized amod size key dobj serialized size int NN serialized VBN value NN size NN root ROOT size amod size serialized compound size value ignore the relative offset if the base offset is root ROOT ignore det offset the amod offset relative dobj ignore offset mark is if det base the nsubj is base acl base offset advcl if offset is since this indicates the offset is unknown root ROOT indicates mark indicates since nsubj indicates this det offset the nsubj unknown offset cop unknown is ccomp indicates unknown this DT offset VBN base NN offset VBD root ROOT offset nsubj offset base base NN offset VBD root ROOT offset nsubj offset base base NN offset VBD root ROOT offset nsubj offset base relative JJ offset VBN root ROOT relative dep relative offset this DT timestamp NN timestamp NN this DT checksum NN checksum NN this DT serialized VBD key JJ size NN serialized VBN key JJ size NN root ROOT serialized amod size key dobj serialized size this DT serialized VBN value NN size NN serialized VBN value NN size NN root ROOT size amod size serialized compound size value this DT topic NN partition NN topic NN partition NN root ROOT partition compound partition topic unknown base ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
COMMENT the partition the record was sent to FUNCTION SPECIFIER public TYPE int NAME int NAME partition PARAMETER LIST BLOCK RETURN return this topic partition partition EXPR this topic partition partition CALL this topic partition partition NAME this topic partition partition NAME this NAME topic partition NAME partition ARGUMENT LIST the partition the record was sent to root ROOT partition det partition the det record the nsubjpass sent record auxpass sent was acl relcl partition sent nmod sent to public NN int NN partition NN return NN this DT topic NN partition NN partition NN,0,N/A,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,64
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME serialized key size private JJ final JJ int NN serialized VBN key JJ size NN root ROOT serialized amod size key dobj serialized size,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
FUNCTION SPECIFIER public TYPE object NAME object NAME get negotiated property PARAMETER LIST string prop name PARAMETER string prop name TYPE string NAME string NAME prop name BLOCK IF if complete throw new illegal state exception authentication exchange has not completed CONDITION complete EXPR complete NAME complete THEN throw new illegal state exception authentication exchange has not completed BLOCK THROW throw new illegal state exception authentication exchange has not completed EXPR new illegal state exception authentication exchange has not completed CALL illegal state exception authentication exchange has not completed NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR authentication exchange has not completed RETURN return null EXPR null public NN object NN get VB negotiated VBN property NN root ROOT get amod property negotiated dobj get property string NN prop VB name NN root ROOT prop dobj prop name if IN complete JJ throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state authentication NN exchange NN has VBZ not RB completed VBN return NN null JJ has return ANTONYM ANTONYM throw exchange ANTONYM ANTONYM throw return ANTONYM ANTONYM,1,b7,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME is complete PARAMETER LIST BLOCK RETURN return complete EXPR complete NAME complete public NN boolean NN is VBZ complete JJ root ROOT complete cop complete is return NN complete JJ,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME jaas user prefix INIT user EXPR user private JJ static JJ final JJ string NN jaas NN user NN prefix NN root ROOT prefix compound prefix jaas compound prefix user user NN,0,n/a,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE string NAME string NAME get mechanism name PARAMETER LIST BLOCK RETURN return plain mechanism EXPR plain mechanism NAME plain mechanism override NN public NN string NN get VB mechanism NN name NN root ROOT get compound name mechanism dobj get name return NN plain RB mechanism NN root ROOT mechanism advmod mechanism plain,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT visits this node then the test expression the true expression and the false expression FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME visit PARAMETER LIST node visitor v PARAMETER node visitor v TYPE node visitor NAME node visitor NAME v BLOCK IF if v visit this test expression visit v true expression visit v false expression visit v CONDITION v visit this EXPR v visit this CALL v visit this NAME v visit NAME v NAME visit ARGUMENT LIST ARGUMENT EXPR this NAME this THEN test expression visit v true expression visit v false expression visit v BLOCK EXPR test expression visit v CALL test expression visit v NAME test expression visit NAME test expression NAME visit ARGUMENT LIST ARGUMENT EXPR v NAME v EXPR true expression visit v CALL true expression visit v NAME true expression visit NAME true expression NAME visit ARGUMENT LIST ARGUMENT EXPR v NAME v EXPR false expression visit v CALL false expression visit v NAME false expression visit NAME false expression NAME visit ARGUMENT LIST ARGUMENT EXPR v NAME v visits this node then the test expression the true expression root ROOT visits det node this dobj visits node advmod expression then det expression the compound expression test nmod node expression det expression the amod expression true dep expression expression and the false expression root ROOT expression cc expression and det expression the amod expression false override NN public NN void NN visit NN node NN visitor NN root ROOT visitor compound visitor node v LS if IN v LS visit NN root ROOT v root v visit this DT test NN expression NN visit NN root ROOT visit compound visit test compound visit expression v LS true JJ expression NN visit NN root ROOT visit amod visit true compound visit expression v LS false JJ expression NN visit NN root ROOT visit amod expression false nsubj visit expression v LS true false ANTONYM ANTONYM false void SYNONYM SYNONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE boolean NAME boolean NAME has side effects PARAMETER LIST BLOCK IF if test expression null true expression null false expression null code bug CONDITION test expression null true expression null false expression null EXPR test expression null true expression null false expression null NAME test expression NAME true expression NAME false expression THEN code bug BLOCK EXPR code bug CALL code bug NAME code bug ARGUMENT LIST RETURN return true expression has side effects false expression has side effects EXPR true expression has side effects false expression has side effects CALL true expression has side effects NAME true expression has side effects NAME true expression NAME has side effects ARGUMENT LIST CALL false expression has side effects NAME false expression has side effects NAME false expression NAME has side effects ARGUMENT LIST override NN public NN boolean NN has VBZ side JJ effects NNS root ROOT has amod effects side dobj has effects if IN test NN expression NN root ROOT expression compound expression test null JJ true JJ expression NN root ROOT expression amod expression true null JJ false JJ expression NN root ROOT expression amod expression false null JJ code NN bug NN root ROOT bug compound bug code return NN true JJ expression NN has VBZ side JJ effects NNS root ROOT has amod expression true nsubj has expression amod effects side dobj has effects false JJ expression NN has VBZ side JJ effects NNS root ROOT has amod expression false nsubj has expression amod effects side dobj has effects,0,N/A,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,768
COMMENT sets position of token param colon position position of token FUNCTION SPECIFIER public TYPE void NAME void NAME set colon position PARAMETER LIST int colon position PARAMETER int colon position TYPE int NAME int NAME colon position BLOCK EXPR this colon position colon position NAME this colon position NAME this NAME colon position NAME colon position sets position of token root ROOT position compound position sets case token of nmod of position token param colon position position of token root ROOT position compound position param compound position colon compound position position case token of nmod of position token public NN void NN set VBN colon NN position NN root ROOT set compound position colon dobj set position int NN colon NN position NN root ROOT position compound position colon this DT colon NN position NN colon NN position NN root ROOT position compound position colon,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT returns position of token FUNCTION SPECIFIER public TYPE int NAME int NAME get colon position PARAMETER LIST BLOCK RETURN return colon position EXPR colon position NAME colon position returns position of token root ROOT position compound position returns case token of nmod of position token public NN int NN get VB colon NN position NN root ROOT get compound position colon dobj get position return NN colon NN position NN root ROOT position compound position colon,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
CONSTRUCTOR public conditional expression int pos super pos SPECIFIER public NAME conditional expression PARAMETER LIST int pos PARAMETER int pos TYPE int NAME int NAME pos BLOCK EXPR super pos CALL super pos NAME super ARGUMENT LIST ARGUMENT EXPR pos NAME pos public NN conditional JJ expression NN root ROOT expression amod expression conditional int NN pos NNS super JJ pos NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER private TYPE ast node NAME ast node NAME false expression private JJ ast IN node NN root ROOT node case node ast false JJ expression NN root ROOT expression amod expression false,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT for each class file in the suite directory create a test file object for live connect the test class name needs to be the name of the class and the file path needs to be the full package name prepended with the java script keyword packages and without the class suffix FUNCTION SPECIFIER public TYPE void NAME void NAME get cases PARAMETER LIST test suite suite PARAMETER test suite suite TYPE test suite NAME test suite NAME suite BLOCK EXPR enable privileges CALL enable privileges NAME enable privileges ARGUMENT LIST DECL STMT TYPE file NAME file NAME dir INIT new file suite file path EXPR new file suite file path CALL file suite file path NAME file ARGUMENT LIST ARGUMENT EXPR suite file path NAME suite file path NAME suite NAME file path DECL STMT TYPE string NAME string NAME string INDEX NAME files INIT dir list EXPR dir list CALL dir list NAME dir list NAME dir NAME list ARGUMENT LIST COMMENT xxx hardcoded package name need to fix this DECL STMT TYPE string NAME string NAME filename INIT packages com netscape javascript qa liveconnect suite name EXPR packages com netscape javascript qa liveconnect suite name NAME suite name NAME suite NAME name FOR for int i i files length i if files i ends with get suffix test file item new test file files i filename files i substring files i length get suffix length p item file path suite add element item CONTROL int i i files length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i files length EXPR i files length NAME i NAME files length NAME files NAME length INCR i EXPR i NAME i BLOCK IF if files i ends with get suffix test file item new test file files i filename files i substring files i length get suffix length p item file path suite add element item CONDITION files i ends with get suffix EXPR files i ends with get suffix NAME files i NAME files INDEX i EXPR i NAME i CALL ends with get suffix NAME ends with ARGUMENT LIST ARGUMENT EXPR get suffix CALL get suffix NAME get suffix ARGUMENT LIST THEN test file item new test file files i filename files i substring files i length get suffix length p item file path suite add element item BLOCK DECL STMT TYPE test file NAME test file NAME item INIT new test file files i filename files i substring files i length get suffix length EXPR new test file files i filename files i substring files i length get suffix length CALL test file files i filename files i substring files i length get suffix length NAME test file ARGUMENT LIST ARGUMENT EXPR files i NAME files i NAME files INDEX i EXPR i NAME i ARGUMENT EXPR filename files i substring files i length get suffix length NAME filename NAME files i NAME files INDEX i EXPR i NAME i CALL substring files i length get suffix length NAME substring ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR files i length get suffix length NAME files i NAME files INDEX i EXPR i NAME i CALL length NAME length ARGUMENT LIST CALL get suffix NAME get suffix ARGUMENT LIST CALL length NAME length ARGUMENT LIST EXPR p item file path CALL p item file path NAME p ARGUMENT LIST ARGUMENT EXPR item file path NAME item file path NAME item NAME file path EXPR suite add element item CALL suite add element item NAME suite add element NAME suite NAME add element ARGUMENT LIST ARGUMENT EXPR item NAME item for each class file in the suite directory create a test file object root ROOT create case file for det file each compound file class nmod for create file case directory in det directory the compound directory suite nmod in file directory det object a compound object test compound object file dobj create object for live connect the test class name needs to be the name of the class root ROOT connect mark connect for nsubj connect live det name the compound name test compound name class nsubj needs name nsubj xsubj name name ccomp connect needs mark name to cop name be det name the xcomp needs name case class of det class the nmod of name class and the file path needs to be the full package name prepended with the root ROOT needs cc needs and det path the compound path file nsubj needs path nsubj xsubj name path mark name to cop name be det name the amod name full compound name package xcomp needs name acl name prepended case the with nmod with prepended the java script keyword packages and without the class suffix root ROOT packages compound packages java compound packages script compound packages keyword cc packages and case suffix without det suffix the compound suffix class conj and packages suffix java script keyword packages and without the class suffix root ROOT packages compound packages java compound packages script compound packages keyword cc packages and case suffix without det suffix the compound suffix class conj and packages suffix public NN void NN get VB cases NNS root ROOT get dobj get cases test NN suite NN root ROOT suite compound suite test suite NN enable VB privileges NNS root ROOT enable dobj enable privileges file NN dir NN new JJ file NN suite NN file NN path NN root ROOT path compound path suite compound path file string NN files NNS dir NN list NN root ROOT list compound list dir xxx hardcoded package name need to fix this root ROOT hardcoded nsubj hardcoded xxx compound name package nsubj need name nsubj xsubj fix name ccomp hardcoded need mark fix to xcomp need fix dobj fix this xxx hardcoded package name need to fix this root ROOT hardcoded nsubj hardcoded xxx compound name package nsubj need name nsubj xsubj fix name ccomp hardcoded need mark fix to xcomp need fix dobj fix this string NN filename NN packages NNS com NN netscape NN javascript NN qa NN liveconnect NN root ROOT liveconnect compound liveconnect packages compound liveconnect com compound liveconnect netscape compound liveconnect javascript compound liveconnect qa suite NN name NN root ROOT name compound name suite for IN int NN i LS i LS files NNS length NN root ROOT length compound length files i LS if IN files NNS i LS ends NNS with IN root ROOT ends dep ends with get VB suffix NN root ROOT get dobj get suffix test NN file NN root ROOT file compound file test item NN new JJ test NN file NN root ROOT file compound file test files NNS i LS filename NN files NNS i LS substring VBG files NNS i LS length NN get VB suffix NN root ROOT get dobj get suffix length NN p NN item NN file NN path NN root ROOT path compound path item compound path file suite NN add VBP element NN root ROOT add nsubj add suite dobj add element item NN class path ANTONYM ANTONYM create fix ANTONYM ANTONYM create name ANTONYM ANTONYM full void ANTONYM ANTONYM name be ANTONYM ANTONYM name fix ANTONYM ANTONYM xxx i SYNONYM SYNONYM,1,B3,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/AbstractMessageNotationUml.java,1691
CONSTRUCTOR public live connect drv string args super args set suffix class SPECIFIER public NAME live connect drv PARAMETER LIST string args PARAMETER string args TYPE string NAME string NAME string INDEX NAME args BLOCK EXPR super args CALL super args NAME super ARGUMENT LIST ARGUMENT EXPR args NAME args EXPR set suffix class CALL set suffix class NAME set suffix ARGUMENT LIST ARGUMENT EXPR class public NN live JJ connect VB drv NN root ROOT live dep live connect dobj connect drv string NN args NNS super JJ args NNS set VBN suffix NN root ROOT set dobj set suffix class NN,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
FUNCTION SPECIFIER public SPECIFIER static TYPE void NAME void NAME main PARAMETER LIST string args PARAMETER string args TYPE string NAME string NAME string INDEX NAME args BLOCK DECL STMT TYPE live connect drv NAME live connect drv NAME d INIT new live connect drv args EXPR new live connect drv args CALL live connect drv args NAME live connect drv ARGUMENT LIST ARGUMENT EXPR args NAME args EXPR d start CALL d start NAME d start NAME d NAME start ARGUMENT LIST public NN static JJ void NN main JJ string NN args NNS live JJ connect VB drv NN root ROOT live dep live connect dobj connect drv d NN new JJ live JJ connect VB drv NN root ROOT live dep live connect dobj connect drv args NNS d NN start NN root ROOT start compound start d,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT read the contents of a file into a string FUNCTION SPECIFIER public SPECIFIER static TYPE string NAME string NAME read file PARAMETER LIST string file path PARAMETER string file path TYPE string NAME string NAME file path BLOCK DECL STMT TYPE file NAME file NAME js file INIT new file file path EXPR new file file path CALL file file path NAME file ARGUMENT LIST ARGUMENT EXPR file path NAME file path DECL STMT TYPE int NAME int NAME length INIT new long js file length int value EXPR new long js file length int value CALL long js file length NAME long ARGUMENT LIST ARGUMENT EXPR js file length CALL js file length NAME js file length NAME js file NAME length ARGUMENT LIST CALL int value NAME int value ARGUMENT LIST DECL STMT TYPE byte NAME byte NAME byte INDEX NAME b INIT new byte length EXPR new byte length NAME byte length NAME byte INDEX length EXPR length NAME length DECL STMT TYPE string buffer NAME string buffer NAME contents INIT new string buffer EXPR new string buffer CALL string buffer NAME string buffer ARGUMENT LIST TRY try file input stream fis new file input stream js file int read fis read b contents append new string b catch exception e p e to string BLOCK DECL STMT TYPE file input stream NAME file input stream NAME fis INIT new file input stream js file EXPR new file input stream js file CALL file input stream js file NAME file input stream ARGUMENT LIST ARGUMENT EXPR js file NAME js file DECL STMT TYPE int NAME int NAME read INIT fis read b EXPR fis read b CALL fis read b NAME fis read NAME fis NAME read ARGUMENT LIST ARGUMENT EXPR b NAME b EXPR contents append new string b CALL contents append new string b NAME contents append NAME contents NAME append ARGUMENT LIST ARGUMENT EXPR new string b CALL string b NAME string ARGUMENT LIST ARGUMENT EXPR b NAME b CATCH catch exception e p e to string PARAMETER LIST exception e PARAMETER exception e TYPE exception NAME exception NAME e BLOCK EXPR p e to string CALL p e to string NAME p ARGUMENT LIST ARGUMENT EXPR e to string CALL e to string NAME e to string NAME e NAME to string ARGUMENT LIST RETURN return contents to string EXPR contents to string CALL contents to string NAME contents to string NAME contents NAME to string ARGUMENT LIST read the contents of a file into a string root ROOT read det contents the dobj read contents case file of det file a nmod of contents file case string into det string a nmod into read string public NN static JJ string NN read VB file NN root ROOT read dobj read file string NN file NN path NN root ROOT path compound path file file NN js NN file NN root ROOT file compound file js new JJ file NN file NN path NN root ROOT path compound path file int NN length NN new JJ long RB js NN file NN length NN root ROOT length compound length js compound length file int NN value NN root ROOT value compound value int byte NN b NN new JJ byte NN length NN string NN buffer NN root ROOT buffer compound buffer string contents NNS new JJ string NN buffer NN root ROOT buffer compound buffer string try VB file NN input NN stream NN root ROOT stream compound stream file compound stream input fis NN new JJ file NN input NN stream NN root ROOT stream compound stream file compound stream input js NN file NN root ROOT file compound file js int NN read VB fis NN read NN root ROOT read compound read fis b NN contents NNS append VBP root ROOT append nsubj append contents new JJ string NN b NN catch NN exception NN e SYM p NN e LS to TO string VB root ROOT string dep string e mark string to return NN contents NNS to TO string VB root ROOT contents mark string to acl to contents string read file ANTONYM ANTONYM try return ANTONYM ANTONYM,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT from the current date return a string in the format dd mm yy where is specified by the separator argument FUNCTION SPECIFIER public SPECIFIER static TYPE string NAME string NAME get current date PARAMETER LIST string separator PARAMETER string separator TYPE string NAME string NAME separator BLOCK DECL STMT TYPE date NAME date NAME today INIT new date EXPR new date CALL date NAME date ARGUMENT LIST DECL STMT TYPE string NAME string NAME date INIT today get date string value of today get date string value of today get date EXPR today get date string value of today get date string value of today get date TERNARY today get date string value of today get date string value of today get date CONDITION today get date EXPR today get date CALL today get date NAME today get date NAME today NAME get date ARGUMENT LIST THEN string value of today get date EXPR string value of today get date CALL string value of today get date NAME string value of NAME string NAME value of ARGUMENT LIST ARGUMENT EXPR today get date CALL today get date NAME today get date NAME today NAME get date ARGUMENT LIST ELSE string value of today get date EXPR string value of today get date CALL string value of today get date NAME string value of NAME string NAME value of ARGUMENT LIST ARGUMENT EXPR today get date CALL today get date NAME today get date NAME today NAME get date ARGUMENT LIST DECL STMT TYPE string NAME string NAME month INIT today get month string value of today get month string value of today get month EXPR today get month string value of today get month string value of today get month TERNARY today get month string value of today get month string value of today get month CONDITION today get month EXPR today get month CALL today get month NAME today get month NAME today NAME get month ARGUMENT LIST THEN string value of today get month EXPR string value of today get month CALL string value of today get month NAME string value of NAME string NAME value of ARGUMENT LIST ARGUMENT EXPR today get month CALL today get month NAME today get month NAME today NAME get month ARGUMENT LIST ELSE string value of today get month EXPR string value of today get month CALL string value of today get month NAME string value of NAME string NAME value of ARGUMENT LIST ARGUMENT EXPR today get month CALL today get month NAME today get month NAME today NAME get month ARGUMENT LIST DECL STMT TYPE string NAME string NAME year INIT string value of today get year EXPR string value of today get year CALL string value of today get year NAME string value of NAME string NAME value of ARGUMENT LIST ARGUMENT EXPR today get year CALL today get year NAME today get year NAME today NAME get year ARGUMENT LIST RETURN return month separator date separator year EXPR month separator date separator year NAME month NAME separator NAME date NAME separator NAME year from IN the DT current JJ date NN return NN a DT string NN in IN the DT format NN dd NN mm NN yy NN root ROOT yy compound yy dd compound yy mm where WRB is VBZ specified VBN by IN the DT separator NN argument NN public NN static JJ string NN get VB current JJ date NN root ROOT get amod date current dobj get date string NN separator NN date NN today NN new JJ date NN string NN date NN today NN get VBP date NN root ROOT get nmod tmod get today dobj get date string NN value NN of IN root ROOT value compound value string acl value of today NN get VBP date NN root ROOT get nmod tmod get today dobj get date string NN value NN of IN root ROOT value compound value string acl value of today NN get VBP date NN root ROOT get nmod tmod get today dobj get date string NN month NN today NN get VBP month NN root ROOT get nmod tmod get today nmod tmod get month string NN value NN of IN root ROOT value compound value string acl value of today NN get VBP month NN root ROOT get nmod tmod get today nmod tmod get month string NN value NN of IN root ROOT value compound value string acl value of today NN get VBP month NN root ROOT get nmod tmod get today nmod tmod get month string NN year NN string NN value NN of IN root ROOT value compound value string acl value of today NN get VBP year NN root ROOT get nmod tmod get today nmod tmod get year return NN month NN separator NN date NN separator NN year NN,1,A1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/AbstractMessageNotationUml.java,1691
COMMENT temporary stop this thread for seconds FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME sleep PARAMETER LIST int ms PARAMETER int ms TYPE int NAME int NAME ms BLOCK TRY try thread sleep catch exception e p sleep failed e return false BLOCK EXPR thread sleep CALL thread sleep NAME thread sleep NAME thread NAME sleep ARGUMENT LIST ARGUMENT EXPR CATCH catch exception e p sleep failed e return false PARAMETER LIST exception e PARAMETER exception e TYPE exception NAME exception NAME e BLOCK EXPR p sleep failed e CALL p sleep failed e NAME p ARGUMENT LIST ARGUMENT EXPR sleep failed e NAME e RETURN return false EXPR false RETURN return true EXPR true temporary stop this thread for seconds root ROOT stop amod stop temporary det thread this dep stop thread case seconds for nmod for thread seconds public NN boolean NN sleep NN int NN ms NNS try VB thread NN sleep NN root ROOT sleep compound sleep thread catch NN exception NN e SYM p NN sleep NN failed VBD e SYM return NN false JJ return NN true JJ failed return ANTONYM ANTONYM false true ANTONYM ANTONYM stop catch ANTONYM ANTONYM stop failed ANTONYM ANTONYM stop return ANTONYM ANTONYM try return ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,64
DECL STMT TYPE file NAME file NAME helper functions file NN helper NN functions NNS root ROOT functions compound functions helper,1,E1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT TYPE file NAME file NAME test directory file NN test NN directory NN root ROOT directory compound directory test,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT generates code to wrap java arguments into object non primitive java types are left as is pending conversion in the helper method leaves the array object on the top of the stack FUNCTION SPECIFIER static TYPE void NAME void NAME generate push wrapped args PARAMETER LIST class file writer cfw class arg types int array length PARAMETER class file writer cfw TYPE class file writer NAME class file writer NAME cfw PARAMETER class arg types TYPE class NAME class NAME class NAME class ARGUMENT LIST ARGUMENT NAME INDEX NAME arg types PARAMETER int array length TYPE int NAME int NAME array length BLOCK COMMENT push arguments EXPR cfw add push array length CALL cfw add push array length NAME cfw add push NAME cfw NAME add push ARGUMENT LIST ARGUMENT EXPR array length NAME array length EXPR cfw add byte code anewarray java lang object CALL cfw add byte code anewarray java lang object NAME cfw add NAME cfw NAME add ARGUMENT LIST ARGUMENT EXPR byte code anewarray NAME byte code anewarray NAME byte code NAME anewarray ARGUMENT EXPR java lang object DECL STMT TYPE int NAME int NAME param offset INIT EXPR FOR for int i i arg types length i cfw add byte code dup duplicate array reference cfw add push i param offset generate wrap arg cfw param offset arg types i cfw add byte code aastore CONTROL int i i arg types length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i arg types length EXPR i arg types length NAME i NAME arg types length NAME arg types NAME length INCR i EXPR i NAME i BLOCK EXPR cfw add byte code dup CALL cfw add byte code dup NAME cfw add NAME cfw NAME add ARGUMENT LIST ARGUMENT EXPR byte code dup NAME byte code dup NAME byte code NAME dup COMMENT duplicate array reference EXPR cfw add push i CALL cfw add push i NAME cfw add push NAME cfw NAME add push ARGUMENT LIST ARGUMENT EXPR i NAME i EXPR param offset generate wrap arg cfw param offset arg types i NAME param offset CALL generate wrap arg cfw param offset arg types i NAME generate wrap arg ARGUMENT LIST ARGUMENT EXPR cfw NAME cfw ARGUMENT EXPR param offset NAME param offset ARGUMENT EXPR arg types i NAME arg types i NAME arg types INDEX i EXPR i NAME i EXPR cfw add byte code aastore CALL cfw add byte code aastore NAME cfw add NAME cfw NAME add ARGUMENT LIST ARGUMENT EXPR byte code aastore NAME byte code aastore NAME byte code NAME aastore generates code to wrap java arguments into object root ROOT generates dobj generates code mark wrap to advcl to generates wrap compound arguments java dobj wrap arguments case object into nmod into wrap object non primitive java types are left as is pending conversion root ROOT left amod types non amod types primitive compound types java nsubjpass left types auxpass left are advmod conversion as cop conversion is amod conversion pending ccomp left conversion in the helper method leaves the array object on the top of the stack root ROOT leaves case method in det method the compound method helper nmod in leaves method det object the compound object array dobj leaves object case top on det top the nmod on leaves top case the of nmod of top the dep leaves stack in the helper method leaves the array object on the top of the stack root ROOT leaves case method in det method the compound method helper nmod in leaves method det object the compound object array dobj leaves object case top on det top the nmod on leaves top case the of nmod of top the dep leaves stack static JJ void NN generate VB push NN wrapped VBN args NNS root ROOT generate compound args push amod args wrapped dobj generate args class NN file NN writer NN root ROOT writer compound writer class compound writer file cfw NN class NN arg NN types NNS root ROOT types compound types arg int NN array NN length NN root ROOT length compound length array push arguments root ROOT arguments compound arguments push cfw NN add VB push NN root ROOT add nsubj add cfw dobj add push array NN length NN root ROOT length compound length array cfw NN add VB root ROOT add nsubj add cfw byte NN code NN anewarray NN root ROOT anewarray compound anewarray byte compound anewarray code java NN lang NN object NN root ROOT object compound object java compound object lang int NN param NN offset VBD root ROOT offset nsubj offset param for IN int NN i LS i LS arg NN types NNS length NN root ROOT length compound types arg nsubj length types i LS cfw NN add VB root ROOT add nsubj add cfw byte NN code NN dup NN root ROOT dup compound dup byte compound dup code duplicate VB array NN reference NN cfw NN add VB push NN root ROOT add nsubj add cfw dobj add push i LS param NN offset VBD root ROOT offset nsubj offset param generate VB wrap NN arg IN root ROOT generate dobj generate wrap dep generate arg cfw NN param NN offset VBD root ROOT offset nsubj offset param arg NN types NNS root ROOT types compound types arg i LS cfw NN add VB root ROOT add nsubj add cfw byte NN code NN aastore NN root ROOT aastore compound aastore byte compound aastore code generates leaves ANTONYM ANTONYM generates left ANTONYM ANTONYM leaves add ANTONYM ANTONYM leaves top ANTONYM ANTONYM left add ANTONYM ANTONYM left top ANTONYM ANTONYM types reference ANTONYM ANTONYM,0,n/a,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/AbstractMessageNotationUml.java,1691
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME id java adapter INIT EXPR private JJ static JJ final JJ int NN id NN java NN adapter NN root ROOT adapter compound adapter id compound adapter java,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT TYPE class NAME class NAME class NAME class ARGUMENT LIST ARGUMENT NAME INDEX NAME interfaces class NN interfaces NNS,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION NAME java adapter signature PARAMETER LIST class super class class interfaces obj to int map names PARAMETER class super class TYPE class NAME class NAME class ARGUMENT LIST ARGUMENT NAME NAME super class PARAMETER class interfaces TYPE class NAME class NAME class NAME class ARGUMENT LIST ARGUMENT NAME INDEX NAME interfaces PARAMETER obj to int map names TYPE obj to int map NAME obj to int map NAME names BLOCK EXPR this super class super class NAME this super class NAME this NAME super class NAME super class EXPR this interfaces interfaces NAME this interfaces NAME this NAME interfaces NAME interfaces EXPR this names names NAME this names NAME this NAME names NAME names java NN adapter NN signature NN root ROOT signature compound signature java compound signature adapter class NN super JJ class NN root ROOT class amod class super class NN interfaces NNS obj NN to TO int VB map NN root ROOT obj mark int to acl to obj int dobj int map names NNS this DT super JJ class NN super JJ class NN root ROOT class amod class super this DT interfaces NNS interfaces NNS this DT names NNS names NNS,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE int NAME int NAME hash code PARAMETER LIST BLOCK RETURN return super class hash code arrays hash code interfaces names size EXPR super class hash code arrays hash code interfaces names size CALL super class hash code NAME super class hash code NAME super class NAME hash code ARGUMENT LIST CALL arrays hash code interfaces NAME arrays hash code NAME arrays NAME hash code ARGUMENT LIST ARGUMENT EXPR interfaces NAME interfaces CALL names size NAME names size NAME names NAME size ARGUMENT LIST override NN public NN int NN hash VB code NN root ROOT hash dobj hash code return NN super JJ class NN hash NN code NN root ROOT code amod code super compound code class compound code hash arrays NNS hash VBP code NN root ROOT hash nsubj hash arrays dobj hash code interfaces NNS names NNS size NN root ROOT size compound size names,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE int NAME int NAME get attributes PARAMETER LIST int index PARAMETER int index TYPE int NAME int NAME index BLOCK IF if dense null index index dense length dense index not found return empty CONDITION dense null index index dense length dense index not found EXPR dense null index index dense length dense index not found NAME dense NAME index NAME index NAME dense length NAME dense NAME length NAME dense index NAME dense INDEX index EXPR index NAME index NAME not found THEN return empty BLOCK RETURN return empty EXPR empty NAME empty RETURN return super get attributes index EXPR super get attributes index CALL super get attributes index NAME super get attributes NAME super NAME get attributes ARGUMENT LIST ARGUMENT EXPR index NAME index override NN public NN int NN get VB attributes NNS root ROOT get dobj get attributes int NN index NN if IN dense JJ null JJ index NN index NN dense JJ length NN root ROOT length amod length dense dense JJ index NN not RB found VBN root ROOT found neg found not return NN empty JJ return NN super JJ get VB attributes NNS index NN empty dense ANTONYM ANTONYM empty null ANTONYM ANTONYM,1,B6,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT change the value of the internal flag that determines whether all storage is handed by a dense backing array rather than an associative store param dense only new value for dense only flag throws illegal argument exception if an attempt is made to enable dense only after it was disabled native array code is not written to handle switching back to a dense representation FUNCTION TYPE void NAME void NAME set dense only PARAMETER LIST boolean dense only PARAMETER boolean dense only TYPE boolean NAME boolean NAME dense only BLOCK IF if dense only this dense only throw new illegal argument exception CONDITION dense only this dense only EXPR dense only this dense only NAME dense only NAME this dense only NAME this NAME dense only THEN throw new illegal argument exception BLOCK THROW throw new illegal argument exception EXPR new illegal argument exception CALL illegal argument exception NAME illegal argument exception ARGUMENT LIST EXPR this dense only dense only NAME this dense only NAME this NAME dense only NAME dense only change the value of the internal flag that determines whether all root ROOT change det value the dobj change value case flag of det flag the amod flag internal nmod of value flag nsubj determines flag ref flag that acl relcl flag determines dobj determines whether det whether all storage is handed by a dense backing array rather than an associative root ROOT handed nsubjpass handed storage auxpass handed is case array by det array a amod array dense compound array backing nmod agent handed array cc array rather mwe rather than det associative an nmod agent handed associative conj negcc array associative store param dense only new value for dense only flag root ROOT value compound value param amod value dense advmod value only amod value new case flag for amod flag dense amod flag only nmod for value flag throws illegal argument exception if an attempt is made to enable root ROOT throws amod exception illegal compound exception argument dobj throws exception mark made if det attempt an nsubjpass made attempt nsubj xsubj enable attempt auxpass made is advcl if throws made mark enable to xcomp made enable dense only after it was disabled native array code is not written root ROOT written advmod written dense advmod code only mark code after nsubj code it cop code was amod code disabled amod code native compound code array nsubjpass written code auxpass written is neg written not to handle switching back to a dense representation root ROOT handle mark handle to dobj handle switching advmod handle back case representation to det representation a amod representation dense nmod to back representation void NN set VBN dense JJ only RB root ROOT set xcomp set dense advmod set only boolean NN dense JJ only RB root ROOT dense advmod dense only if IN dense JJ only RB root ROOT dense advmod dense only this DT dense JJ only RB throw VB new JJ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument this DT dense JJ only RB dense JJ only RB root ROOT dense advmod dense only change throw ANTONYM ANTONYM change throws ANTONYM ANTONYM determines made ANTONYM ANTONYM enable disabled ANTONYM ANTONYM handed made ANTONYM ANTONYM handed throw ANTONYM ANTONYM handed throws ANTONYM ANTONYM is made ANTONYM ANTONYM made switching ANTONYM ANTONYM made was ANTONYM ANTONYM,0,N/A,tomcat/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PoolProperties.java,75
FUNCTION SPECIFIER private SPECIFIER static TYPE object NAME object NAME set length property PARAMETER LIST context cx scriptable target long length PARAMETER context cx TYPE context NAME context NAME cx PARAMETER scriptable target TYPE scriptable NAME scriptable NAME target PARAMETER long length TYPE long NAME long NAME length BLOCK DECL STMT TYPE object NAME object NAME len INIT script runtime wrap number length EXPR script runtime wrap number length CALL script runtime wrap number length NAME script runtime wrap number NAME script runtime NAME wrap number ARGUMENT LIST ARGUMENT EXPR length NAME length EXPR scriptable object put property target length len CALL scriptable object put property target length len NAME scriptable object put property NAME scriptable object NAME put property ARGUMENT LIST ARGUMENT EXPR target NAME target ARGUMENT EXPR length ARGUMENT EXPR len NAME len RETURN return len EXPR len NAME len private JJ static JJ object NN set VBN length NN property NN root ROOT set compound property length dobj set property context NN cx NN scriptable JJ target NN long RB length NN object NN len NN script NN runtime NN wrap NN number NN root ROOT number compound number script compound number runtime compound number wrap length NN scriptable JJ object NN put VBD property NN root ROOT put amod object scriptable nsubj put object dobj put property target NN length NN len NN return NN len NN,1,A3,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER private SPECIFIER static TYPE void NAME void NAME define elem PARAMETER LIST context cx scriptable target long index object value PARAMETER context cx TYPE context NAME context NAME cx PARAMETER scriptable target TYPE scriptable NAME scriptable NAME target PARAMETER long index TYPE long NAME long NAME index PARAMETER object value TYPE object NAME object NAME value BLOCK IF if index integer max value string id long to string index target put id target value else target put int index target value CONDITION index integer max value EXPR index integer max value NAME index NAME integer max value NAME integer NAME max value THEN string id long to string index target put id target value BLOCK DECL STMT TYPE string NAME string NAME id INIT long to string index EXPR long to string index CALL long to string index NAME long to string NAME long NAME to string ARGUMENT LIST ARGUMENT EXPR index NAME index EXPR target put id target value CALL target put id target value NAME target put NAME target NAME put ARGUMENT LIST ARGUMENT EXPR id NAME id ARGUMENT EXPR target NAME target ARGUMENT EXPR value NAME value ELSE else target put int index target value BLOCK EXPR target put int index target value CALL target put int index target value NAME target put NAME target NAME put ARGUMENT LIST ARGUMENT EXPR int index NAME int NAME index ARGUMENT EXPR target NAME target ARGUMENT EXPR value NAME value private JJ static JJ void NN define VB elem NN root ROOT define dobj define elem context NN cx NN scriptable JJ target NN long RB index NN object NN value NN if IN index NN integer NN max NN root ROOT max compound max integer value NN string NN id NN long RB to TO string VB index NN target NN put VBD root ROOT put nsubj put target id NN target NN value NN else RB target NN put VBD root ROOT put nsubj put target int NN index NN target NN value NN target put ANTONYM ANTONYM,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER private SPECIFIER static TYPE void NAME void NAME set elem PARAMETER LIST context cx scriptable target long index object value PARAMETER context cx TYPE context NAME context NAME cx PARAMETER scriptable target TYPE scriptable NAME scriptable NAME target PARAMETER long index TYPE long NAME long NAME index PARAMETER object value TYPE object NAME object NAME value BLOCK IF if index integer max value string id long to string index scriptable object put property target id value else scriptable object put property target int index value CONDITION index integer max value EXPR index integer max value NAME index NAME integer max value NAME integer NAME max value THEN string id long to string index scriptable object put property target id value BLOCK DECL STMT TYPE string NAME string NAME id INIT long to string index EXPR long to string index CALL long to string index NAME long to string NAME long NAME to string ARGUMENT LIST ARGUMENT EXPR index NAME index EXPR scriptable object put property target id value CALL scriptable object put property target id value NAME scriptable object put property NAME scriptable object NAME put property ARGUMENT LIST ARGUMENT EXPR target NAME target ARGUMENT EXPR id NAME id ARGUMENT EXPR value NAME value ELSE else scriptable object put property target int index value BLOCK EXPR scriptable object put property target int index value CALL scriptable object put property target int index value NAME scriptable object put property NAME scriptable object NAME put property ARGUMENT LIST ARGUMENT EXPR target NAME target ARGUMENT EXPR int index NAME int NAME index ARGUMENT EXPR value NAME value private JJ static JJ void NN set VBN elem NNS root ROOT set dobj set elem context NN cx NN scriptable JJ target NN long RB index NN object NN value NN if IN index NN integer NN max NN root ROOT max compound max integer value NN string NN id NN long RB to TO string VB index NN scriptable JJ object NN put VBD property NN root ROOT put amod object scriptable nsubj put object dobj put property target NN id NN value NN else RB scriptable JJ object NN put VBD property NN root ROOT put amod object scriptable nsubj put object dobj put property target NN int NN index NN value NN,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE object NAME object NAME remove PARAMETER LIST int index PARAMETER int index TYPE int NAME int NAME index BLOCK THROW throw new unsupported operation exception EXPR new unsupported operation exception CALL unsupported operation exception NAME unsupported operation exception ARGUMENT LIST public NN object NN remove VB int NN index NN throw VB new JJ unsupported JJ operation NN exception NN root ROOT exception amod exception unsupported compound exception operation,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT internal representation of the java script array s length property DECL STMT SPECIFIER private TYPE long NAME long NAME length internal representation of the java script array s length property root ROOT s amod representation internal nsubj s representation case array of det array the compound array java compound array script nmod of representation array compound property length dobj s property private JJ long RB length NN internal private SYNONYM SYNONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT fast storage for dense arrays sparse arrays will use the superclass s hashtable storage scheme DECL STMT SPECIFIER private TYPE object NAME object NAME object INDEX NAME dense fast storage for dense arrays sparse arrays will use the superclass s root ROOT use amod storage fast nsubj use storage case arrays for amod arrays dense nmod for use arrays amod arrays sparse nsubj use arrays aux use will det s the amod s superclass dobj use s fast storage for dense arrays sparse arrays will use the superclass s root ROOT use amod storage fast nsubj use storage case arrays for amod arrays dense nmod for use arrays amod arrays sparse nsubj use arrays aux use will det s the amod s superclass dobj use s hashtable storage scheme root ROOT scheme amod scheme hashtable compound scheme storage private JJ object NN dense JJ dense sparse ANTONYM ANTONYM fast dense ANTONYM ANTONYM,1,D1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,190
COMMENT the default capacity for code dense code DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME default initial capacity INIT EXPR the default capacity for code dense code root ROOT capacity det capacity the compound capacity default case code for compound code code amod code dense nmod for capacity code private JJ static JJ final JJ int NN default NN initial JJ capacity NN root ROOT capacity compound capacity default amod capacity initial initial final ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,64
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME max pre grow size INIT int integer max value grow factor EXPR int integer max value grow factor CALL int integer max value grow factor NAME int ARGUMENT LIST ARGUMENT EXPR integer max value grow factor NAME integer max value NAME integer NAME max value NAME grow factor private JJ static JJ final JJ int NN max NN pre JJ grow VB size NN root ROOT max amod max pre dep pre grow dobj grow size int NN integer NN max NN root ROOT max compound max integer value NN grow VB factor NN root ROOT grow dobj grow factor,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
FUNCTION SPECIFIER public TYPE int NAME int NAME index of PARAMETER LIST object o PARAMETER object o TYPE object NAME object NAME o BLOCK DECL STMT TYPE long NAME long NAME long len INIT length EXPR length NAME length IF if long len integer max value throw new illegal state exception CONDITION long len integer max value EXPR long len integer max value NAME long len NAME integer max value NAME integer NAME max value THEN throw new illegal state exception BLOCK THROW throw new illegal state exception EXPR new illegal state exception CALL illegal state exception NAME illegal state exception ARGUMENT LIST DECL STMT TYPE int NAME int NAME len INIT int long len EXPR int long len NAME int NAME long len IF if o null for int i i len i if get i null return i else for int i i len i if o equals get i return i CONDITION o null EXPR o null NAME o THEN for int i i len i if get i null return i BLOCK FOR for int i i len i if get i null return i CONTROL int i i len i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i len EXPR i len NAME i NAME len INCR i EXPR i NAME i BLOCK IF if get i null return i CONDITION get i null EXPR get i null CALL get i NAME get ARGUMENT LIST ARGUMENT EXPR i NAME i THEN return i BLOCK RETURN return i EXPR i NAME i ELSE else for int i i len i if o equals get i return i BLOCK FOR for int i i len i if o equals get i return i CONTROL int i i len i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i len EXPR i len NAME i NAME len INCR i EXPR i NAME i BLOCK IF if o equals get i return i CONDITION o equals get i EXPR o equals get i CALL o equals get i NAME o equals NAME o NAME equals ARGUMENT LIST ARGUMENT EXPR get i CALL get i NAME get ARGUMENT LIST ARGUMENT EXPR i NAME i THEN return i BLOCK RETURN return i EXPR i NAME i RETURN return EXPR public NN int NN index NN of IN root ROOT index acl index of object NN o NN long RB long RB len NN root ROOT len advmod len long length NN if IN long RB len NN root ROOT len advmod len long integer NN max NN root ROOT max compound max integer value NN throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state int NN len NN int NN long RB len NN root ROOT len advmod len long if IN o NN null JJ for IN int NN i LS i LS len NN i LS if IN get VB i LS null JJ return NN i LS else RB for IN int NN i LS i LS len NN i LS if IN o NN equals VBZ root ROOT equals nsubj equals o get VB i LS return NN i LS return NN get return ANTONYM ANTONYM throw get ANTONYM ANTONYM throw return ANTONYM ANTONYM new else SYNONYM SYNONYM,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT returns regexp flags code null or if no flags specified FUNCTION SPECIFIER public TYPE string NAME string NAME get flags PARAMETER LIST BLOCK RETURN return flags EXPR flags NAME flags returns regexp flags code null or if no flags specified root ROOT code compound flags returns amod flags regexp nsubj code flags dobj code null cc null or dobj code if conj or null if neg flags no dep null flags acl flags specified public NN string NN get VB flags NNS root ROOT get dobj get flags return NN flags NNS,1,B6,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT sets regexp flags can be code null or FUNCTION SPECIFIER public TYPE void NAME void NAME set flags PARAMETER LIST string flags PARAMETER string flags TYPE string NAME string NAME flags BLOCK EXPR this flags flags NAME this flags NAME this NAME flags NAME flags sets regexp flags can be code null or root ROOT null compound flags sets amod flags regexp nsubj null flags aux null can cop null be nmod npmod null code cc null or sets regexp flags can be code null or root ROOT null compound flags sets amod flags regexp nsubj null flags aux null can cop null be nmod npmod null code cc null or public NN void NN set VBN flags NNS root ROOT set dobj set flags string NN flags NNS this DT flags NNS flags NNS,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE string NAME string NAME to source PARAMETER LIST int depth PARAMETER int depth TYPE int NAME int NAME depth BLOCK RETURN return make indent depth value flags null flags EXPR make indent depth value flags null flags CALL make indent depth NAME make indent ARGUMENT LIST ARGUMENT EXPR depth NAME depth NAME value TERNARY flags null flags CONDITION flags null EXPR flags null NAME flags THEN EXPR ELSE flags EXPR flags NAME flags override NN public NN string NN to TO source NN root ROOT source case source to int NN depth NN return NN make VB indent JJ root ROOT make xcomp make indent depth NN value NN flags NNS null JJ flags NNS,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER static TYPE void NAME void NAME to source impl PARAMETER LIST string prefix string uri string builder sb PARAMETER string prefix TYPE string NAME string NAME prefix PARAMETER string uri TYPE string NAME string NAME uri PARAMETER string builder sb TYPE string builder NAME string builder NAME sb BLOCK EXPR sb append new namespace CALL sb append new namespace NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR new namespace IF if uri length if equals prefix throw new illegal argument exception prefix else sb append if prefix null sb append script runtime escape string prefix sb append sb append script runtime escape string uri sb append CONDITION uri length EXPR uri length CALL uri length NAME uri length NAME uri NAME length ARGUMENT LIST THEN if equals prefix throw new illegal argument exception prefix BLOCK IF if equals prefix throw new illegal argument exception prefix CONDITION equals prefix EXPR equals prefix CALL equals prefix NAME equals ARGUMENT LIST ARGUMENT EXPR prefix NAME prefix THEN throw new illegal argument exception prefix BLOCK THROW throw new illegal argument exception prefix EXPR new illegal argument exception prefix CALL illegal argument exception prefix NAME illegal argument exception ARGUMENT LIST ARGUMENT EXPR prefix NAME prefix ELSE else sb append if prefix null sb append script runtime escape string prefix sb append sb append script runtime escape string uri sb append BLOCK EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR IF if prefix null sb append script runtime escape string prefix sb append CONDITION prefix null EXPR prefix null NAME prefix THEN sb append script runtime escape string prefix sb append BLOCK EXPR sb append script runtime escape string prefix CALL sb append script runtime escape string prefix NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR script runtime escape string prefix CALL script runtime escape string prefix NAME script runtime escape string NAME script runtime NAME escape string ARGUMENT LIST ARGUMENT EXPR prefix NAME prefix ARGUMENT EXPR EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR sb append script runtime escape string uri CALL sb append script runtime escape string uri NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR script runtime escape string uri CALL script runtime escape string uri NAME script runtime escape string NAME script runtime NAME escape string ARGUMENT LIST ARGUMENT EXPR uri NAME uri ARGUMENT EXPR EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR static JJ void NN to TO source NN impl NN root ROOT source mark source to dobj source impl string NN prefix NN string NN uri NN string NN builder NN root ROOT builder compound builder string sb NN sb NN append IN root ROOT sb dep sb append new JJ namespace NN if IN uri NN length NN root ROOT length compound length uri if IN equals VBZ prefix NN throw VB new JJ illegal JJ argument NN exception NN root ROOT exception amod exception illegal compound exception argument prefix NN else RB sb NN append IN root ROOT sb dep sb append if IN prefix NN null JJ sb NN append IN root ROOT sb dep sb append script NN runtime NN escape NN string NN root ROOT string compound string script compound string runtime compound string escape prefix NN sb NN append IN root ROOT sb dep sb append sb NN append IN root ROOT sb dep sb append script NN runtime NN escape NN string NN root ROOT string compound string script compound string runtime compound string escape uri NN sb NN append IN root ROOT sb dep sb append sb NN append IN root ROOT sb dep sb append new else SYNONYM SYNONYM,1,B5,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER private TYPE string NAME string NAME js to source PARAMETER LIST BLOCK DECL STMT TYPE string builder NAME string builder NAME sb INIT new string builder EXPR new string builder CALL string builder NAME string builder ARGUMENT LIST EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR EXPR to source impl ns get prefix ns get uri sb CALL to source impl ns get prefix ns get uri sb NAME to source impl ARGUMENT LIST ARGUMENT EXPR ns get prefix CALL ns get prefix NAME ns get prefix NAME ns NAME get prefix ARGUMENT LIST ARGUMENT EXPR ns get uri CALL ns get uri NAME ns get uri NAME ns NAME get uri ARGUMENT LIST ARGUMENT EXPR sb NAME sb EXPR sb append CALL sb append NAME sb append NAME sb NAME append ARGUMENT LIST ARGUMENT EXPR RETURN return sb to string EXPR sb to string CALL sb to string NAME sb to string NAME sb NAME to string ARGUMENT LIST private JJ string NN js NNS to TO source NN root ROOT js case source to nmod to js source string NN builder NN root ROOT builder compound builder string sb NN new JJ string NN builder NN root ROOT builder compound builder string sb NN append IN root ROOT sb dep sb append to TO source NN impl NN root ROOT source mark source to dobj source impl ns NNS get VBP prefix NN root ROOT get nsubj get ns dobj get prefix ns NNS get VBP uri NN root ROOT get nsubj get ns dobj get uri sb NN sb NN append IN root ROOT sb dep sb append return NN sb NN to TO string NN root ROOT sb case string to nmod to sb string,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER private TYPE namespace NAME namespace NAME construct namespace PARAMETER LIST BLOCK RETURN return new namespace EXPR new namespace CALL new namespace NAME new namespace ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR private JJ namespace NN construct NN namespace NN root ROOT namespace compound namespace construct return NN new JJ namespace NN root ROOT namespace amod namespace new,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION TYPE namespace NAME namespace NAME cast to namespace PARAMETER LIST object namespace obj PARAMETER object namespace obj TYPE object NAME object NAME namespace obj BLOCK IF if namespace obj instanceof namespace return namespace namespace obj CONDITION namespace obj instanceof namespace EXPR namespace obj instanceof namespace NAME namespace obj NAME namespace THEN return namespace namespace obj BLOCK RETURN return namespace namespace obj EXPR namespace namespace obj NAME namespace NAME namespace obj RETURN return construct namespace namespace obj EXPR construct namespace namespace obj CALL construct namespace namespace obj NAME construct namespace ARGUMENT LIST ARGUMENT EXPR namespace obj NAME namespace obj namespace NN cast VBN to TO namespace VB root ROOT cast mark namespace to xcomp cast namespace object NN namespace NN obj NN root ROOT obj compound obj namespace if IN namespace NN obj NN root ROOT obj compound obj namespace instanceof NN namespace NN return NN namespace NN namespace NN obj NN root ROOT obj compound obj namespace return NN construct NN namespace NN root ROOT namespace compound namespace construct namespace NN obj NN root ROOT obj compound obj namespace,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE string NAME string NAME get class name PARAMETER LIST BLOCK RETURN return namespace EXPR namespace override NN public NN string NN get VB class NN name NN root ROOT get compound name class dobj get name return NN namespace NN,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE string NAME string NAME to locale string PARAMETER LIST BLOCK RETURN return to string EXPR to string CALL to string NAME to string ARGUMENT LIST public NN string NN to TO locale NN string NN root ROOT string case string to compound string locale return NN to TO string VB root ROOT string mark string to,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME boolean INDEX NAME get param and var const PARAMETER LIST BLOCK IF if variable names null code bug CONDITION variable names null EXPR variable names null NAME variable names THEN code bug BLOCK EXPR code bug CALL code bug NAME code bug ARGUMENT LIST RETURN return is consts EXPR is consts NAME is consts public NN boolean NN get VB param NN and CC var NN const NN root ROOT get compound const param cc param and conj and param var compound const var dobj get const if IN variable JJ names NNS root ROOT names amod names variable null JJ code NN bug NN root ROOT bug compound bug code return NN is VBZ consts NNS root ROOT consts cop consts is,1,A4,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT second formatted in most recent invocation DECL STMT SPECIFIER private TYPE long NAME long NAME previous seconds INIT long min value EXPR long min value NAME long min value NAME long NAME min value second formatted in most recent invocation root ROOT formatted advmod formatted second case invocation in advmod recent most amod invocation recent nmod in formatted invocation private JJ long RB previous JJ seconds NNS root ROOT seconds amod seconds previous long RB min NN value NN second min ANTONYM ANTONYM,0,n/a,tomcat/java/org/apache/juli/DateFormatCache.java,105
CONSTRUCTOR private cache cache parent cache new string cache size formatter new simple date format format locale us formatter set time zone time zone get default this parent parent SPECIFIER private NAME cache PARAMETER LIST cache parent PARAMETER cache parent TYPE cache NAME cache NAME parent BLOCK EXPR cache new string cache size NAME cache NAME string cache size NAME string INDEX cache size EXPR cache size NAME cache size EXPR formatter new simple date format format locale us NAME formatter CALL simple date format format locale us NAME simple date format ARGUMENT LIST ARGUMENT EXPR format NAME format ARGUMENT EXPR locale us NAME locale us NAME locale NAME us EXPR formatter set time zone time zone get default CALL formatter set time zone time zone get default NAME formatter set time zone NAME formatter NAME set time zone ARGUMENT LIST ARGUMENT EXPR time zone get default CALL time zone get default NAME time zone get default NAME time zone NAME get default ARGUMENT LIST EXPR this parent parent NAME this parent NAME this NAME parent NAME parent private JJ cache NN cache NN parent NN cache NN new JJ string NN cache NN size NN root ROOT size compound size cache formatter NN new JJ simple JJ date NN format NN root ROOT format amod format simple compound format date format NN locale NN us PRP root ROOT us compound us locale formatter NN set VBD time NN zone NN root ROOT set nsubj set formatter compound zone time dobj set zone time NN zone NN get VB default NN root ROOT get compound zone time nsubj get zone dobj get default this DT parent NN parent NN,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER private TYPE simple date format NAME simple date format NAME formatter private JJ simple JJ date NN format NN root ROOT format amod format simple compound format date formatter NN,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT first second contained in cache DECL STMT SPECIFIER private TYPE long NAME long NAME first INIT long min value EXPR long min value NAME long min value NAME long NAME min value first second contained in cache root ROOT contained advmod second first advmod contained second case cache in nmod in contained cache private JJ long RB first RB long RB min NN value NN second min ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/AbstractMessageNotationUml.java,1691
COMMENT last second contained in cache DECL STMT SPECIFIER private TYPE long NAME long NAME last INIT long min value EXPR long min value NAME long min value NAME long NAME min value last second contained in cache root ROOT second amod second last acl second contained case cache in nmod in contained cache private JJ long RB last JJ long RB min NN value NN last second ANTONYM ANTONYM second min ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT index of first in the cyclic cache DECL STMT SPECIFIER private TYPE int NAME int NAME offset INIT EXPR index of first in the cyclic cache root ROOT index case first of nmod of index first case cache in det cache the amod cache cyclic nmod in first cache private JJ int NN offset VBN,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT helper object to be able to call simple date format format DECL STMT SPECIFIER private TYPE final date SPECIFIER final NAME date NAME current date INIT new date EXPR new date CALL date NAME date ARGUMENT LIST helper object to be able to call simple date format format root ROOT object compound object helper mark able to cop able be acl to object able mark call to xcomp able call amod format simple compound format date compound format format dobj call format helper object to be able to call simple date format format root ROOT object compound object helper mark able to cop able be acl to object able mark call to xcomp able call amod format simple compound format date compound format format dobj call format private JJ final JJ date NN current JJ date NN root ROOT date amod date current new JJ date NN,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT unbinds the named object removes the terminal atomic name in name from the target context that named by all but the terminal atomic part of name p this method is idempotent it succeeds even if the terminal atomic name is not bound in the target context but throws name not found exception if any of the intermediate contexts do not exist param name the name to bind may not be empty exception name not found exception if an intermediate context does not exist exception naming exception if a naming exception is encountered FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME unbind PARAMETER LIST name name PARAMETER name name TYPE name NAME name NAME name THROWS throws naming exception ARGUMENT EXPR naming exception NAME naming exception BLOCK IF if check writable return CONDITION check writable EXPR check writable CALL check writable NAME check writable ARGUMENT LIST THEN return BLOCK RETURN return WHILE while name is empty name get length name name get suffix CONDITION name is empty name get length EXPR name is empty name get length CALL name is empty NAME name is empty NAME name NAME is empty ARGUMENT LIST CALL name get NAME name get NAME name NAME get ARGUMENT LIST ARGUMENT EXPR CALL length NAME length ARGUMENT LIST BLOCK EXPR name name get suffix NAME name CALL name get suffix NAME name get suffix NAME name NAME get suffix ARGUMENT LIST ARGUMENT EXPR IF if name is empty throw new naming exception sm get string naming context invalid name CONDITION name is empty EXPR name is empty CALL name is empty NAME name is empty NAME name NAME is empty ARGUMENT LIST THEN throw new naming exception sm get string naming context invalid name BLOCK THROW throw new naming exception sm get string naming context invalid name EXPR new naming exception sm get string naming context invalid name CALL naming exception sm get string naming context invalid name NAME naming exception ARGUMENT LIST ARGUMENT EXPR sm get string naming context invalid name CALL sm get string naming context invalid name NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR naming context invalid name DECL STMT TYPE naming entry NAME naming entry NAME entry INIT bindings get name get EXPR bindings get name get CALL bindings get name get NAME bindings get NAME bindings NAME get ARGUMENT LIST ARGUMENT EXPR name get CALL name get NAME name get NAME name NAME get ARGUMENT LIST ARGUMENT EXPR IF if entry null throw new name not found exception sm get string naming context name not bound name name get CONDITION entry null EXPR entry null NAME entry THEN throw new name not found exception sm get string naming context name not bound name name get BLOCK THROW throw new name not found exception sm get string naming context name not bound name name get EXPR new name not found exception sm get string naming context name not bound name name get CALL name not found exception sm get string naming context name not bound name name get NAME name not found exception ARGUMENT LIST ARGUMENT EXPR sm get string naming context name not bound name name get CALL sm get string naming context name not bound name name get NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR naming context name not bound ARGUMENT EXPR name NAME name ARGUMENT EXPR name get CALL name get NAME name get NAME name NAME get ARGUMENT LIST ARGUMENT EXPR IF if name size if entry type naming entry context context entry value unbind name get suffix else throw new naming exception sm get string naming context context expected else bindings remove name get CONDITION name size EXPR name size CALL name size NAME name size NAME name NAME size ARGUMENT LIST THEN if entry type naming entry context context entry value unbind name get suffix else throw new naming exception sm get string naming context context expected BLOCK IF if entry type naming entry context context entry value unbind name get suffix else throw new naming exception sm get string naming context context expected CONDITION entry type naming entry context EXPR entry type naming entry context NAME entry type NAME entry NAME type NAME naming entry context NAME naming entry NAME context THEN context entry value unbind name get suffix BLOCK EXPR context entry value unbind name get suffix NAME context NAME entry value NAME entry NAME value CALL unbind name get suffix NAME unbind ARGUMENT LIST ARGUMENT EXPR name get suffix CALL name get suffix NAME name get suffix NAME name NAME get suffix ARGUMENT LIST ARGUMENT EXPR ELSE else throw new naming exception sm get string naming context context expected BLOCK THROW throw new naming exception sm get string naming context context expected EXPR new naming exception sm get string naming context context expected CALL naming exception sm get string naming context context expected NAME naming exception ARGUMENT LIST ARGUMENT EXPR sm get string naming context context expected CALL sm get string naming context context expected NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR naming context context expected ELSE else bindings remove name get BLOCK EXPR bindings remove name get CALL bindings remove name get NAME bindings remove NAME bindings NAME remove ARGUMENT LIST ARGUMENT EXPR name get CALL name get NAME name get NAME name NAME get ARGUMENT LIST ARGUMENT EXPR unbinds the named object removes the terminal atomic name in name root ROOT unbinds det object the amod object named nsubj removes object acl relcl unbinds removes det name the amod name terminal amod name atomic dobj removes name case name in nmod in removes name unbinds the named object removes the terminal atomic name in name root ROOT unbinds det object the amod object named nsubj removes object acl relcl unbinds removes det name the amod name terminal amod name atomic dobj removes name case name in nmod in removes name from the target context that named by all but the terminal atomic root ROOT context case context from det context the compound context target dep context that acl that named case all by nmod by named all cc all but det atomic the amod atomic terminal nmod by named atomic conj but all atomic part of name root ROOT part case name of nmod of part name p this method is idempotent it succeeds even if the terminal atomic root ROOT idempotent det method this nsubj idempotent method cop idempotent is nsubj succeeds it ccomp idempotent succeeds advmod atomic even mark atomic if det atomic the amod atomic terminal advcl if succeeds atomic this method is idempotent it succeeds even if the terminal atomic root ROOT idempotent det method this nsubj idempotent method cop idempotent is nsubj succeeds it ccomp idempotent succeeds advmod atomic even mark atomic if det atomic the amod atomic terminal advcl if succeeds atomic name is not bound in the target context but throws root ROOT bound nsubjpass bound name nsubj throws name auxpass bound is neg bound not case context in det context the compound context target nmod in bound context cc bound but conj but bound throws name not found exception if any of the intermediate contexts do not exist root ROOT found nsubj found name neg found not dobj found exception mark exist if nsubj exist any case contexts of det contexts the amod contexts intermediate nmod of any contexts aux exist do neg exist not advcl if found exist param name the name to bind may not be empty root ROOT empty compound name param dobj empty name det name the nsubj empty name mark bind to acl to name bind aux empty may neg empty not cop empty be exception name not found exception if an intermediate context does not root ROOT found compound name exception nsubj found name neg found not dobj found exception dep found if det context an amod context intermediate dep if context dep context does neg does not exist exception naming exception if a naming exception is encountered root ROOT exception compound exception exception compound exception naming mark encountered if det exception a amod exception naming nsubjpass encountered exception auxpass encountered is dep exception encountered override NN public NN void NN unbind NN name NN name NN throws VBZ naming VBG exception NN root ROOT naming dobj naming exception if IN check VB writable JJ root ROOT check xcomp check writable return NN while IN name NN is VBZ empty JJ root ROOT empty nsubj empty name cop empty is name NN get VB root ROOT get nsubj get name length NN name NN name NN get VB suffix NN root ROOT get nsubj get name dobj get suffix if IN name NN is VBZ empty JJ root ROOT empty nsubj empty name cop empty is throw VB new JJ naming VBG exception NN root ROOT naming dobj naming exception sm NN get VB string NN root ROOT get nsubj get sm dobj get string naming VBG context NN invalid JJ name NN root ROOT naming compound name context amod name invalid dobj naming name naming VBG entry NN root ROOT naming dobj naming entry entry NN bindings NNS get VBP root ROOT get nsubj get bindings name NN get VB root ROOT get nsubj get name if IN entry NN null JJ throw VB new JJ name NN not RB found VBN exception NN root ROOT found nsubj found name neg found not dobj found exception sm NN get VB string NN root ROOT get nsubj get sm dobj get string naming VBG context NN name NN not RB bound VBD root ROOT bound csubj bound naming compound name context dobj naming name neg name not name NN name NN get VB root ROOT get nsubj get name if IN name NN size NN root ROOT size compound size name if IN entry NN type NN root ROOT type compound type entry naming VBG entry NN context NN root ROOT naming compound context entry dobj naming context context NN entry NN value NN root ROOT value compound value entry unbind NN name NN get VB suffix NN root ROOT get nsubj get name dobj get suffix else RB throw VB new JJ naming VBG exception NN root ROOT naming dobj naming exception sm NN get VB string NN root ROOT get nsubj get sm dobj get string naming VBG context NN context NN expected VBN root ROOT naming compound context context nsubj expected context ccomp naming expected else RB bindings NNS remove VB root ROOT remove nsubj remove bindings name NN get VB root ROOT get nsubj get name all any ANTONYM ANTONYM all part ANTONYM ANTONYM be naming ANTONYM ANTONYM bind get ANTONYM ANTONYM bind throw ANTONYM ANTONYM bind unbind ANTONYM ANTONYM bound even ANTONYM ANTONYM do get ANTONYM ANTONYM do naming ANTONYM ANTONYM do throw ANTONYM ANTONYM does get ANTONYM ANTONYM does naming ANTONYM ANTONYM does throw ANTONYM ANTONYM empty null ANTONYM ANTONYM encountered get ANTONYM ANTONYM get remove ANTONYM ANTONYM get throw ANTONYM ANTONYM is naming ANTONYM ANTONYM is succeeds ANTONYM ANTONYM name be ANTONYM ANTONYM name do ANTONYM ANTONYM name does ANTONYM ANTONYM name get ANTONYM ANTONYM name is ANTONYM ANTONYM name throw ANTONYM ANTONYM name throws ANTONYM ANTONYM named be ANTONYM ANTONYM named do ANTONYM ANTONYM named does ANTONYM ANTONYM named get ANTONYM ANTONYM named is ANTONYM ANTONYM named throw ANTONYM ANTONYM named throws ANTONYM ANTONYM naming get ANTONYM ANTONYM naming throw ANTONYM ANTONYM part get ANTONYM ANTONYM part type ANTONYM ANTONYM part while ANTONYM ANTONYM removes get ANTONYM ANTONYM return get ANTONYM ANTONYM return throw ANTONYM ANTONYM succeeds be ANTONYM ANTONYM target get ANTONYM ANTONYM terminal intermediate ANTONYM ANTONYM throws bind ANTONYM ANTONYM throws do ANTONYM ANTONYM throws does ANTONYM ANTONYM throws get ANTONYM ANTONYM throws naming ANTONYM ANTONYM throws return ANTONYM ANTONYM unbinds bind ANTONYM ANTONYM new else SYNONYM SYNONYM,0,n/a,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,57
COMMENT binds a new name to the object bound to an old name and unbinds the old name param old name the name of the existing binding may not be empty param new name the name of the new binding may not be empty exception name already bound exception if new name is already bound exception naming exception if a naming exception is encountered FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE void NAME void NAME rename PARAMETER LIST string old name string new name PARAMETER string old name TYPE string NAME string NAME old name PARAMETER string new name TYPE string NAME string NAME new name THROWS throws naming exception ARGUMENT EXPR naming exception NAME naming exception BLOCK EXPR rename new composite name old name new composite name new name CALL rename new composite name old name new composite name new name NAME rename ARGUMENT LIST ARGUMENT EXPR new composite name old name CALL composite name old name NAME composite name ARGUMENT LIST ARGUMENT EXPR old name NAME old name ARGUMENT EXPR new composite name new name CALL composite name new name NAME composite name ARGUMENT LIST ARGUMENT EXPR new name NAME new name binds a new name to the object bound to an old name and unbinds the root ROOT bound csubj bound binds csubj unbinds binds det name a amod name new dobj binds name case object to det object the nmod to binds object case name to det name an amod name old nmod to bound name cc bound and conj and bound unbinds dobj unbinds the old name root ROOT name amod name old param old name the name of the existing binding may not be empty root ROOT empty compound name param amod name old dobj empty name det name the nsubj empty name case binding of det binding the amod binding existing nmod of name binding aux empty may neg empty not cop empty be param new name the name of the new binding may not be empty root ROOT param amod name new dobj param name det name the nsubj empty name case binding of det binding the amod binding new nmod of name binding aux empty may neg empty not cop empty be acl relcl name empty exception name already bound exception if new name is already bound root ROOT bound compound name exception nsubj bound name advmod bound already dobj bound exception mark bound if amod name new nsubjpass bound name auxpass bound is advmod bound already advcl if bound bound exception naming exception if a naming exception is encountered root ROOT exception compound exception exception compound exception naming mark encountered if det exception a amod exception naming nsubjpass encountered exception auxpass encountered is dep exception encountered override NN public NN void NN rename VB string NN old JJ name NN root ROOT name amod name old string NN new JJ name NN root ROOT name amod name new throws VBZ naming VBG exception NN root ROOT naming dobj naming exception rename VB new JJ composite JJ name NN root ROOT name amod name composite old JJ name NN root ROOT name amod name old new JJ composite JJ name NN root ROOT name amod name composite new JJ name NN root ROOT name amod name new be naming ANTONYM ANTONYM binding throws ANTONYM ANTONYM binds throws ANTONYM ANTONYM binds unbinds ANTONYM ANTONYM is naming ANTONYM ANTONYM name be ANTONYM ANTONYM name is ANTONYM ANTONYM name throws ANTONYM ANTONYM naming throws ANTONYM ANTONYM new old ANTONYM ANTONYM unbinds binding ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/tribes/UniqueId.java,33
COMMENT enumerates the names bound in the named context along with the class names of objects bound to them param name the name of the context to list return an enumeration of the names and class names of the bindings in this context each element of the enumeration is of type name class pair exception naming exception if a naming exception is encountered FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE naming enumeration name class pair NAME naming enumeration name class pair NAME naming enumeration ARGUMENT LIST ARGUMENT NAME name class pair NAME list PARAMETER LIST string name PARAMETER string name TYPE string NAME string NAME name THROWS throws naming exception ARGUMENT EXPR naming exception NAME naming exception BLOCK RETURN return list new composite name name EXPR list new composite name name CALL list new composite name name NAME list ARGUMENT LIST ARGUMENT EXPR new composite name name CALL composite name name NAME composite name ARGUMENT LIST ARGUMENT EXPR name NAME name enumerates the names bound in the named context along with the class root ROOT enumerates det names the dobj enumerates names acl names bound case context in det context the amod context named nmod in bound context case class along mwe along with det class the nmod along with names class names of objects bound to them root ROOT names case objects of nmod of names objects acl objects bound case them to nmod to bound them param name the name of the context to list root ROOT name compound name param det name the dep name name case context of det context the nmod of name context case list to nmod to name list return an enumeration of the names and class names of the bindings in root ROOT return det enumeration an dobj return enumeration case names of det names the nmod of enumeration names cc names and compound names class nmod of enumeration names conj and names names case bindings of det bindings the nmod of names bindings dep return in this context each element of the enumeration is of type name class pair root ROOT pair det context this nmod tmod pair context det element each nsubj pair element case enumeration of det enumeration the nmod of element enumeration cop pair is case pair of compound pair type compound pair name compound pair class this context each element of the enumeration is of type name class pair root ROOT pair det context this nmod tmod pair context det element each nsubj pair element case enumeration of det enumeration the nmod of element enumeration cop pair is case pair of compound pair type compound pair name compound pair class exception naming exception if a naming exception is encountered root ROOT exception compound exception exception compound exception naming mark encountered if det exception a amod exception naming nsubjpass encountered exception auxpass encountered is dep exception encountered override NN public NN naming VBG enumeration NN root ROOT naming dobj naming enumeration name NN class NN pair NN root ROOT pair compound pair name compound pair class list NN string NN name NN throws VBZ naming VBG exception NN root ROOT naming dobj naming exception return NN list NN new JJ composite JJ name NN root ROOT name amod name composite name NN enumerates list ANTONYM ANTONYM is naming ANTONYM ANTONYM name is ANTONYM ANTONYM name throws ANTONYM ANTONYM named is ANTONYM ANTONYM named throws ANTONYM ANTONYM names is ANTONYM ANTONYM names throws ANTONYM ANTONYM naming throws ANTONYM ANTONYM return throws ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,190
COMMENT retrieves the named object following links except for the terminal atomic component of the name if the object bound to name is not a link returns the object itself param name the name of the object to look up return the object bound to name not following the terminal link if any exception naming exception if a naming exception is encountered FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE object NAME object NAME lookup link PARAMETER LIST name name PARAMETER name name TYPE name NAME name NAME name THROWS throws naming exception ARGUMENT EXPR naming exception NAME naming exception BLOCK RETURN return lookup name false EXPR lookup name false CALL lookup name false NAME lookup ARGUMENT LIST ARGUMENT EXPR name NAME name ARGUMENT EXPR false retrieves the named object following links except for the terminal root ROOT retrieves det object the amod object named dobj retrieves object case links following nmod following retrieves links case terminal except mwe except for det terminal the nmod except for links terminal atomic component of the name if the object bound to name is not a root ROOT a amod component atomic nsubj a component case name of det name the nmod of component name mark bound if det object the nsubj bound object csubj a bound case name to nmod to bound name cop a is neg a not atomic component of the name if the object bound to name is not a root ROOT a amod component atomic nsubj a component case name of det name the nmod of component name mark bound if det object the nsubj bound object csubj a bound case name to nmod to bound name cop a is neg a not link returns the object itself root ROOT returns nsubj returns link det object the dobj returns object nmod npmod returns itself param name the name of the object to look up root ROOT name compound name param det name the dep name name case object of det object the nmod of name object mark look to acl to name look compound prt look up return the object bound to name not following the terminal link root ROOT return det object the nsubj bound object nsubj xsubj name object ccomp return bound mark name to xcomp bound name neg following not xcomp name following det link the amod link terminal dobj following link if any root ROOT any mark any if exception naming exception if a naming exception is encountered root ROOT exception compound exception exception compound exception naming mark encountered if det exception a amod exception naming nsubjpass encountered exception auxpass encountered is dep exception encountered override NN public NN object NN lookup NN link NN root ROOT link compound link lookup name NN name NN throws VBZ naming VBG exception NN root ROOT naming dobj naming exception return NN lookup NN name NN false JJ is naming ANTONYM ANTONYM look encountered ANTONYM ANTONYM name is ANTONYM ANTONYM name throws ANTONYM ANTONYM named is ANTONYM ANTONYM named throws ANTONYM ANTONYM naming throws ANTONYM ANTONYM retrieves encountered ANTONYM ANTONYM retrieves return ANTONYM ANTONYM retrieves returns ANTONYM ANTONYM return throws ANTONYM ANTONYM returns throws ANTONYM ANTONYM,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT return code true code if writing is allowed on this context FUNCTION SPECIFIER protected TYPE boolean NAME boolean NAME is writable PARAMETER LIST BLOCK RETURN return context access controller is writable name EXPR context access controller is writable name CALL context access controller is writable name NAME context access controller is writable NAME context access controller NAME is writable ARGUMENT LIST ARGUMENT EXPR name NAME name return code true code if writing is allowed on this context root ROOT code compound code return compound code code amod code true mark allowed if nsubjpass allowed writing auxpass allowed is dep code allowed case context on det context this nmod on allowed context protected VBN boolean NN is VBZ writable JJ root ROOT writable cop writable is return NN context NN access NN controller NN is VBZ writable JJ root ROOT writable compound controller context compound controller access nsubj writable controller cop writable is name NN is name ANTONYM ANTONYM,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT release the lock for the given mutex param mutex the mutex from which to release the lock return the operation status FUNCTION DECL public static native int unlock long mutex SPECIFIER public SPECIFIER static SPECIFIER native TYPE int NAME int NAME unlock PARAMETER LIST long mutex PARAMETER long mutex TYPE long NAME long NAME mutex release the lock for the given mutex root ROOT release det lock the dobj release lock case mutex for det mutex the amod mutex given nmod for release mutex param mutex the mutex from which to release the lock root ROOT mutex compound mutex param det mutex the dep mutex mutex nmod from release mutex case which from ref mutex which mark release to acl relcl mutex release det lock the dobj release lock return the operation status root ROOT return det status the compound status operation dobj return status public NN static JJ native JJ int NN unlock NN long RB mutex NN lock unlock ANTONYM ANTONYM release given ANTONYM ANTONYM,0,n/a,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT destroy the mutex and free the memory associated with the lock param mutex the mutex to destroy return the operation status FUNCTION DECL public static native int destroy long mutex SPECIFIER public SPECIFIER static SPECIFIER native TYPE int NAME int NAME destroy PARAMETER LIST long mutex PARAMETER long mutex TYPE long NAME long NAME mutex destroy the mutex and free the memory associated with the lock root ROOT destroy det mutex the dobj destroy mutex cc mutex and amod memory free det memory the dobj destroy memory conj and mutex memory acl mutex associated case lock with det lock the nmod with associated lock param mutex the mutex to destroy root ROOT mutex compound mutex param det mutex the dep mutex mutex mark destroy to acl to mutex destroy return the operation status root ROOT return det status the compound status operation dobj return status public NN static JJ native JJ int NN destroy VB long RB mutex NN lock free ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/util/net/SSLHostConfigCertificate.java,55
COMMENT display the name of the default mutex apr lock default return the default name FUNCTION DECL public static native string defname SPECIFIER public SPECIFIER static SPECIFIER native TYPE string NAME string NAME defname PARAMETER LIST display the name of the default mutex apr lock default root ROOT display det name the dobj display name case default of det default the compound default default compound default mutex compound default apr compound default lock nmod of name default return the default name root ROOT return det name the compound name default dobj return name public NN static JJ native JJ string NN defname NN,0,N/A,tomcat/test/org/apache/catalina/authenticator/TestSSOnonLoginAndBasicAuthenticator.java,669
DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME apr lock flock INIT EXPR public NN static JJ final JJ int NN apr NN lock NN flock NN root ROOT flock compound flock apr compound flock lock flock NN,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT flock DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME apr lock default INIT EXPR public NN static JJ final JJ int NN apr NN lock NN default NN root ROOT default compound default apr compound default lock use NN the DT default NN process NN lock NN,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/AbstractMessageNotationUml.java,1691
COMMENT use the default process lock COMMENT acquire the lock for the given mutex if the mutex is already locked the current thread will be put to sleep until the lock becomes available param mutex the mutex on which to acquire the lock return the operation status FUNCTION DECL public static native int lock long mutex SPECIFIER public SPECIFIER static SPECIFIER native TYPE int NAME int NAME lock PARAMETER LIST long mutex PARAMETER long mutex TYPE long NAME long NAME mutex acquire the lock for the given mutex if the mutex is already locked root ROOT acquire det lock the dobj acquire lock case mutex for det mutex the amod mutex given nmod for lock mutex mark locked if det mutex the nsubjpass locked mutex auxpass locked is advmod locked already advcl if acquire locked acquire the lock for the given mutex if the mutex is already locked root ROOT acquire det lock the dobj acquire lock case mutex for det mutex the amod mutex given nmod for lock mutex mark locked if det mutex the nsubjpass locked mutex auxpass locked is advmod locked already advcl if acquire locked the current thread will be put to sleep until the lock becomes available root ROOT put det thread the amod thread current nsubjpass put thread nsubj xsubj sleep thread aux put will auxpass put be mark sleep to xcomp put sleep mark becomes until det lock the nsubj becomes lock advcl until sleep becomes xcomp becomes available param mutex the mutex on which to acquire the lock root ROOT mutex compound mutex param det mutex the dep mutex mutex nmod on acquire mutex case which on ref mutex which mark acquire to acl relcl mutex acquire det lock the dobj acquire lock return the operation status root ROOT return det status the compound status operation dobj return status public NN static JJ native JJ int NN lock NN long RB mutex NN acquire becomes ANTONYM ANTONYM given acquire ANTONYM ANTONYM given put ANTONYM ANTONYM given will ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,57
COMMENT determine if pool a is an ancestor of pool b param a the pool to search param b the pool to search for return true if a is an ancestor of b null is considered an ancestor of all pools FUNCTION DECL public static native boolean is ancestor long a long b SPECIFIER public SPECIFIER static SPECIFIER native TYPE boolean NAME boolean NAME is ancestor PARAMETER LIST long a long b PARAMETER long a TYPE long NAME long NAME a PARAMETER long b TYPE long NAME long NAME b determine if pool a is an ancestor of pool b root ROOT determine mark ancestor if compound a pool nsubj ancestor a cop ancestor is det ancestor an advcl if determine ancestor case b of compound b pool nmod of ancestor b param a the pool to search root ROOT param det pool a det pool the dobj param pool mark search to acl to pool search param b the pool to search for root ROOT b compound b param det pool the dep b pool mark search to acl to pool search nmod search for return true if a is an ancestor of b null is considered an ancestor root ROOT considered nsubjpass considered return amod return true mark ancestor if nsubj ancestor a cop ancestor is det ancestor an advcl if true ancestor case null of compound null b nmod of ancestor null auxpass considered is det ancestor an xcomp considered ancestor of all pools root ROOT pools case pools of det pools all public NN static JJ native JJ boolean NN is VBZ ancestor NN root ROOT ancestor cop ancestor is long RB a DT long RB b NN determine considered ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/jni/SSL.java,111
COMMENT clear all memory in the pool and run all the cleanups this also destroys all subpools param pool the pool to clear this does not actually free the memory it just allows the pool to re use this memory for the next allocation FUNCTION DECL public static native void clear long pool SPECIFIER public SPECIFIER static SPECIFIER native TYPE void NAME void NAME clear PARAMETER LIST long pool PARAMETER long pool TYPE long NAME long NAME pool clear all memory in the pool and run all the cleanups this also destroys all root ROOT clear det memory all dobj clear memory case pool in det pool the nmod in memory pool cc clear and conj and clear run det predet cleanups all det cleanups the dobj run cleanups nsubj destroys this advmod destroys also acl relcl cleanups destroys dep clear all clear all memory in the pool and run all the cleanups this also destroys all root ROOT clear det memory all dobj clear memory case pool in det pool the nmod in memory pool cc clear and conj and clear run det predet cleanups all det cleanups the dobj run cleanups nsubj destroys this advmod destroys also acl relcl cleanups destroys dep clear all subpools param pool the pool to clear root ROOT pool compound pool param det pool the dep pool pool case clear to nmod to pool clear this does not actually free the memory it just allows the pool root ROOT free nsubj free this aux free does neg free not advmod free actually det memory the dobj free memory nsubj allows it advmod allows just acl relcl memory allows det pool the dobj allows pool to re use this memory for the next allocation root ROOT re mark re to dobj re use det memory this dobj use memory case allocation for det allocation the amod allocation next nmod for use allocation public NN static JJ native JJ void NN clear JJ long RB pool NN clear does ANTONYM ANTONYM clear free ANTONYM ANTONYM clear just ANTONYM ANTONYM clear run ANTONYM ANTONYM does use ANTONYM ANTONYM free allows ANTONYM ANTONYM free use ANTONYM ANTONYM public clear ANTONYM ANTONYM run does ANTONYM ANTONYM clear native SYNONYM SYNONYM in next SYNONYM SYNONYM,0,N/A,tomcat/java/org/apache/catalina/tribes/ByteMessage.java,65
COMMENT create a new pool param parent the parent pool if this is the new pool is a root pool if it is non zero the new pool will inherit all of its parent pool s attributes except the apr pool t will be a sub pool return the pool we have just created FUNCTION DECL public static native long create long parent SPECIFIER public SPECIFIER static SPECIFIER native TYPE long NAME long NAME create PARAMETER LIST long parent PARAMETER long parent TYPE long NAME long NAME parent create a new pool root ROOT create det pool a amod pool new dobj create pool param parent the parent pool if this is the new pool is a root root ROOT root compound parent param nsubj root parent det pool the compound pool parent dep parent pool mark pool if nsubj pool this cop pool is det pool the amod pool new csubj root pool cop root is det root a param parent the parent pool if this is the new pool is a root root ROOT root compound parent param nsubj root parent det pool the compound pool parent dep parent pool mark pool if nsubj pool this cop pool is det pool the amod pool new csubj root pool cop root is det root a pool if it is non zero the new pool will inherit all root ROOT inherit nsubj inherit pool mark non if nsubj non it cop non is advcl if pool non nummod pool zero det pool the amod pool new dobj non pool aux inherit will dobj inherit all pool if it is non zero the new pool will inherit all root ROOT inherit nsubj inherit pool mark non if nsubj non it cop non is advcl if pool non nummod pool zero det pool the amod pool new dobj non pool aux inherit will dobj inherit all of its parent pool s attributes except the apr pool t will root ROOT s case s of nmod poss s its compound s parent compound s pool acl s attributes case t except det t the compound t apr compound t pool nmod except attributes t dep s will be a sub pool root ROOT pool cop pool be det pool a compound pool sub return the pool we have just created root ROOT created dep created return det pool the dobj return pool nsubj created we aux created have advmod created just public NN static JJ native JJ long RB create VB long RB parent NN create have ANTONYM ANTONYM have created ANTONYM ANTONYM just new ANTONYM ANTONYM return have ANTONYM ANTONYM zero all ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/coyote/http2/Hpack.java,146
COMMENT set the associated adapter param adapter the new adapter FUNCTION SPECIFIER public TYPE void NAME void NAME set adapter PARAMETER LIST adapter adapter PARAMETER adapter adapter TYPE adapter NAME adapter NAME adapter BLOCK EXPR this adapter adapter NAME this adapter NAME this NAME adapter NAME adapter set the associated adapter root ROOT set det adapter the amod adapter associated dobj set adapter param adapter the new adapter root ROOT adapter compound adapter param det adapter the amod adapter new dep adapter adapter public NN void NN set VBN adapter NN root ROOT set dobj set adapter adapter NN adapter NN this DT adapter NN adapter NN,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT update the current error state to the new error state if the new error state is more severe than the current error state param error state the error status details param t the error which occurred FUNCTION SPECIFIER protected TYPE void NAME void NAME set error state PARAMETER LIST error state error state throwable t PARAMETER error state error state TYPE error state NAME error state NAME error state PARAMETER throwable t TYPE throwable NAME throwable NAME t BLOCK DECL STMT TYPE boolean NAME boolean NAME block io INIT this error state is io allowed error state is io allowed EXPR this error state is io allowed error state is io allowed CALL this error state is io allowed NAME this error state is io allowed NAME this NAME error state NAME is io allowed ARGUMENT LIST CALL error state is io allowed NAME error state is io allowed NAME error state NAME is io allowed ARGUMENT LIST EXPR this error state this error state get most severe error state NAME this error state NAME this NAME error state CALL this error state get most severe error state NAME this error state get most severe NAME this NAME error state NAME get most severe ARGUMENT LIST ARGUMENT EXPR error state NAME error state IF if block io container thread marker is container thread is async the error occurred on a non container thread during async processing which means not all of the necessary clean up will have been completed dispatch to a container thread to do the clean up need to do it this way to ensure that all the necessary clean up is performed if response get status response set status get log info sm get string abstract processor non container thread error t set the request attribute so that the async on error event is fired when the error event is processed request set attribute request dispatcher error exception t socket wrapper process socket socket event error true CONDITION block io container thread marker is container thread is async EXPR block io container thread marker is container thread is async NAME block io CALL container thread marker is container thread NAME container thread marker is container thread NAME container thread marker NAME is container thread ARGUMENT LIST CALL is async NAME is async ARGUMENT LIST THEN the error occurred on a non container thread during async processing which means not all of the necessary clean up will have been completed dispatch to a container thread to do the clean up need to do it this way to ensure that all the necessary clean up is performed if response get status response set status get log info sm get string abstract processor non container thread error t set the request attribute so that the async on error event is fired when the error event is processed request set attribute request dispatcher error exception t socket wrapper process socket socket event error true BLOCK COMMENT the error occurred on a non container thread during async COMMENT processing which means not all of the necessary clean up will COMMENT have been completed dispatch to a container thread to do the COMMENT clean up need to do it this way to ensure that all the necessary COMMENT clean up is performed IF if response get status response set status CONDITION response get status EXPR response get status CALL response get status NAME response get status NAME response NAME get status ARGUMENT LIST THEN response set status BLOCK EXPR response set status CALL response set status NAME response set status NAME response NAME set status ARGUMENT LIST ARGUMENT EXPR EXPR get log info sm get string abstract processor non container thread error t CALL get log NAME get log ARGUMENT LIST CALL info sm get string abstract processor non container thread error t NAME info ARGUMENT LIST ARGUMENT EXPR sm get string abstract processor non container thread error CALL sm get string abstract processor non container thread error NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR abstract processor non container thread error ARGUMENT EXPR t NAME t COMMENT set the request attribute so that the async on error event is COMMENT fired when the error event is processed EXPR request set attribute request dispatcher error exception t CALL request set attribute request dispatcher error exception t NAME request set attribute NAME request NAME set attribute ARGUMENT LIST ARGUMENT EXPR request dispatcher error exception NAME request dispatcher error exception NAME request dispatcher NAME error exception ARGUMENT EXPR t NAME t EXPR socket wrapper process socket socket event error true CALL socket wrapper process socket socket event error true NAME socket wrapper process socket NAME socket wrapper NAME process socket ARGUMENT LIST ARGUMENT EXPR socket event error NAME socket event error NAME socket event NAME error ARGUMENT EXPR true update the current error state to the new error state if the new error root ROOT update det state the amod state current compound state error dobj update state case state to det state the amod state new compound state error nmod to update state dep update if det error the amod error new dep if error state is more severe than the current error state root ROOT severe nsubj severe state cop severe is advmod severe more case state than det state the amod state current compound state error nmod than severe state param error state the error status details root ROOT state compound state param compound state error det details the compound details error compound details status dep state details param t the error which occurred root ROOT t compound t param det error the dep t error nsubj occurred error ref error which acl relcl error occurred protected VBN void NN set VBN error NN state NN root ROOT set compound state error dobj set state error NN state NN root ROOT state compound state error error NN state NN root ROOT state compound state error throwable JJ t NN boolean NN block NN io NN root ROOT io compound io block this DT error NN state NN is VBZ io NN allowed VBN error NN state NN is VBZ io NN allowed VBN root ROOT io compound state error nsubj io state cop io is acl io allowed this DT error NN state NN this DT error NN state NN get VB most RBS severe JJ error NN state NN root ROOT state compound state error if IN block NN io NN root ROOT io compound io block container NN thread NN marker NN is VBZ container NN thread NN root ROOT thread compound marker container compound marker thread nsubj thread marker cop thread is compound thread container is VBZ async NN root ROOT async cop async is the error occurred on a non container thread during async root ROOT occurred det error the nsubj occurred error case thread on det thread a amod thread non compound thread container nmod on occurred thread case async during nmod during occurred async processing which means not all of the necessary clean up will root ROOT processing nsubj means processing ref processing which acl relcl processing means neg all not xcomp means all case clean of det clean the amod clean necessary nmod of all clean advmod all up dep processing will have been completed dispatch to a container thread to do the root ROOT completed aux completed have auxpass completed been dobj completed dispatch case thread to det thread a compound thread container nmod to dispatch thread mark do to acl to thread do dobj do the have been completed dispatch to a container thread to do the root ROOT completed aux completed have auxpass completed been dobj completed dispatch case thread to det thread a compound thread container nmod to dispatch thread mark do to acl to thread do dobj do the clean up need to do it this way to ensure that all the necessary root ROOT clean case need up nmod up clean need mark do to acl to need do dobj do it det way this dobj do way mark ensure to acl to way ensure nsubj necessary that det predet necessary all det necessary the ccomp ensure necessary clean up need to do it this way to ensure that all the necessary root ROOT clean case need up nmod up clean need mark do to acl to need do dobj do it det way this dobj do way mark ensure to acl to way ensure nsubj necessary that det predet necessary all det necessary the ccomp ensure necessary clean up is performed root ROOT performed nsubjpass performed clean compound prt clean up auxpass performed is if IN response NN get VB status NN root ROOT response acl response get dobj get status response NN set VBD status NN root ROOT set nsubj set response dobj set status get VB log NN root ROOT get dobj get log info NN sm NN get VB string NN root ROOT get nsubj get sm dobj get string abstract JJ processor NN non JJ container NN thread NN error NN root ROOT error amod error abstract compound error processor amod error non compound error container compound error thread t NN set the request attribute so that the async on error event is root ROOT set det attribute the compound attribute request dobj set attribute mark is so mwe so that det async the nsubj is async case event on compound event error nmod on async event advcl so that set is fired when the error event is processed root ROOT fired advmod processed when det event the compound event error nsubjpass processed event auxpass processed is advcl fired processed request NN set VBD attribute NN root ROOT set nsubj set request dobj set attribute request NN dispatcher NN error NN root ROOT error compound error request compound error dispatcher exception NN t NN socket NN wrapper NN process NN socket NN root ROOT socket compound socket socket compound socket wrapper compound socket process socket NN event NN error NN root ROOT error compound error socket compound error event true JJ completed do ANTONYM ANTONYM completed fired ANTONYM ANTONYM dispatch fired ANTONYM ANTONYM do processed ANTONYM ANTONYM have do ANTONYM ANTONYM have need ANTONYM ANTONYM need request ANTONYM ANTONYM new clean ANTONYM ANTONYM occurred do ANTONYM ANTONYM performed set ANTONYM ANTONYM processing do ANTONYM ANTONYM set severe ANTONYM ANTONYM up set ANTONYM ANTONYM all clean SYNONYM SYNONYM all completed SYNONYM SYNONYM clean completed SYNONYM SYNONYM up processed SYNONYM SYNONYM void clean SYNONYM SYNONYM,0,N/A,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,57
CONSTRUCTOR public abstract processor abstract endpoint endpoint this endpoint new request new response SPECIFIER public NAME abstract processor PARAMETER LIST abstract endpoint endpoint PARAMETER abstract endpoint endpoint TYPE abstract endpoint NAME abstract endpoint NAME abstract endpoint ARGUMENT LIST ARGUMENT NAME NAME endpoint BLOCK EXPR this endpoint new request new response CALL this endpoint new request new response NAME this ARGUMENT LIST ARGUMENT EXPR endpoint NAME endpoint ARGUMENT EXPR new request CALL request NAME request ARGUMENT LIST ARGUMENT EXPR new response CALL response NAME response ARGUMENT LIST public NN abstract JJ processor NN root ROOT processor amod processor abstract abstract JJ endpoint NN root ROOT endpoint amod endpoint abstract endpoint NN this DT endpoint NN new JJ request NN new JJ response NN,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
COMMENT error state for the request response currently being processed DECL STMT SPECIFIER private TYPE error state NAME error state NAME error state INIT error state none EXPR error state none NAME error state none NAME error state NAME none error state for the request response currently being processed root ROOT processed compound state error nsubjpass processed state case response for det response the compound response request nmod for state response advmod processed currently auxpass processed being private JJ error NN state NN root ROOT state compound state error error NN state NN root ROOT state compound state error error NN state NN none NN root ROOT none compound none error compound none state,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,190
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE boolean NAME boolean NAME is async PARAMETER LIST BLOCK RETURN return async state machine is async EXPR async state machine is async CALL async state machine is async NAME async state machine is async NAME async state machine NAME is async ARGUMENT LIST override NN public NN boolean NN is VBZ async NN root ROOT async cop async is return NN async JJ state NN machine NN is VBZ async NN root ROOT async amod machine async compound machine state nsubj async machine cop async is,0,N/A,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,768
COMMENT return the executor used by the underlying endpoint FUNCTION SPECIFIER protected TYPE executor NAME executor NAME get executor PARAMETER LIST BLOCK RETURN return endpoint get executor EXPR endpoint get executor CALL endpoint get executor NAME endpoint get executor NAME endpoint NAME get executor ARGUMENT LIST return the executor used by the underlying endpoint root ROOT return det executor the dobj return executor acl executor used case endpoint by det endpoint the amod endpoint underlying nmod by used endpoint protected VBN executor NN get VB executor NN root ROOT get dobj get executor return NN endpoint NN get VB executor NN root ROOT get nsubj get endpoint dobj get executor,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
CONSTRUCTOR private abstract processor abstract endpoint endpoint request coyote request response coyote response this endpoint endpoint async state machine new async state machine this request coyote request response coyote response response set hook this request set response response request set hook this SPECIFIER private NAME abstract processor PARAMETER LIST abstract endpoint endpoint request coyote request response coyote response PARAMETER abstract endpoint endpoint TYPE abstract endpoint NAME abstract endpoint NAME abstract endpoint ARGUMENT LIST ARGUMENT NAME NAME endpoint PARAMETER request coyote request TYPE request NAME request NAME coyote request PARAMETER response coyote response TYPE response NAME response NAME coyote response BLOCK EXPR this endpoint endpoint NAME this endpoint NAME this NAME endpoint NAME endpoint EXPR async state machine new async state machine this NAME async state machine CALL async state machine this NAME async state machine ARGUMENT LIST ARGUMENT EXPR this NAME this EXPR request coyote request NAME request NAME coyote request EXPR response coyote response NAME response NAME coyote response EXPR response set hook this CALL response set hook this NAME response set hook NAME response NAME set hook ARGUMENT LIST ARGUMENT EXPR this NAME this EXPR request set response response CALL request set response response NAME request set response NAME request NAME set response ARGUMENT LIST ARGUMENT EXPR response NAME response EXPR request set hook this CALL request set hook this NAME request set hook NAME request NAME set hook ARGUMENT LIST ARGUMENT EXPR this NAME this private JJ abstract JJ processor NN root ROOT processor amod processor abstract abstract JJ endpoint NN root ROOT endpoint amod endpoint abstract endpoint NN request NN coyote NN request NN root ROOT request compound request coyote response NN coyote NN response NN root ROOT response compound response coyote this DT endpoint NN endpoint NN async JJ state NN machine NN root ROOT machine amod machine async compound machine state new JJ async JJ state NN machine NN root ROOT machine amod machine async compound machine state this DT request NN coyote NN request NN root ROOT request compound request coyote response NN coyote NN response NN root ROOT response compound response coyote response NN set VBD hook NN root ROOT set nsubj set response dobj set hook this DT request NN set NN response NN root ROOT response compound response request compound response set response NN request NN set VBD hook NN root ROOT set nsubj set request dobj set hook this DT,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
FUNCTION SPECIFIER public TYPE void NAME void NAME action PARAMETER LIST action code action code object param PARAMETER action code action code TYPE action code NAME action code NAME action code PARAMETER object param TYPE object NAME object NAME param BLOCK IF if hook null if param null hook action action code this else hook action action code param CONDITION hook null EXPR hook null NAME hook THEN if param null hook action action code this else hook action action code param BLOCK IF if param null hook action action code this else hook action action code param CONDITION param null EXPR param null NAME param THEN hook action action code this BLOCK EXPR hook action action code this CALL hook action action code this NAME hook action NAME hook NAME action ARGUMENT LIST ARGUMENT EXPR action code NAME action code ARGUMENT EXPR this NAME this ELSE else hook action action code param BLOCK EXPR hook action action code param CALL hook action action code param NAME hook action NAME hook NAME action ARGUMENT LIST ARGUMENT EXPR action code NAME action code ARGUMENT EXPR param NAME param public NN void NN action NN action NN code NN root ROOT code compound code action action NN code NN root ROOT code compound code action object NN param NN if IN hook NN null JJ if IN param NN null JJ hook NN action NN root ROOT action compound action hook action NN code NN root ROOT code compound code action this DT else RB hook NN action NN root ROOT action compound action hook action NN code NN root ROOT code compound code action param NN,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE response NAME response NAME get response PARAMETER LIST BLOCK RETURN return response EXPR response NAME response public NN response NN get VB response NN root ROOT get dobj get response return NN response NN,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE message bytes NAME message bytes NAME content type PARAMETER LIST BLOCK IF if content type mb null content type mb headers get value content type CONDITION content type mb null EXPR content type mb null NAME content type mb THEN content type mb headers get value content type BLOCK EXPR content type mb headers get value content type NAME content type mb CALL headers get value content type NAME headers get value NAME headers NAME get value ARGUMENT LIST ARGUMENT EXPR content type RETURN return content type mb EXPR content type mb NAME content type mb public NN message NN bytes NNS root ROOT bytes compound bytes message content JJ type NN root ROOT type amod type content if IN content JJ type NN mb NN root ROOT mb amod mb content compound mb type null JJ content JJ type NN mb NN root ROOT mb amod mb content compound mb type headers NNS get VBP value NN root ROOT get nsubj get headers dobj get value content JJ type NN root ROOT type amod type content return NN content JJ type NN mb NN root ROOT mb amod mb content compound mb type,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE message bytes NAME message bytes NAME remote addr PARAMETER LIST BLOCK RETURN return remote addr mb EXPR remote addr mb NAME remote addr mb public NN message NN bytes NNS root ROOT bytes compound bytes message remote JJ addr NN root ROOT addr amod addr remote return NN remote JJ addr NN mb NN root ROOT mb amod mb remote compound mb addr,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE void NAME void NAME set read listener PARAMETER LIST read listener listener PARAMETER read listener listener TYPE read listener NAME read listener NAME listener BLOCK IF if listener null throw new null pointer exception sm get string request null read listener CONDITION listener null EXPR listener null NAME listener THEN throw new null pointer exception sm get string request null read listener BLOCK THROW throw new null pointer exception sm get string request null read listener EXPR new null pointer exception sm get string request null read listener CALL null pointer exception sm get string request null read listener NAME null pointer exception ARGUMENT LIST ARGUMENT EXPR sm get string request null read listener CALL sm get string request null read listener NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR request null read listener IF if get read listener null throw new illegal state exception sm get string request read listener set CONDITION get read listener null EXPR get read listener null CALL get read listener NAME get read listener ARGUMENT LIST THEN throw new illegal state exception sm get string request read listener set BLOCK THROW throw new illegal state exception sm get string request read listener set EXPR new illegal state exception sm get string request read listener set CALL illegal state exception sm get string request read listener set NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR sm get string request read listener set CALL sm get string request read listener set NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR request read listener set COMMENT note this class is not used for http upgrade so only need to test COMMENT for async DECL STMT TYPE atomic boolean NAME atomic boolean NAME result INIT new atomic boolean false EXPR new atomic boolean false CALL atomic boolean false NAME atomic boolean ARGUMENT LIST ARGUMENT EXPR false EXPR action action code async is async result CALL action action code async is async result NAME action ARGUMENT LIST ARGUMENT EXPR action code async is async NAME action code async is async NAME action code NAME async is async ARGUMENT EXPR result NAME result IF if result get throw new illegal state exception sm get string request not async CONDITION result get EXPR result get CALL result get NAME result get NAME result NAME get ARGUMENT LIST THEN throw new illegal state exception sm get string request not async BLOCK THROW throw new illegal state exception sm get string request not async EXPR new illegal state exception sm get string request not async CALL illegal state exception sm get string request not async NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR sm get string request not async CALL sm get string request not async NAME sm get string NAME sm NAME get string ARGUMENT LIST ARGUMENT EXPR request not async EXPR this listener listener NAME this listener NAME this NAME listener NAME listener public NN void NN set VBN read NN listener NN root ROOT set compound listener read dobj set listener read VB listener NN root ROOT read dobj read listener listener NN if IN listener NN null JJ throw VB new JJ null JJ pointer NN exception NN root ROOT exception amod exception null compound exception pointer sm NN get VB string NN root ROOT get nsubj get sm dobj get string request NN null JJ read NN listener NN root ROOT listener compound listener request amod listener null compound listener read if IN get VB read VB listener NN root ROOT read aux read get dobj read listener null JJ throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state sm NN get VB string NN root ROOT get nsubj get sm dobj get string request NN read VBD listener NN set NN root ROOT read nsubj read request compound set listener dobj read set note this class is not used for http upgrade so only need to test root ROOT note det class this nsubjpass used class auxpass used is neg used not acl relcl note used case upgrade for amod upgrade http nmod for used upgrade advmod need so advmod need only dep used need mark test to xcomp need test for async root ROOT async case async for atomic JJ boolean NN root ROOT boolean amod boolean atomic result NN new JJ atomic JJ boolean NN root ROOT boolean amod boolean atomic false JJ action NN action NN code NN async NN root ROOT async compound async action compound async code is VBZ async NN root ROOT async cop async is result NN if IN result NN get VB root ROOT get nsubj get result throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state sm NN get VB string NN root ROOT get nsubj get sm dobj get string request NN not RB async IN root ROOT request neg async not dep request async this DT listener NN listener NN get result ANTONYM ANTONYM need get ANTONYM ANTONYM new used ANTONYM ANTONYM request need ANTONYM ANTONYM throw get ANTONYM ANTONYM null false SYNONYM SYNONYM void false SYNONYM SYNONYM,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT is there an expectation DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME expectation INIT false EXPR false is there an expectation root ROOT is expl is there det expectation an nsubj is expectation private JJ boolean NN expectation NN false JJ,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT http specific fields remove them DECL STMT SPECIFIER private TYPE long NAME long NAME content length INIT EXPR http specific fields remove them root ROOT remove compound fields http amod fields specific nsubj remove fields dobj remove them http specific fields remove them root ROOT remove compound fields http amod fields specific nsubj remove fields dobj remove them private JJ long RB content JJ length NN root ROOT length amod length content,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT url decoder DECL STMT SPECIFIER private TYPE final u decoder SPECIFIER final NAME u decoder NAME url decoder INIT new u decoder EXPR new u decoder CALL u decoder NAME u decoder ARGUMENT LIST url decoder root ROOT decoder compound decoder url private JJ final JJ u NN decoder NN root ROOT decoder compound decoder u url NN decoder NN root ROOT decoder compound decoder url new JJ u NN decoder NN root ROOT decoder compound decoder u,0,N/A,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,57
COMMENT path parameters DECL STMT SPECIFIER private TYPE final map string string SPECIFIER final NAME map string string NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME string NAME path parameters INIT new hash map EXPR new hash map CALL hash map NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST path parameters root ROOT parameters compound parameters path private JJ final JJ map NN string NN string NN path NN parameters NNS root ROOT parameters compound parameters path new JJ hash VB map NN root ROOT hash dobj hash map,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/state/ui/FigStateVertex.java,169
FUNCTION SPECIFIER public TYPE selection NAME selection NAME make selection PARAMETER LIST BLOCK RETURN return new selection classifier role this EXPR new selection classifier role this CALL selection classifier role this NAME selection classifier role ARGUMENT LIST ARGUMENT EXPR this NAME this public NN selection NN make VB selection NN root ROOT make dobj make selection return NN new JJ selection NN classifier NN role NN root ROOT role compound role selection compound role classifier this DT,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT see javax management notification broadcaster get notification info FUNCTION SPECIFIER public TYPE m bean notification info NAME m bean notification info NAME m bean notification info INDEX NAME get notification info PARAMETER LIST BLOCK RETURN return notifier get notification info EXPR notifier get notification info CALL notifier get notification info NAME notifier get notification info NAME notifier NAME get notification info ARGUMENT LIST see javax management notification broadcaster get notification info root ROOT see compound broadcaster javax compound broadcaster management compound broadcaster notification nsubj get broadcaster ccomp see get compound info notification dobj get info public NN m NN bean NN notification NN info NN root ROOT info compound info m compound info bean compound info notification get VB notification NN info NN root ROOT get compound info notification dobj get info return NN notifier NN get VB notification NN info NN root ROOT get nsubj get notifier compound info notification dobj get info,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/gefext/ArgoFigInk.java,101
COMMENT decision type methods DECL STMT SPECIFIER public SPECIFIER static TYPE final uml decision SPECIFIER final NAME uml decision NAME methods INIT new uml decision misc decision methods EXPR new uml decision misc decision methods CALL uml decision misc decision methods NAME uml decision ARGUMENT LIST ARGUMENT EXPR misc decision methods ARGUMENT EXPR decision type methods root ROOT methods compound methods decision compound methods type public NN static JJ final JJ uml NN decision NN root ROOT decision compound decision uml methods NNS new JJ uml NN decision NN root ROOT decision compound decision uml misc NN decision NN methods NNS root ROOT methods compound methods misc compound methods decision,1,E1,tomcat/java/org/apache/catalina/tribes/group/interceptors/OrderInterceptor.java,58
COMMENT return map of mof id to xmi reference system id xmi id return the map FUNCTION TYPE map string xmi reference NAME map string xmi reference NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME xmi reference NAME get object to id PARAMETER LIST BLOCK RETURN return object to id EXPR object to id NAME object to id return map of mof id to xmi reference system id xmi id root ROOT id compound map return nsubj id map case id of compound id mof nmod of map id mark xmi to acl to map xmi compound system reference dobj xmi system compound id xmi dobj id id return the map root ROOT return det map the dobj return map map NN string NN xmi NN reference NN root ROOT reference compound reference xmi get VB object VB to TO id VB root ROOT object aux object get mark id to xcomp object id return NN object NN to TO id NN root ROOT object case id to nmod to object id,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
DECL STMT SPECIFIER private TYPE map NAME map NAME m ary private JJ map NN m NN ary IN root ROOT m dep m ary,1,D1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT only classes with name need a constructor DECL STMT SPECIFIER private SPECIFIER static TYPE compound critic NAME compound critic NAME no trans INIT new compound critic cr no transitions cr no outgoing transitions EXPR new compound critic cr no transitions cr no outgoing transitions CALL compound critic cr no transitions cr no outgoing transitions NAME compound critic ARGUMENT LIST ARGUMENT EXPR cr no transitions NAME cr no transitions ARGUMENT EXPR cr no outgoing transitions NAME cr no outgoing transitions only classes with name need a constructor root ROOT need advmod classes only nsubj need classes case name with nmod with classes name det constructor a dobj need constructor private JJ static JJ compound NN critic NN root ROOT critic compound critic compound no DT trans NN root ROOT trans neg trans no new JJ compound NN critic NN root ROOT critic compound critic compound cr NN no DT transitions NNS root ROOT transitions compound transitions cr neg transitions no cr NN no DT outgoing JJ transitions NNS root ROOT transitions compound transitions cr neg transitions no amod transitions outgoing,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/state/ui/FigStateVertex.java,169
COMMENT removes the specified component from the layout this is included to satisfy the layout manager interface but is not actually used in this layout implementation param comp the component FUNCTION SPECIFIER public TYPE void NAME void NAME remove layout component PARAMETER LIST component comp PARAMETER component comp TYPE component NAME component NAME comp BLOCK removes the specified component from root ROOT removes det component the amod component specified dobj removes component dep removes from the layout this is included to satisfy the layout manager root ROOT layout det layout the nsubjpass included this nsubj xsubj satisfy this auxpass included is acl relcl layout included mark satisfy to xcomp included satisfy det manager the compound manager layout dobj satisfy manager the layout this is included to satisfy the layout manager root ROOT layout det layout the nsubjpass included this nsubj xsubj satisfy this auxpass included is acl relcl layout included mark satisfy to xcomp included satisfy det manager the compound manager layout dobj satisfy manager interface but is not actually used in this layout root ROOT interface cc interface but auxpass used is neg used not advmod used actually conj but interface used case layout in det layout this nmod in used layout implementation param comp the component root ROOT comp nsubj comp param det component the dobj comp component public NN void NN remove VB layout NN component NN root ROOT remove compound component layout dobj remove component component NN comp NN included removes ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/ui/LabelledLayout.java,170
DECL STMT SPECIFIER private TYPE j text area NAME j text area NAME instructions INIT new j text area EXPR new j text area CALL j text area NAME j text area ARGUMENT LIST private JJ j NN text NN area NN root ROOT area compound area j compound area text instructions NNS new JJ j NN text NN area NN root ROOT area compound area j compound area text,1,E1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER private SPECIFIER static TYPE icon NAME icon NAME compos INIT resource loader wrapper lookup icon resource composite aggregation EXPR resource loader wrapper lookup icon resource composite aggregation CALL resource loader wrapper lookup icon resource composite aggregation NAME resource loader wrapper lookup icon resource NAME resource loader wrapper NAME lookup icon resource ARGUMENT LIST ARGUMENT EXPR composite aggregation private JJ static JJ icon NN compos NNS resource NN loader NN wrapper NN lookup NN icon NN resource NN root ROOT resource compound resource resource compound resource loader compound resource wrapper compound resource lookup compound resource icon composite JJ aggregation NN root ROOT aggregation amod aggregation composite,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/static_structure/ui/SelectionClass.java,69
DECL STMT SPECIFIER private TYPE string NAME string NAME instructions INIT translator localize critics wiz add instance variable ins EXPR translator localize critics wiz add instance variable ins CALL translator localize critics wiz add instance variable ins NAME translator localize NAME translator NAME localize ARGUMENT LIST ARGUMENT EXPR critics wiz add instance variable ins private JJ string NN instructions NNS translator NN localize VBP root ROOT localize nsubj localize translator critics NNS wiz VBP add VB instance NN variable JJ ins NNS root ROOT wiz nsubj wiz critics ccomp wiz add compound ins instance amod ins variable dobj add ins,1,E1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE string NAME string NAME get instructions PARAMETER LIST int index PARAMETER int index TYPE int NAME int NAME index BLOCK RETURN return instructions index base EXPR instructions index base NAME instructions index base NAME instructions INDEX index base EXPR index base NAME index NAME base override NN protected VBN string NN get VB instructions NNS root ROOT get dobj get instructions int NN index NN return NN instructions NNS index NN base NN,1,B6,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/SelectionNode.java,88
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE set critic NAME set critic NAME set ARGUMENT LIST ARGUMENT NAME critic NAME get critics PARAMETER LIST BLOCK IF if critics null load critics CONDITION critics null EXPR critics null NAME critics THEN load critics BLOCK EXPR load critics CALL load critics NAME load critics ARGUMENT LIST RETURN return super get critics EXPR super get critics CALL super get critics NAME super get critics NAME super NAME get critics ARGUMENT LIST override NN public NN set NN critic NN get VB critics NNS root ROOT get dobj get critics if IN critics NNS null JJ load NN critics NNS root ROOT critics compound critics load return NN super JJ get VB critics NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/cognitive/critics/ProfileCodeGeneration.java,147
FUNCTION ANNOTATION override NAME override SPECIFIER protected TYPE string NAME string NAME get instructions PARAMETER LIST int index PARAMETER int index TYPE int NAME int NAME index BLOCK RETURN return instructions index base EXPR instructions index base NAME instructions index base NAME instructions INDEX index base EXPR index base NAME index NAME base override NN protected VBN string NN get VB instructions NNS root ROOT get dobj get instructions int NN index NN return NN instructions NNS index NN base NN,1,B6,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/deployment/ui/SelectionNode.java,88
COMMENT return returns the instructions FUNCTION SPECIFIER protected TYPE string NAME string NAME get instructions PARAMETER LIST BLOCK RETURN return instructions EXPR instructions NAME instructions return returns the instructions root ROOT returns nsubj returns return det instructions the dobj returns instructions protected VBN string NN get VB instructions NNS root ROOT get dobj get instructions return NN instructions NNS,1,B6,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
DECL STMT SPECIFIER private TYPE string NAME string NAME instructions INIT translator localize critics wiz break circular comp ins EXPR translator localize critics wiz break circular comp ins CALL translator localize critics wiz break circular comp ins NAME translator localize NAME translator NAME localize ARGUMENT LIST ARGUMENT EXPR critics wiz break circular comp ins private JJ string NN instructions NNS translator NN localize VBP root ROOT localize nsubj localize translator critics NNS wiz VBP break NN circular JJ comp NN ins NNS root ROOT wiz nsubj wiz critics compound ins break amod ins circular compound ins comp dobj wiz ins,1,E1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/cognitive/critics/WizBreakCircularComp.java,67
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE set critic NAME set critic NAME set ARGUMENT LIST ARGUMENT NAME critic NAME get critics PARAMETER LIST BLOCK IF if critics null load well formedness rules CONDITION critics null EXPR critics null NAME critics THEN load well formedness rules BLOCK EXPR load well formedness rules CALL load well formedness rules NAME load well formedness rules ARGUMENT LIST RETURN return super get critics EXPR super get critics CALL super get critics NAME super get critics NAME super NAME get critics ARGUMENT LIST override NN public NN set NN critic NN get VB critics NNS root ROOT get dobj get critics if IN critics NNS null JJ load NN well RB formedness JJ rules NNS root ROOT rules compound rules load advmod formedness well amod rules formedness return NN super JJ get VB critics NNS,1,A1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE map NAME map NAME get object model PARAMETER LIST BLOCK RETURN return objectmodel EXPR objectmodel NAME objectmodel public NN map NN get VB object VB model NN root ROOT get xcomp get object dobj object model return NN objectmodel NN,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT the current code map code object model DECL STMT SPECIFIER protected TYPE map NAME map NAME object model the current code map code object model root ROOT model det model the amod model current compound model code compound model map compound model code compound model object the current code map code object model root ROOT model det model the amod model current compound model code compound model map compound model code compound model object protected VBN map NN object NN model NN root ROOT model compound model object,0,N/A,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,64
COMMENT the current object model of the environment DECL STMT SPECIFIER protected TYPE map NAME map NAME object model the current object model of the environment root ROOT model det model the amod model current compound model object case environment of det environment the nmod of model environment protected VBN map NN object NN model NN root ROOT model compound model object,0,N/A,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,64
COMMENT the current code map code object model DECL STMT SPECIFIER protected TYPE map NAME map NAME object model the current code map code object model root ROOT model det model the amod model current compound model code compound model map compound model code compound model object the current code map code object model root ROOT model det model the amod model current compound model code compound model map compound model code compound model object protected VBN map NN object NN model NN root ROOT model compound model object,0,N/A,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,64
FUNCTION SPECIFIER protected TYPE map NAME map NAME get current object model PARAMETER LIST BLOCK DECL STMT TYPE final environment SPECIFIER final NAME environment NAME env INIT environment helper get current environment EXPR environment helper get current environment CALL environment helper get current environment NAME environment helper get current environment NAME environment helper NAME get current environment ARGUMENT LIST IF if env null throw new illegal state exception unable to locate current environment CONDITION env null EXPR env null NAME env THEN throw new illegal state exception unable to locate current environment BLOCK THROW throw new illegal state exception unable to locate current environment EXPR new illegal state exception unable to locate current environment CALL illegal state exception unable to locate current environment NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR unable to locate current environment RETURN return env get object model EXPR env get object model CALL env get object model NAME env get object model NAME env NAME get object model ARGUMENT LIST protected VBN map NN get VB current JJ object NN model NN root ROOT get amod model current compound model object dobj get model final JJ environment NN env NN environment NN helper NN get VB current JJ environment NN root ROOT get compound helper environment nsubj get helper amod environment current dobj get environment if IN env NN null JJ throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state unable JJ to TO locate VB current JJ environment NN return NN env NN get VB object VB model NN root ROOT env acl env get xcomp get object dobj object model,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME illegal version chars INIT illegal fs chars EXPR illegal fs chars NAME illegal fs chars private JJ static JJ final JJ string NN illegal JJ version NN chars VBZ root ROOT chars amod version illegal nsubj chars version illegal JJ fs NN chars VBZ root ROOT chars amod fs illegal nsubj chars fs,1,E1,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER private SPECIFIER static TYPE final string SPECIFIER final NAME string NAME illegal fs chars INIT EXPR private JJ static JJ final JJ string NN illegal JJ fs NN chars VBZ root ROOT chars amod fs illegal nsubj chars fs,1,E1,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER private TYPE dc video frame t NAME dc video frame t NAME dc video frame t INDEX NAME raw image INIT new dc video frame t null new dc video frame t null EXPR new dc video frame t null new dc video frame t null BLOCK EXPR new dc video frame t null CALL dc video frame t null NAME dc video frame t ARGUMENT LIST ARGUMENT EXPR null EXPR new dc video frame t null CALL dc video frame t null NAME dc video frame t ARGUMENT LIST ARGUMENT EXPR null private JJ dc NN video NN frame NN t NN root ROOT t compound t dc compound t video compound t frame raw JJ image NN root ROOT image amod image raw new JJ dc NN video NN frame NN t NN root ROOT t compound t dc compound t video compound t frame null JJ new JJ dc NN video NN frame NN t NN root ROOT t compound t dc compound t video compound t frame null JJ frame image ANTONYM ANTONYM video image ANTONYM ANTONYM,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT TYPE double NAME double NAME double INDEX NAME thresholds outlier INIT EXPR BLOCK EXPR double RB thresholds NNS outlier VBP root ROOT outlier nsubj outlier thresholds,1,D1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION SPECIFIER public TYPE cv mat NAME cv mat NAME get h PARAMETER LIST BLOCK EXPR update CALL update NAME update ARGUMENT LIST RETURN return h EXPR h NAME h public NN cv NN mat NN root ROOT mat compound mat cv get VB h NN root ROOT get dobj get h update VB return NN h NN,1,A1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE cv mat NAME cv mat NAME get a PARAMETER LIST BLOCK EXPR update CALL update NAME update ARGUMENT LIST RETURN return a EXPR a NAME a public NN cv NN mat NN root ROOT mat compound mat cv get VB a DT root ROOT get dobj get a update VB return NN a DT,1,A1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME num threads INIT org bytedeco javacv numthreads EXPR org bytedeco javacv numthreads public NN static JJ final JJ string NN num NN threads NNS root ROOT threads compound threads num org NN bytedeco NN javacv NN numthreads NNS root ROOT numthreads compound numthreads org compound numthreads bytedeco compound numthreads javacv,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER private SPECIFIER static TYPE final int SPECIFIER final NAME int NAME camera matrix rows INIT EXPR private JJ static JJ final JJ int NN camera NN matrix NN rows NNS root ROOT rows compound rows camera compound rows matrix,1,E1,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
DECL STMT SPECIFIER private TYPE int NAME int NAME max steps INIT EXPR private JJ int NN max NN steps NNS root ROOT steps compound steps max,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER protected TYPE int NAME int NAME max worker threads protected VBN int NN max NN worker NN threads NNS root ROOT threads compound threads max compound threads worker,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER protected TYPE int NAME int NAME min worker threads protected VBN int NN min NN worker NN threads NNS root ROOT threads compound threads min compound threads worker,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT bit mask for the upper bits of a long DECL STMT SPECIFIER private SPECIFIER static TYPE final long SPECIFIER final NAME long NAME mask long upper bits INIT mask long lower bits EXPR mask long lower bits NAME mask long lower bits bit mask for the upper bits of a long root ROOT mask advmod mask bit case bits for det bits the amod bits upper nmod for mask bits case long of det long a nmod of bits long private JJ static JJ final JJ long RB mask NN long RB upper JJ bits NNS root ROOT bits compound bits mask advmod upper long amod bits upper mask NN long RB lower JJR bits NNS root ROOT mask advmod lower long amod bits lower dobj mask bits lower final ANTONYM ANTONYM upper lower ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/coyote/AbstractProcessor.java,580
COMMENT easily use these constants without having to create dummy implementations of this class DECL STMT SPECIFIER protected TYPE final string SPECIFIER final NAME string NAME driver java options INIT driver java options EXPR driver java options easily use these constants without having to create dummy implementations of this class root ROOT use advmod use easily det constants these dobj use constants mark having without advcl without use having mark create to xcomp having create compound implementations dummy dobj create implementations case class of det class this nmod of implementations class protected VBN final JJ string NN driver NN java NN options NNS root ROOT options compound options driver compound options java driver NN java NN options NNS root ROOT options compound options driver compound options java having create ANTONYM ANTONYM,1,E1,tomcat/java/org/apache/jasper/compiler/PageInfo.java,65
FUNCTION SPECIFIER private TYPE int NAME int NAME get usable capacity PARAMETER LIST BLOCK COMMENT radix sort requires same amount of used memory as buffer tim sort requires COMMENT half of the used memory as buffer RETURN return int array size use radix sort EXPR int array size use radix sort CALL int array size use radix sort NAME int ARGUMENT LIST ARGUMENT EXPR array size use radix sort CALL array size NAME array size NAME array NAME size ARGUMENT LIST TERNARY use radix sort CONDITION use radix sort EXPR use radix sort NAME use radix sort THEN EXPR ELSE EXPR private JJ int NN get VB usable JJ capacity NN root ROOT get amod capacity usable dobj get capacity radix sort requires same amount of used memory as buffer tim sort requires root ROOT requires compound sort radix nsubj requires sort amod amount same dobj requires amount case memory of amod memory used nmod of amount memory mark requires as compound sort buffer compound sort tim nsubj requires sort advcl as requires requires half of the used memory as buffer root ROOT half case memory of det memory the amod memory used nmod of half memory case buffer as nmod as half buffer return NN int NN array NN size NN root ROOT size compound size array use NN radix NN sort NN root ROOT sort compound sort use compound sort radix,1,B7,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER private SPECIFIER static TYPE byte NAME byte NAME byte INDEX NAME get binary value PARAMETER LIST t string value t string PARAMETER t string value t string TYPE t string value NAME t string value NAME t string BLOCK IF if t string is set value return t string get value get bytes CONDITION t string is set value EXPR t string is set value CALL t string is set value NAME t string is set value NAME t string NAME is set value ARGUMENT LIST THEN return t string get value get bytes BLOCK RETURN return t string get value get bytes EXPR t string get value get bytes CALL t string get value NAME t string get value NAME t string NAME get value ARGUMENT LIST CALL get bytes NAME get bytes ARGUMENT LIST RETURN return null EXPR null private JJ static JJ byte NN get VB binary JJ value NN root ROOT get amod value binary dobj get value t NN string NN value NN root ROOT value compound value t compound value string t NN string NN root ROOT string compound string t if IN t NN string NN is VBZ set VBN value NN root ROOT set compound string t nsubjpass set string auxpass set is dobj set value return NN t NN string NN get VBP value NN root ROOT get compound string t nsubj get string dobj get value get VB bytes NNS root ROOT get dobj get bytes return NN null JJ,1,A4,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT required DECL STMT SPECIFIER private TYPE long NAME long NAME max rows required private JJ long RB max NN rows NNS root ROOT rows compound rows max,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT easily use these constants without having to create dummy implementations of this class DECL STMT SPECIFIER protected TYPE final string SPECIFIER final NAME string NAME packages INIT packages EXPR packages easily use these constants without having to create dummy implementations of this class root ROOT use advmod use easily det constants these dobj use constants mark having without advcl without use having mark create to xcomp having create compound implementations dummy dobj create implementations case class of det class this nmod of implementations class protected VBN final JJ string NN packages NNS packages NNS having create ANTONYM ANTONYM,1,E1,tomcat/java/org/apache/catalina/ha/deploy/FarmWarDeployer.java,643
COMMENT return value of link bytes to bytes map lookup object long int DECL STMT SPECIFIER private TYPE long NAME long NAME num probes INIT EXPR return value of link bytes to bytes map lookup object long int root ROOT map compound value return nsubj map value case bytes of compound bytes link nmod of value bytes case bytes to nmod to value bytes compound int lookup compound int object amod int long dobj map int private JJ long RB num NN probes NNS root ROOT probes compound probes num,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT optional DECL STMT SPECIFIER private TYPE map string string NAME map string string NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME string NAME configuration optional private JJ map NN string NN string NN configuration NN,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/state/ui/FigStateVertex.java,169
COMMENT bit mask for the upper bits of a long DECL STMT SPECIFIER private SPECIFIER static TYPE final long SPECIFIER final NAME long NAME mask long upper bits INIT mask long lower bits EXPR mask long lower bits NAME mask long lower bits bit mask for the upper bits of a long root ROOT mask advmod mask bit case bits for det bits the amod bits upper nmod for mask bits case long of det long a nmod of bits long private JJ static JJ final JJ long RB mask NN long RB upper JJ bits NNS root ROOT bits compound bits mask advmod upper long amod bits upper mask NN long RB lower JJR bits NNS root ROOT mask advmod lower long amod bits lower dobj mask bits lower final ANTONYM ANTONYM upper lower ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/util/security/MD5Encoder.java,36
COMMENT bit mask for the lower bits of a long DECL STMT SPECIFIER private SPECIFIER static TYPE final long SPECIFIER final NAME long NAME mask long lower bits INIT l EXPR l bit mask for the lower bits of a long root ROOT mask advmod mask bit case bits for det bits the amod bits lower nmod for mask bits case long of det long a nmod of bits long bit mask for the lower bits of a long root ROOT mask advmod mask bit case bits for det bits the amod bits lower nmod for mask bits case long of det long a nmod of bits long private JJ static JJ final JJ long RB mask NN long RB lower JJR bits NNS root ROOT mask advmod lower long amod bits lower dobj mask bits l NN lower final ANTONYM ANTONYM,0,N/A,spark/core/src/main/java/org/apache/spark/shuffle/sort/PackedRecordPointer.java,56
COMMENT easily use these constants without having to create dummy implementations of this class DECL STMT SPECIFIER protected TYPE final string SPECIFIER final NAME string NAME repositories INIT repositories EXPR repositories easily use these constants without having to create dummy implementations of this class root ROOT use advmod use easily det constants these dobj use constants mark having without advcl without use having mark create to xcomp having create compound implementations dummy dobj create implementations case class of det class this nmod of implementations class protected VBN final JJ string NN repositories NNS repositories NNS having create ANTONYM ANTONYM,1,E1,tomcat/java/org/apache/tomcat/dbcp/dbcp2/cpdsadapter/PooledConnectionImpl.java,505
COMMENT parse second nano string in ss nnnnnnnnn format to microseconds DECL STMT SPECIFIER public TYPE final long SPECIFIER final NAME long NAME microseconds parse second nano string in ss nnnnnnnnn format to microseconds root ROOT parse amod string second compound string nano dobj parse string case format in compound format ss compound format nnnnnnnnn nmod in string format case microseconds to nmod to parse microseconds public NN final JJ long RB microseconds NNS second final ANTONYM ANTONYM,1,E1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/state/ui/FigStateVertex.java,169
COMMENT this package we should avoid this hack DECL STMT SPECIFIER public TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME metadata this package we should avoid this hack root ROOT avoid det package this nmod tmod avoid package nsubj avoid we aux avoid should det hack this dobj avoid hack this package we should avoid this hack root ROOT avoid det package this nmod tmod avoid package nsubj avoid we aux avoid should det hack this dobj avoid hack public NN final JJ byte NN metadata NN,1,D1,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,57
COMMENT gets the value of the string to int column field FUNCTION SPECIFIER public TYPE java util map java lang string java lang integer NAME java util map java lang string java lang integer NAME java NAME util NAME map java lang string java lang integer NAME map ARGUMENT LIST ARGUMENT NAME java lang string NAME java NAME lang NAME string ARGUMENT NAME java lang integer NAME java NAME lang NAME integer NAME get string to int column PARAMETER LIST BLOCK RETURN return string to int column EXPR string to int column NAME string to int column gets the value of the string to int column field root ROOT gets det value the dobj gets value case string of det string the nmod of value string mark int to advcl to gets int compound field column dobj int field public NN java NN util NN map NN root ROOT map compound map java compound map util java NN lang NN string NN root ROOT string compound string java compound string lang java NN lang NN integer NN root ROOT integer compound integer java compound integer lang get VB string NN to TO int VB column NN root ROOT get dobj get string nsubj xsubj int string mark int to xcomp get int dobj int column return NN string NN to TO int VB column NN root ROOT string mark int to acl to string int dobj int column gets string ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
DECL STMT SPECIFIER private SPECIFIER static TYPE int NAME int NAME default max steps INIT EXPR private JJ static JJ int NN default NN max NN steps NNS root ROOT steps compound steps default compound steps max,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT max number of times we are allowed to retry DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME max retries max number of times we are allowed to retry root ROOT number compound number max case times of nmod of number times nsubjpass allowed we nsubj xsubj retry we auxpass allowed are acl relcl number allowed mark retry to xcomp allowed retry max number of times we are allowed to retry root ROOT number compound number max case times of nmod of number times nsubjpass allowed we nsubj xsubj retry we auxpass allowed are acl relcl number allowed mark retry to xcomp allowed retry private JJ final JJ int NN max NN retries NNS root ROOT retries compound retries max,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT a channel used to buffer input data for encryption the channel has an upper size bound so that if the input is larger than the allowed buffer it will be broken into multiple chunks DECL STMT SPECIFIER private TYPE long NAME long NAME current reported bytes a channel used to buffer input data for encryption the channel has an upper size bound root ROOT bound det channel a nsubj bound channel acl channel used mark buffer to xcomp used buffer compound data input nsubj has data case encryption for nmod for has encryption det channel the nsubj has channel ccomp buffer has det size an amod size upper dobj has size a channel used to buffer input data for encryption the channel has an upper size bound root ROOT bound det channel a nsubj bound channel acl channel used mark buffer to xcomp used buffer compound data input nsubj has data case encryption for nmod for has encryption det channel the nsubj has channel ccomp buffer has det size an amod size upper dobj has size so that if the input is larger than the allowed buffer it will be broken into multiple root ROOT so mwe so that mark larger if det input the nsubj larger input cop larger is dep so larger case buffer than det buffer the amod buffer allowed nmod than larger buffer nsubjpass broken it aux broken will auxpass broken be acl relcl buffer broken case multiple into nmod into broken multiple chunks private JJ long RB current JJ reported VBN bytes NNS root ROOT bytes amod bytes current amod bytes reported allowed will ANTONYM ANTONYM buffer broken ANTONYM ANTONYM has allowed ANTONYM ANTONYM has broken ANTONYM ANTONYM upper broken ANTONYM ANTONYM,1,E1,tomcat/java/org/apache/tomcat/jni/Stdlib.java,80
COMMENT maximum supported data page size in bytes in principle the maximum addressable page size is l lt lt offset bits bytes which is petabytes however the on heap allocator s maximum page size is limited by the maximum amount of data that can be stored in a long array which is bytes or gigabytes therefore we cap this at gigabytes DECL STMT SPECIFIER public SPECIFIER static TYPE final long SPECIFIER final NAME long NAME maximum page size bytes INIT l l EXPR l l maximum supported data page size in bytes in principle the maximum addressable page size is root ROOT supported nsubj supported maximum compound size data compound size page dobj supported size case bytes in nmod in supported bytes case principle in nmod in bytes principle det size the amod size maximum amod size addressable compound size page nsubj is size dep supported is maximum supported data page size in bytes in principle the maximum addressable page size is root ROOT supported nsubj supported maximum compound size data compound size page dobj supported size case bytes in nmod in supported bytes case principle in nmod in bytes principle det size the amod size maximum amod size addressable compound size page nsubj is size dep supported is l lt lt offset bits bytes which is petabytes however the on heap allocator s root ROOT offset compound lt l compound lt lt nsubj offset lt compound bytes bits dobj offset bytes nsubj petabytes bytes ref bytes which cop petabytes is acl relcl bytes petabytes advmod petabytes however dep however the case s on compound s heap compound s allocator nmod on the s l lt lt offset bits bytes which is petabytes however the on heap allocator s root ROOT offset compound lt l compound lt lt nsubj offset lt compound bytes bits dobj offset bytes nsubj petabytes bytes ref bytes which cop petabytes is acl relcl bytes petabytes advmod petabytes however dep however the case s on compound s heap compound s allocator nmod on the s maximum page size is limited by the maximum amount of data that can be stored in a long root ROOT limited compound size maximum compound size page nsubjpass limited size auxpass limited is case amount by det amount the amod amount maximum nmod agent limited amount case data of nmod of amount data nsubjpass stored data ref data that aux stored can auxpass stored be acl relcl data stored case long in det long a nmod in stored long array which is bytes or gigabytes therefore we cap this at gigabytes root ROOT array nsubj bytes array ref array which cop bytes is acl relcl array bytes cc bytes or acl relcl array gigabytes conj or bytes gigabytes advmod cap therefore nsubj cap we dep bytes cap dobj cap this case gigabytes at nmod at cap gigabytes array which is bytes or gigabytes therefore we cap this at gigabytes root ROOT array nsubj bytes array ref array which cop bytes is acl relcl array bytes cc bytes or acl relcl array gigabytes conj or bytes gigabytes advmod cap therefore nsubj cap we dep bytes cap dobj cap this case gigabytes at nmod at cap gigabytes public NN static JJ final JJ long RB maximum NN page NN size NN bytes NNS root ROOT bytes amod bytes maximum compound bytes page compound bytes size l NN l NN bits s ANTONYM ANTONYM heap can ANTONYM ANTONYM supported can ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT gets the value of the complex column field FUNCTION SPECIFIER public TYPE java util map java lang string java util list org apache spark sql execution datasources parquet test avro nested NAME java util map java lang string java util list org apache spark sql execution datasources parquet test avro nested NAME java NAME util NAME map java lang string java util list org apache spark sql execution datasources parquet test avro nested NAME map ARGUMENT LIST ARGUMENT NAME java lang string NAME java NAME lang NAME string ARGUMENT NAME java util list org apache spark sql execution datasources parquet test avro nested NAME java NAME util NAME list org apache spark sql execution datasources parquet test avro nested NAME list ARGUMENT LIST ARGUMENT NAME org apache spark sql execution datasources parquet test avro nested NAME org NAME apache NAME spark NAME sql NAME execution NAME datasources NAME parquet NAME test NAME avro NAME nested NAME get complex column PARAMETER LIST BLOCK RETURN return complex column EXPR complex column NAME complex column gets the value of the complex column field root ROOT gets det value the dobj gets value case field of det field the compound field complex compound field column nmod of value field public NN java NN util NN map NN root ROOT map compound map java compound map util java NN lang NN string NN root ROOT string compound string java compound string lang java NN util NN list NN root ROOT list compound list java compound list util org NN apache NN spark VB sql JJ execution NN datasources NNS parquet JJ test NN avro NN nested JJ root ROOT spark compound apache org nsubj spark apache amod datasources sql compound datasources execution dobj spark datasources amod avro parquet compound avro test dep datasources avro amod avro nested get VB complex JJ column NN root ROOT get amod column complex dobj get column return NN complex JJ column NN root ROOT column amod column complex gets string ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT sets the value of the complex column field FUNCTION SPECIFIER public TYPE org apache spark sql execution datasources parquet test avro parquet avro compat builder NAME org apache spark sql execution datasources parquet test avro parquet avro compat builder NAME org NAME apache NAME spark NAME sql NAME execution NAME datasources NAME parquet NAME test NAME avro NAME parquet avro compat NAME builder NAME set complex column PARAMETER LIST java util map java lang string java util list org apache spark sql execution datasources parquet test avro nested value PARAMETER java util map java lang string java util list org apache spark sql execution datasources parquet test avro nested value TYPE java util map java lang string java util list org apache spark sql execution datasources parquet test avro nested NAME java util map java lang string java util list org apache spark sql execution datasources parquet test avro nested NAME java NAME util NAME map java lang string java util list org apache spark sql execution datasources parquet test avro nested NAME map ARGUMENT LIST ARGUMENT NAME java lang string NAME java NAME lang NAME string ARGUMENT NAME java util list org apache spark sql execution datasources parquet test avro nested NAME java NAME util NAME list org apache spark sql execution datasources parquet test avro nested NAME list ARGUMENT LIST ARGUMENT NAME org apache spark sql execution datasources parquet test avro nested NAME org NAME apache NAME spark NAME sql NAME execution NAME datasources NAME parquet NAME test NAME avro NAME nested NAME value BLOCK EXPR validate fields value CALL validate fields value NAME validate ARGUMENT LIST ARGUMENT EXPR fields CALL fields NAME fields ARGUMENT LIST INDEX EXPR ARGUMENT EXPR value NAME value EXPR this complex column value NAME this complex column NAME this NAME complex column NAME value EXPR field set flags true CALL field set flags NAME field set flags ARGUMENT LIST INDEX EXPR RETURN return this EXPR this NAME this sets the value of the complex column field root ROOT sets det value the dobj sets value case field of det field the compound field complex compound field column nmod of value field public NN org NN apache NN spark VB sql JJ execution NN datasources NNS parquet JJ test NN avro NN parquet NN avro NN compat NN builder NN root ROOT spark compound apache org nsubj spark apache amod datasources sql compound datasources execution dobj spark datasources amod builder parquet compound builder test compound builder avro compound builder parquet compound builder avro compound builder compat dep datasources builder set VBN complex JJ column NN root ROOT set amod column complex dobj set column java NN util NN map NN root ROOT map compound map java compound map util java NN lang NN string NN root ROOT string compound string java compound string lang java NN util NN list NN root ROOT list compound list java compound list util org NN apache NN spark VB sql JJ execution NN datasources NNS parquet JJ test NN avro NN nested JJ root ROOT spark compound apache org nsubj spark apache amod datasources sql compound datasources execution dobj spark datasources amod avro parquet compound avro test dep datasources avro amod avro nested value NN validate VB fields NNS value NN this DT complex NN column NN value NN field NN set VBD flags NNS root ROOT set nsubj set field dobj set flags true JJ return NN this DT,1,A3,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
FUNCTION SPECIFIER public TYPE hive conf NAME hive conf NAME get configuration PARAMETER LIST BLOCK RETURN return new hive conf configuration EXPR new hive conf configuration CALL hive conf configuration NAME hive conf ARGUMENT LIST ARGUMENT EXPR configuration NAME configuration public NN hive VB conf NN root ROOT hive dobj hive conf get VB configuration NN root ROOT get dobj get configuration return NN new JJ hive VB conf NN root ROOT hive dobj hive conf configuration NN,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT gets the value of the strings column field FUNCTION SPECIFIER public TYPE java util list java lang string NAME java util list java lang string NAME java NAME util NAME list java lang string NAME list ARGUMENT LIST ARGUMENT NAME java lang string NAME java NAME lang NAME string NAME get strings column PARAMETER LIST BLOCK RETURN return strings column EXPR strings column NAME strings column gets the value of the strings column field root ROOT gets det value the dobj gets value case field of det field the compound field strings compound field column nmod of value field public NN java NN util NN list NN root ROOT list compound list java compound list util java NN lang NN string NN root ROOT string compound string java compound string lang get VB strings NNS column NN root ROOT get compound column strings dobj get column return NN strings NNS column NN root ROOT column compound column strings gets string ANTONYM ANTONYM gets strings ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
FUNCTION ANNOTATION test NAME test SPECIFIER public TYPE void NAME void NAME reuse clients up to config variable concurrent PARAMETER LIST THROWS throws exception ARGUMENT EXPR exception NAME exception BLOCK EXPR test client reuse true CALL test client reuse true NAME test client reuse ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR true EXPR test client reuse true CALL test client reuse true NAME test client reuse ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR true EXPR test client reuse true CALL test client reuse true NAME test client reuse ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR true EXPR test client reuse true CALL test client reuse true NAME test client reuse ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR true test NN public NN void NN reuse NN clients NNS up IN to TO config VB variable JJ concurrent JJ root ROOT clients compound clients reuse dep clients up mark config to xcomp up config amod concurrent variable dobj config concurrent throws VBZ exception NN test NN client NN reuse NN root ROOT reuse compound reuse test compound reuse client true JJ test NN client NN reuse NN root ROOT reuse compound reuse test compound reuse client true JJ test NN client NN reuse NN root ROOT reuse compound reuse test compound reuse client true JJ test NN client NN reuse NN root ROOT reuse compound reuse test compound reuse client true JJ,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT yarn only options DECL STMT SPECIFIER protected TYPE final string SPECIFIER final NAME string NAME num executors INIT num executors EXPR num executors yarn only options root ROOT options compound options yarn advmod options only protected VBN final JJ string NN num NN executors NNS root ROOT executors compound executors num num NN executors NNS root ROOT executors compound executors num,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
COMMENT gets the value of the string to int column field FUNCTION SPECIFIER public TYPE java util map java lang string java lang integer NAME java util map java lang string java lang integer NAME java NAME util NAME map java lang string java lang integer NAME map ARGUMENT LIST ARGUMENT NAME java lang string NAME java NAME lang NAME string ARGUMENT NAME java lang integer NAME java NAME lang NAME integer NAME get string to int column PARAMETER LIST BLOCK RETURN return string to int column EXPR string to int column NAME string to int column gets the value of the string to int column field root ROOT gets det value the dobj gets value case string of det string the nmod of value string mark int to advcl to gets int compound field column dobj int field public NN java NN util NN map NN root ROOT map compound map java compound map util java NN lang NN string NN root ROOT string compound string java compound string lang java NN lang NN integer NN root ROOT integer compound integer java compound integer lang get VB string NN to TO int VB column NN root ROOT get dobj get string nsubj xsubj int string mark int to xcomp get int dobj int column return NN string NN to TO int VB column NN root ROOT string mark int to acl to string int dobj int column gets string ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
DECL STMT SPECIFIER private TYPE int NAME int NAME free blocks INIT EXPR private JJ int NN free JJ blocks NNS root ROOT blocks amod blocks free,1,E1,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT TYPE final packed long values iterator SPECIFIER final NAME packed long values iterator NAME packed long values NAME iterator NAME iter final JJ packed JJ long JJ values NNS iterator NN root ROOT iterator amod values packed amod values long nsubj iterator values iter NN,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.java,185
DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME max doc private JJ final JJ int NN max NN doc NN root ROOT doc compound doc max,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT maximum number of dimensions DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME max dims INIT EXPR maximum number of dimensions root ROOT number amod number maximum case dimensions of nmod of number dimensions public NN static JJ final JJ int NN max NN dims VBZ root ROOT dims nsubj dims max,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE boolean NAME boolean NAME equals PARAMETER LIST object o PARAMETER object o TYPE object NAME object NAME o BLOCK THROW throw new unsupported operation exception EXPR new unsupported operation exception CALL unsupported operation exception NAME unsupported operation exception ARGUMENT LIST override NN public NN boolean NN equals VBZ object NN o NN throw VB new JJ unsupported JJ operation NN exception NN root ROOT exception amod exception unsupported compound exception operation,0,N/A,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,768
COMMENT flag to pass to link terms enum postings postings enum if you require offsets in the returned enum DECL STMT SPECIFIER public SPECIFIER static TYPE final short SPECIFIER final NAME short NAME offsets INIT positions EXPR positions NAME positions flag to pass to link terms enum postings postings enum root ROOT enum nsubj enum flag mark pass to acl to flag pass mark link to xcomp pass link compound postings terms compound postings enum compound postings postings dobj link postings if you require offsets in the returned enum root ROOT require mark require if nsubj require you dobj require offsets case enum in det enum the amod enum returned nmod in require enum if you require offsets in the returned enum root ROOT require mark require if nsubj require you dobj require offsets case enum in det enum the amod enum returned nmod in require enum public NN static JJ final JJ short RB offsets NNS positions NNS,1,E1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/AbstractMessageNotationUml.java,1691
DECL STMT TYPE final string SPECIFIER final NAME string NAME phrased query string contents final JJ string NN phrased VBN query NN string NN contents NNS root ROOT contents amod contents phrased compound contents query compound contents string,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT maybe we should add a fst enum that supports this operation DECL STMT TYPE final bytes ref builder SPECIFIER final NAME bytes ref builder NAME scratch bytes INIT new bytes ref builder EXPR new bytes ref builder CALL bytes ref builder NAME bytes ref builder ARGUMENT LIST maybe we should add a fst enum that supports this operation root ROOT add advmod add maybe nsubj add we aux add should det enum a compound enum fst dobj add enum nsubj supports enum ref enum that acl relcl enum supports det operation this dobj supports operation final JJ bytes NNS ref VBP builder NN root ROOT ref nsubj ref bytes dobj ref builder scratch NN bytes NNS root ROOT bytes compound bytes scratch new JJ bytes NNS ref VBP builder NN root ROOT ref nsubj ref bytes dobj ref builder,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT default number of buckets DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME default buckets INIT EXPR default number of buckets root ROOT number compound number default case buckets of nmod of number buckets public NN static JJ final JJ int NN default NN buckets NNS root ROOT buckets compound buckets default,1,E1,tomcat/test/org/apache/catalina/authenticator/TestSSOnonLoginAndBasicAuthenticator.java,683
COMMENT change to true to see details of reference counts when info stream is enabled DECL STMT SPECIFIER public SPECIFIER static TYPE boolean NAME boolean NAME verbose ref counts INIT false EXPR false change to true to see details of reference counts when root ROOT change case true to nmod to change true mark see to acl to change see dobj see details case counts of compound counts reference nmod of details counts dep change when info stream is enabled root ROOT enabled compound stream info nsubjpass enabled stream auxpass enabled is public NN static JJ boolean NN verbose JJ ref NN counts NNS root ROOT counts amod counts verbose compound counts ref false JJ see counts ANTONYM ANTONYM true false ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/websocket/WsFrameBase.java,57
COMMENT true if we should output unigram tokens always DECL STMT SPECIFIER private TYPE final boolean SPECIFIER final NAME boolean NAME output unigrams true if we should output unigram tokens always root ROOT true mark should if nsubj should we advcl if true should compound tokens output compound tokens unigram dobj should tokens advmod true always private JJ final JJ boolean NN output NN unigrams NNS root ROOT unigrams compound unigrams output,0,N/A,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,57
COMMENT min longitude value in radians DECL STMT SPECIFIER public SPECIFIER static TYPE final double SPECIFIER final NAME double NAME min lon radians INIT to radians min lon incl EXPR to radians min lon incl NAME to radians NAME min lon incl min longitude value in radians root ROOT value compound value min compound value longitude case radians in nmod in value radians public NN static JJ final JJ double RB min NN lon NN radians NNS root ROOT radians compound radians min compound radians lon to TO radians NNS root ROOT radians case radians to min NN lon NN incl NN root ROOT incl compound incl min compound incl lon,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT placeholder for missing offset that means all values are missing DECL STMT SPECIFIER static TYPE final int SPECIFIER final NAME int NAME all missing INIT EXPR placeholder for missing offset that means all values are missing root ROOT placeholder case missing for nmod for placeholder missing acl missing offset nsubj means that ccomp offset means det values all nsubj missing values aux missing are ccomp means missing static JJ final JJ int NN all DT missing VBG root ROOT missing dep missing all,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT tells us the number of live docs DECL STMT TYPE final segment doc values SPECIFIER final NAME segment doc values NAME seg doc values tells us the number of live docs root ROOT tells iobj tells us det number the dobj tells number case docs of amod docs live nmod of number docs final JJ segment NN doc NN values NNS root ROOT values compound values segment compound values doc seg NN doc NN values NNS root ROOT values compound values seg compound values doc,0,N/A,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,64
DECL STMT TYPE final byte SPECIFIER final NAME byte NAME byte INDEX NAME lower point final JJ byte NN lower JJR point NN root ROOT point amod point lower,1,D1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT this is a reference to the token image array of the generated parser within which the parse error occurred this array is defined in the generated constants interface DECL STMT SPECIFIER public TYPE string NAME string NAME string INDEX NAME token image this is a reference to the token image array of the generated root ROOT reference nsubj reference this cop reference is det reference a case array to det array the amod array token compound array image nmod to reference array case generated of det generated the nmod of array generated parser within which the parse error occurred this array is root ROOT is nmod within occurred parser nsubj is parser case which within ref parser which det error the compound error parse nsubj occurred error acl relcl parser occurred det array this dobj occurred array parser within which the parse error occurred this array is root ROOT is nmod within occurred parser nsubj is parser case which within ref parser which det error the compound error parse nsubj occurred error acl relcl parser occurred det array this dobj occurred array defined in the generated constants interface root ROOT defined case constants in det constants the amod constants generated nmod in defined constants dobj defined interface public NN string NN token JJ image NN root ROOT image amod image token,0,N/A,Lucene/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/ParseException.java,82
DECL STMT SPECIFIER private TYPE paged growable writer NAME paged growable writer NAME values private JJ paged VBN growable JJ writer NN root ROOT writer amod writer paged amod writer growable values NNS,1,E1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE int NAME int NAME int INDEX NAME get int block PARAMETER LIST BLOCK IF if free blocks bytes used add and get block size integer bytes return new int block size CONDITION free blocks EXPR free blocks NAME free blocks THEN bytes used add and get block size integer bytes return new int block size BLOCK EXPR bytes used add and get block size integer bytes CALL bytes used add and get block size integer bytes NAME bytes used add and get NAME bytes used NAME add and get ARGUMENT LIST ARGUMENT EXPR block size integer bytes NAME block size NAME integer bytes NAME integer NAME bytes RETURN return new int block size EXPR new int block size NAME int block size NAME int INDEX block size EXPR block size NAME block size DECL STMT TYPE final int SPECIFIER final NAME int NAME int INDEX NAME b INIT free byte blocks free blocks EXPR free byte blocks free blocks NAME free byte blocks free blocks NAME free byte blocks INDEX free blocks EXPR free blocks NAME free blocks EXPR free byte blocks free blocks null NAME free byte blocks free blocks NAME free byte blocks INDEX free blocks EXPR free blocks NAME free blocks RETURN return b EXPR b NAME b override NN public NN int NN get VB int NN block NN root ROOT get compound block int dobj get block if IN free JJ blocks NNS root ROOT blocks amod blocks free bytes NNS used VBD add VB and CC get VB root ROOT used nsubj used bytes nsubj get bytes dobj used add cc used and conj and used get block NN size NN root ROOT size compound size block integer NN bytes NNS root ROOT bytes compound bytes integer return NN new JJ int NN block NN size NN root ROOT size compound size block final JJ int NN b NN free JJ byte NN blocks NNS root ROOT blocks amod blocks free compound blocks byte free JJ blocks NNS root ROOT blocks amod blocks free free JJ byte NN blocks NNS root ROOT blocks amod blocks free compound blocks byte free JJ blocks NNS root ROOT blocks amod blocks free null JJ return NN b NN,1,A1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT decrease to a low number like for testing DECL STMT SPECIFIER private TYPE int NAME int NAME index interval mask decrease to a low number like for testing root ROOT decrease case number to det number a amod number low nmod to decrease number case testing like case testing for nmod for number testing private JJ int NN index NN interval NN mask NN root ROOT mask compound mask index compound mask interval,0,N/A,tomcat/test/javax/el/TesterFunctions.java,21
DECL STMT SPECIFIER static TYPE final int SPECIFIER final NAME int NAME output flag has terms INIT x EXPR x static JJ final JJ int NN output NN flag NN has VBZ terms NNS root ROOT has compound flag output nsubj has flag dobj has terms x NN,1,D2,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT num of empty docs injected prior to the first doc in the main index DECL STMT SPECIFIER private SPECIFIER static TYPE int NAME int NAME pre filler docs num of empty docs injected prior to the first doc in the main index root ROOT num case docs of amod docs empty nmod of num docs acl docs injected advmod injected prior case doc to det doc the amod doc first nmod to prior doc case index in det index the amod index main nmod in doc index private JJ static JJ int NN pre JJ filler NN docs NNS root ROOT docs amod docs pre compound docs filler,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
DECL STMT TYPE final predicate byte SPECIFIER final NAME predicate byte NAME predicate ARGUMENT LIST ARGUMENT NAME byte NAME byte INDEX NAME predicate final JJ predicate NN byte NN predicate NN,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER public SPECIFIER static TYPE final string SPECIFIER final NAME string NAME data world cities points INIT world cities points txt EXPR world cities points txt public NN static JJ final JJ string NN data NNS world NN cities NNS points NNS root ROOT points compound points data compound points world compound points cities world NN cities NNS points VBZ txt NN root ROOT points compound cities world nsubj points cities dobj points txt,1,E1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT TYPE final postings enum SPECIFIER final NAME postings enum NAME postings final JJ postings NNS enum VBP root ROOT enum nsubj enum postings postings NNS,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT flag to pass to link terms enum postings postings enum if you require term positions in the returned enum DECL STMT SPECIFIER public SPECIFIER static TYPE final short SPECIFIER final NAME short NAME positions INIT freqs EXPR freqs NAME freqs flag to pass to link terms enum postings postings enum root ROOT enum nsubj enum flag mark pass to acl to flag pass mark link to xcomp pass link compound postings terms compound postings enum compound postings postings dobj link postings if you require term positions in the returned enum root ROOT require mark require if nsubj require you compound positions term dobj require positions case enum in det enum the amod enum returned nmod in positions enum if you require term positions in the returned enum root ROOT require mark require if nsubj require you compound positions term dobj require positions case enum in det enum the amod enum returned nmod in positions enum public NN static JJ final JJ short RB positions NNS freqs NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/AbstractMessageNotationUml.java,1691
COMMENT true if all entries are terms DECL STMT TYPE int NAME int NAME num follow floor blocks true if all entries are terms root ROOT true mark terms if det entries all nsubj terms entries cop terms are advcl if true terms int NN num NN follow VB floor NN blocks NNS root ROOT follow nsubj follow num compound blocks floor dobj follow blocks,0,N/A,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/OrdsIntersectTermsEnumFrame.java,75
DECL STMT SPECIFIER public SPECIFIER static TYPE final int SPECIFIER final NAME int NAME iterations INIT random multiplier EXPR random multiplier NAME random multiplier public NN static JJ final JJ int NN iterations NNS random JJ multiplier NN root ROOT multiplier amod multiplier random,1,E1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER private TYPE bytes ref builder NAME bytes ref builder NAME values private JJ bytes NNS ref VBP builder NN root ROOT ref nsubj ref bytes dobj ref builder values NNS,1,E1,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT enforces link set up and link tear down calls are chained DECL STMT SPECIFIER private TYPE test rule setup teardown chained NAME test rule setup teardown chained NAME parent chain call rule INIT new test rule setup teardown chained EXPR new test rule setup teardown chained CALL test rule setup teardown chained NAME test rule setup teardown chained ARGUMENT LIST enforces link set up and link tear down calls are chained root ROOT chained nsubj chained enforces dobj enforces link acl link set compound prt set up cc enforces and conj and enforces link nsubj chained link ccomp link tear compound prt tear down dobj tear calls cop chained are enforces link set up and link tear down calls are chained root ROOT chained nsubj chained enforces dobj enforces link acl link set compound prt set up cc enforces and conj and enforces link nsubj chained link ccomp link tear compound prt tear down dobj tear calls cop chained are private JJ test NN rule NN setup NN teardown NN chained JJ root ROOT chained compound teardown test compound teardown rule compound teardown setup nsubj chained teardown parent NN chain NN call NN rule NN root ROOT rule compound rule parent compound rule chain compound rule call new JJ test NN rule NN setup NN teardown NN chained JJ root ROOT chained compound teardown test compound teardown rule compound teardown setup nsubj chained teardown,0,N/A,tomcat/java/org/apache/catalina/core/ContainerBase.java,355
DECL STMT SPECIFIER private TYPE int NAME int NAME facet field num terms private JJ int NN facet NN field NN num NN terms NNS root ROOT terms compound terms facet compound terms field compound terms num,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER private TYPE int NAME int NAME remaining positions private JJ int NN remaining VBG positions NNS root ROOT positions amod positions remaining,1,E1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT commits that the index deletion policy have decided to delete DECL STMT SPECIFIER private TYPE list commit point NAME list commit point NAME list ARGUMENT LIST ARGUMENT NAME commit point NAME commits to delete INIT new array list EXPR new array list CALL array list NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST commits that the index deletion policy have decided to delete root ROOT commits mark decided that det policy the compound policy index compound policy deletion nsubj decided policy nsubj xsubj delete policy aux decided have ccomp commits decided mark delete to xcomp decided delete private JJ list NN commit VB point NN root ROOT commit dobj commit point commits VBZ to TO delete VB root ROOT commits mark delete to xcomp commits delete new JJ array NN list NN root ROOT list compound list array commits have ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/authenticator/SingleSignOn.java,83
DECL STMT SPECIFIER private TYPE final two phase iterator SPECIFIER final NAME two phase iterator NAME child two phase private JJ final JJ two CD phase NN iterator NN root ROOT iterator nummod iterator two compound iterator phase child NN two CD phase NN root ROOT phase compound phase child nummod phase two,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT info for each field map lt string field name DECL STMT SPECIFIER private TYPE final boolean SPECIFIER final NAME boolean NAME store payloads info for each field map lt string field name root ROOT name dep name info case field for det field each nmod for info field compound name map compound name lt compound name string compound name field private JJ final JJ boolean NN store NN payloads NNS root ROOT payloads compound payloads store,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT writes the bkd tree to the provided link index output and returns the file offset where index was written FUNCTION SPECIFIER public TYPE long NAME long NAME finish PARAMETER LIST index output out PARAMETER index output out TYPE index output NAME index output NAME out THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK COMMENT system out println n bkd tree writer finish point count point count out out heap writer heap point writer COMMENT todo specialize the d case it s much faster at indexing time no partitioning on recurse COMMENT catch user silliness IF if heap point writer null temp input null throw new illegal state exception already finished CONDITION heap point writer null temp input null EXPR heap point writer null temp input null NAME heap point writer NAME temp input THEN throw new illegal state exception already finished BLOCK THROW throw new illegal state exception already finished EXPR new illegal state exception already finished CALL illegal state exception already finished NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR already finished IF if offline point writer null offline point writer close CONDITION offline point writer null EXPR offline point writer null NAME offline point writer THEN offline point writer close BLOCK EXPR offline point writer close CALL offline point writer close NAME offline point writer close NAME offline point writer NAME close ARGUMENT LIST IF if point count throw new illegal state exception must index at least one point CONDITION point count EXPR point count NAME point count THEN throw new illegal state exception must index at least one point BLOCK THROW throw new illegal state exception must index at least one point EXPR new illegal state exception must index at least one point CALL illegal state exception must index at least one point NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR must index at least one point DECL STMT TYPE long bit set NAME long bit set NAME ord bit set IF if num dims if single value per doc ord bit set new long bit set max doc else ord bit set new long bit set point count else ord bit set null CONDITION num dims EXPR num dims NAME num dims THEN if single value per doc ord bit set new long bit set max doc else ord bit set new long bit set point count BLOCK IF if single value per doc ord bit set new long bit set max doc else ord bit set new long bit set point count CONDITION single value per doc EXPR single value per doc NAME single value per doc THEN ord bit set new long bit set max doc BLOCK EXPR ord bit set new long bit set max doc NAME ord bit set CALL long bit set max doc NAME long bit set ARGUMENT LIST ARGUMENT EXPR max doc NAME max doc ELSE else ord bit set new long bit set point count BLOCK EXPR ord bit set new long bit set point count NAME ord bit set CALL long bit set point count NAME long bit set ARGUMENT LIST ARGUMENT EXPR point count NAME point count ELSE else ord bit set null BLOCK EXPR ord bit set null NAME ord bit set DECL STMT TYPE long NAME long NAME count per leaf INIT point count EXPR point count NAME point count DECL STMT TYPE long NAME long NAME inner node count INIT EXPR WHILE while count per leaf max points in leaf node count per leaf count per leaf inner node count CONDITION count per leaf max points in leaf node EXPR count per leaf max points in leaf node NAME count per leaf NAME max points in leaf node BLOCK EXPR count per leaf count per leaf NAME count per leaf NAME count per leaf EXPR inner node count NAME inner node count DECL STMT TYPE int NAME int NAME num leaves INIT int inner node count EXPR int inner node count NAME int NAME inner node count EXPR check max leaf node count num leaves CALL check max leaf node count num leaves NAME check max leaf node count ARGUMENT LIST ARGUMENT EXPR num leaves NAME num leaves COMMENT note we could save the here to use a bit less heap at search time but then we d need a somewhat costly check at each COMMENT step of the recursion to recompute the split dim COMMENT indexed by node id but first root node id is we do because the lead byte at each recursion says which dim we split on DECL STMT TYPE byte NAME byte NAME byte INDEX NAME split packed values INIT new byte math to int exact num leaves bytes per dim EXPR new byte math to int exact num leaves bytes per dim NAME byte math to int exact num leaves bytes per dim NAME byte INDEX math to int exact num leaves bytes per dim EXPR math to int exact num leaves bytes per dim CALL math to int exact num leaves bytes per dim NAME math to int exact NAME math NAME to int exact ARGUMENT LIST ARGUMENT EXPR num leaves bytes per dim NAME num leaves NAME bytes per dim COMMENT because leaf count is power of e g and inner node count is power of minus e g DECL STMT TYPE long NAME long NAME long INDEX NAME leaf block f ps INIT new long num leaves EXPR new long num leaves NAME long num leaves NAME long INDEX num leaves EXPR num leaves NAME num leaves COMMENT make sure the math above worked ASSERT assert point count num leaves max points in leaf node point count point count num leaves num leaves max points in leaf node max points in leaf node EXPR point count num leaves max points in leaf node point count point count num leaves num leaves max points in leaf node max points in leaf node NAME point count NAME num leaves NAME max points in leaf node NAME point count NAME num leaves NAME max points in leaf node COMMENT sort all docs once by each dimension DECL STMT TYPE path slice NAME path slice NAME path slice INDEX NAME sorted point writers INIT new path slice num dims EXPR new path slice num dims NAME path slice num dims NAME path slice INDEX num dims EXPR num dims NAME num dims COMMENT this is only used on exception on normal code paths we close all files we opened DECL STMT TYPE list closeable NAME list closeable NAME list ARGUMENT LIST ARGUMENT NAME closeable NAME to close heroically INIT new array list EXPR new array list CALL array list NAME array list NAME array list ARGUMENT LIST ARGUMENT LIST DECL STMT TYPE boolean NAME boolean NAME success INIT false EXPR false TRY try long t system nano time for int dim dim num dims dim sorted point writers dim new path slice sort dim point count long t system nano time system out println sort time t t msec if temp input null temp dir delete file temp input get name temp input null else assert heap point writer null heap point writer null final int parent splits new int num dims build num leaves sorted point writers ord bit set out min packed value max packed value parent splits split packed values leaf block f ps to close heroically assert arrays equals parent splits new int num dims for path slice slice sorted point writers slice writer destroy if no exception we should have cleaned everything up assert temp dir get created files is empty long t system nano time system out println write time t t msec success true finally if success false io utils delete files ignoring exceptions temp dir temp dir get created files io utils close while handling exception to close heroically BLOCK COMMENT long t system nano time FOR for int dim dim num dims dim sorted point writers dim new path slice sort dim point count CONTROL int dim dim num dims dim INIT int dim TYPE int NAME int NAME dim INIT EXPR CONDITION dim num dims EXPR dim num dims NAME dim NAME num dims INCR dim EXPR dim NAME dim BLOCK EXPR sorted point writers dim new path slice sort dim point count NAME sorted point writers dim NAME sorted point writers INDEX dim EXPR dim NAME dim CALL path slice sort dim point count NAME path slice ARGUMENT LIST ARGUMENT EXPR sort dim CALL sort dim NAME sort ARGUMENT LIST ARGUMENT EXPR dim NAME dim ARGUMENT EXPR ARGUMENT EXPR point count NAME point count COMMENT long t system nano time COMMENT system out println sort time t t msec IF if temp input null temp dir delete file temp input get name temp input null else assert heap point writer null heap point writer null CONDITION temp input null EXPR temp input null NAME temp input THEN temp dir delete file temp input get name temp input null BLOCK EXPR temp dir delete file temp input get name CALL temp dir delete file temp input get name NAME temp dir delete file NAME temp dir NAME delete file ARGUMENT LIST ARGUMENT EXPR temp input get name CALL temp input get name NAME temp input get name NAME temp input NAME get name ARGUMENT LIST EXPR temp input null NAME temp input ELSE else assert heap point writer null heap point writer null BLOCK ASSERT assert heap point writer null EXPR heap point writer null NAME heap point writer EXPR heap point writer null NAME heap point writer DECL STMT TYPE final int SPECIFIER final NAME int NAME int INDEX NAME parent splits INIT new int num dims EXPR new int num dims NAME int num dims NAME int INDEX num dims EXPR num dims NAME num dims EXPR build num leaves sorted point writers ord bit set out min packed value max packed value parent splits split packed values leaf block f ps to close heroically CALL build num leaves sorted point writers ord bit set out min packed value max packed value parent splits split packed values leaf block f ps to close heroically NAME build ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR num leaves NAME num leaves ARGUMENT EXPR sorted point writers NAME sorted point writers ARGUMENT EXPR ord bit set NAME ord bit set ARGUMENT EXPR out NAME out ARGUMENT EXPR min packed value NAME min packed value ARGUMENT EXPR max packed value NAME max packed value ARGUMENT EXPR parent splits NAME parent splits ARGUMENT EXPR split packed values NAME split packed values ARGUMENT EXPR leaf block f ps NAME leaf block f ps ARGUMENT EXPR to close heroically NAME to close heroically ASSERT assert arrays equals parent splits new int num dims EXPR arrays equals parent splits new int num dims CALL arrays equals parent splits new int num dims NAME arrays equals NAME arrays NAME equals ARGUMENT LIST ARGUMENT EXPR parent splits NAME parent splits ARGUMENT EXPR new int num dims NAME int num dims NAME int INDEX num dims EXPR num dims NAME num dims FOR for path slice slice sorted point writers slice writer destroy CONTROL path slice slice sorted point writers INIT path slice slice sorted point writers TYPE path slice NAME path slice NAME slice RANGE sorted point writers EXPR sorted point writers NAME sorted point writers BLOCK EXPR slice writer destroy CALL slice writer destroy NAME slice writer destroy NAME slice NAME writer NAME destroy ARGUMENT LIST COMMENT if no exception we should have cleaned everything up ASSERT assert temp dir get created files is empty EXPR temp dir get created files is empty CALL temp dir get created files NAME temp dir get created files NAME temp dir NAME get created files ARGUMENT LIST CALL is empty NAME is empty ARGUMENT LIST COMMENT long t system nano time COMMENT system out println write time t t msec EXPR success true NAME success FINALLY finally if success false io utils delete files ignoring exceptions temp dir temp dir get created files io utils close while handling exception to close heroically BLOCK IF if success false io utils delete files ignoring exceptions temp dir temp dir get created files io utils close while handling exception to close heroically CONDITION success false EXPR success false NAME success THEN io utils delete files ignoring exceptions temp dir temp dir get created files io utils close while handling exception to close heroically BLOCK EXPR io utils delete files ignoring exceptions temp dir temp dir get created files CALL io utils delete files ignoring exceptions temp dir temp dir get created files NAME io utils delete files ignoring exceptions NAME io utils NAME delete files ignoring exceptions ARGUMENT LIST ARGUMENT EXPR temp dir NAME temp dir ARGUMENT EXPR temp dir get created files CALL temp dir get created files NAME temp dir get created files NAME temp dir NAME get created files ARGUMENT LIST EXPR io utils close while handling exception to close heroically CALL io utils close while handling exception to close heroically NAME io utils close while handling exception NAME io utils NAME close while handling exception ARGUMENT LIST ARGUMENT EXPR to close heroically NAME to close heroically COMMENT system out println total nodes inner node count COMMENT write index DECL STMT TYPE long NAME long NAME index fp INIT out get file pointer EXPR out get file pointer CALL out get file pointer NAME out get file pointer NAME out NAME get file pointer ARGUMENT LIST EXPR write index out math to int exact count per leaf leaf block f ps split packed values CALL write index out math to int exact count per leaf leaf block f ps split packed values NAME write index ARGUMENT LIST ARGUMENT EXPR out NAME out ARGUMENT EXPR math to int exact count per leaf CALL math to int exact count per leaf NAME math to int exact NAME math NAME to int exact ARGUMENT LIST ARGUMENT EXPR count per leaf NAME count per leaf ARGUMENT EXPR leaf block f ps NAME leaf block f ps ARGUMENT EXPR split packed values NAME split packed values RETURN return index fp EXPR index fp NAME index fp writes the bkd tree to the provided link index output and returns the file offset where index was written root ROOT writes det tree the compound tree bkd dobj writes tree case output to det output the amod output provided compound output link compound output index nmod to writes output cc writes and conj and writes returns det file the nsubj offset file ccomp returns offset advmod written where nsubjpass written index auxpass written was advcl offset written writes the bkd tree to the provided link index output and returns the file offset where index was written root ROOT writes det tree the compound tree bkd dobj writes tree case output to det output the amod output provided compound output link compound output index nmod to writes output cc writes and conj and writes returns det file the nsubj offset file ccomp returns offset advmod written where nsubjpass written index auxpass written was advcl offset written public NN long RB finish NN index NN output NN root ROOT output compound output index out IN throws VBZ io NN exception NN root ROOT exception compound exception io system out println n bkd tree writer finish point count point count out out heap writer heap point writer root ROOT system case count out compound count println compound count n compound count bkd compound count tree compound count writer compound count finish compound count point compound count count compound count point nmod out system count case writer out case writer out compound writer heap compound writer writer compound writer heap compound writer point nmod out system writer todo specialize the d case it s much faster at indexing time no partitioning on recurse root ROOT specialize nsubj specialize todo det case the compound case d dobj specialize case nsubj s it acl relcl case s advmod faster much advmod s faster case time at compound time indexing nmod at s time neg partitioning no dobj s partitioning case recurse on nmod on partitioning recurse todo specialize the d case it s much faster at indexing time no partitioning on recurse root ROOT specialize nsubj specialize todo det case the compound case d dobj specialize case nsubj s it acl relcl case s advmod faster much advmod s faster case time at compound time indexing nmod at s time neg partitioning no dobj s partitioning case recurse on nmod on partitioning recurse catch user silliness root ROOT silliness compound silliness catch compound silliness user if IN heap NN point NN writer NN root ROOT writer compound writer heap compound writer point null JJ temp NN input NN root ROOT input compound input temp null JJ throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state already RB finished VBN if IN offline JJ point NN writer NN root ROOT writer amod writer offline compound writer point null JJ offline JJ point NN writer NN close NN root ROOT close amod writer offline compound writer point nsubj close writer if IN point NN count NN root ROOT count compound count point throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state must MD index NN at IN least JJS one CD point NN long RB bit RB set VBN root ROOT set advmod bit long advmod set bit ord NN bit NN set NN root ROOT set compound set ord compound set bit if IN num NN dims VBZ root ROOT dims nsubj dims num if IN single JJ value NN per IN doc NN root ROOT value amod value single case doc per nmod per value doc ord NN bit NN set NN root ROOT set compound set ord compound set bit new JJ long RB bit RB set VBN root ROOT set advmod bit long advmod set bit max NN doc NN root ROOT doc compound doc max else RB ord NN bit NN set NN root ROOT set compound set ord compound set bit new JJ long RB bit RB set VBN root ROOT set advmod bit long advmod set bit point NN count NN root ROOT count compound count point else RB ord NN bit NN set NN root ROOT set compound set ord compound set bit null JJ long RB count NN per IN leaf NN root ROOT count case leaf per nmod per count leaf point NN count NN root ROOT count compound count point long RB inner JJ node NN count NN root ROOT count amod count inner compound count node while IN count NN per IN leaf NN root ROOT count case leaf per nmod per count leaf max NN points NNS in IN leaf NN node NN root ROOT points compound points max case node in compound node leaf nmod in points node count NN per IN leaf NN root ROOT count case leaf per nmod per count leaf count NN per IN leaf NN root ROOT count case leaf per nmod per count leaf inner JJ node NN count NN root ROOT count amod count inner compound count node int NN num NN leaves VBZ root ROOT leaves nsubj leaves num int NN inner JJ node NN count NN root ROOT count amod count inner compound count node check NN max NN leaf NN node NN count NN root ROOT count compound count check compound count max compound count leaf compound count node num NN leaves VBZ root ROOT leaves nsubj leaves num note we could save the here to use a bit less heap at search time but then we d need a somewhat costly check at each root ROOT note nsubj save we nsubj xsubj use we aux save could acl relcl note save det here the advmod save here mark use to xcomp save use det bit a nmod npmod less bit amod heap less dobj use heap case time at compound time search nmod at use time cc note but advmod need then dep need we nsubj need d conj but note need det check a advmod costly somewhat amod check costly dobj need check case each at nmod at need each step of the recursion to recompute the split dim root ROOT step case recursion of det recursion the nmod of step recursion mark recompute to acl to step recompute det dim the amod dim split dobj recompute dim indexed by node id but first root node id is we do because the lead byte at each recursion says which dim we split on root ROOT do csubj do indexed case id by compound id node nmod by indexed id cc id but amod id first compound id root compound id node nmod by indexed id conj but id id aux do is nsubj do we mark says because det byte the compound byte lead nsubj says byte case recursion at det recursion each nmod at byte recursion advcl because do says nsubj dim which ccomp says dim nsubj split we ccomp dim split nmod split on indexed by node id but first root node id is we do because the lead byte at each recursion says which dim we split on root ROOT do csubj do indexed case id by compound id node nmod by indexed id cc id but amod id first compound id root compound id node nmod by indexed id conj but id id aux do is nsubj do we mark says because det byte the compound byte lead nsubj says byte case recursion at det recursion each nmod at byte recursion advcl because do says nsubj dim which ccomp says dim nsubj split we ccomp dim split nmod split on byte NN split JJ packed JJ values NNS root ROOT values amod values split amod values packed new JJ byte NN math NN to TO int VB exact JJ root ROOT math mark int to acl to math int xcomp int exact num NN leaves VBZ root ROOT leaves nsubj leaves num bytes NNS per IN dim NN root ROOT bytes case dim per nmod per bytes dim because leaf count is power of e g and inner node count is power of minus e g root ROOT power mark power because compound count leaf nsubj power count cop power is csubj power power case count of amod count e compound count g cc g and conj and g inner compound count inner compound count node nmod of power count cop power is case g of dep g minus dep g e nmod of power g long RB leaf NN block NN f FW ps FW root ROOT block compound block leaf compound ps f dep block ps new JJ long RB num NN leaves VBZ root ROOT leaves nsubj leaves num make sure the math above worked root ROOT make xcomp make sure det math the dep sure math mark worked above acl above math worked assert VB point NN count NN root ROOT count compound count point num NN leaves VBZ root ROOT leaves nsubj leaves num max NN points NNS in IN leaf NN node NN root ROOT points compound points max case node in compound node leaf nmod in points node point NN count NN root ROOT count compound count point point NN count NN root ROOT count compound count point num NN leaves VBZ root ROOT leaves nsubj leaves num num NN leaves VBZ root ROOT leaves nsubj leaves num max NN points NNS in IN leaf NN node NN root ROOT points compound points max case node in compound node leaf nmod in points node max NN points NNS in IN leaf NN node NN root ROOT points compound points max case node in compound node leaf nmod in points node sort all docs once by each dimension root ROOT docs compound docs sort det docs all advmod dimension once case dimension by det dimension each nmod by docs dimension path NN slice NN root ROOT slice compound slice path sorted VBN point NN writers NNS root ROOT writers amod writers sorted compound writers point new JJ path NN slice NN root ROOT slice compound slice path num NN dims VBZ root ROOT dims nsubj dims num this is only used on exception on normal code paths we close all files we opened root ROOT used nsubjpass used this auxpass used is advmod used only case exception on nmod on files exception case paths on amod paths normal compound paths code nmod on exception paths nsubj files we advmod files close det files all nmod used files nsubj opened we acl relcl files opened list NN closeable JJ to TO close VB heroically RB root ROOT close mark close to advmod close heroically new JJ array NN list NN root ROOT list compound list array boolean NN success NN false JJ try VB long t system nano time root ROOT system advmod system long compound system t amod time nano dep system time for IN int NN dim NN dim NN num NN dims VBZ root ROOT dims nsubj dims num dim NN sorted VBN point NN writers NNS root ROOT writers amod writers sorted compound writers point dim NN new JJ path NN slice NN root ROOT slice compound slice path sort NN dim NN point NN count NN root ROOT count compound count point long t system nano time root ROOT system advmod system long compound system t amod time nano dep system time system out println sort time t t msec root ROOT system case msec out compound msec println compound msec sort compound msec time compound msec t compound msec t nmod out system msec if IN temp NN input NN root ROOT input compound input temp null JJ temp NN dir NN delete VB file NN root ROOT delete compound dir temp nsubj delete dir dobj delete file temp NN input NN get VB name NN root ROOT get compound input temp nsubj get input dobj get name temp NN input NN root ROOT input compound input temp null JJ else RB assert VB heap NN point NN writer NN root ROOT writer compound writer heap compound writer point null JJ heap NN point NN writer NN root ROOT writer compound writer heap compound writer point null JJ final JJ int NN parent NN splits VBZ root ROOT splits nsubj splits parent new JJ int NN num NN dims VBZ root ROOT dims nsubj dims num build VB num NN leaves VBZ root ROOT leaves nsubj leaves num sorted VBN point NN writers NNS root ROOT writers amod writers sorted compound writers point ord NN bit NN set NN root ROOT set compound set ord compound set bit out IN min NN packed VBD value NN root ROOT packed nsubj packed min dobj packed value max NN packed VBD value NN root ROOT packed nsubj packed max dobj packed value parent NN splits VBZ root ROOT splits nsubj splits parent split JJ packed JJ values NNS root ROOT values amod values split amod values packed leaf NN block NN f FW ps FW root ROOT block compound block leaf compound ps f dep block ps to TO close VB heroically RB root ROOT close mark close to advmod close heroically assert VB arrays NNS equals VBZ root ROOT equals nsubj equals arrays parent NN splits VBZ root ROOT splits nsubj splits parent new JJ int NN num NN dims VBZ root ROOT dims nsubj dims num for IN path NN slice NN root ROOT slice compound slice path slice NN sorted VBN point NN writers NNS root ROOT writers amod writers sorted compound writers point slice NN writer NN destroy VBP root ROOT destroy compound writer slice nsubj destroy writer if no exception we should have cleaned everything up root ROOT if neg exception no root if exception nsubj cleaned we aux cleaned should aux cleaned have acl relcl exception cleaned dobj cleaned everything advmod exception up assert VB temp NN dir NN get VB created VBN files NNS root ROOT created compound dir temp nsubjpass created dir auxpass created get dobj created files is VBZ empty JJ root ROOT empty cop empty is long t system nano time root ROOT system advmod system long compound system t amod time nano dep system time system out println write time t t msec root ROOT system compound prt system out nsubj write println ccomp system write compound msec time compound msec t compound msec t dobj write msec success NN true JJ finally RB if IN success NN false JJ io NN utils NNS delete VBP files NNS ignoring VBG exceptions NNS root ROOT delete compound utils io nsubj delete utils dobj delete files acl files ignoring dobj ignoring exceptions temp NN dir SYM root ROOT temp dep temp dir temp NN dir NN get VB created VBN files NNS root ROOT created compound dir temp nsubjpass created dir auxpass created get dobj created files io NN utils NNS close RB while IN handling VBG exception NN root ROOT utils compound utils io advmod handling close mark handling while acl while utils handling dobj handling exception to TO close VB heroically RB root ROOT close mark close to advmod close heroically system out println total nodes inner node count root ROOT system case nodes out compound nodes println amod nodes total nmod out system nodes amod count inner compound count node dep nodes count write index root ROOT write dobj write index long RB index NN fp NN root ROOT fp compound fp index out IN get VB file VB pointer NN root ROOT get mark get out xcomp get file dobj file pointer write VB index NN root ROOT write dobj write index out IN math NN to TO int VB exact JJ root ROOT math mark int to acl to math int xcomp int exact count NN per IN leaf NN root ROOT count case leaf per nmod per count leaf leaf NN block NN f FW ps FW root ROOT block compound block leaf compound ps f dep block ps split JJ packed JJ values NNS root ROOT values amod values split amod values packed return NN index NN fp NN root ROOT fp compound fp index,0,N/A,ArgoUML0.34/argouml/src/argouml-core-umlpropertypanels/src/org/argouml/core/propertypanels/ui/LabelledLayout.java,172
COMMENT get the wrapped instance by code reader code as long as this reader is an instance of link filter leaf reader FUNCTION SPECIFIER public SPECIFIER static TYPE leaf reader NAME leaf reader NAME unwrap PARAMETER LIST leaf reader reader PARAMETER leaf reader reader TYPE leaf reader NAME leaf reader NAME reader BLOCK WHILE while reader instanceof filter leaf reader reader filter leaf reader reader in CONDITION reader instanceof filter leaf reader EXPR reader instanceof filter leaf reader NAME reader NAME filter leaf reader BLOCK EXPR reader filter leaf reader reader in NAME reader NAME filter leaf reader NAME reader NAME in RETURN return reader EXPR reader NAME reader get the wrapped instance by code reader code as long as this reader is root ROOT get det instance the amod instance wrapped dobj get instance case code by compound code code compound code reader nmod by get code advmod long as advmod get long mark is as det reader this nsubj is reader advcl as long is an instance of link filter leaf reader root ROOT instance det instance an case reader of compound reader link compound reader filter compound reader leaf nmod of instance reader an instance of link filter leaf reader root ROOT instance det instance an case reader of compound reader link compound reader filter compound reader leaf nmod of instance reader public NN static JJ leaf NN reader NN root ROOT reader compound reader leaf unwrap NN leaf NN reader NN root ROOT reader compound reader leaf reader NN while IN reader NN instanceof NN filter NN leaf NN reader NN root ROOT reader compound reader filter compound reader leaf reader NN filter NN leaf NN reader NN root ROOT reader compound reader filter compound reader leaf reader NN in IN return NN reader NN,1,C2,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT extension of field infos DECL STMT SPECIFIER static TYPE final bytes ref SPECIFIER final NAME bytes ref NAME payloads INIT new bytes ref payloads EXPR new bytes ref payloads CALL bytes ref payloads NAME bytes ref ARGUMENT LIST ARGUMENT EXPR payloads extension of field infos root ROOT extension case infos of compound infos field nmod of extension infos static JJ final JJ bytes NNS ref VBP root ROOT ref nsubj ref bytes payloads NNS new JJ bytes NNS ref VBP root ROOT ref nsubj ref bytes payloads NNS,1,E1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,190
COMMENT extension of field infos DECL STMT SPECIFIER static TYPE final bytes ref SPECIFIER final NAME bytes ref NAME num atts INIT new bytes ref attributes EXPR new bytes ref attributes CALL bytes ref attributes NAME bytes ref ARGUMENT LIST ARGUMENT EXPR attributes extension of field infos root ROOT extension case infos of compound infos field nmod of extension infos static JJ final JJ bytes NNS ref VBP root ROOT ref nsubj ref bytes num NN atts NNS root ROOT atts compound atts num new JJ bytes NNS ref VBP root ROOT ref nsubj ref bytes attributes NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,190
COMMENT extension of field infos DECL STMT SPECIFIER static TYPE final bytes ref SPECIFIER final NAME bytes ref NAME numfields INIT new bytes ref number of fields EXPR new bytes ref number of fields CALL bytes ref number of fields NAME bytes ref ARGUMENT LIST ARGUMENT EXPR number of fields extension of field infos root ROOT extension case infos of compound infos field nmod of extension infos static JJ final JJ bytes NNS ref VBP root ROOT ref nsubj ref bytes numfields NNS new JJ bytes NNS ref VBP root ROOT ref nsubj ref bytes number NN of IN fields NNS,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,190
DECL STMT SPECIFIER private TYPE boolean NAME boolean NAME cache scores private JJ boolean NN cache NN scores NNS root ROOT scores compound scores cache,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER static TYPE final int SPECIFIER final NAME int NAME output flags num bits INIT EXPR static JJ final JJ int NN output NN flags NNS num VBP bits NNS root ROOT num compound flags output nsubj num flags dobj num bits,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT every th term is indexed DECL STMT SPECIFIER public TYPE final static int SPECIFIER final SPECIFIER static NAME int NAME default index interval bits INIT EXPR every th term is indexed root ROOT indexed det term every det term th nsubjpass indexed term auxpass indexed is public NN final JJ static JJ int NN default NN index NN interval JJ bits NNS root ROOT bits compound bits default compound bits index amod bits interval,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,190
DECL STMT SPECIFIER public SPECIFIER static TYPE boolean NAME boolean NAME verbose files INIT true EXPR true public NN static JJ boolean NN verbose JJ files NNS root ROOT files amod files verbose true JJ,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT returns true if the given feature is requested in the flags false otherwise DECL STMT SPECIFIER private TYPE attribute source NAME attribute source NAME atts INIT null EXPR null returns true if the given feature is requested in the flags false otherwise root ROOT returns amod returns true mark requested if det feature the amod feature given nsubjpass requested feature auxpass requested is advcl if true requested case flags in det flags the nmod in requested flags amod flags false advmod false otherwise private JJ attribute NN source NN root ROOT source compound source attribute atts NNS null JJ given false ANTONYM ANTONYM given feature ANTONYM ANTONYM given flags ANTONYM ANTONYM true false ANTONYM ANTONYM false null SYNONYM SYNONYM,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT map of per field analyzers DECL STMT SPECIFIER protected TYPE map string analyzer NAME map string analyzer NAME map ARGUMENT LIST ARGUMENT NAME string ARGUMENT NAME analyzer NAME field analyzer map of per field analyzers root ROOT map case analyzers of case analyzers per compound analyzers field nmod per map analyzers protected VBN map NN string NN analyzer NN field NN analyzer NN root ROOT analyzer compound analyzer field,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
DECL STMT SPECIFIER private TYPE packed long values builder NAME packed long values builder NAME packed long values NAME builder NAME pending private JJ packed JJ long JJ values NNS builder NN root ROOT builder amod values packed amod values long nsubj builder values pending VBG,1,D2,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT true if we have so many values that we must write ords using long bytes instead of int bytes DECL STMT SPECIFIER protected TYPE final boolean SPECIFIER final NAME boolean NAME long ords true if we have so many values that we must write ords using long bytes instead of int bytes root ROOT true mark have if nsubj have we advcl if true have advmod many so amod values many dobj have values mark write that nsubj write we aux write must ccomp values write dobj write ords xcomp write using amod bytes long dobj using bytes case bytes instead mwe instead of compound bytes int nmod instead of using bytes protected VBN final JJ boolean NN long RB ords NNS root ROOT ords amod ords long,1,E1,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,57
DECL STMT TYPE final double SPECIFIER final NAME double NAME radius meters final JJ double RB radius NN meters NNS root ROOT meters compound meters radius,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT enables caching for the second pass search the cache will not grow over a specified limit in mb the cache is filled during the first pass searched and then replayed during the second pass searched if the cache grows beyond the specified limit then the cache is purged and not used in the second pass search param max cache rammb the maximum amount in mb the cache is allowed to hold param cache scores whether to cache the scores return code this code FUNCTION SPECIFIER public TYPE grouping search NAME grouping search NAME set caching in mb PARAMETER LIST double max cache rammb boolean cache scores PARAMETER double max cache rammb TYPE double NAME double NAME max cache rammb PARAMETER boolean cache scores TYPE boolean NAME boolean NAME cache scores BLOCK EXPR this max cache rammb max cache rammb NAME this max cache rammb NAME this NAME max cache rammb NAME max cache rammb EXPR this max docs to cache null NAME this max docs to cache NAME this NAME max docs to cache EXPR this cache scores cache scores NAME this cache scores NAME this NAME cache scores NAME cache scores RETURN return this EXPR this NAME this enables caching for the second pass search the cache will not grow over a specified limit in mb root ROOT enables xcomp enables caching case search for det search the amod search second compound search pass nmod for caching search det cache the nsubj grow cache aux grow will neg grow not acl relcl search grow case limit over det limit a amod limit specified nmod over grow limit case mb in nmod in limit mb enables caching for the second pass search the cache will not grow over a specified limit in mb root ROOT enables xcomp enables caching case search for det search the amod search second compound search pass nmod for caching search det cache the nsubj grow cache aux grow will neg grow not acl relcl search grow case limit over det limit a amod limit specified nmod over grow limit case mb in nmod in limit mb the cache is filled during the first pass searched and then replayed during the second pass searched root ROOT filled det cache the nsubjpass filled cache auxpass filled is case pass during det pass the amod pass first nmod during filled pass dep filled searched cc searched and advmod replayed then dep filled replayed conj and searched replayed case pass during det pass the amod pass second nmod during searched pass dep filled searched if the cache grows beyond the specified limit then the cache is purged and not used in the second pass search root ROOT grows mark grows if det cache the nsubj grows cache case limit beyond det limit the amod limit specified nmod beyond grows limit advmod purged then det cache the nsubjpass purged cache nsubjpass used cache auxpass purged is ccomp grows purged cc purged and neg used not ccomp grows used conj and purged used case search in det search the amod search second compound search pass nmod in used search param max cache rammb the maximum amount in mb the cache is allowed to hold root ROOT rammb compound rammb param compound rammb max compound rammb cache det amount the compound amount maximum dep rammb amount case mb in nmod in amount mb det cache the nsubjpass allowed cache nsubj xsubj hold cache auxpass allowed is acl relcl amount allowed mark hold to xcomp allowed hold param cache scores whether to cache the scores root ROOT scores compound scores param compound scores cache dep scores whether case cache to root whether cache det scores the dobj cache scores return code this code root ROOT code compound code return det code this dobj code code public NN grouping VBG search NN root ROOT grouping dobj grouping search set VBN caching NN in IN mb NN root ROOT set dobj set caching case mb in nmod in set mb double RB max NN cache NN rammb NN root ROOT rammb compound rammb max compound rammb cache boolean NN cache NN scores NNS root ROOT scores compound scores cache this DT max NN cache NN rammb NN max NN cache NN rammb NN root ROOT rammb compound rammb max compound rammb cache this DT max NN docs NNS to TO cache NN null JJ this DT cache NN scores NNS cache NN scores NNS root ROOT scores compound scores cache return NN this DT allowed hold ANTONYM ANTONYM filled hold ANTONYM ANTONYM hold return ANTONYM ANTONYM hold scores ANTONYM ANTONYM limit hold ANTONYM ANTONYM pass hold ANTONYM ANTONYM used hold ANTONYM ANTONYM will allowed ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/tomcat/dbcp/dbcp2/datasources/PerUserPoolDataSource.java,79
COMMENT the number of separate buckets for weights discretization the more buckets the more fine grained term weights priorities can be assigned the speed of lookup will not decrease for prefixes which have highly weighted completions because these are filled in first but will decrease significantly for low weighted terms but these should be infrequent so it is all right p the number of buckets must be within range DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME buckets the number of separate buckets for weights discretization the more root ROOT discretization det number the nsubj discretization number case buckets of amod buckets separate nmod of number buckets case weights for nmod for buckets weights det more the dobj discretization more the number of separate buckets for weights discretization the more root ROOT discretization det number the nsubj discretization number case buckets of amod buckets separate nmod of number buckets case weights for nmod for buckets weights det more the dobj discretization more buckets the more fine grained term weights priorities can be assigned root ROOT buckets det priorities the advmod fine more amod priorities fine amod priorities grained compound priorities term compound priorities weights nsubjpass assigned priorities aux assigned can auxpass assigned be acl relcl buckets assigned the speed of lookup will not decrease for prefixes which have root ROOT decrease det speed the nsubj decrease speed case lookup of nmod of speed lookup aux decrease will neg decrease not case prefixes for nmod for decrease prefixes nsubj have prefixes ref prefixes which acl relcl prefixes have highly weighted completions because these are filled in first but will root ROOT completions advmod weighted highly amod completions weighted mark filled because nsubjpass filled these auxpass filled are dep completions filled case first in advcl in filled first cc filled but dep completions will conj but filled will decrease significantly for low weighted terms but these should be root ROOT decrease advmod decrease significantly case terms for amod terms low amod terms weighted nmod for decrease terms cc decrease but nsubj be these aux be should conj but decrease be infrequent so it is all right root ROOT infrequent mark right so nsubj right it cop right is advmod right all advcl so infrequent right p the number of buckets must be within range root ROOT range det number the nsubj range number case buckets of nmod of number buckets aux range must cop range be case range within private JJ final JJ int NN buckets NNS fine low ANTONYM ANTONYM first final ANTONYM ANTONYM have filled ANTONYM ANTONYM low final ANTONYM ANTONYM fine right SYNONYM SYNONYM,0,N/A,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,64
COMMENT classes options that don t produce consistent graph offsets DECL STMT SPECIFIER private SPECIFIER static TYPE final map constructor predicate object SPECIFIER final NAME map constructor predicate object NAME map ARGUMENT LIST ARGUMENT NAME constructor NAME constructor ARGUMENT LIST ARGUMENT NAME ARGUMENT NAME predicate object NAME predicate ARGUMENT LIST ARGUMENT NAME object NAME object INDEX NAME broken offsets constructors INIT new hash map EXPR new hash map CALL hash map NAME hash map NAME hash map ARGUMENT LIST ARGUMENT LIST classes options that don t produce consistent graph offsets root ROOT produce compound options classes nsubj don options nsubj produce options ref options that acl relcl options don dobj don t amod offsets consistent compound offsets graph dobj produce offsets private JJ static JJ final JJ map NN constructor NN predicate NN object NN broken JJ offsets NNS constructors NNS root ROOT constructors amod offsets broken nsubj constructors offsets new JJ hash VB map NN root ROOT hash dobj hash map consistent static ANTONYM ANTONYM,0,N/A,tomcat/java/org/apache/catalina/connector/CoyoteOutputStream.java,150
COMMENT private final static boolean save dot files false DECL STMT SPECIFIER static TYPE final int SPECIFIER final NAME int NAME output flags num bits INIT EXPR private final static boolean save dot files false root ROOT false amod boolean private amod boolean final amod boolean static nsubj false boolean case files save compound files dot nmod save boolean files static JJ final JJ int NN output NN flags NNS num VBP bits NNS root ROOT num compound flags output nsubj num flags dobj num bits,0,N/A,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE double NAME double NAME get radius PARAMETER LIST BLOCK COMMENT compute the extent and divide by two DECL STMT TYPE double NAME double NAME extent INIT right lon left lon EXPR right lon left lon NAME right lon NAME left lon IF if extent extent math pi CONDITION extent EXPR extent NAME extent THEN extent math pi BLOCK EXPR extent math pi NAME extent NAME math pi NAME math NAME pi RETURN return math max math pi extent EXPR math max math pi extent CALL math max math pi extent NAME math max NAME math NAME max ARGUMENT LIST ARGUMENT EXPR math pi NAME math pi NAME math NAME pi ARGUMENT EXPR extent NAME extent override NN public NN double RB get VB radius NNS root ROOT get dobj get radius compute the extent and divide by two root ROOT compute det extent the dobj compute extent cc extent and dobj compute divide conj and extent divide case two by nmod by compute two double RB extent NN right JJ lon NN root ROOT lon amod lon right left RB lon NN root ROOT lon advmod lon left if IN extent NN extent NN math NN pi NN root ROOT pi compound pi math return NN math NN max NN root ROOT max compound max math math NN pi NN root ROOT pi compound pi math extent NN,0,N/A,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,768
DECL STMT TYPE final monotonic block packed reader SPECIFIER final NAME monotonic block packed reader NAME addresses final JJ monotonic JJ block NN packed VBD reader NN root ROOT packed amod block monotonic nsubj packed block dobj packed reader addresses NNS,1,E1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER private TYPE int NAME int NAME doc base private JJ int NN doc NN base NN root ROOT base compound base doc,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
DECL STMT SPECIFIER public SPECIFIER static TYPE final token SPECIFIER final NAME token NAME token INDEX NAME four gram tokens without unigrams min four gram INIT new token create token please divide this sentence create token divide this sentence into create token this sentence into shingles EXPR new token create token please divide this sentence create token divide this sentence into create token this sentence into shingles NAME token NAME token INDEX BLOCK EXPR create token please divide this sentence CALL create token please divide this sentence NAME create token ARGUMENT LIST ARGUMENT EXPR please divide this sentence ARGUMENT EXPR ARGUMENT EXPR EXPR create token divide this sentence into CALL create token divide this sentence into NAME create token ARGUMENT LIST ARGUMENT EXPR divide this sentence into ARGUMENT EXPR ARGUMENT EXPR EXPR create token this sentence into shingles CALL create token this sentence into shingles NAME create token ARGUMENT LIST ARGUMENT EXPR this sentence into shingles ARGUMENT EXPR ARGUMENT EXPR public NN static JJ final JJ token JJ four CD gram NN tokens NNS without IN unigrams NNS min NN four CD gram NN root ROOT gram nummod tokens four compound tokens gram nsubj gram tokens case min without compound min unigrams nmod without tokens min nummod min four new JJ token JJ create VB token JJ root ROOT create dobj create token please VB divide NN this DT sentence NN create VB token JJ root ROOT create dobj create token divide NN this DT sentence NN into IN create VB token JJ root ROOT create dobj create token this DT sentence NN into IN shingles NNS,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT total time spent in milliseconds DECL STMT SPECIFIER public TYPE long NAME long NAME total time ms total time spent in milliseconds root ROOT time amod time total acl time spent case milliseconds in nmod in spent milliseconds public NN long RB total JJ time NN ms NNS root ROOT time amod time total dep time ms,0,N/A,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,57
DECL STMT SPECIFIER private TYPE volatile int SPECIFIER volatile NAME int NAME num pending INIT EXPR private JJ volatile JJ int NN num NN pending VBG root ROOT num acl num pending,0,N/A,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
DECL STMT SPECIFIER private TYPE final boolean SPECIFIER final NAME boolean NAME close sub readers private JJ final JJ boolean NN close RB sub JJ readers NNS root ROOT readers amod readers close amod readers sub,0,N/A,Lucene/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java,54
COMMENT ram instances we have already loaded DECL STMT SPECIFIER static TYPE final byte SPECIFIER final NAME byte NAME bytes INIT EXPR ram instances we have already loaded root ROOT instances compound instances ram nsubj loaded we aux loaded have advmod loaded already acl relcl instances loaded static JJ final JJ byte NN bytes NNS,1,E1,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
COMMENT holds the per document ords or a pointer to the ords DECL STMT SPECIFIER protected TYPE int NAME int NAME int INDEX NAME index holds the per document ords or a pointer to the ords root ROOT holds det ords the compound ords per compound ords document dobj holds ords cc ords or det pointer a dobj holds pointer conj or ords pointer case ords to det ords the nmod to holds ords holds the per document ords or a pointer to the ords root ROOT holds det ords the compound ords per compound ords document dobj holds ords cc ords or det pointer a dobj holds pointer conj or ords pointer case ords to det ords the nmod to holds ords protected VBN int NN index NN,1,D1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT throws already closed exception if this directory is closed FUNCTION SPECIFIER protected TYPE void NAME void NAME ensure open PARAMETER LIST THROWS throws already closed exception ARGUMENT EXPR already closed exception NAME already closed exception BLOCK throws already closed exception if this directory is closed root ROOT throws advmod closed already amod exception closed dobj throws exception mark closed if det directory this nsubjpass closed directory auxpass closed is advcl if throws closed protected VBN void NN ensure VB open JJ root ROOT ensure xcomp ensure open throws VBZ already RB closed VBN exception NN root ROOT exception advmod closed already amod exception closed,0,N/A,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,57
COMMENT gc able DECL STMT SPECIFIER private TYPE map thread t NAME map thread t NAME map ARGUMENT LIST ARGUMENT NAME thread ARGUMENT NAME t NAME hard refs INIT new weak hash map EXPR new weak hash map CALL weak hash map NAME weak hash map NAME weak hash map ARGUMENT LIST ARGUMENT LIST gc able root ROOT able nsubj able gc private JJ map NN thread NN t NN hard RB refs NNS root ROOT refs advmod refs hard new JJ weak JJ hash NN map NN root ROOT map amod map weak compound map hash,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/AbstractMessageNotationUml.java,1691
COMMENT extension of field infos DECL STMT SPECIFIER static TYPE final bytes ref SPECIFIER final NAME bytes ref NAME indexoptions INIT new bytes ref index options EXPR new bytes ref index options CALL bytes ref index options NAME bytes ref ARGUMENT LIST ARGUMENT EXPR index options extension of field infos root ROOT extension case infos of compound infos field nmod of extension infos static JJ final JJ bytes NNS ref VBP root ROOT ref nsubj ref bytes indexoptions NNS new JJ bytes NNS ref VBP root ROOT ref nsubj ref bytes index NN options NNS,1,E1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/ui/cmd/ShortcutMgr.java,190
COMMENT note stateful DECL STMT SPECIFIER protected TYPE final int SPECIFIER final NAME int NAME max passages note stateful root ROOT stateful compound stateful note protected VBN final JJ int NN max NN passages NNS root ROOT passages compound passages max,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT total number of references to term numbers DECL STMT SPECIFIER protected TYPE long NAME long NAME term instances total number of references to term numbers root ROOT number amod number total case references of nmod of number references mark term to acl to references term dobj term numbers total number of references to term numbers root ROOT number amod number total case references of nmod of number references mark term to acl to references term dobj term numbers protected VBN long RB term NN instances NNS root ROOT instances compound instances term,1,E1,tomcat/java/org/apache/tomcat/util/buf/HexUtils.java,57
COMMENT number of temporary files created when merging partitions DECL STMT SPECIFIER public TYPE int NAME int NAME temp merge files number of temporary files created when merging partitions root ROOT number case files of amod files temporary nmod of number files acl files created advmod merging when advcl created merging dobj merging partitions public NN int NN temp NN merge VBP files NNS root ROOT merge nsubj merge temp dobj merge files,1,E1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/uml/diagram/state/ui/FigStateVertex.java,169
COMMENT maximum graph paths to index for a single analyzed surface form this only matters if your analyzer makes lots of alternate paths e g contains synonym filter DECL STMT SPECIFIER private TYPE final int SPECIFIER final NAME int NAME max graph expansions maximum graph paths to index for a single analyzed root ROOT paths amod paths maximum compound paths graph case index to nmod to paths index case analyzed for det analyzed a amod analyzed single nmod for paths analyzed surface form this only matters if your analyzer root ROOT form compound form surface det matters this amod matters only dobj form matters case analyzer if nmod poss analyzer your nmod if form analyzer surface form this only matters if your analyzer root ROOT form compound form surface det matters this amod matters only dobj form matters case analyzer if nmod poss analyzer your nmod if form analyzer makes lots of alternate paths e g contains root ROOT contains dep contains makes det qmod paths lots mwe lots of amod paths alternate dep contains paths dep contains e nsubj contains g synonym filter root ROOT filter compound filter synonym synonym filter root ROOT filter compound filter synonym private JJ final JJ int NN max NN graph NN expansions NNS root ROOT expansions compound expansions max compound expansions graph makes contains ANTONYM ANTONYM,0,N/A,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT private final static boolean save dot files false DECL STMT SPECIFIER static TYPE final int SPECIFIER final NAME int NAME output flag has terms INIT x EXPR x private final static boolean save dot files false root ROOT false amod boolean private amod boolean final amod boolean static nsubj false boolean case files save compound files dot nmod save boolean files static JJ final JJ int NN output NN flag NN has VBZ terms NNS root ROOT has compound flag output nsubj has flag dobj has terms x NN save has ANTONYM ANTONYM,1,D2,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
DECL STMT SPECIFIER private TYPE packed long values builder NAME packed long values builder NAME packed long values NAME builder NAME pending private JJ packed JJ long JJ values NNS builder NN root ROOT builder amod values packed amod values long nsubj builder values pending VBG,1,D2,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint.java,151
COMMENT compute the longitude for the point return the longitude value uses if there is no computable longitude FUNCTION SPECIFIER public TYPE double NAME double NAME get longitude PARAMETER LIST BLOCK DECL STMT TYPE double NAME double NAME lon INIT this longitude EXPR this longitude NAME this longitude NAME this NAME longitude COMMENT volatile read once IF if lon double negative infinity if math abs x minimum resolution math abs y minimum resolution this longitude lon else this longitude lon math atan y x CONDITION lon double negative infinity EXPR lon double negative infinity NAME lon NAME double negative infinity NAME double NAME negative infinity THEN if math abs x minimum resolution math abs y minimum resolution this longitude lon else this longitude lon math atan y x BLOCK IF if math abs x minimum resolution math abs y minimum resolution this longitude lon else this longitude lon math atan y x CONDITION math abs x minimum resolution math abs y minimum resolution EXPR math abs x minimum resolution math abs y minimum resolution CALL math abs x NAME math abs NAME math NAME abs ARGUMENT LIST ARGUMENT EXPR x NAME x NAME minimum resolution CALL math abs y NAME math abs NAME math NAME abs ARGUMENT LIST ARGUMENT EXPR y NAME y NAME minimum resolution THEN this longitude lon BLOCK EXPR this longitude lon NAME this longitude NAME this NAME longitude NAME lon ELSE else this longitude lon math atan y x BLOCK EXPR this longitude lon math atan y x NAME this longitude NAME this NAME longitude NAME lon CALL math atan y x NAME math atan NAME math NAME atan ARGUMENT LIST ARGUMENT EXPR y NAME y ARGUMENT EXPR x NAME x RETURN return lon EXPR lon NAME lon compute the longitude for the point root ROOT compute det longitude the dobj compute longitude case point for det point the nmod for compute point return the longitude value uses if there is no computable longitude root ROOT return det value the compound value longitude nsubj uses value ccomp return uses mark is if expl is there advcl if uses is neg longitude no amod longitude computable nsubj is longitude return the longitude value uses if there is no computable longitude root ROOT return det value the compound value longitude nsubj uses value ccomp return uses mark is if expl is there advcl if uses is neg longitude no amod longitude computable nsubj is longitude public NN double RB get VB longitude NN root ROOT get dobj get longitude double RB lon NN this DT longitude NN volatile JJ read NN once RB if IN lon NN double JJ negative JJ infinity NN if IN math NN abs NNS root ROOT abs compound abs math x NN minimum JJ resolution NN root ROOT resolution compound resolution minimum math NN abs NNS root ROOT abs compound abs math y NN minimum JJ resolution NN root ROOT resolution compound resolution minimum this DT longitude NN lon NN else RB this DT longitude NN lon NN math NN atan NN root ROOT atan compound atan math y NN x NN return NN lon NN,1,a1,tomcat/test/org/apache/catalina/authenticator/TestNonLoginAndBasicAuthenticator.java,79
DECL STMT TYPE long NAME long NAME missing bytes long RB missing VBG bytes NNS root ROOT bytes amod bytes missing,1,E1,Lucene/lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer.java,760
FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE double NAME double NAME get radius PARAMETER LIST BLOCK DECL STMT TYPE double NAME double NAME top angle INIT center point arc distance rhc EXPR center point arc distance rhc CALL center point arc distance rhc NAME center point arc distance NAME center point NAME arc distance ARGUMENT LIST ARGUMENT EXPR rhc NAME rhc DECL STMT TYPE double NAME double NAME bottom angle INIT center point arc distance lhc EXPR center point arc distance lhc CALL center point arc distance lhc NAME center point arc distance NAME center point NAME arc distance ARGUMENT LIST ARGUMENT EXPR lhc NAME lhc RETURN return math max top angle bottom angle EXPR math max top angle bottom angle CALL math max top angle bottom angle NAME math max NAME math NAME max ARGUMENT LIST ARGUMENT EXPR top angle NAME top angle ARGUMENT EXPR bottom angle NAME bottom angle override NN public NN double RB get VB radius NNS root ROOT get dobj get radius double RB top JJ angle NN root ROOT angle amod angle top center NN point NN arc NN distance NN root ROOT distance compound distance center compound distance point compound distance arc rhc NN double RB bottom JJ angle NN root ROOT angle amod angle bottom center NN point NN arc NN distance NN root ROOT distance compound distance center compound distance point compound distance arc lhc NN return NN math NN max NN root ROOT max compound max math top JJ angle NN root ROOT angle amod angle top bottom JJ angle NN root ROOT angle amod angle bottom,1,A1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public SPECIFIER synchronized TYPE int NAME int NAME get name index PARAMETER LIST BLOCK IF if name index name index name counter increment and get CONDITION name index EXPR name index NAME name index THEN name index name counter increment and get BLOCK EXPR name index name counter increment and get NAME name index CALL name counter increment and get NAME name counter increment and get NAME name counter NAME increment and get ARGUMENT LIST RETURN return name index EXPR name index NAME name index public NN synchronized VBN int NN get VB name NN index NN root ROOT get compound index name dobj get index if IN name NN index NN root ROOT index compound index name name NN index NN root ROOT index compound index name name NN counter RB increment NN and CC get VB root ROOT increment compound increment name advmod increment counter cc increment and conj and increment get return NN name NN index NN root ROOT index compound index name,1,a1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER protected TYPE project NAME project NAME get project PARAMETER LIST BLOCK IF if project null return project CONDITION project null EXPR project null NAME project THEN return project BLOCK RETURN return project EXPR project NAME project COMMENT initializing project EXPR project new project NAME project CALL project NAME project ARGUMENT LIST EXPR logger new jasper ant logger NAME logger CALL jasper ant logger NAME jasper ant logger ARGUMENT LIST EXPR logger set output print stream system out CALL logger set output print stream system out NAME logger set output print stream NAME logger NAME set output print stream ARGUMENT LIST ARGUMENT EXPR system out NAME system out NAME system NAME out EXPR logger set error print stream system err CALL logger set error print stream system err NAME logger set error print stream NAME logger NAME set error print stream ARGUMENT LIST ARGUMENT EXPR system err NAME system err NAME system NAME err EXPR logger set message output level project msg info CALL logger set message output level project msg info NAME logger set message output level NAME logger NAME set message output level ARGUMENT LIST ARGUMENT EXPR project msg info NAME project msg info NAME project NAME msg info EXPR project add build listener logger CALL project add build listener logger NAME project add build listener NAME project NAME add build listener ARGUMENT LIST ARGUMENT EXPR logger NAME logger IF if system get property constants catalina home prop null project set basedir system get property constants catalina home prop CONDITION system get property constants catalina home prop null EXPR system get property constants catalina home prop null CALL system get property constants catalina home prop NAME system get property NAME system NAME get property ARGUMENT LIST ARGUMENT EXPR constants catalina home prop NAME constants catalina home prop NAME constants NAME catalina home prop THEN project set basedir system get property constants catalina home prop BLOCK EXPR project set basedir system get property constants catalina home prop CALL project set basedir system get property constants catalina home prop NAME project set basedir NAME project NAME set basedir ARGUMENT LIST ARGUMENT EXPR system get property constants catalina home prop CALL system get property constants catalina home prop NAME system get property NAME system NAME get property ARGUMENT LIST ARGUMENT EXPR constants catalina home prop NAME constants catalina home prop NAME constants NAME catalina home prop IF if options get compiler null if log is debug enabled log debug compiler options get compiler project set property build compiler options get compiler CONDITION options get compiler null EXPR options get compiler null CALL options get compiler NAME options get compiler NAME options NAME get compiler ARGUMENT LIST THEN if log is debug enabled log debug compiler options get compiler project set property build compiler options get compiler BLOCK IF if log is debug enabled log debug compiler options get compiler CONDITION log is debug enabled EXPR log is debug enabled CALL log is debug enabled NAME log is debug enabled NAME log NAME is debug enabled ARGUMENT LIST THEN log debug compiler options get compiler BLOCK EXPR log debug compiler options get compiler CALL log debug compiler options get compiler NAME log debug NAME log NAME debug ARGUMENT LIST ARGUMENT EXPR compiler options get compiler NAME compiler CALL options get compiler NAME options get compiler NAME options NAME get compiler ARGUMENT LIST EXPR project set property build compiler options get compiler CALL project set property build compiler options get compiler NAME project set property NAME project NAME set property ARGUMENT LIST ARGUMENT EXPR build compiler NAME build compiler NAME build NAME compiler ARGUMENT EXPR options get compiler CALL options get compiler NAME options get compiler NAME options NAME get compiler ARGUMENT LIST EXPR project init CALL project init NAME project init NAME project NAME init ARGUMENT LIST RETURN return project EXPR project NAME project protected VBN project NN get VB project NN root ROOT get dobj get project if IN project NN null JJ return NN project NN initializing project root ROOT initializing dobj initializing project project NN new JJ project NN logger NN new JJ jasper NN ant NN logger NN root ROOT logger compound logger jasper compound logger ant logger NN set VBD output NN print NN stream NN root ROOT set nsubj set logger compound stream output compound stream print dobj set stream system NN out RP root ROOT system compound prt system out logger NN set VBD error NN print NN stream NN root ROOT set nsubj set logger compound stream error compound stream print dobj set stream system NN err VBP root ROOT err nsubj err system logger NN set VBD message NN output NN level NN root ROOT set nsubj set logger compound level message compound level output dobj set level project NN msg NN root ROOT msg compound msg project info NN project NN add VBP build VB listener NN root ROOT add nsubj add project ccomp add build dobj build listener logger NN if IN system NN get VB property NN root ROOT get nsubj get system dobj get property constants NNS catalina NN root ROOT catalina compound catalina constants home NN prop VBP root ROOT prop nsubj prop home null JJ project NN set VBN basedir NN root ROOT set nsubj set project dobj set basedir system NN get VB property NN root ROOT get nsubj get system dobj get property constants NNS catalina NN root ROOT catalina compound catalina constants home NN prop VBP root ROOT prop nsubj prop home if IN options NNS get VBP compiler NN root ROOT get nsubj get options dobj get compiler null JJ if IN log NN is VBZ debug NN enabled VBD root ROOT debug nsubj debug log cop debug is dep debug enabled log NN debug NN root ROOT debug compound debug log compiler NN options NNS get VBP compiler NN root ROOT get nsubj get options dobj get compiler project NN set VBN property NN root ROOT set nsubj set project dobj set property build VB compiler NN root ROOT build dobj build compiler options NNS get VBP compiler NN root ROOT get nsubj get options dobj get compiler project NN init NN root ROOT init compound init project return NN project NN,1,a1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,1245
FUNCTION SPECIFIER public SPECIFIER static TYPE room NAME room NAME get room PARAMETER LIST boolean create PARAMETER boolean create TYPE boolean NAME boolean NAME create BLOCK IF if create if room null synchronized room lock if room null room new room return room else return room CONDITION create EXPR create NAME create THEN if room null synchronized room lock if room null room new room return room BLOCK IF if room null synchronized room lock if room null room new room CONDITION room null EXPR room null NAME room THEN synchronized room lock if room null room new room BLOCK SYNCHRONIZED synchronized room lock if room null room new room INIT room lock EXPR room lock NAME room lock BLOCK IF if room null room new room CONDITION room null EXPR room null NAME room THEN room new room BLOCK EXPR room new room NAME room CALL room NAME room ARGUMENT LIST RETURN return room EXPR room NAME room ELSE else return room BLOCK RETURN return room EXPR room NAME room public NN static JJ room NN get VB room NN root ROOT get dobj get room boolean NN create VB if IN create VB if IN room NN null JJ synchronized VBN room NN lock NN root ROOT lock compound lock room if IN room NN null JJ room NN new JJ room NN return NN room NN else RB return NN room NN,1,a1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE string NAME string NAME string INDEX NAME get url patterns PARAMETER LIST BLOCK IF if match all url patterns return new string else return this url patterns CONDITION match all url patterns EXPR match all url patterns NAME match all url patterns THEN return new string BLOCK RETURN return new string EXPR new string NAME string NAME string INDEX BLOCK ELSE else return this url patterns BLOCK RETURN return this url patterns EXPR this url patterns NAME this url patterns NAME this NAME url patterns public NN string NN get VB url NN patterns NNS root ROOT get compound patterns url dobj get patterns if IN match NN all DT url NN patterns NNS root ROOT patterns compound patterns match det patterns all compound patterns url return NN new JJ string NN else RB return NN this DT url NN patterns NNS,1,a1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,190
FUNCTION SPECIFIER public TYPE string NAME string NAME get cluster name PARAMETER LIST BLOCK IF if cluster name null container null return container get name CONDITION cluster name null container null EXPR cluster name null container null NAME cluster name NAME container THEN return container get name BLOCK RETURN return container get name EXPR container get name CALL container get name NAME container get name NAME container NAME get name ARGUMENT LIST RETURN return cluster name EXPR cluster name NAME cluster name public NN string NN get VB cluster NN name NN root ROOT get compound name cluster dobj get name if IN cluster NN name NN root ROOT name compound name cluster null JJ container NN null JJ return NN container NN get VB name NN root ROOT get nsubj get container dobj get name return NN cluster NN name NN root ROOT name compound name cluster,1,a1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME get oo b inline PARAMETER LIST BLOCK RETURN return oo b inline boolean value EXPR oo b inline boolean value CALL oo b inline boolean value NAME oo b inline boolean value NAME oo b inline NAME boolean value ARGUMENT LIST public NN boolean NN get VB oo NN b NN inline NN root ROOT get compound inline oo compound inline b dobj get inline return NN oo NN b NN inline NN boolean NN value NN root ROOT value compound value oo compound value b compound value inline compound value boolean,1,a1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,564
COMMENT return the path of the java file relative to the work directory FUNCTION SPECIFIER public TYPE string NAME string NAME get java path PARAMETER LIST BLOCK IF if java path null return java path CONDITION java path null EXPR java path null NAME java path THEN return java path BLOCK RETURN return java path EXPR java path NAME java path IF if is tag file string tag name tag info get tag class name java path tag name replace java else java path get servlet package name replace get servlet class name java CONDITION is tag file EXPR is tag file CALL is tag file NAME is tag file ARGUMENT LIST THEN string tag name tag info get tag class name java path tag name replace java BLOCK DECL STMT TYPE string NAME string NAME tag name INIT tag info get tag class name EXPR tag info get tag class name CALL tag info get tag class name NAME tag info get tag class name NAME tag info NAME get tag class name ARGUMENT LIST EXPR java path tag name replace java NAME java path CALL tag name replace NAME tag name replace NAME tag name NAME replace ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR NAME java ELSE else java path get servlet package name replace get servlet class name java BLOCK EXPR java path get servlet package name replace get servlet class name java NAME java path CALL get servlet package name NAME get servlet package name ARGUMENT LIST CALL replace NAME replace ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR CALL get servlet class name NAME get servlet class name ARGUMENT LIST NAME java RETURN return java path EXPR java path NAME java path return the path of the java file relative to the work directory root ROOT return det path the dobj return path case file of det file the compound file java nmod of path file dep return relative case directory to det directory the compound directory work nmod to relative directory public NN string NN get VB java NN path NN root ROOT get compound path java dobj get path if IN java NN path NN root ROOT path compound path java null JJ return NN java NN path NN root ROOT path compound path java if IN is VBZ tag NN file NN root ROOT file cop file is compound file tag string NN tag NN name NN root ROOT name compound name tag tag NN info NN get VB tag NN class NN name NN root ROOT get compound info tag nsubj get info compound name tag compound name class dobj get name java NN path NN root ROOT path compound path java tag NN name NN replace VB root ROOT replace compound name tag nsubj replace name java NN else RB java NN path NN root ROOT path compound path java get VB servlet JJ package NN name NN root ROOT get amod name servlet compound name package dobj get name replace VB get VB servlet JJ class NN name NN root ROOT get amod name servlet compound name class dobj get name java NN return NN java NN path NN root ROOT path compound path java,1,a1,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
FUNCTION SPECIFIER public TYPE string NAME string NAME string INDEX NAME get prompts PARAMETER LIST context cx PARAMETER context cx TYPE context NAME context NAME cx BLOCK IF if scriptable object has property this prompts object prompts js scriptable object get property this prompts if prompts js instanceof scriptable scriptable s scriptable prompts js if scriptable object has property s scriptable object has property s object elem scriptable object get property s if elem instanceof function elem function elem call cx this s new object prompts context to string elem object elem scriptable object get property s if elem instanceof function elem function elem call cx this s new object prompts context to string elem CONDITION scriptable object has property this prompts EXPR scriptable object has property this prompts CALL scriptable object has property this prompts NAME scriptable object has property NAME scriptable object NAME has property ARGUMENT LIST ARGUMENT EXPR this NAME this ARGUMENT EXPR prompts NAME prompts THEN object prompts js scriptable object get property this prompts if prompts js instanceof scriptable scriptable s scriptable prompts js if scriptable object has property s scriptable object has property s object elem scriptable object get property s if elem instanceof function elem function elem call cx this s new object prompts context to string elem object elem scriptable object get property s if elem instanceof function elem function elem call cx this s new object prompts context to string elem BLOCK DECL STMT TYPE object NAME object NAME prompts js INIT scriptable object get property this prompts EXPR scriptable object get property this prompts CALL scriptable object get property this prompts NAME scriptable object get property NAME scriptable object NAME get property ARGUMENT LIST ARGUMENT EXPR this NAME this ARGUMENT EXPR prompts NAME prompts IF if prompts js instanceof scriptable scriptable s scriptable prompts js if scriptable object has property s scriptable object has property s object elem scriptable object get property s if elem instanceof function elem function elem call cx this s new object prompts context to string elem object elem scriptable object get property s if elem instanceof function elem function elem call cx this s new object prompts context to string elem CONDITION prompts js instanceof scriptable EXPR prompts js instanceof scriptable NAME prompts js NAME scriptable THEN scriptable s scriptable prompts js if scriptable object has property s scriptable object has property s object elem scriptable object get property s if elem instanceof function elem function elem call cx this s new object prompts context to string elem object elem scriptable object get property s if elem instanceof function elem function elem call cx this s new object prompts context to string elem BLOCK DECL STMT TYPE scriptable NAME scriptable NAME s INIT scriptable prompts js EXPR scriptable prompts js NAME scriptable NAME prompts js IF if scriptable object has property s scriptable object has property s object elem scriptable object get property s if elem instanceof function elem function elem call cx this s new object prompts context to string elem object elem scriptable object get property s if elem instanceof function elem function elem call cx this s new object prompts context to string elem CONDITION scriptable object has property s scriptable object has property s EXPR scriptable object has property s scriptable object has property s CALL scriptable object has property s NAME scriptable object has property NAME scriptable object NAME has property ARGUMENT LIST ARGUMENT EXPR s NAME s ARGUMENT EXPR CALL scriptable object has property s NAME scriptable object has property NAME scriptable object NAME has property ARGUMENT LIST ARGUMENT EXPR s NAME s ARGUMENT EXPR THEN object elem scriptable object get property s if elem instanceof function elem function elem call cx this s new object prompts context to string elem object elem scriptable object get property s if elem instanceof function elem function elem call cx this s new object prompts context to string elem BLOCK DECL STMT TYPE object NAME object NAME elem INIT scriptable object get property s EXPR scriptable object get property s CALL scriptable object get property s NAME scriptable object get property NAME scriptable object NAME get property ARGUMENT LIST ARGUMENT EXPR s NAME s ARGUMENT EXPR IF if elem instanceof function elem function elem call cx this s new object CONDITION elem instanceof function EXPR elem instanceof function NAME elem NAME function THEN elem function elem call cx this s new object BLOCK EXPR elem function elem call cx this s new object NAME elem NAME function NAME elem CALL call cx this s new object NAME call ARGUMENT LIST ARGUMENT EXPR cx NAME cx ARGUMENT EXPR this NAME this ARGUMENT EXPR s NAME s ARGUMENT EXPR new object NAME object NAME object INDEX EXPR EXPR prompts context to string elem NAME prompts NAME prompts INDEX EXPR CALL context to string elem NAME context to string NAME context NAME to string ARGUMENT LIST ARGUMENT EXPR elem NAME elem DECL STMT TYPE object NAME object NAME elem INIT scriptable object get property s EXPR scriptable object get property s CALL scriptable object get property s NAME scriptable object get property NAME scriptable object NAME get property ARGUMENT LIST ARGUMENT EXPR s NAME s ARGUMENT EXPR IF if elem instanceof function elem function elem call cx this s new object CONDITION elem instanceof function EXPR elem instanceof function NAME elem NAME function THEN elem function elem call cx this s new object BLOCK EXPR elem function elem call cx this s new object NAME elem NAME function NAME elem CALL call cx this s new object NAME call ARGUMENT LIST ARGUMENT EXPR cx NAME cx ARGUMENT EXPR this NAME this ARGUMENT EXPR s NAME s ARGUMENT EXPR new object NAME object NAME object INDEX EXPR EXPR prompts context to string elem NAME prompts NAME prompts INDEX EXPR CALL context to string elem NAME context to string NAME context NAME to string ARGUMENT LIST ARGUMENT EXPR elem NAME elem RETURN return prompts EXPR prompts NAME prompts public NN string NN get VB prompts VBZ root ROOT prompts dep prompts get context NN cx NN if IN scriptable JJ object NN has VBZ property NN root ROOT has amod object scriptable nsubj has object dobj has property this DT prompts VBZ object NN prompts VBZ js NNS root ROOT prompts dobj prompts js scriptable JJ object NN get VB property NN root ROOT get amod object scriptable nsubj get object dobj get property this DT prompts VBZ if IN prompts VBZ js NNS root ROOT prompts dobj prompts js instanceof NN scriptable JJ scriptable JJ s NNS scriptable JJ prompts VBZ js NNS root ROOT prompts dobj prompts js if IN scriptable JJ object NN has VBZ property NN root ROOT has amod object scriptable nsubj has object dobj has property s NNS scriptable JJ object NN has VBZ property NN root ROOT has amod object scriptable nsubj has object dobj has property s NNS object NN elem NN scriptable JJ object NN get VB property NN root ROOT get amod object scriptable nsubj get object dobj get property s NNS if IN elem NN instanceof NN function NN elem NN function NN elem NN call NN cx NN this DT s NNS new JJ object NN prompts VBZ context NN to TO string NN root ROOT context case string to nmod to context string elem NN object NN elem NN scriptable JJ object NN get VB property NN root ROOT get amod object scriptable nsubj get object dobj get property s NNS if IN elem NN instanceof NN function NN elem NN function NN elem NN call NN cx NN this DT s NNS new JJ object NN prompts VBZ context NN to TO string NN root ROOT context case string to nmod to context string elem NN return NN prompts VBZ,1,a1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER final TYPE char NAME char NAME char INDEX NAME get char buffer PARAMETER LIST int minimal size PARAMETER int minimal size TYPE int NAME int NAME minimal size BLOCK IF if minimal size tmp char buffer length int new size tmp char buffer length if minimal size new size new size minimal size tmp char buffer new char new size CONDITION minimal size tmp char buffer length EXPR minimal size tmp char buffer length NAME minimal size NAME tmp char buffer length NAME tmp char buffer NAME length THEN int new size tmp char buffer length if minimal size new size new size minimal size tmp char buffer new char new size BLOCK DECL STMT TYPE int NAME int NAME new size INIT tmp char buffer length EXPR tmp char buffer length NAME tmp char buffer length NAME tmp char buffer NAME length IF if minimal size new size new size minimal size CONDITION minimal size new size EXPR minimal size new size NAME minimal size NAME new size THEN new size minimal size BLOCK EXPR new size minimal size NAME new size NAME minimal size EXPR tmp char buffer new char new size NAME tmp char buffer NAME char new size NAME char INDEX new size EXPR new size NAME new size RETURN return tmp char buffer EXPR tmp char buffer NAME tmp char buffer final JJ char NN get VB char NN buffer NN root ROOT get compound buffer char dobj get buffer int NN minimal JJ size NN root ROOT size amod size minimal if IN minimal JJ size NN root ROOT size amod size minimal tmp NN char NN buffer NN length NN root ROOT length compound length tmp compound length char compound length buffer int NN new JJ size NN root ROOT size amod size new tmp NN char NN buffer NN length NN root ROOT length compound length tmp compound length char compound length buffer if IN minimal JJ size NN root ROOT size amod size minimal new JJ size NN root ROOT size amod size new new JJ size NN root ROOT size amod size new minimal JJ size NN root ROOT size amod size minimal tmp NN char NN buffer NN root ROOT buffer compound buffer tmp compound buffer char new JJ char NN new JJ size NN root ROOT size amod size new return NN tmp NN char NN buffer NN root ROOT buffer compound buffer tmp compound buffer char,1,a1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,13
COMMENT is it permitted to create a bean of the given name param bean name the name of the bean of interest return code true code if the bean may be created otherwise code false code FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME can create bean PARAMETER LIST string bean name PARAMETER string bean name TYPE string NAME string NAME bean name BLOCK RETURN return false EXPR false is it permitted to create a bean of the given name root ROOT permitted aux permitted is nsubj permitted it nsubj xsubj create it mark create to xcomp permitted create det bean a dobj create bean case name of det name the amod name given nmod of bean name param bean name the name of the bean of interest root ROOT name compound name param compound name bean det name the dep name name case bean of det bean the nmod of name bean case interest of nmod of bean interest return code true code if the bean may be created otherwise root ROOT code compound code return compound code code amod code true mark created if det bean the nsubjpass created bean aux created may auxpass created be dep code created advmod created otherwise code false code root ROOT code compound code code amod code false public NN boolean NN can MD create VB bean NN root ROOT create aux create can dobj create bean string NN bean NN name NN root ROOT name compound name bean return NN false JJ create given ANTONYM ANTONYM create name ANTONYM ANTONYM given created ANTONYM ANTONYM given false ANTONYM ANTONYM given name ANTONYM ANTONYM is name ANTONYM ANTONYM name be ANTONYM ANTONYM name created ANTONYM ANTONYM true false ANTONYM ANTONYM,1,b1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT tell whether this stream is ready to be read return true if the next read is guaranteed not to block for input false otherwise note that returning false does not guarantee that the next read will block exception io exception if an i o error occurs FUNCTION ANNOTATION override NAME override SPECIFIER public TYPE boolean NAME boolean NAME ready PARAMETER LIST THROWS throws io exception ARGUMENT EXPR io exception NAME io exception BLOCK RETURN return false EXPR false tell whether this stream is ready to be read root ROOT tell mark ready whether det stream this nsubj ready stream nsubjpass xsubj read stream cop ready is ccomp tell ready mark read to auxpass read be xcomp ready read return true if the next read is guaranteed not to block for input root ROOT return amod return true mark guaranteed if det read the amod read next nsubjpass guaranteed read nsubj xsubj block read auxpass guaranteed is advcl if return guaranteed neg block not mark block to xcomp guaranteed block case input for nmod for block input false otherwise note that returning false does not guarantee that the root ROOT note nsubj note false advmod note otherwise mark guarantee that csubj guarantee returning xcomp returning false aux guarantee does neg guarantee not ccomp note guarantee dobj guarantee that root that the false otherwise note that returning false does not guarantee that the root ROOT note nsubj note false advmod note otherwise mark guarantee that csubj guarantee returning xcomp returning false aux guarantee does neg guarantee not ccomp note guarantee dobj guarantee that root that the next read will block root ROOT block amod read next nsubj block read aux block will exception io exception if an i o error occurs root ROOT exception compound exception exception compound exception io mark occurs if det error an compound error i compound error o nsubj occurs error dep exception occurs override NN public NN boolean NN ready JJ throws VBZ io NN exception NN root ROOT exception compound exception io return NN false JJ block return ANTONYM ANTONYM block returning ANTONYM ANTONYM does occurs ANTONYM ANTONYM does throws ANTONYM ANTONYM ready does ANTONYM ANTONYM ready throws ANTONYM ANTONYM return occurs ANTONYM ANTONYM return throws ANTONYM ANTONYM returning occurs ANTONYM ANTONYM returning throws ANTONYM ANTONYM tell guarantee ANTONYM ANTONYM tell guaranteed ANTONYM ANTONYM tell read ANTONYM ANTONYM true false ANTONYM ANTONYM,1,b1,tomcat/java/org/apache/catalina/tribes/transport/nio/NioSender.java,64
FUNCTION SPECIFIER public TYPE string NAME string NAME get class path PARAMETER LIST BLOCK IF if class path null return class path CONDITION class path null EXPR class path null NAME class path THEN return class path BLOCK RETURN return class path EXPR class path NAME class path RETURN return system get property java class path EXPR system get property java class path CALL system get property java class path NAME system get property NAME system NAME get property ARGUMENT LIST ARGUMENT EXPR java class path NAME java class path NAME java NAME class path NAME class NAME path public NN string NN get VB class NN path NN root ROOT get compound path class dobj get path if IN class NN path NN root ROOT path compound path class null JJ return NN class NN path NN root ROOT path compound path class return NN system NN get VB property NN root ROOT get nsubj get system dobj get property java NN class NN path NN,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER public TYPE image data NAME image data NAME get image data PARAMETER LIST BLOCK DECL STMT TYPE point NAME point NAME size INIT get size EXPR get size CALL get size NAME get size ARGUMENT LIST DECL STMT TYPE rgb NAME rgb NAME black INIT new rgb EXPR new rgb CALL rgb NAME rgb ARGUMENT LIST ARGUMENT EXPR ARGUMENT EXPR ARGUMENT EXPR DECL STMT TYPE rgb NAME rgb NAME rgb INDEX NAME rgbs INIT new rgb EXPR new rgb NAME rgb NAME rgb INDEX EXPR EXPR rgbs black NAME rgbs NAME rgbs INDEX EXPR NAME black COMMENT transparency EXPR rgbs black NAME rgbs NAME rgbs INDEX EXPR NAME black COMMENT black DECL STMT TYPE palette data NAME palette data NAME data palette INIT new palette data rgbs EXPR new palette data rgbs CALL palette data rgbs NAME palette data ARGUMENT LIST ARGUMENT EXPR rgbs NAME rgbs EXPR image data new image data size x size y data palette NAME image data CALL image data size x size y data palette NAME image data ARGUMENT LIST ARGUMENT EXPR size x NAME size x NAME size NAME x ARGUMENT EXPR size y NAME size y NAME size NAME y ARGUMENT EXPR ARGUMENT EXPR data palette NAME data palette EXPR image data transparent pixel NAME image data transparent pixel NAME image data NAME transparent pixel EXPR draw composite image size x size y CALL draw composite image size x size y NAME draw composite image ARGUMENT LIST ARGUMENT EXPR size x NAME size x NAME size NAME x ARGUMENT EXPR size y NAME size y NAME size NAME y FOR for int i i rgbs length i if rgbs i null rgbs i black CONTROL int i i rgbs length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i rgbs length EXPR i rgbs length NAME i NAME rgbs length NAME rgbs NAME length INCR i EXPR i NAME i BLOCK IF if rgbs i null rgbs i black CONDITION rgbs i null EXPR rgbs i null NAME rgbs i NAME rgbs INDEX i EXPR i NAME i THEN rgbs i black BLOCK EXPR rgbs i black NAME rgbs i NAME rgbs INDEX i EXPR i NAME i NAME black RETURN return image data EXPR image data NAME image data public NN image NN data NNS root ROOT data compound data image get VB image NN data NNS root ROOT get compound data image dobj get data point NN size NN get VB size NN root ROOT get dobj get size rgb NN black JJ new JJ rgb NN rgb NN rgbs NNS new JJ rgb NN rgbs NNS black JJ transparency NN rgbs NNS black JJ black JJ palette NN data NNS root ROOT data compound data palette data NNS palette NN root ROOT palette compound palette data new JJ palette NN data NNS root ROOT data compound data palette rgbs NNS image NN data NNS root ROOT data compound data image new JJ image NN data NNS root ROOT data compound data image size NN x NN root ROOT x compound x size size NN y SYM root ROOT size dep size y data NNS palette NN root ROOT palette compound palette data image NN data NNS transparent JJ pixel NN root ROOT data compound data image amod pixel transparent dep data pixel draw NN composite JJ image NN root ROOT image compound image draw amod image composite size NN x NN root ROOT x compound x size size NN y SYM root ROOT size dep size y for IN int NN i LS i LS rgbs NNS length NN root ROOT length compound length rgbs i LS if IN rgbs NNS i LS null JJ rgbs NNS i LS black JJ return NN image NN data NNS root ROOT data compound data image,1,a1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT returns the children of this object when this object is displayed in a tree the returned objects will be this element s children returns an empty array if this object has no children param object the object to get the children for FUNCTION SPECIFIER public TYPE object NAME object NAME object INDEX NAME get children PARAMETER LIST object o PARAMETER object o TYPE object NAME object NAME o BLOCK RETURN return new object EXPR new object NAME object NAME object INDEX EXPR returns the children of this object when this object root ROOT returns det children the dobj returns children case object of det object this nmod of children object advmod object when det object this advcl returns object returns the children of this object when this object root ROOT returns det children the dobj returns children case object of det object this nmod of children object advmod object when det object this advcl returns object is displayed in a tree the returned objects will be this root ROOT displayed auxpass displayed is case tree in det tree a nmod in be tree det objects the amod objects returned nsubj be objects aux be will ccomp displayed be dep be this element s children returns an empty array if this root ROOT returns compound children element compound children s nsubj returns children det array an amod array empty dobj returns array case this if nmod if returns this element s children returns an empty array if this root ROOT returns compound children element compound children s nsubj returns children det array an amod array empty dobj returns array case this if nmod if returns this object has no children root ROOT has nsubj has object neg children no dobj has children param object the object to get the children for root ROOT object nsubj object param det object the dobj object object mark get to advcl to object get det children the dobj get children nmod get for public NN object NN get VB children NNS root ROOT get dobj get children object NN o NN return NN new JJ object NN array get ANTONYM ANTONYM get will ANTONYM ANTONYM returned get ANTONYM ANTONYM returned has ANTONYM ANTONYM returns get ANTONYM ANTONYM returns has ANTONYM ANTONYM,1,b1,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158
FUNCTION SPECIFIER public TYPE string NAME string NAME get name PARAMETER LIST BLOCK IF if type sce type comment return name else int widget offset start projection viewer model offset widget offset start model offset int widget offset end widget offset start total length if widget offset start widget offset end return styled text get text widget offset start widget offset end else int offset start start model offset while widget offset start offset start widget offset start projection viewer model offset widget offset offset start int shown line index styled text get line at offset offset start return styled text get line shown line index CONDITION type sce type comment EXPR type sce type comment NAME type NAME sce type comment NAME sce type NAME comment THEN return name BLOCK RETURN return name EXPR name NAME name ELSE else int widget offset start projection viewer model offset widget offset start model offset int widget offset end widget offset start total length if widget offset start widget offset end return styled text get text widget offset start widget offset end else int offset start start model offset while widget offset start offset start widget offset start projection viewer model offset widget offset offset start int shown line index styled text get line at offset offset start return styled text get line shown line index BLOCK DECL STMT TYPE int NAME int NAME widget offset start INIT projection viewer model offset widget offset start model offset EXPR projection viewer model offset widget offset start model offset CALL projection viewer model offset widget offset start model offset NAME projection viewer model offset widget offset NAME projection viewer NAME model offset widget offset ARGUMENT LIST ARGUMENT EXPR start model offset NAME start model offset DECL STMT TYPE int NAME int NAME widget offset end INIT widget offset start total length EXPR widget offset start total length NAME widget offset start NAME total length IF if widget offset start widget offset end return styled text get text widget offset start widget offset end else int offset start start model offset while widget offset start offset start widget offset start projection viewer model offset widget offset offset start int shown line index styled text get line at offset offset start return styled text get line shown line index CONDITION widget offset start widget offset end EXPR widget offset start widget offset end NAME widget offset start NAME widget offset end THEN return styled text get text widget offset start widget offset end BLOCK RETURN return styled text get text widget offset start widget offset end EXPR styled text get text widget offset start widget offset end CALL styled text get text widget offset start widget offset end NAME styled text get text NAME styled text NAME get text ARGUMENT LIST ARGUMENT EXPR widget offset start NAME widget offset start ARGUMENT EXPR widget offset end NAME widget offset end ELSE else int offset start start model offset while widget offset start offset start widget offset start projection viewer model offset widget offset offset start int shown line index styled text get line at offset offset start return styled text get line shown line index BLOCK DECL STMT TYPE int NAME int NAME offset start INIT start model offset EXPR start model offset NAME start model offset WHILE while widget offset start offset start widget offset start projection viewer model offset widget offset offset start CONDITION widget offset start EXPR widget offset start NAME widget offset start BLOCK EXPR offset start NAME offset start EXPR widget offset start projection viewer model offset widget offset offset start NAME widget offset start CALL projection viewer model offset widget offset offset start NAME projection viewer model offset widget offset NAME projection viewer NAME model offset widget offset ARGUMENT LIST ARGUMENT EXPR offset start NAME offset start DECL STMT TYPE int NAME int NAME shown line index INIT styled text get line at offset offset start EXPR styled text get line at offset offset start CALL styled text get line at offset offset start NAME styled text get line at offset NAME styled text NAME get line at offset ARGUMENT LIST ARGUMENT EXPR offset start NAME offset start RETURN return styled text get line shown line index EXPR styled text get line shown line index CALL styled text get line shown line index NAME styled text get line NAME styled text NAME get line ARGUMENT LIST ARGUMENT EXPR shown line index NAME shown line index public NN string NN get VB name NN root ROOT get dobj get name if IN type NN sce NN type NN comment NN root ROOT comment compound comment sce compound comment type return NN name NN else RB int NN widget NN offset VBD start NN root ROOT offset nsubj offset widget dobj offset start projection NN viewer NN model NN offset VBD widget NN offset VBN root ROOT offset compound model projection compound model viewer nsubj offset model dobj offset widget acl widget offset start VB model NN offset VBN root ROOT start dobj start model acl model offset int NN widget NN offset VBD end NN root ROOT offset nsubj offset widget dobj offset end widget NN offset VBD start NN root ROOT offset nsubj offset widget dobj offset start total JJ length NN root ROOT length amod length total if IN widget NN offset VBD start NN root ROOT offset nsubj offset widget dobj offset start widget NN offset VBD end NN root ROOT offset nsubj offset widget dobj offset end return NN styled VBN text NN get VB text NN root ROOT get amod text styled nsubj get text dobj get text widget NN offset VBD start NN root ROOT offset nsubj offset widget dobj offset start widget NN offset VBD end NN root ROOT offset nsubj offset widget dobj offset end else RB int NN offset VBN start NN root ROOT start amod start offset start VB model NN offset VBN root ROOT start dobj start model acl model offset while IN widget NN offset VBD start NN root ROOT offset nsubj offset widget dobj offset start offset VBN start NN root ROOT start amod start offset widget NN offset VBD start NN root ROOT offset nsubj offset widget dobj offset start projection NN viewer NN model NN offset VBD widget NN offset VBN root ROOT offset compound model projection compound model viewer nsubj offset model dobj offset widget acl widget offset offset VBN start NN root ROOT start amod start offset int NN shown VBN line NN index NN root ROOT shown compound index line dobj shown index styled VBN text NN get VB line NN at IN offset VBN root ROOT get amod text styled nsubj get text dobj get line case offset at nmod at get offset offset VBN start NN root ROOT start amod start offset return NN styled VBN text NN get VB line NN root ROOT get amod text styled nsubj get text dobj get line shown VBN line NN index NN root ROOT shown compound index line dobj shown index,1,a1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
FUNCTION SPECIFIER private TYPE rectangle NAME rectangle NAME get bounding box PARAMETER LIST int line offset string line content int x int y PARAMETER int line offset TYPE int NAME int NAME line offset PARAMETER string line content TYPE string NAME string NAME line content PARAMETER int x TYPE int NAME int NAME x PARAMETER int y TYPE int NAME int NAME y BLOCK DECL STMT TYPE rectangle NAME rectangle NAME box INIT null EXPR null EXPR points point index new point x y NAME points point index NAME points INDEX point index EXPR point index NAME point index CALL point x y NAME point ARGUMENT LIST ARGUMENT EXPR x NAME x ARGUMENT EXPR y NAME y EXPR point index NAME point index IF if point index number of points point index point index number of points CONDITION point index number of points EXPR point index number of points NAME point index NAME number of points THEN point index point index number of points BLOCK EXPR point index point index number of points NAME point index NAME point index NAME number of points IF if contains points bounding box return bounding box CONDITION contains points bounding box EXPR contains points bounding box CALL contains points bounding box NAME contains points ARGUMENT LIST ARGUMENT EXPR bounding box NAME bounding box THEN return bounding box BLOCK RETURN return bounding box EXPR bounding box NAME bounding box DECL STMT TYPE int NAME int NAME start offset INIT EXPR DECL STMT TYPE int NAME int NAME end offset WHILE while start offset line content length while start offset line content length check char line content char at start offset start offset end offset start offset while end offset line content length check char line content char at end offset end offset box styled text get text bounds line offset start offset line offset end offset if contains points box break start offset end offset CONDITION start offset line content length EXPR start offset line content length NAME start offset CALL line content length NAME line content length NAME line content NAME length ARGUMENT LIST BLOCK WHILE while start offset line content length check char line content char at start offset start offset CONDITION start offset line content length check char line content char at start offset EXPR start offset line content length check char line content char at start offset NAME start offset CALL line content length NAME line content length NAME line content NAME length ARGUMENT LIST CALL check char line content char at start offset NAME check char ARGUMENT LIST ARGUMENT EXPR line content char at start offset CALL line content char at start offset NAME line content char at NAME line content NAME char at ARGUMENT LIST ARGUMENT EXPR start offset NAME start offset BLOCK EXPR start offset NAME start offset EXPR end offset start offset NAME end offset NAME start offset WHILE while end offset line content length check char line content char at end offset end offset CONDITION end offset line content length check char line content char at end offset EXPR end offset line content length check char line content char at end offset NAME end offset CALL line content length NAME line content length NAME line content NAME length ARGUMENT LIST CALL check char line content char at end offset NAME check char ARGUMENT LIST ARGUMENT EXPR line content char at end offset CALL line content char at end offset NAME line content char at NAME line content NAME char at ARGUMENT LIST ARGUMENT EXPR end offset NAME end offset BLOCK EXPR end offset NAME end offset EXPR box styled text get text bounds line offset start offset line offset end offset NAME box CALL styled text get text bounds line offset start offset line offset end offset NAME styled text get text bounds NAME styled text NAME get text bounds ARGUMENT LIST ARGUMENT EXPR line offset start offset NAME line offset NAME start offset ARGUMENT EXPR line offset end offset NAME line offset NAME end offset IF if contains points box break CONDITION contains points box EXPR contains points box CALL contains points box NAME contains points ARGUMENT LIST ARGUMENT EXPR box NAME box THEN break BLOCK BREAK break EXPR start offset end offset NAME start offset NAME end offset IF if box null contains points box box null CONDITION box null contains points box EXPR box null contains points box NAME box CALL contains points box NAME contains points ARGUMENT LIST ARGUMENT EXPR box NAME box THEN box null BLOCK EXPR box null NAME box RETURN return box EXPR box NAME box private JJ rectangle NN get VB bounding VBG box NN root ROOT get xcomp get bounding dobj bounding box int NN line NN offset VBD root ROOT offset nsubj offset line string NN line NN content NN root ROOT content compound content line int NN x NN int NN y NN rectangle NN box NN null JJ points NNS point NN index NN root ROOT index compound index point new JJ point NN x NN y NN point NN index NN root ROOT index compound index point if IN point NN index NN root ROOT index compound index point number NN of IN points NNS root ROOT number case points of nmod of number points point NN index NN root ROOT index compound index point point NN index NN root ROOT index compound index point number NN of IN points NNS root ROOT number case points of nmod of number points if IN contains VBZ points NNS root ROOT contains dobj contains points bounding VBG box NN root ROOT bounding dobj bounding box return NN bounding VBG box NN root ROOT bounding dobj bounding box int NN start VB offset VBN root ROOT start xcomp start offset int NN end NN offset VBD root ROOT offset nsubj offset end while IN start VB offset VBN root ROOT start xcomp start offset line NN content NN length NN root ROOT content compound content line dep content length while IN start VB offset VBN root ROOT start xcomp start offset line NN content NN length NN root ROOT content compound content line dep content length check NN char NN root ROOT char compound char check line NN content NN char NN at IN root ROOT char compound char line compound char content dep char at start VB offset VBN root ROOT start xcomp start offset start VB offset VBN root ROOT start xcomp start offset end NN offset VBD root ROOT offset nsubj offset end start VB offset VBN root ROOT start xcomp start offset while IN end NN offset VBD root ROOT offset nsubj offset end line NN content NN length NN root ROOT content compound content line dep content length check NN char NN root ROOT char compound char check line NN content NN char NN at IN root ROOT char compound char line compound char content dep char at end NN offset VBD root ROOT offset nsubj offset end end NN offset VBD root ROOT offset nsubj offset end box NN styled VBN text NN get VB text NN bounds NNS root ROOT get amod text styled nsubj get text compound bounds text dobj get bounds line NN offset VBD root ROOT offset nsubj offset line start VB offset VBN root ROOT start xcomp start offset line NN offset VBD root ROOT offset nsubj offset line end NN offset VBD root ROOT offset nsubj offset end if IN contains VBZ points NNS root ROOT contains dobj contains points box NN break NN start VB offset VBN root ROOT start xcomp start offset end NN offset VBD root ROOT offset nsubj offset end if IN box NN null JJ contains VBZ points NNS root ROOT contains dobj contains points box NN box NN null JJ return NN box NN,1,a1,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,54
COMMENT compute the longitude for the point return the longitude value uses if there is no computable longitude FUNCTION SPECIFIER public TYPE double NAME double NAME get longitude PARAMETER LIST BLOCK DECL STMT TYPE double NAME double NAME lon INIT this longitude EXPR this longitude NAME this longitude NAME this NAME longitude COMMENT volatile read once IF if lon double negative infinity if math abs x minimum resolution math abs y minimum resolution this longitude lon else this longitude lon math atan y x CONDITION lon double negative infinity EXPR lon double negative infinity NAME lon NAME double negative infinity NAME double NAME negative infinity THEN if math abs x minimum resolution math abs y minimum resolution this longitude lon else this longitude lon math atan y x BLOCK IF if math abs x minimum resolution math abs y minimum resolution this longitude lon else this longitude lon math atan y x CONDITION math abs x minimum resolution math abs y minimum resolution EXPR math abs x minimum resolution math abs y minimum resolution CALL math abs x NAME math abs NAME math NAME abs ARGUMENT LIST ARGUMENT EXPR x NAME x NAME minimum resolution CALL math abs y NAME math abs NAME math NAME abs ARGUMENT LIST ARGUMENT EXPR y NAME y NAME minimum resolution THEN this longitude lon BLOCK EXPR this longitude lon NAME this longitude NAME this NAME longitude NAME lon ELSE else this longitude lon math atan y x BLOCK EXPR this longitude lon math atan y x NAME this longitude NAME this NAME longitude NAME lon CALL math atan y x NAME math atan NAME math NAME atan ARGUMENT LIST ARGUMENT EXPR y NAME y ARGUMENT EXPR x NAME x RETURN return lon EXPR lon NAME lon compute the longitude for the point root ROOT compute det longitude the dobj compute longitude case point for det point the nmod for compute point return the longitude value uses if there is no computable longitude root ROOT return det value the compound value longitude nsubj uses value ccomp return uses mark is if expl is there advcl if uses is neg longitude no amod longitude computable nsubj is longitude return the longitude value uses if there is no computable longitude root ROOT return det value the compound value longitude nsubj uses value ccomp return uses mark is if expl is there advcl if uses is neg longitude no amod longitude computable nsubj is longitude public NN double RB get VB longitude NN root ROOT get dobj get longitude double RB lon NN this DT longitude NN volatile JJ read NN once RB if IN lon NN double JJ negative JJ infinity NN if IN math NN abs NNS root ROOT abs compound abs math x NN minimum JJ resolution NN root ROOT resolution compound resolution minimum math NN abs NNS root ROOT abs compound abs math y NN minimum JJ resolution NN root ROOT resolution compound resolution minimum this DT longitude NN lon NN else RB this DT longitude NN lon NN math NN atan NN root ROOT atan compound atan math y NN x NN return NN lon NN,1,b7,tomcat/java/org/apache/tomcat/websocket/PerMessageDeflate.java,48
COMMENT handle an unsupported version exception param exception the exception return true if the exception can be handled false otherwise FUNCTION TYPE boolean NAME boolean NAME handle unsupported version exception PARAMETER LIST unsupported version exception exception PARAMETER unsupported version exception exception TYPE unsupported version exception NAME unsupported version exception NAME exception BLOCK RETURN return false EXPR false handle an unsupported version exception root ROOT handle det exception an amod exception unsupported compound exception version dobj handle exception param exception the exception root ROOT exception compound exception param det exception the dep exception exception return true if the exception can be handled false otherwise root ROOT return amod return true mark handled if det exception the nsubjpass handled exception aux handled can auxpass handled be advcl if true handled xcomp handled false advmod return otherwise boolean NN handle VB unsupported JJ version NN exception NN root ROOT handle amod exception unsupported compound exception version dobj handle exception unsupported JJ version NN exception NN root ROOT exception amod exception unsupported compound exception version exception NN return NN false JJ true false ANTONYM ANTONYM,1,B1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/util/MyTokenizer.java,516
COMMENT check if the type supports null values return whether or not null is a valid value for the type implementation FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME is nullable PARAMETER LIST BLOCK RETURN return false EXPR false check if the type supports null values root ROOT check mark supports if det type the nsubj supports type advcl if check supports amod values null dobj supports values return whether or not null is a valid value for the type implementation root ROOT return mark value whether cc whether or mwe whether not nsubj value null cop value is det value a amod value valid ccomp return value case implementation for det implementation the compound implementation type nmod for value implementation public NN boolean NN is VBZ nullable JJ root ROOT nullable cop nullable is return NN false JJ check return ANTONYM ANTONYM check supports ANTONYM ANTONYM null valid ANTONYM ANTONYM,1,B1,tomcat/java/org/apache/catalina/webresources/Cache.java,52
FUNCTION SPECIFIER public TYPE string NAME string NAME get authorization id PARAMETER LIST BLOCK IF if complete throw new illegal state exception authentication exchange has not completed CONDITION complete EXPR complete NAME complete THEN throw new illegal state exception authentication exchange has not completed BLOCK THROW throw new illegal state exception authentication exchange has not completed EXPR new illegal state exception authentication exchange has not completed CALL illegal state exception authentication exchange has not completed NAME illegal state exception ARGUMENT LIST ARGUMENT EXPR authentication exchange has not completed NAME authentication NAME exchange NAME has NAME not NAME completed RETURN return authorization id EXPR authorization id NAME authorization id public NN string NN get VB authorization NN id NN root ROOT get compound id authorization dobj get id if IN complete JJ throw VB new JJ illegal JJ state NN exception NN root ROOT exception amod exception illegal compound exception state authentication NN exchange NN has VBZ not RB completed VBN return NN authorization NN id NN root ROOT id compound id authorization,0,n/a,Lucene/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoDegenerateHorizontalLine.java,135
COMMENT for each subdirectory of the main test directory create a new test suite object FUNCTION SPECIFIER public TYPE vector NAME vector NAME get suites PARAMETER LIST string files PARAMETER string files TYPE string NAME string NAME string INDEX NAME files BLOCK DECL STMT TYPE vector NAME vector NAME suites INIT new vector EXPR new vector CALL vector NAME vector ARGUMENT LIST FOR for int i i files length i string filename strip double slashes test directory file separator files i file fileobject new file filename if fileobject is directory test suite s new test suite fileobject get name filename suites add element s CONTROL int i i files length i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION i files length EXPR i files length NAME i NAME files length NAME files NAME length INCR i EXPR i NAME i BLOCK DECL STMT TYPE string NAME string NAME filename INIT strip double slashes test directory file separator files i EXPR strip double slashes test directory file separator files i CALL strip double slashes test directory file separator files i NAME strip double slashes ARGUMENT LIST ARGUMENT EXPR test directory file separator files i NAME test directory NAME file separator NAME file NAME separator NAME files i NAME files INDEX i EXPR i NAME i DECL STMT TYPE file NAME file NAME fileobject INIT new file filename EXPR new file filename CALL file filename NAME file ARGUMENT LIST ARGUMENT EXPR filename NAME filename IF if fileobject is directory test suite s new test suite fileobject get name filename suites add element s CONDITION fileobject is directory EXPR fileobject is directory CALL fileobject is directory NAME fileobject is directory NAME fileobject NAME is directory ARGUMENT LIST THEN test suite s new test suite fileobject get name filename suites add element s BLOCK DECL STMT TYPE test suite NAME test suite NAME s INIT new test suite fileobject get name filename EXPR new test suite fileobject get name filename CALL test suite fileobject get name filename NAME test suite ARGUMENT LIST ARGUMENT EXPR fileobject get name CALL fileobject get name NAME fileobject get name NAME fileobject NAME get name ARGUMENT LIST ARGUMENT EXPR filename NAME filename EXPR suites add element s CALL suites add element s NAME suites add element NAME suites NAME add element ARGUMENT LIST ARGUMENT EXPR s NAME s RETURN return suites EXPR suites NAME suites for each subdirectory of the main test directory create a new root ROOT create case subdirectory for det subdirectory each nmod for create subdirectory case directory of det directory the amod directory main compound directory test nmod of subdirectory directory det new a dobj create new test suite object root ROOT object compound object test compound object suite public NN vector NN get VB suites NNS root ROOT get dobj get suites string NN files NNS vector NN suites NNS new JJ vector NN for IN int NN i LS i LS files NNS length NN root ROOT length compound length files i LS string NN filename NN strip NN double JJ slashes NNS root ROOT slashes compound slashes strip amod slashes double test NN directory NN root ROOT directory compound directory test file NN separator NN root ROOT separator compound separator file files NNS i LS file NN fileobject NN new JJ file NN filename NN if IN fileobject NN is VBZ directory NN root ROOT directory nsubj directory fileobject cop directory is test NN suite NN root ROOT suite compound suite test s NNS new JJ test NN suite NN root ROOT suite compound suite test fileobject NN get VB name NN root ROOT get nsubj get fileobject dobj get name filename NN suites NNS add VBP element NN root ROOT add nsubj add suites dobj add element s NNS return NN suites NNS,1,A1,ArgoUML0.34/argouml/src/argouml-app/src/org/argouml/notation/providers/uml/AbstractMessageNotationUml.java,1691
COMMENT process options should parse the args object return true if the driver should continue return false if the driver should not continue FUNCTION SPECIFIER public TYPE boolean NAME boolean NAME process options PARAMETER LIST BLOCK RETURN return false EXPR false process options should parse the args object root ROOT parse compound options process nsubj parse options aux parse should det args the dobj parse args dep parse object return true if the driver should continue return false if the driver root ROOT return amod return true mark continue if det driver the nsubj continue driver aux continue should advcl if true continue nsubj false return xcomp continue false mark driver if det driver the advcl if continue driver return true if the driver should continue return false if the driver root ROOT return amod return true mark continue if det driver the nsubj continue driver aux continue should advcl if true continue nsubj false return xcomp continue false mark driver if det driver the advcl if continue driver should not continue root ROOT continue aux continue should neg continue not public NN boolean NN process NN options NNS root ROOT options compound options process return NN false JJ true false ANTONYM ANTONYM,1,B1,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,151
COMMENT return array of present keys FUNCTION SPECIFIER public TYPE int NAME int NAME int INDEX NAME get keys PARAMETER LIST BLOCK DECL STMT TYPE int NAME int NAME int INDEX NAME keys INIT this keys EXPR this keys NAME this keys NAME this NAME keys DECL STMT TYPE int NAME int NAME n INIT key count EXPR key count NAME key count DECL STMT TYPE int NAME int NAME int INDEX NAME result INIT new int n EXPR new int n NAME int n NAME int INDEX n EXPR n NAME n FOR for int i n i int entry keys i if entry empty entry deleted result n entry CONTROL int i n i INIT int i TYPE int NAME int NAME i INIT EXPR CONDITION n EXPR n NAME n INCR i EXPR i NAME i BLOCK DECL STMT TYPE int NAME int NAME entry INIT keys i EXPR keys i NAME keys i NAME keys INDEX i EXPR i NAME i IF if entry empty entry deleted result n entry CONDITION entry empty entry deleted EXPR entry empty entry deleted NAME entry NAME empty NAME entry NAME deleted THEN result n entry BLOCK EXPR result n entry NAME result n NAME result INDEX n EXPR n NAME n NAME entry RETURN return result EXPR result NAME result return array of present keys root ROOT array compound array return case keys of amod keys present nmod of array keys public NN int NN get VB keys NNS root ROOT get dobj get keys int NN keys NNS this DT keys NNS int NN n NN key JJ count NN root ROOT count amod count key int NN result NN new JJ int NN n NN for IN int NN i LS n NN i LS int NN entry NN keys NNS i LS if IN entry NN empty JJ entry NN deleted VBN result NN n NN entry NN return NN result NN array present ANTONYM ANTONYM return present ANTONYM ANTONYM,1,B7,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,223
COMMENT processors that populate request attributes directly e g ajp should over ride this method and return code false return code true if the socket wrapper should be used to populate the request attributes otherwise code false FUNCTION SPECIFIER protected TYPE boolean NAME boolean NAME get populate request attributes from socket PARAMETER LIST BLOCK RETURN return true EXPR true processors that populate request attributes directly e g ajp should root ROOT should nsubj populate processors nsubj should processors ref processors that acl relcl processors populate compound attributes request dobj populate attributes advmod ajp directly dep ajp e compound ajp g nmod populate ajp over ride this method and return code false root ROOT false case ride over nmod over false ride det method this nsubj false method cc method and compound code return conj and method code nsubj false code return code true if the socket wrapper should be used to populate the root ROOT true compound code return nsubj true code mark used if det wrapper the compound wrapper socket nsubjpass used wrapper nsubj xsubj populate wrapper aux used should auxpass used be advcl if true used mark populate to xcomp used populate dobj populate the request attributes otherwise code false root ROOT attributes nsubj attributes request advmod code otherwise nmod npmod false code xcomp attributes false protected VBN boolean NN get VB populate VB request NN attributes NNS from IN socket NN root ROOT populate aux populate get compound attributes request dobj populate attributes case socket from nmod from populate socket return NN true JJ,1,b1,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,1247
COMMENT protocols that support push should override this method and return code true return code true if push is supported by this processor otherwise code false FUNCTION SPECIFIER protected TYPE boolean NAME boolean NAME is push supported PARAMETER LIST BLOCK RETURN return false EXPR false protocols that support push should override this method and return code root ROOT override nsubj support protocols nsubj override protocols ref protocols that acl relcl protocols support dobj support push aux override should det method this dobj override method cc method and compound code return dobj override code conj and method code true return code true if push is supported by this processor otherwise root ROOT code compound code return amod code true mark supported if nsubjpass supported push auxpass supported is advcl if true supported case processor by det processor this nmod agent supported processor advmod supported otherwise code false root ROOT false nmod npmod false code protected VBN boolean NN is VBZ push NN supported VBN root ROOT supported auxpass supported is nsubjpass supported push return NN false JJ,1,b1,kafka/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java,158